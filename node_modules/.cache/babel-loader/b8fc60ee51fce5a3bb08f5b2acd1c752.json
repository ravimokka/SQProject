{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/PieChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadGroupBarData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitVerticalBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_v_bar: e.target.value\n      });\n      this.VerticalBarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit = e => {\n      this.setState({\n        value_mx: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit1 = e => {\n      this.setState({\n        value_my: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit2 = e => {\n      this.setState({\n        value_mz: e.target.value\n      });\n    };\n\n    this.mixed_handleSubmit = e => {\n      e.preventDefault();\n      this.loadMixedChartData({\n        A: this.state.value_mx,\n        B: this.state.value_my,\n        C: this.state.value_mz\n      });\n    };\n\n    this.Area_CharthandleSubmit = e => {\n      this.setState({\n        value_ax: e.target.value\n      });\n    };\n\n    this.Area_CharthandleSubmit1 = e => {\n      this.setState({\n        value_ay: e.target.value\n      });\n    };\n\n    this.area_handleSubmit = e => {\n      e.preventDefault();\n      this.loadStackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ay\n      });\n    };\n\n    this.state = {\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_status: \"Status\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      bar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      bar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      vertical_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      vertical_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      area_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      area_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      download_lineChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_verticalChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_group_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_donutChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_pieChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_mixedChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_areaChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  }\n\n  // ============================= Loading all charts ====================================================================\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n    this.loadMixedChartData({\n      A: \"Status\",\n      B: \"Amount_USD\",\n      C: \"Status\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n    }\n  }\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      const table_dict = data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        download_lineChart_table: [table_dict]\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n    }\n  } //=================================================== Line Chart Table Data Download ===================================\n  //================================================ Group Bar Chart ====================================================================\n\n\n  async loadGroupBarData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      Gbar_table_columns: []\n    });\n    this.setState({\n      Gbar_table_data: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        chart_data: chart_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        download_group_barChart_table: [table_dict]\n      });\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    this.setState({\n      bar_table_columns: []\n    });\n    this.setState({\n      bar_table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Bar_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Bar_chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: Bar_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n    }\n  } //========================================== Vertical bar Chart ================================================================\n\n\n  async VerticalBarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      ve_bar_data: []\n    });\n    this.setState({\n      vertical_table_columns: []\n    });\n    this.setState({\n      vertical_table_data: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Ve_Bar_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Ve_Bar_chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        ve_bar_data: Ve_Bar_chart_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    this.setState({\n      donut_table_columns: []\n    });\n    this.setState({\n      donut_table_data: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    this.setState({\n      pie_table_columns: []\n    });\n    this.setState({\n      pie_table_data: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async loadStackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_areaChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = value_list;\n        SArea_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_areaChart_table: [table_dict]\n      });\n    }\n  }\n\n  componentDidMount() {//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n    //  this.setState({line_data:sourceDataDaily})\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Pie\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1284\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Pie\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291\n      },\n      __self: this\n    }, \"Pie Chart TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.pie_table_columns,\n      dataSource: this.state.pie_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1298\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_pieChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/PieChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","$","Popper","CSVLink","DataSet","require","AnalyticalTest","Component","constructor","props","showModal","setState","modalVisible","handleCancel","saveFormRef","formRef","showDrawer","drawerVisible","onClose","handleSubmitLineChart","e","value_xl","target","value","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loadLineChartData","A","state","B","handleSubmit","value_x","handleSubmit1","value_y","handleSubmit12","loadGroupBarData","handleSubmitBarChart","value_bar","BarCheckbox","Column","handleSubmitVerticalBarChart","value_v_bar","VerticalBarCheckbox","handleSubmitDonut","value_donut","DonutCheckbox","handleSubmitPie","value_pie","PieCheckbox","mixedCharthandleSubmit","value_mx","mixedCharthandleSubmit1","value_my","mixedCharthandleSubmit2","value_mz","mixed_handleSubmit","loadMixedChartData","C","Area_CharthandleSubmit","value_ax","Area_CharthandleSubmit1","value_ay","area_handleSubmit","loadStackedAreaChartData","books","intHeader","filter","select_status","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","area_table_columns","area_table_data","download_lineChart_table","firstname","lastname","email","download_barChart_table","download_verticalChart_table","download_group_barChart_table","download_donutChart_table","download_pieChart_table","download_mixedChart_table","download_areaChart_table","componentWillMount","loadAnalytical","loadIntHeaders","loadAll_count_view","loadAllChartData","promise","post","firstName","lastName","status","data","console","log","d","dou","table_dict","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","Object","keys","length","push","data_dict","load_data_dict","column_dict","headers","Headers","append","options","method","body","JSON","stringify","area_chart_series","l_data","line_value_list","line_chart_list","load_bar_chart_list","area_list","area_chart_data","area_dict","mixed_chart_series","sum_data","count_data","value_list","max_chart_list","j","c_keys_list","c_value_list","max_chart_count_list","g_data","Actual","Budget","g","chart_list","Bar_chart_list","Ve_Bar_chart_list","m","type","SArea_chart_list","componentDidMount","render","dv","View","source","transform","field","dimension","as","align","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","dataKey","min","formatter","val","Math","round","max","ve_bar_dv","vertical_bar_data","width","marginLeft","map","index","cursor","fontSize","overflowY","scale","stroke","lineWidth","item","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\n\n\n\n\n\n\n\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_status:\"Status\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n\n       download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n\n\n\n\n\n\n      }\n\n\n   }\n\n\n showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n     this.loadMixedChartData({A:\"Status\", B:\"Amount_USD\", C:\"Status\"})\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n  async loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n\n\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n\n\n\n\n\n\n    }\n  }\n\n\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n }\n}\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl:\"\"})\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl:\"\"})\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n    }\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\n\n\n\n\n\n\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n     this.loadGroupBarData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadGroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n    }\n\n}\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n\n      this.setState({download_barChart_table:[table_dict]})\n\n    }\n\n}\n\n\n//========================================== Vertical bar Chart ================================================================\nhandleSubmitVerticalBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_v_bar: e.target.value});\n         this.VerticalBarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync VerticalBarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n//========================================== Donut Chart ================================================================\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n\n    }\n\n}\n\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nmixedCharthandleSubmit = (e) => {\n     this.setState({value_mx: e.target.value});\n };\n\nmixedCharthandleSubmit1 = (e) => {\n    this.setState({value_my: e.target.value});\n  };\n\n\n mixedCharthandleSubmit2 = (e) => {\n    this.setState({value_mz: e.target.value});\n  };\n\n\nmixed_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadMixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my, C:this.state.value_mz}\n  );\n  };\n\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n//==========================================================Stacked Area chart==========================================\n\nArea_CharthandleSubmit = (e) => {\n     this.setState({value_ax: e.target.value});\n };\n\nArea_CharthandleSubmit1 = (e) => {\n    this.setState({value_ay: e.target.value});\n  };\n\n\narea_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadStackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay}\n  );\n  };\n\n\nasync loadStackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomponentDidMount() {\n//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n//  this.setState({line_data:sourceDataDaily})\n\n\n  }\n\n\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\n\n    return (\n     <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n         </select>\n\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\" style={{marginLeft:\"3px\"}}>\n            Table View</button>\n          <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_pieChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n            <Chart forceFit height={400} data={pie_data} scale={scale} >\n                <Tooltip showTitle={false} />\n                <Coord type=\"theta\" />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                                <Pie\n              position=\"percent\"\n              color=\"item\"\n              style={{ stroke: '#fff', lineWidth: 1 }}\n              label={['percent', {\n                formatter: (val, item) => {\n                  return item.point.item + ': ' + val;\n                }\n              }]}\n            />\n           </Chart>\n      </div>\n\n\n\n    );\n  }\n}\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/components/Form/FormAccountSetting.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Input, Divider, Tooltip, Icon, Cascader, Select, Row, Col, Card, Modal, Drawer, Checkbox, Button, Radio } from \"antd\";\n\nclass FormAccountSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const first_nam = e.target.fname.value;\n      const last_nam = e.target.lname.value;\n      const officePhone = e.target.officePhone.value;\n      const cellPhone = e.target.cellPhone.value;\n      const homePhone = e.target.homePhone.value;\n      const address = e.target.address_1.value + ' ' + e.target.address_2.value + ' ' + e.target.city.value + ' ' + e.target.state.value + '-' + e.target.zipCode.value;\n      const req_data = {\n        'first_nam': first_nam,\n        'last_nam': last_nam,\n        'office_number': officePhone,\n        'cell_number': cellPhone,\n        'home_number': homePhone,\n        'address': address\n      };\n      this.ProfileUpdateAPI(req_data);\n    };\n\n    this.state = {\n      User_Name: '',\n      User_Email: '',\n      Account_type: ''\n    };\n  }\n\n  async ProfileUpdateAPI(req_data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    try {\n      const promise = await axios.post(Host.loginURL + \"/login_api\", req_data);\n      this.props.history.push(\"/workspace\");\n      const session_data = promise.data.data;\n      sessionStorage.setItem(\"session_data\", JSON.stringify(session_data));\n    } catch (err) {\n      this.setState({\n        msg: \"Username & Password is Invalid\"\n      });\n    } //  this.setState({msg: \"Username & Password is Invalid\"});\n\n  }\n\n  render() {\n    const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 16,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Contact Information\"))), React.createElement(Form.Item, {\n      label: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, getFieldDecorator('fname')(React.createElement(Input, {\n      name: \"first_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, getFieldDecorator('lname')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Office Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, getFieldDecorator('officePhone')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Cell Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, getFieldDecorator('cellPhone')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Home Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, getFieldDecorator('homePhone')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 16,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Address\"))), React.createElement(Form.Item, {\n      label: \"Address 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, getFieldDecorator('address_1')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Address 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, getFieldDecorator('address_2')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, getFieldDecorator('city')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, getFieldDecorator('state')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Zip Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, getFieldDecorator('zipCode')(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Update\")));\n  }\n\n}\n\nconst WrappedAccountForm = Form.create()(FormAccountSetting);\nexport default WrappedAccountForm;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/components/Form/FormAccountSetting.js"],"names":["React","Component","axios","Form","Input","Divider","Tooltip","Icon","Cascader","Select","Row","Col","Card","Modal","Drawer","Checkbox","Button","Radio","FormAccountSetting","constructor","props","handleSubmit","e","preventDefault","first_nam","target","fname","value","last_nam","lname","officePhone","cellPhone","homePhone","address","address_1","address_2","city","state","zipCode","req_data","ProfileUpdateAPI","User_Name","User_Email","Account_type","headers","Headers","append","promise","post","Host","loginURL","history","push","session_data","data","sessionStorage","setItem","JSON","stringify","err","setState","msg","render","profile_data","parse","getItem","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","getFieldDecorator","form","WrappedAccountForm","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,OAHJ,EAIIC,OAJJ,EAKIC,IALJ,EAMIC,QANJ,EAOIC,MAPJ,EAQIC,GARJ,EASIC,GATJ,EAUIC,IAVJ,EAWIC,KAXJ,EAYIC,MAZJ,EAaIC,QAbJ,EAcIC,MAdJ,EAeIC,KAfJ,QAgBO,MAhBP;;AAkBA,MAAMC,kBAAN,SAAiCjB,SAAjC,CAA2C;AAC1CkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SASnBC,YATmB,GASHC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACC,YAAMC,SAAS,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,KAAjC;AACA,YAAMC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASI,KAAT,CAAeF,KAAhC;AACA,YAAMG,WAAW,GAAGR,CAAC,CAACG,MAAF,CAASK,WAAT,CAAqBH,KAAzC;AACA,YAAMI,SAAS,GAAGT,CAAC,CAACG,MAAF,CAASM,SAAT,CAAmBJ,KAArC;AACA,YAAMK,SAAS,GAAGV,CAAC,CAACG,MAAF,CAASO,SAAT,CAAmBL,KAArC;AACA,YAAMM,OAAO,GAAGX,CAAC,CAACG,MAAF,CAASS,SAAT,CAAmBP,KAAnB,GAA0B,GAA1B,GAAgCL,CAAC,CAACG,MAAF,CAASU,SAAT,CAAmBR,KAAnD,GAA0D,GAA1D,GAAgEL,CAAC,CAACG,MAAF,CAASW,IAAT,CAAcT,KAA9E,GACE,GADF,GACOL,CAAC,CAACG,MAAF,CAASY,KAAT,CAAeV,KADtB,GAC6B,GAD7B,GACkCL,CAAC,CAACG,MAAF,CAASa,OAAT,CAAiBX,KADnE;AAEA,YAAMY,QAAQ,GAAG;AAAC,qBAAYf,SAAb;AAAwB,oBAAWI,QAAnC;AAA4C,yBAAgBE,WAA5D;AACE,uBAAcC,SADhB;AAC2B,uBAAcC,SADzC;AACoD,mBAAUC;AAD9D,OAAjB;AAEA,WAAKO,gBAAL,CAAsBD,QAAtB;AACJ,KArBmB;;AAEhB,SAAKF,KAAL,GAAa;AACZI,MAAAA,SAAS,EAAC,EADE;AAEZC,MAAAA,UAAU,EAAC,EAFC;AAGZC,MAAAA,YAAY,EAAC;AAHD,KAAb;AAKF;;AAeD,QAAMH,gBAAN,CAAuBD,QAAvB,EAAgC;AAC7B,UAAMK,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;;AACA,QAAG;AACF,YAAMC,OAAO,GAAG,MAAM7C,KAAK,CAAC8C,IAAN,CAAWC,IAAI,CAACC,QAAL,GAAc,YAAzB,EAAuCX,QAAvC,CAAtB;AACA,WAAKnB,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACA,YAAMC,YAAY,GAAGN,OAAO,CAACO,IAAR,CAAaA,IAAlC;AACAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAsCC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAtC;AACF,KALC,CAMF,OAAMM,GAAN,EAAU;AAAC,WAAKC,QAAL,CAAc;AAACC,QAAAA,GAAG,EAAE;AAAN,OAAd;AAAwD,KATpC,CAUjC;;AACC;;AAEGC,EAAAA,MAAM,GAAI;AACT,UAAMC,YAAY,GAAGN,IAAI,CAACO,KAAL,CAAWT,cAAc,CAACU,OAAf,CAAuB,cAAvB,CAAX,CAArB;AACG,UAAMC,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AACVC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM,OADS;AAKnBE,MAAAA,UAAU,EAAE;AACZH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADQ;AAEZC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFQ;AALO,KAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACvBD,MAAAA,UAAU,EAAE;AACZH,QAAAA,EAAE,EAAE;AACAC,UAAAA,IAAI,EAAE,EADN;AAEAI,UAAAA,MAAM,EAAE;AAFR,SADQ;AAKZH,QAAAA,EAAE,EAAE;AACAD,UAAAA,IAAI,EAAE,EADN;AAEAI,UAAAA,MAAM,EAAE;AAFR;AALQ;AADW,KAA3B;AAZM,UAwBEC,iBAxBF,GAwBwB,KAAKtD,KAAL,CAAWuD,IAxBnC,CAwBED,iBAxBF;AAyBN,WACI,oBAAC,IAAD,oBAAUR,cAAV;AAA2B,MAAA,QAAQ,EAAE,KAAK7C,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,MAAM,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CAFJ,EAOI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKqD,iBAAiB,CAAC,OAAD,CAAjB,CAA2B,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADL,CAPJ,EAUI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,OAAD,CAAjB,CAA2B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADL,CAVJ,EAaI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,aAAD,CAAjB,CAAiC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CADL,CAbJ,EAgBI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,WAAD,CAAjB,CAA+B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADL,CAhBJ,EAmBI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,WAAD,CAAjB,CAA+B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADL,CAnBJ,EAuBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,MAAM,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CAvBJ,EA4BI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,WAAD,CAAjB,CAA+B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADL,CA5BJ,EA+BI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,WAAD,CAAjB,CAA+B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADL,CA/BJ,EAkCI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,MAAD,CAAjB,CAA0B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CADL,CAlCJ,EAqCI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,OAAD,CAAjB,CAA2B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADL,CArCJ,EAwCI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,iBAAiB,CAAC,SAAD,CAAjB,CAA6B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADL,CAxCJ,EA2CI,oBAAC,IAAD,CAAM,IAAN,oBAAeF,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA3CJ,CADJ;AAmDH;;AAhHsC;;AAkH3C,MAAMI,kBAAkB,GAAGzE,IAAI,CAAC0E,MAAL,GAAc3D,kBAAd,CAA3B;AACA,eAAe0D,kBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n    Form,\n    Input,\n    Divider,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Card,\n    Modal,\n    Drawer,\n    Checkbox,\n    Button,\n    Radio\n} from \"antd\";\n\nclass FormAccountSetting extends Component {\n constructor(props) {\n    super(props);\n    this.state = {\n     User_Name:'',\n     User_Email:'',\n     Account_type:''\n    }\n }\n\n handleSubmit = (e) => {\n    e.preventDefault();\n     const first_nam = e.target.fname.value;\n     const last_nam = e.target.lname.value;\n     const officePhone = e.target.officePhone.value;\n     const cellPhone = e.target.cellPhone.value;\n     const homePhone = e.target.homePhone.value;\n     const address = e.target.address_1.value +' ' + e.target.address_2.value +' ' + e.target.city.value\n                      +' '+ e.target.state.value +'-' +e.target.zipCode.value;\n     const req_data = {'first_nam':first_nam, 'last_nam':last_nam,'office_number':officePhone,\n                        'cell_number':cellPhone, 'home_number':homePhone, 'address':address}\n     this.ProfileUpdateAPI(req_data);\n};\n async ProfileUpdateAPI(req_data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    try{\n     const promise = await axios.post(Host.loginURL+\"/login_api\", req_data);\n     this.props.history.push(\"/workspace\");\n     const session_data = promise.data.data;\n     sessionStorage.setItem(\"session_data\",JSON.stringify(session_data));\n  }\n  catch(err){this.setState({msg: \"Username & Password is Invalid\"});}\n//  this.setState({msg: \"Username & Password is Invalid\"});\n}\n\n    render () {\n     const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n        const formItemLayout = {\n            labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            },\n            wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n            },\n        };\n        const { getFieldDecorator } = this.props.form;\n        return(\n            <Form {...formItemLayout}  onSubmit={this.handleSubmit}>\n                \n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Contact Information</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"First Name\">\n                    {getFieldDecorator('fname')(<Input name=\"first_name\" />)}\n                </Form.Item>\n                <Form.Item label=\"Last Name\">\n                    {getFieldDecorator('lname')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Office Phone\">\n                    {getFieldDecorator('officePhone')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Cell Phone\">\n                    {getFieldDecorator('cellPhone')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Home Phone\">\n                    {getFieldDecorator('homePhone')(<Input />)}\n                </Form.Item>\n\n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Address</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"Address 1\">\n                    {getFieldDecorator('address_1')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Address 2\">\n                    {getFieldDecorator('address_2')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                    {getFieldDecorator('city')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"State\">\n                    {getFieldDecorator('state')(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Zip Code\">\n                    {getFieldDecorator('zipCode')(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Update\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\nconst WrappedAccountForm = Form.create()(FormAccountSetting);\nexport default WrappedAccountForm;"]},"metadata":{},"sourceType":"module"}
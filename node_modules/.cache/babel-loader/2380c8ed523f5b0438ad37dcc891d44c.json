{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar Color = require('../color');\n\nvar Drawing = require('../drawing');\n\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\n\nvar dragElement = require('../dragelement');\n\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\n\nvar helpers = require('./helpers'); // Shapes are stored in gd.layout.shapes, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\n\n\nmodule.exports = {\n  draw: draw,\n  drawOne: drawOne\n};\n\nfunction draw(gd) {\n  var fullLayout = gd._fullLayout; // Remove previous shapes before drawing new in shapes in fullLayout.shapes\n\n  fullLayout._shapeUpperLayer.selectAll('path').remove();\n\n  fullLayout._shapeLowerLayer.selectAll('path').remove();\n\n  for (var k in fullLayout._plots) {\n    var shapelayer = fullLayout._plots[k].shapelayer;\n    if (shapelayer) shapelayer.selectAll('path').remove();\n  }\n\n  for (var i = 0; i < fullLayout.shapes.length; i++) {\n    if (fullLayout.shapes[i].visible) {\n      drawOne(gd, i);\n    }\n  } // may need to resurrect this if we put text (LaTeX) in shapes\n  // return Plots.previousPromises(gd);\n\n}\n\nfunction drawOne(gd, index) {\n  // remove the existing shape if there is one.\n  // because indices can change, we need to look in all shape layers\n  gd._fullLayout._paperdiv.selectAll('.shapelayer [data-index=\"' + index + '\"]').remove();\n\n  var options = gd._fullLayout.shapes[index] || {}; // this shape is gone - quit now after deleting it\n  // TODO: use d3 idioms instead of deleting and redrawing every time\n\n  if (!options._input || options.visible === false) return;\n\n  if (options.layer !== 'below') {\n    drawShape(gd._fullLayout._shapeUpperLayer);\n  } else if (options.xref === 'paper' || options.yref === 'paper') {\n    drawShape(gd._fullLayout._shapeLowerLayer);\n  } else {\n    var plotinfo = gd._fullLayout._plots[options.xref + options.yref];\n\n    if (plotinfo) {\n      var mainPlot = plotinfo.mainplotinfo || plotinfo;\n      drawShape(mainPlot.shapelayer);\n    } else {\n      // Fall back to _shapeLowerLayer in case the requested subplot doesn't exist.\n      // This can happen if you reference the shape to an x / y axis combination\n      // that doesn't have any data on it (and layer is below)\n      drawShape(gd._fullLayout._shapeLowerLayer);\n    }\n  }\n\n  function drawShape(shapeLayer) {\n    var attrs = {\n      'data-index': index,\n      'fill-rule': 'evenodd',\n      d: getPathString(gd, options)\n    };\n    var lineColor = options.line.width ? options.line.color : 'rgba(0,0,0,0)';\n    var path = shapeLayer.append('path').attr(attrs).style('opacity', options.opacity).call(Color.stroke, lineColor).call(Color.fill, options.fillcolor).call(Drawing.dashLine, options.line.dash, options.line.width);\n    setClipPath(path, gd, options);\n    if (gd._context.edits.shapePosition) setupDragElement(gd, path, options, index, shapeLayer);\n  }\n}\n\nfunction setClipPath(shapePath, gd, shapeOptions) {\n  // note that for layer=\"below\" the clipAxes can be different from the\n  // subplot we're drawing this in. This could cause problems if the shape\n  // spans two subplots. See https://github.com/plotly/plotly.js/issues/1452\n  var clipAxes = (shapeOptions.xref + shapeOptions.yref).replace(/paper/g, '');\n  Drawing.setClipUrl(shapePath, clipAxes ? 'clip' + gd._fullLayout._uid + clipAxes : null, gd);\n}\n\nfunction setupDragElement(gd, shapePath, shapeOptions, index, shapeLayer) {\n  var MINWIDTH = 10;\n  var MINHEIGHT = 10;\n  var xPixelSized = shapeOptions.xsizemode === 'pixel';\n  var yPixelSized = shapeOptions.ysizemode === 'pixel';\n  var isLine = shapeOptions.type === 'line';\n  var isPath = shapeOptions.type === 'path';\n  var editHelpers = arrayEditor(gd.layout, 'shapes', shapeOptions);\n  var modifyItem = editHelpers.modifyItem;\n  var x0, y0, x1, y1, xAnchor, yAnchor;\n  var n0, s0, w0, e0, optN, optS, optW, optE;\n  var pathIn; // setup conversion functions\n\n  var xa = Axes.getFromId(gd, shapeOptions.xref);\n  var ya = Axes.getFromId(gd, shapeOptions.yref);\n  var x2p = helpers.getDataToPixel(gd, xa);\n  var y2p = helpers.getDataToPixel(gd, ya, true);\n  var p2x = helpers.getPixelToData(gd, xa);\n  var p2y = helpers.getPixelToData(gd, ya, true);\n  var sensoryElement = obtainSensoryElement();\n  var dragOptions = {\n    element: sensoryElement.node(),\n    gd: gd,\n    prepFn: startDrag,\n    doneFn: endDrag,\n    clickFn: abortDrag\n  };\n  var dragMode;\n  dragElement.init(dragOptions);\n  sensoryElement.node().onmousemove = updateDragMode;\n\n  function obtainSensoryElement() {\n    return isLine ? createLineDragHandles() : shapePath;\n  }\n\n  function createLineDragHandles() {\n    var minSensoryWidth = 10;\n    var sensoryWidth = Math.max(shapeOptions.line.width, minSensoryWidth); // Helper shapes group\n    // Note that by setting the `data-index` attr, it is ensured that\n    // the helper group is purged in this modules `draw` function\n\n    var g = shapeLayer.append('g').attr('data-index', index); // Helper path for moving\n\n    g.append('path').attr('d', shapePath.attr('d')).style({\n      'cursor': 'move',\n      'stroke-width': sensoryWidth,\n      'stroke-opacity': '0' // ensure not visible\n\n    }); // Helper circles for resizing\n\n    var circleStyle = {\n      'fill-opacity': '0' // ensure not visible\n\n    };\n    var circleRadius = sensoryWidth / 2 > minSensoryWidth ? sensoryWidth / 2 : minSensoryWidth;\n    g.append('circle').attr({\n      'data-line-point': 'start-point',\n      'cx': xPixelSized ? x2p(shapeOptions.xanchor) + shapeOptions.x0 : x2p(shapeOptions.x0),\n      'cy': yPixelSized ? y2p(shapeOptions.yanchor) - shapeOptions.y0 : y2p(shapeOptions.y0),\n      'r': circleRadius\n    }).style(circleStyle).classed('cursor-grab', true);\n    g.append('circle').attr({\n      'data-line-point': 'end-point',\n      'cx': xPixelSized ? x2p(shapeOptions.xanchor) + shapeOptions.x1 : x2p(shapeOptions.x1),\n      'cy': yPixelSized ? y2p(shapeOptions.yanchor) - shapeOptions.y1 : y2p(shapeOptions.y1),\n      'r': circleRadius\n    }).style(circleStyle).classed('cursor-grab', true);\n    return g;\n  }\n\n  function updateDragMode(evt) {\n    if (isLine) {\n      if (evt.target.tagName === 'path') {\n        dragMode = 'move';\n      } else {\n        dragMode = evt.target.attributes['data-line-point'].value === 'start-point' ? 'resize-over-start-point' : 'resize-over-end-point';\n      }\n    } else {\n      // element might not be on screen at time of setup,\n      // so obtain bounding box here\n      var dragBBox = dragOptions.element.getBoundingClientRect(); // choose 'move' or 'resize'\n      // based on initial position of cursor within the drag element\n\n      var w = dragBBox.right - dragBBox.left;\n      var h = dragBBox.bottom - dragBBox.top;\n      var x = evt.clientX - dragBBox.left;\n      var y = evt.clientY - dragBBox.top;\n      var cursor = !isPath && w > MINWIDTH && h > MINHEIGHT && !evt.shiftKey ? dragElement.getCursor(x / w, 1 - y / h) : 'move';\n      setCursor(shapePath, cursor); // possible values 'move', 'sw', 'w', 'se', 'e', 'ne', 'n', 'nw' and 'w'\n\n      dragMode = cursor.split('-')[0];\n    }\n  }\n\n  function startDrag(evt) {\n    // setup update strings and initial values\n    if (xPixelSized) {\n      xAnchor = x2p(shapeOptions.xanchor);\n    }\n\n    if (yPixelSized) {\n      yAnchor = y2p(shapeOptions.yanchor);\n    }\n\n    if (shapeOptions.type === 'path') {\n      pathIn = shapeOptions.path;\n    } else {\n      x0 = xPixelSized ? shapeOptions.x0 : x2p(shapeOptions.x0);\n      y0 = yPixelSized ? shapeOptions.y0 : y2p(shapeOptions.y0);\n      x1 = xPixelSized ? shapeOptions.x1 : x2p(shapeOptions.x1);\n      y1 = yPixelSized ? shapeOptions.y1 : y2p(shapeOptions.y1);\n    }\n\n    if (x0 < x1) {\n      w0 = x0;\n      optW = 'x0';\n      e0 = x1;\n      optE = 'x1';\n    } else {\n      w0 = x1;\n      optW = 'x1';\n      e0 = x0;\n      optE = 'x0';\n    } // For fixed size shapes take opposing direction of y-axis into account.\n    // Hint: For data sized shapes this is done by the y2p function.\n\n\n    if (!yPixelSized && y0 < y1 || yPixelSized && y0 > y1) {\n      n0 = y0;\n      optN = 'y0';\n      s0 = y1;\n      optS = 'y1';\n    } else {\n      n0 = y1;\n      optN = 'y1';\n      s0 = y0;\n      optS = 'y0';\n    } // setup dragMode and the corresponding handler\n\n\n    updateDragMode(evt);\n    renderVisualCues(shapeLayer, shapeOptions);\n    deactivateClipPathTemporarily(shapePath, shapeOptions, gd);\n    dragOptions.moveFn = dragMode === 'move' ? moveShape : resizeShape;\n  }\n\n  function endDrag() {\n    setCursor(shapePath);\n    removeVisualCues(shapeLayer); // Don't rely on clipPath being activated during re-layout\n\n    setClipPath(shapePath, gd, shapeOptions);\n    Registry.call('_guiRelayout', gd, editHelpers.getUpdateObj());\n  }\n\n  function abortDrag() {\n    removeVisualCues(shapeLayer);\n  }\n\n  function moveShape(dx, dy) {\n    if (shapeOptions.type === 'path') {\n      var noOp = function noOp(coord) {\n        return coord;\n      };\n\n      var moveX = noOp;\n      var moveY = noOp;\n\n      if (xPixelSized) {\n        modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n      } else {\n        moveX = function moveX(x) {\n          return p2x(x2p(x) + dx);\n        };\n\n        if (xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n      }\n\n      if (yPixelSized) {\n        modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n      } else {\n        moveY = function moveY(y) {\n          return p2y(y2p(y) + dy);\n        };\n\n        if (ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n      }\n\n      modifyItem('path', shapeOptions.path = movePath(pathIn, moveX, moveY));\n    } else {\n      if (xPixelSized) {\n        modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n      } else {\n        modifyItem('x0', shapeOptions.x0 = p2x(x0 + dx));\n        modifyItem('x1', shapeOptions.x1 = p2x(x1 + dx));\n      }\n\n      if (yPixelSized) {\n        modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n      } else {\n        modifyItem('y0', shapeOptions.y0 = p2y(y0 + dy));\n        modifyItem('y1', shapeOptions.y1 = p2y(y1 + dy));\n      }\n    }\n\n    shapePath.attr('d', getPathString(gd, shapeOptions));\n    renderVisualCues(shapeLayer, shapeOptions);\n  }\n\n  function resizeShape(dx, dy) {\n    if (isPath) {\n      // TODO: implement path resize, don't forget to update dragMode code\n      var noOp = function noOp(coord) {\n        return coord;\n      };\n\n      var moveX = noOp;\n      var moveY = noOp;\n\n      if (xPixelSized) {\n        modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n      } else {\n        moveX = function moveX(x) {\n          return p2x(x2p(x) + dx);\n        };\n\n        if (xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n      }\n\n      if (yPixelSized) {\n        modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n      } else {\n        moveY = function moveY(y) {\n          return p2y(y2p(y) + dy);\n        };\n\n        if (ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n      }\n\n      modifyItem('path', shapeOptions.path = movePath(pathIn, moveX, moveY));\n    } else if (isLine) {\n      if (dragMode === 'resize-over-start-point') {\n        var newX0 = x0 + dx;\n        var newY0 = yPixelSized ? y0 - dy : y0 + dy;\n        modifyItem('x0', shapeOptions.x0 = xPixelSized ? newX0 : p2x(newX0));\n        modifyItem('y0', shapeOptions.y0 = yPixelSized ? newY0 : p2y(newY0));\n      } else if (dragMode === 'resize-over-end-point') {\n        var newX1 = x1 + dx;\n        var newY1 = yPixelSized ? y1 - dy : y1 + dy;\n        modifyItem('x1', shapeOptions.x1 = xPixelSized ? newX1 : p2x(newX1));\n        modifyItem('y1', shapeOptions.y1 = yPixelSized ? newY1 : p2y(newY1));\n      }\n    } else {\n      var newN = ~dragMode.indexOf('n') ? n0 + dy : n0;\n      var newS = ~dragMode.indexOf('s') ? s0 + dy : s0;\n      var newW = ~dragMode.indexOf('w') ? w0 + dx : w0;\n      var newE = ~dragMode.indexOf('e') ? e0 + dx : e0; // Do things in opposing direction for y-axis.\n      // Hint: for data-sized shapes the reversal of axis direction is done in p2y.\n\n      if (~dragMode.indexOf('n') && yPixelSized) newN = n0 - dy;\n      if (~dragMode.indexOf('s') && yPixelSized) newS = s0 - dy; // Update shape eventually. Again, be aware of the\n      // opposing direction of the y-axis of fixed size shapes.\n\n      if (!yPixelSized && newS - newN > MINHEIGHT || yPixelSized && newN - newS > MINHEIGHT) {\n        modifyItem(optN, shapeOptions[optN] = yPixelSized ? newN : p2y(newN));\n        modifyItem(optS, shapeOptions[optS] = yPixelSized ? newS : p2y(newS));\n      }\n\n      if (newE - newW > MINWIDTH) {\n        modifyItem(optW, shapeOptions[optW] = xPixelSized ? newW : p2x(newW));\n        modifyItem(optE, shapeOptions[optE] = xPixelSized ? newE : p2x(newE));\n      }\n    }\n\n    shapePath.attr('d', getPathString(gd, shapeOptions));\n    renderVisualCues(shapeLayer, shapeOptions);\n  }\n\n  function renderVisualCues(shapeLayer, shapeOptions) {\n    if (xPixelSized || yPixelSized) {\n      renderAnchor();\n    }\n\n    function renderAnchor() {\n      var isNotPath = shapeOptions.type !== 'path'; // d3 join with dummy data to satisfy d3 data-binding\n\n      var visualCues = shapeLayer.selectAll('.visual-cue').data([0]); // Enter\n\n      var strokeWidth = 1;\n      visualCues.enter().append('path').attr({\n        'fill': '#fff',\n        'fill-rule': 'evenodd',\n        'stroke': '#000',\n        'stroke-width': strokeWidth\n      }).classed('visual-cue', true); // Update\n\n      var posX = x2p(xPixelSized ? shapeOptions.xanchor : Lib.midRange(isNotPath ? [shapeOptions.x0, shapeOptions.x1] : helpers.extractPathCoords(shapeOptions.path, constants.paramIsX)));\n      var posY = y2p(yPixelSized ? shapeOptions.yanchor : Lib.midRange(isNotPath ? [shapeOptions.y0, shapeOptions.y1] : helpers.extractPathCoords(shapeOptions.path, constants.paramIsY)));\n      posX = helpers.roundPositionForSharpStrokeRendering(posX, strokeWidth);\n      posY = helpers.roundPositionForSharpStrokeRendering(posY, strokeWidth);\n\n      if (xPixelSized && yPixelSized) {\n        var crossPath = 'M' + (posX - 1 - strokeWidth) + ',' + (posY - 1 - strokeWidth) + 'h-8v2h8 v8h2v-8 h8v-2h-8 v-8h-2 Z';\n        visualCues.attr('d', crossPath);\n      } else if (xPixelSized) {\n        var vBarPath = 'M' + (posX - 1 - strokeWidth) + ',' + (posY - 9 - strokeWidth) + 'v18 h2 v-18 Z';\n        visualCues.attr('d', vBarPath);\n      } else {\n        var hBarPath = 'M' + (posX - 9 - strokeWidth) + ',' + (posY - 1 - strokeWidth) + 'h18 v2 h-18 Z';\n        visualCues.attr('d', hBarPath);\n      }\n    }\n  }\n\n  function removeVisualCues(shapeLayer) {\n    shapeLayer.selectAll('.visual-cue').remove();\n  }\n\n  function deactivateClipPathTemporarily(shapePath, shapeOptions, gd) {\n    var xref = shapeOptions.xref;\n    var yref = shapeOptions.yref;\n    var xa = Axes.getFromId(gd, xref);\n    var ya = Axes.getFromId(gd, yref);\n    var clipAxes = '';\n    if (xref !== 'paper' && !xa.autorange) clipAxes += xref;\n    if (yref !== 'paper' && !ya.autorange) clipAxes += yref;\n    Drawing.setClipUrl(shapePath, clipAxes ? 'clip' + gd._fullLayout._uid + clipAxes : null, gd);\n  }\n}\n\nfunction getPathString(gd, options) {\n  var type = options.type;\n  var xa = Axes.getFromId(gd, options.xref);\n  var ya = Axes.getFromId(gd, options.yref);\n  var gs = gd._fullLayout._size;\n  var x2r, x2p, y2r, y2p;\n  var x0, x1, y0, y1;\n\n  if (xa) {\n    x2r = helpers.shapePositionToRange(xa);\n\n    x2p = function x2p(v) {\n      return xa._offset + xa.r2p(x2r(v, true));\n    };\n  } else {\n    x2p = function x2p(v) {\n      return gs.l + gs.w * v;\n    };\n  }\n\n  if (ya) {\n    y2r = helpers.shapePositionToRange(ya);\n\n    y2p = function y2p(v) {\n      return ya._offset + ya.r2p(y2r(v, true));\n    };\n  } else {\n    y2p = function y2p(v) {\n      return gs.t + gs.h * (1 - v);\n    };\n  }\n\n  if (type === 'path') {\n    if (xa && xa.type === 'date') x2p = helpers.decodeDate(x2p);\n    if (ya && ya.type === 'date') y2p = helpers.decodeDate(y2p);\n    return convertPath(options, x2p, y2p);\n  }\n\n  if (options.xsizemode === 'pixel') {\n    var xAnchorPos = x2p(options.xanchor);\n    x0 = xAnchorPos + options.x0;\n    x1 = xAnchorPos + options.x1;\n  } else {\n    x0 = x2p(options.x0);\n    x1 = x2p(options.x1);\n  }\n\n  if (options.ysizemode === 'pixel') {\n    var yAnchorPos = y2p(options.yanchor);\n    y0 = yAnchorPos - options.y0;\n    y1 = yAnchorPos - options.y1;\n  } else {\n    y0 = y2p(options.y0);\n    y1 = y2p(options.y1);\n  }\n\n  if (type === 'line') return 'M' + x0 + ',' + y0 + 'L' + x1 + ',' + y1;\n  if (type === 'rect') return 'M' + x0 + ',' + y0 + 'H' + x1 + 'V' + y1 + 'H' + x0 + 'Z'; // circle\n\n  var cx = (x0 + x1) / 2;\n  var cy = (y0 + y1) / 2;\n  var rx = Math.abs(cx - x0);\n  var ry = Math.abs(cy - y0);\n  var rArc = 'A' + rx + ',' + ry;\n  var rightPt = cx + rx + ',' + cy;\n  var topPt = cx + ',' + (cy - ry);\n  return 'M' + rightPt + rArc + ' 0 1,1 ' + topPt + rArc + ' 0 0,1 ' + rightPt + 'Z';\n}\n\nfunction convertPath(options, x2p, y2p) {\n  var pathIn = options.path;\n  var xSizemode = options.xsizemode;\n  var ySizemode = options.ysizemode;\n  var xAnchor = options.xanchor;\n  var yAnchor = options.yanchor;\n  return pathIn.replace(constants.segmentRE, function (segment) {\n    var paramNumber = 0;\n    var segmentType = segment.charAt(0);\n    var xParams = constants.paramIsX[segmentType];\n    var yParams = constants.paramIsY[segmentType];\n    var nParams = constants.numParams[segmentType];\n    var paramString = segment.substr(1).replace(constants.paramRE, function (param) {\n      if (xParams[paramNumber]) {\n        if (xSizemode === 'pixel') param = x2p(xAnchor) + Number(param);else param = x2p(param);\n      } else if (yParams[paramNumber]) {\n        if (ySizemode === 'pixel') param = y2p(yAnchor) - Number(param);else param = y2p(param);\n      }\n\n      paramNumber++;\n      if (paramNumber > nParams) param = 'X';\n      return param;\n    });\n\n    if (paramNumber > nParams) {\n      paramString = paramString.replace(/[\\s,]*X.*/, '');\n      Lib.log('Ignoring extra params in segment ' + segment);\n    }\n\n    return segmentType + paramString;\n  });\n}\n\nfunction movePath(pathIn, moveX, moveY) {\n  return pathIn.replace(constants.segmentRE, function (segment) {\n    var paramNumber = 0;\n    var segmentType = segment.charAt(0);\n    var xParams = constants.paramIsX[segmentType];\n    var yParams = constants.paramIsY[segmentType];\n    var nParams = constants.numParams[segmentType];\n    var paramString = segment.substr(1).replace(constants.paramRE, function (param) {\n      if (paramNumber >= nParams) return param;\n      if (xParams[paramNumber]) param = moveX(param);else if (yParams[paramNumber]) param = moveY(param);\n      paramNumber++;\n      return param;\n    });\n    return segmentType + paramString;\n  });\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/shapes/draw.js"],"names":["Registry","require","Lib","Axes","Color","Drawing","arrayEditor","dragElement","setCursor","constants","helpers","module","exports","draw","drawOne","gd","fullLayout","_fullLayout","_shapeUpperLayer","selectAll","remove","_shapeLowerLayer","k","_plots","shapelayer","i","shapes","length","visible","index","_paperdiv","options","_input","layer","drawShape","xref","yref","plotinfo","mainPlot","mainplotinfo","shapeLayer","attrs","d","getPathString","lineColor","line","width","color","path","append","attr","style","opacity","call","stroke","fill","fillcolor","dashLine","dash","setClipPath","_context","edits","shapePosition","setupDragElement","shapePath","shapeOptions","clipAxes","replace","setClipUrl","_uid","MINWIDTH","MINHEIGHT","xPixelSized","xsizemode","yPixelSized","ysizemode","isLine","type","isPath","editHelpers","layout","modifyItem","x0","y0","x1","y1","xAnchor","yAnchor","n0","s0","w0","e0","optN","optS","optW","optE","pathIn","xa","getFromId","ya","x2p","getDataToPixel","y2p","p2x","getPixelToData","p2y","sensoryElement","obtainSensoryElement","dragOptions","element","node","prepFn","startDrag","doneFn","endDrag","clickFn","abortDrag","dragMode","init","onmousemove","updateDragMode","createLineDragHandles","minSensoryWidth","sensoryWidth","Math","max","g","circleStyle","circleRadius","xanchor","yanchor","classed","evt","target","tagName","attributes","value","dragBBox","getBoundingClientRect","w","right","left","h","bottom","top","x","clientX","y","clientY","cursor","shiftKey","getCursor","split","renderVisualCues","deactivateClipPathTemporarily","moveFn","moveShape","resizeShape","removeVisualCues","getUpdateObj","dx","dy","noOp","coord","moveX","moveY","encodeDate","movePath","newX0","newY0","newX1","newY1","newN","indexOf","newS","newW","newE","renderAnchor","isNotPath","visualCues","data","strokeWidth","enter","posX","midRange","extractPathCoords","paramIsX","posY","paramIsY","roundPositionForSharpStrokeRendering","crossPath","vBarPath","hBarPath","autorange","gs","_size","x2r","y2r","shapePositionToRange","v","_offset","r2p","l","t","decodeDate","convertPath","xAnchorPos","yAnchorPos","cx","cy","rx","abs","ry","rArc","rightPt","topPt","xSizemode","ySizemode","segmentRE","segment","paramNumber","segmentType","charAt","xParams","yParams","nParams","numParams","paramString","substr","paramRE","param","Number","log"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\n\nvar dragElement = require('../dragelement');\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\nvar helpers = require('./helpers');\n\n\n// Shapes are stored in gd.layout.shapes, an array of objects\n// index can point to one item in this array,\n//  or non-numeric to simply add a new one\n//  or -1 to modify all existing\n// opt can be the full options object, or one key (to be set to value)\n//  or undefined to simply redraw\n// if opt is blank, val can be 'add' or a full options object to add a new\n//  annotation at that point in the array, or 'remove' to delete this one\n\nmodule.exports = {\n    draw: draw,\n    drawOne: drawOne\n};\n\nfunction draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    // Remove previous shapes before drawing new in shapes in fullLayout.shapes\n    fullLayout._shapeUpperLayer.selectAll('path').remove();\n    fullLayout._shapeLowerLayer.selectAll('path').remove();\n\n    for(var k in fullLayout._plots) {\n        var shapelayer = fullLayout._plots[k].shapelayer;\n        if(shapelayer) shapelayer.selectAll('path').remove();\n    }\n\n    for(var i = 0; i < fullLayout.shapes.length; i++) {\n        if(fullLayout.shapes[i].visible) {\n            drawOne(gd, i);\n        }\n    }\n\n    // may need to resurrect this if we put text (LaTeX) in shapes\n    // return Plots.previousPromises(gd);\n}\n\nfunction drawOne(gd, index) {\n    // remove the existing shape if there is one.\n    // because indices can change, we need to look in all shape layers\n    gd._fullLayout._paperdiv\n        .selectAll('.shapelayer [data-index=\"' + index + '\"]')\n        .remove();\n\n    var options = gd._fullLayout.shapes[index] || {};\n\n    // this shape is gone - quit now after deleting it\n    // TODO: use d3 idioms instead of deleting and redrawing every time\n    if(!options._input || options.visible === false) return;\n\n    if(options.layer !== 'below') {\n        drawShape(gd._fullLayout._shapeUpperLayer);\n    } else if(options.xref === 'paper' || options.yref === 'paper') {\n        drawShape(gd._fullLayout._shapeLowerLayer);\n    } else {\n        var plotinfo = gd._fullLayout._plots[options.xref + options.yref];\n        if(plotinfo) {\n            var mainPlot = plotinfo.mainplotinfo || plotinfo;\n            drawShape(mainPlot.shapelayer);\n        } else {\n            // Fall back to _shapeLowerLayer in case the requested subplot doesn't exist.\n            // This can happen if you reference the shape to an x / y axis combination\n            // that doesn't have any data on it (and layer is below)\n            drawShape(gd._fullLayout._shapeLowerLayer);\n        }\n    }\n\n    function drawShape(shapeLayer) {\n        var attrs = {\n            'data-index': index,\n            'fill-rule': 'evenodd',\n            d: getPathString(gd, options)\n        };\n        var lineColor = options.line.width ? options.line.color : 'rgba(0,0,0,0)';\n\n        var path = shapeLayer.append('path')\n            .attr(attrs)\n            .style('opacity', options.opacity)\n            .call(Color.stroke, lineColor)\n            .call(Color.fill, options.fillcolor)\n            .call(Drawing.dashLine, options.line.dash, options.line.width);\n\n        setClipPath(path, gd, options);\n\n        if(gd._context.edits.shapePosition) setupDragElement(gd, path, options, index, shapeLayer);\n    }\n}\n\nfunction setClipPath(shapePath, gd, shapeOptions) {\n    // note that for layer=\"below\" the clipAxes can be different from the\n    // subplot we're drawing this in. This could cause problems if the shape\n    // spans two subplots. See https://github.com/plotly/plotly.js/issues/1452\n    var clipAxes = (shapeOptions.xref + shapeOptions.yref).replace(/paper/g, '');\n\n    Drawing.setClipUrl(\n        shapePath,\n        clipAxes ? 'clip' + gd._fullLayout._uid + clipAxes : null,\n        gd\n    );\n}\n\nfunction setupDragElement(gd, shapePath, shapeOptions, index, shapeLayer) {\n    var MINWIDTH = 10;\n    var MINHEIGHT = 10;\n\n    var xPixelSized = shapeOptions.xsizemode === 'pixel';\n    var yPixelSized = shapeOptions.ysizemode === 'pixel';\n    var isLine = shapeOptions.type === 'line';\n    var isPath = shapeOptions.type === 'path';\n\n    var editHelpers = arrayEditor(gd.layout, 'shapes', shapeOptions);\n    var modifyItem = editHelpers.modifyItem;\n\n    var x0, y0, x1, y1, xAnchor, yAnchor;\n    var n0, s0, w0, e0, optN, optS, optW, optE;\n    var pathIn;\n\n    // setup conversion functions\n    var xa = Axes.getFromId(gd, shapeOptions.xref);\n    var ya = Axes.getFromId(gd, shapeOptions.yref);\n    var x2p = helpers.getDataToPixel(gd, xa);\n    var y2p = helpers.getDataToPixel(gd, ya, true);\n    var p2x = helpers.getPixelToData(gd, xa);\n    var p2y = helpers.getPixelToData(gd, ya, true);\n\n    var sensoryElement = obtainSensoryElement();\n    var dragOptions = {\n        element: sensoryElement.node(),\n        gd: gd,\n        prepFn: startDrag,\n        doneFn: endDrag,\n        clickFn: abortDrag\n    };\n    var dragMode;\n\n    dragElement.init(dragOptions);\n\n    sensoryElement.node().onmousemove = updateDragMode;\n\n    function obtainSensoryElement() {\n        return isLine ? createLineDragHandles() : shapePath;\n    }\n\n    function createLineDragHandles() {\n        var minSensoryWidth = 10;\n        var sensoryWidth = Math.max(shapeOptions.line.width, minSensoryWidth);\n\n        // Helper shapes group\n        // Note that by setting the `data-index` attr, it is ensured that\n        // the helper group is purged in this modules `draw` function\n        var g = shapeLayer.append('g')\n          .attr('data-index', index);\n\n        // Helper path for moving\n        g.append('path')\n          .attr('d', shapePath.attr('d'))\n          .style({\n              'cursor': 'move',\n              'stroke-width': sensoryWidth,\n              'stroke-opacity': '0' // ensure not visible\n          });\n\n        // Helper circles for resizing\n        var circleStyle = {\n            'fill-opacity': '0' // ensure not visible\n        };\n        var circleRadius = sensoryWidth / 2 > minSensoryWidth ? sensoryWidth / 2 : minSensoryWidth;\n\n        g.append('circle')\n          .attr({\n              'data-line-point': 'start-point',\n              'cx': xPixelSized ? x2p(shapeOptions.xanchor) + shapeOptions.x0 : x2p(shapeOptions.x0),\n              'cy': yPixelSized ? y2p(shapeOptions.yanchor) - shapeOptions.y0 : y2p(shapeOptions.y0),\n              'r': circleRadius\n          })\n          .style(circleStyle)\n          .classed('cursor-grab', true);\n\n        g.append('circle')\n          .attr({\n              'data-line-point': 'end-point',\n              'cx': xPixelSized ? x2p(shapeOptions.xanchor) + shapeOptions.x1 : x2p(shapeOptions.x1),\n              'cy': yPixelSized ? y2p(shapeOptions.yanchor) - shapeOptions.y1 : y2p(shapeOptions.y1),\n              'r': circleRadius\n          })\n          .style(circleStyle)\n          .classed('cursor-grab', true);\n\n        return g;\n    }\n\n    function updateDragMode(evt) {\n        if(isLine) {\n            if(evt.target.tagName === 'path') {\n                dragMode = 'move';\n            } else {\n                dragMode = evt.target.attributes['data-line-point'].value === 'start-point' ?\n                  'resize-over-start-point' : 'resize-over-end-point';\n            }\n        } else {\n            // element might not be on screen at time of setup,\n            // so obtain bounding box here\n            var dragBBox = dragOptions.element.getBoundingClientRect();\n\n            // choose 'move' or 'resize'\n            // based on initial position of cursor within the drag element\n            var w = dragBBox.right - dragBBox.left;\n            var h = dragBBox.bottom - dragBBox.top;\n            var x = evt.clientX - dragBBox.left;\n            var y = evt.clientY - dragBBox.top;\n            var cursor = (!isPath && w > MINWIDTH && h > MINHEIGHT && !evt.shiftKey) ?\n                dragElement.getCursor(x / w, 1 - y / h) :\n                'move';\n\n            setCursor(shapePath, cursor);\n\n            // possible values 'move', 'sw', 'w', 'se', 'e', 'ne', 'n', 'nw' and 'w'\n            dragMode = cursor.split('-')[0];\n        }\n    }\n\n    function startDrag(evt) {\n        // setup update strings and initial values\n        if(xPixelSized) {\n            xAnchor = x2p(shapeOptions.xanchor);\n        }\n        if(yPixelSized) {\n            yAnchor = y2p(shapeOptions.yanchor);\n        }\n\n        if(shapeOptions.type === 'path') {\n            pathIn = shapeOptions.path;\n        } else {\n            x0 = xPixelSized ? shapeOptions.x0 : x2p(shapeOptions.x0);\n            y0 = yPixelSized ? shapeOptions.y0 : y2p(shapeOptions.y0);\n            x1 = xPixelSized ? shapeOptions.x1 : x2p(shapeOptions.x1);\n            y1 = yPixelSized ? shapeOptions.y1 : y2p(shapeOptions.y1);\n        }\n\n        if(x0 < x1) {\n            w0 = x0;\n            optW = 'x0';\n            e0 = x1;\n            optE = 'x1';\n        } else {\n            w0 = x1;\n            optW = 'x1';\n            e0 = x0;\n            optE = 'x0';\n        }\n\n        // For fixed size shapes take opposing direction of y-axis into account.\n        // Hint: For data sized shapes this is done by the y2p function.\n        if((!yPixelSized && y0 < y1) || (yPixelSized && y0 > y1)) {\n            n0 = y0;\n            optN = 'y0';\n            s0 = y1;\n            optS = 'y1';\n        } else {\n            n0 = y1;\n            optN = 'y1';\n            s0 = y0;\n            optS = 'y0';\n        }\n\n        // setup dragMode and the corresponding handler\n        updateDragMode(evt);\n        renderVisualCues(shapeLayer, shapeOptions);\n        deactivateClipPathTemporarily(shapePath, shapeOptions, gd);\n        dragOptions.moveFn = (dragMode === 'move') ? moveShape : resizeShape;\n    }\n\n    function endDrag() {\n        setCursor(shapePath);\n        removeVisualCues(shapeLayer);\n\n        // Don't rely on clipPath being activated during re-layout\n        setClipPath(shapePath, gd, shapeOptions);\n        Registry.call('_guiRelayout', gd, editHelpers.getUpdateObj());\n    }\n\n    function abortDrag() {\n        removeVisualCues(shapeLayer);\n    }\n\n    function moveShape(dx, dy) {\n        if(shapeOptions.type === 'path') {\n            var noOp = function(coord) { return coord; };\n            var moveX = noOp;\n            var moveY = noOp;\n\n            if(xPixelSized) {\n                modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n            } else {\n                moveX = function moveX(x) { return p2x(x2p(x) + dx); };\n                if(xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n            }\n\n            if(yPixelSized) {\n                modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n            } else {\n                moveY = function moveY(y) { return p2y(y2p(y) + dy); };\n                if(ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n            }\n\n            modifyItem('path', shapeOptions.path = movePath(pathIn, moveX, moveY));\n        } else {\n            if(xPixelSized) {\n                modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n            } else {\n                modifyItem('x0', shapeOptions.x0 = p2x(x0 + dx));\n                modifyItem('x1', shapeOptions.x1 = p2x(x1 + dx));\n            }\n\n            if(yPixelSized) {\n                modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n            } else {\n                modifyItem('y0', shapeOptions.y0 = p2y(y0 + dy));\n                modifyItem('y1', shapeOptions.y1 = p2y(y1 + dy));\n            }\n        }\n\n        shapePath.attr('d', getPathString(gd, shapeOptions));\n        renderVisualCues(shapeLayer, shapeOptions);\n    }\n\n    function resizeShape(dx, dy) {\n        if(isPath) {\n            // TODO: implement path resize, don't forget to update dragMode code\n            var noOp = function(coord) { return coord; };\n            var moveX = noOp;\n            var moveY = noOp;\n\n            if(xPixelSized) {\n                modifyItem('xanchor', shapeOptions.xanchor = p2x(xAnchor + dx));\n            } else {\n                moveX = function moveX(x) { return p2x(x2p(x) + dx); };\n                if(xa && xa.type === 'date') moveX = helpers.encodeDate(moveX);\n            }\n\n            if(yPixelSized) {\n                modifyItem('yanchor', shapeOptions.yanchor = p2y(yAnchor + dy));\n            } else {\n                moveY = function moveY(y) { return p2y(y2p(y) + dy); };\n                if(ya && ya.type === 'date') moveY = helpers.encodeDate(moveY);\n            }\n\n            modifyItem('path', shapeOptions.path = movePath(pathIn, moveX, moveY));\n        } else if(isLine) {\n            if(dragMode === 'resize-over-start-point') {\n                var newX0 = x0 + dx;\n                var newY0 = yPixelSized ? y0 - dy : y0 + dy;\n                modifyItem('x0', shapeOptions.x0 = xPixelSized ? newX0 : p2x(newX0));\n                modifyItem('y0', shapeOptions.y0 = yPixelSized ? newY0 : p2y(newY0));\n            } else if(dragMode === 'resize-over-end-point') {\n                var newX1 = x1 + dx;\n                var newY1 = yPixelSized ? y1 - dy : y1 + dy;\n                modifyItem('x1', shapeOptions.x1 = xPixelSized ? newX1 : p2x(newX1));\n                modifyItem('y1', shapeOptions.y1 = yPixelSized ? newY1 : p2y(newY1));\n            }\n        } else {\n            var newN = (~dragMode.indexOf('n')) ? n0 + dy : n0;\n            var newS = (~dragMode.indexOf('s')) ? s0 + dy : s0;\n            var newW = (~dragMode.indexOf('w')) ? w0 + dx : w0;\n            var newE = (~dragMode.indexOf('e')) ? e0 + dx : e0;\n\n            // Do things in opposing direction for y-axis.\n            // Hint: for data-sized shapes the reversal of axis direction is done in p2y.\n            if(~dragMode.indexOf('n') && yPixelSized) newN = n0 - dy;\n            if(~dragMode.indexOf('s') && yPixelSized) newS = s0 - dy;\n\n            // Update shape eventually. Again, be aware of the\n            // opposing direction of the y-axis of fixed size shapes.\n            if((!yPixelSized && newS - newN > MINHEIGHT) ||\n              (yPixelSized && newN - newS > MINHEIGHT)) {\n                modifyItem(optN, shapeOptions[optN] = yPixelSized ? newN : p2y(newN));\n                modifyItem(optS, shapeOptions[optS] = yPixelSized ? newS : p2y(newS));\n            }\n            if(newE - newW > MINWIDTH) {\n                modifyItem(optW, shapeOptions[optW] = xPixelSized ? newW : p2x(newW));\n                modifyItem(optE, shapeOptions[optE] = xPixelSized ? newE : p2x(newE));\n            }\n        }\n\n        shapePath.attr('d', getPathString(gd, shapeOptions));\n        renderVisualCues(shapeLayer, shapeOptions);\n    }\n\n    function renderVisualCues(shapeLayer, shapeOptions) {\n        if(xPixelSized || yPixelSized) {\n            renderAnchor();\n        }\n\n        function renderAnchor() {\n            var isNotPath = shapeOptions.type !== 'path';\n\n            // d3 join with dummy data to satisfy d3 data-binding\n            var visualCues = shapeLayer.selectAll('.visual-cue').data([0]);\n\n            // Enter\n            var strokeWidth = 1;\n            visualCues.enter()\n              .append('path')\n              .attr({\n                  'fill': '#fff',\n                  'fill-rule': 'evenodd',\n                  'stroke': '#000',\n                  'stroke-width': strokeWidth\n              })\n              .classed('visual-cue', true);\n\n            // Update\n            var posX = x2p(\n              xPixelSized ?\n                shapeOptions.xanchor :\n                Lib.midRange(\n                  isNotPath ?\n                    [shapeOptions.x0, shapeOptions.x1] :\n                    helpers.extractPathCoords(shapeOptions.path, constants.paramIsX))\n            );\n            var posY = y2p(\n              yPixelSized ?\n                shapeOptions.yanchor :\n                Lib.midRange(\n                  isNotPath ?\n                    [shapeOptions.y0, shapeOptions.y1] :\n                    helpers.extractPathCoords(shapeOptions.path, constants.paramIsY))\n            );\n\n            posX = helpers.roundPositionForSharpStrokeRendering(posX, strokeWidth);\n            posY = helpers.roundPositionForSharpStrokeRendering(posY, strokeWidth);\n\n            if(xPixelSized && yPixelSized) {\n                var crossPath = 'M' + (posX - 1 - strokeWidth) + ',' + (posY - 1 - strokeWidth) +\n                  'h-8v2h8 v8h2v-8 h8v-2h-8 v-8h-2 Z';\n                visualCues.attr('d', crossPath);\n            } else if(xPixelSized) {\n                var vBarPath = 'M' + (posX - 1 - strokeWidth) + ',' + (posY - 9 - strokeWidth) +\n                  'v18 h2 v-18 Z';\n                visualCues.attr('d', vBarPath);\n            } else {\n                var hBarPath = 'M' + (posX - 9 - strokeWidth) + ',' + (posY - 1 - strokeWidth) +\n                  'h18 v2 h-18 Z';\n                visualCues.attr('d', hBarPath);\n            }\n        }\n    }\n\n    function removeVisualCues(shapeLayer) {\n        shapeLayer.selectAll('.visual-cue').remove();\n    }\n\n    function deactivateClipPathTemporarily(shapePath, shapeOptions, gd) {\n        var xref = shapeOptions.xref;\n        var yref = shapeOptions.yref;\n        var xa = Axes.getFromId(gd, xref);\n        var ya = Axes.getFromId(gd, yref);\n\n        var clipAxes = '';\n        if(xref !== 'paper' && !xa.autorange) clipAxes += xref;\n        if(yref !== 'paper' && !ya.autorange) clipAxes += yref;\n\n        Drawing.setClipUrl(\n            shapePath,\n            clipAxes ? 'clip' + gd._fullLayout._uid + clipAxes : null,\n            gd\n        );\n    }\n}\n\nfunction getPathString(gd, options) {\n    var type = options.type;\n    var xa = Axes.getFromId(gd, options.xref);\n    var ya = Axes.getFromId(gd, options.yref);\n    var gs = gd._fullLayout._size;\n    var x2r, x2p, y2r, y2p;\n    var x0, x1, y0, y1;\n\n    if(xa) {\n        x2r = helpers.shapePositionToRange(xa);\n        x2p = function(v) { return xa._offset + xa.r2p(x2r(v, true)); };\n    } else {\n        x2p = function(v) { return gs.l + gs.w * v; };\n    }\n\n    if(ya) {\n        y2r = helpers.shapePositionToRange(ya);\n        y2p = function(v) { return ya._offset + ya.r2p(y2r(v, true)); };\n    } else {\n        y2p = function(v) { return gs.t + gs.h * (1 - v); };\n    }\n\n    if(type === 'path') {\n        if(xa && xa.type === 'date') x2p = helpers.decodeDate(x2p);\n        if(ya && ya.type === 'date') y2p = helpers.decodeDate(y2p);\n        return convertPath(options, x2p, y2p);\n    }\n\n    if(options.xsizemode === 'pixel') {\n        var xAnchorPos = x2p(options.xanchor);\n        x0 = xAnchorPos + options.x0;\n        x1 = xAnchorPos + options.x1;\n    } else {\n        x0 = x2p(options.x0);\n        x1 = x2p(options.x1);\n    }\n\n    if(options.ysizemode === 'pixel') {\n        var yAnchorPos = y2p(options.yanchor);\n        y0 = yAnchorPos - options.y0;\n        y1 = yAnchorPos - options.y1;\n    } else {\n        y0 = y2p(options.y0);\n        y1 = y2p(options.y1);\n    }\n\n    if(type === 'line') return 'M' + x0 + ',' + y0 + 'L' + x1 + ',' + y1;\n    if(type === 'rect') return 'M' + x0 + ',' + y0 + 'H' + x1 + 'V' + y1 + 'H' + x0 + 'Z';\n\n    // circle\n    var cx = (x0 + x1) / 2;\n    var cy = (y0 + y1) / 2;\n    var rx = Math.abs(cx - x0);\n    var ry = Math.abs(cy - y0);\n    var rArc = 'A' + rx + ',' + ry;\n    var rightPt = (cx + rx) + ',' + cy;\n    var topPt = cx + ',' + (cy - ry);\n    return 'M' + rightPt + rArc + ' 0 1,1 ' + topPt +\n        rArc + ' 0 0,1 ' + rightPt + 'Z';\n}\n\n\nfunction convertPath(options, x2p, y2p) {\n    var pathIn = options.path;\n    var xSizemode = options.xsizemode;\n    var ySizemode = options.ysizemode;\n    var xAnchor = options.xanchor;\n    var yAnchor = options.yanchor;\n\n    return pathIn.replace(constants.segmentRE, function(segment) {\n        var paramNumber = 0;\n        var segmentType = segment.charAt(0);\n        var xParams = constants.paramIsX[segmentType];\n        var yParams = constants.paramIsY[segmentType];\n        var nParams = constants.numParams[segmentType];\n\n        var paramString = segment.substr(1).replace(constants.paramRE, function(param) {\n            if(xParams[paramNumber]) {\n                if(xSizemode === 'pixel') param = x2p(xAnchor) + Number(param);\n                else param = x2p(param);\n            } else if(yParams[paramNumber]) {\n                if(ySizemode === 'pixel') param = y2p(yAnchor) - Number(param);\n                else param = y2p(param);\n            }\n            paramNumber++;\n\n            if(paramNumber > nParams) param = 'X';\n            return param;\n        });\n\n        if(paramNumber > nParams) {\n            paramString = paramString.replace(/[\\s,]*X.*/, '');\n            Lib.log('Ignoring extra params in segment ' + segment);\n        }\n\n        return segmentType + paramString;\n    });\n}\n\nfunction movePath(pathIn, moveX, moveY) {\n    return pathIn.replace(constants.segmentRE, function(segment) {\n        var paramNumber = 0;\n        var segmentType = segment.charAt(0);\n        var xParams = constants.paramIsX[segmentType];\n        var yParams = constants.paramIsY[segmentType];\n        var nParams = constants.numParams[segmentType];\n\n        var paramString = segment.substr(1).replace(constants.paramRE, function(param) {\n            if(paramNumber >= nParams) return param;\n\n            if(xParams[paramNumber]) param = moveX(param);\n            else if(yParams[paramNumber]) param = moveY(param);\n\n            paramNumber++;\n\n            return param;\n        });\n\n        return segmentType + paramString;\n    });\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\n\nvar Plots = require('../../plots/plots');\n\nvar Lib = require('../../lib');\n\nvar Drawing = require('../drawing');\n\nvar Color = require('../color');\n\nvar Titles = require('../titles');\n\nvar Cartesian = require('../../plots/cartesian');\n\nvar axisIDs = require('../../plots/cartesian/axis_ids');\n\nvar dragElement = require('../dragelement');\n\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\n\nmodule.exports = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var rangeSliderData = fullLayout._rangeSliderData;\n\n  for (var i = 0; i < rangeSliderData.length; i++) {\n    var opts = rangeSliderData[i][constants.name]; // fullLayout._uid may not exist when we call makeData\n\n    opts._clipId = opts._id + '-' + fullLayout._uid;\n  }\n  /*\n   * <g container />\n   *  <rect bg />\n   *  < .... range plot />\n   *  <rect mask-min />\n   *  <rect mask-max />\n   *  <rect slidebox />\n   *  <g grabber-min />\n   *      <rect handle-min />\n   *      <rect grabare-min />\n   *  <g grabber-max />\n   *      <rect handle-max />\n   *      <rect grabare-max />\n   *\n   *  ...\n   */\n\n\n  function keyFunction(axisOpts) {\n    return axisOpts._name;\n  }\n\n  var rangeSliders = fullLayout._infolayer.selectAll('g.' + constants.containerClassName).data(rangeSliderData, keyFunction); // remove exiting sliders and their corresponding clip paths\n\n\n  rangeSliders.exit().each(function (axisOpts) {\n    var opts = axisOpts[constants.name];\n\n    fullLayout._topdefs.select('#' + opts._clipId).remove();\n  }).remove(); // return early if no range slider is visible\n\n  if (rangeSliderData.length === 0) return;\n  rangeSliders.enter().append('g').classed(constants.containerClassName, true).attr('pointer-events', 'all'); // for all present range sliders\n\n  rangeSliders.each(function (axisOpts) {\n    var rangeSlider = d3.select(this);\n    var opts = axisOpts[constants.name];\n    var oppAxisOpts = fullLayout[axisIDs.id2name(axisOpts.anchor)];\n    var oppAxisRangeOpts = opts[axisIDs.id2name(axisOpts.anchor)]; // update range\n    // Expand slider range to the axis range\n\n    if (opts.range) {\n      var rng = Lib.simpleMap(opts.range, axisOpts.r2l);\n      var axRng = Lib.simpleMap(axisOpts.range, axisOpts.r2l);\n      var newRng;\n\n      if (axRng[0] < axRng[1]) {\n        newRng = [Math.min(rng[0], axRng[0]), Math.max(rng[1], axRng[1])];\n      } else {\n        newRng = [Math.max(rng[0], axRng[0]), Math.min(rng[1], axRng[1])];\n      }\n\n      opts.range = opts._input.range = Lib.simpleMap(newRng, axisOpts.l2r);\n    }\n\n    axisOpts.cleanRange('rangeslider.range'); // update range slider dimensions\n\n    var gs = fullLayout._size;\n    var domain = axisOpts.domain;\n    opts._width = gs.w * (domain[1] - domain[0]);\n    var x = Math.round(gs.l + gs.w * domain[0]);\n    var y = Math.round(gs.t + gs.h * (1 - axisOpts._counterDomainMin) + (axisOpts.side === 'bottom' ? axisOpts._depth : 0) + opts._offsetShift + constants.extraPad);\n    rangeSlider.attr('transform', 'translate(' + x + ',' + y + ')'); // update data <--> pixel coordinate conversion methods\n\n    var range0 = axisOpts.r2l(opts.range[0]);\n    var range1 = axisOpts.r2l(opts.range[1]);\n    var dist = range1 - range0;\n\n    opts.p2d = function (v) {\n      return v / opts._width * dist + range0;\n    };\n\n    opts.d2p = function (v) {\n      return (v - range0) / dist * opts._width;\n    };\n\n    opts._rl = [range0, range1];\n\n    if (oppAxisRangeOpts.rangemode !== 'match') {\n      var range0OppAxis = oppAxisOpts.r2l(oppAxisRangeOpts.range[0]);\n      var range1OppAxis = oppAxisOpts.r2l(oppAxisRangeOpts.range[1]);\n      var distOppAxis = range1OppAxis - range0OppAxis;\n\n      opts.d2pOppAxis = function (v) {\n        return (v - range0OppAxis) / distOppAxis * opts._height;\n      };\n    } // update inner nodes\n\n\n    rangeSlider.call(drawBg, gd, axisOpts, opts).call(addClipPath, gd, axisOpts, opts).call(drawRangePlot, gd, axisOpts, opts).call(drawMasks, gd, axisOpts, opts, oppAxisRangeOpts).call(drawSlideBox, gd, axisOpts, opts).call(drawGrabbers, gd, axisOpts, opts); // setup drag element\n\n    setupDragElement(rangeSlider, gd, axisOpts, opts); // update current range\n\n    setPixelRange(rangeSlider, gd, axisOpts, opts, oppAxisOpts, oppAxisRangeOpts); // title goes next to range slider instead of tick labels, so\n    // just take it over and draw it from here\n\n    if (axisOpts.side === 'bottom') {\n      Titles.draw(gd, axisOpts._id + 'title', {\n        propContainer: axisOpts,\n        propName: axisOpts._name + '.title',\n        placeholder: fullLayout._dfltTitle.x,\n        attributes: {\n          x: axisOpts._offset + axisOpts._length / 2,\n          y: y + opts._height + opts._offsetShift + 10 + 1.5 * axisOpts.title.font.size,\n          'text-anchor': 'middle'\n        }\n      });\n    }\n  });\n};\n\nfunction setupDragElement(rangeSlider, gd, axisOpts, opts) {\n  var slideBox = rangeSlider.select('rect.' + constants.slideBoxClassName).node();\n  var grabAreaMin = rangeSlider.select('rect.' + constants.grabAreaMinClassName).node();\n  var grabAreaMax = rangeSlider.select('rect.' + constants.grabAreaMaxClassName).node();\n  rangeSlider.on('mousedown', function () {\n    var event = d3.event;\n    var target = event.target;\n    var startX = event.clientX;\n    var offsetX = startX - rangeSlider.node().getBoundingClientRect().left;\n    var minVal = opts.d2p(axisOpts._rl[0]);\n    var maxVal = opts.d2p(axisOpts._rl[1]);\n    var dragCover = dragElement.coverSlip();\n    dragCover.addEventListener('mousemove', mouseMove);\n    dragCover.addEventListener('mouseup', mouseUp);\n\n    function mouseMove(e) {\n      var delta = +e.clientX - startX;\n      var pixelMin, pixelMax, cursor;\n\n      switch (target) {\n        case slideBox:\n          cursor = 'ew-resize';\n          pixelMin = minVal + delta;\n          pixelMax = maxVal + delta;\n          break;\n\n        case grabAreaMin:\n          cursor = 'col-resize';\n          pixelMin = minVal + delta;\n          pixelMax = maxVal;\n          break;\n\n        case grabAreaMax:\n          cursor = 'col-resize';\n          pixelMin = minVal;\n          pixelMax = maxVal + delta;\n          break;\n\n        default:\n          cursor = 'ew-resize';\n          pixelMin = offsetX;\n          pixelMax = offsetX + delta;\n          break;\n      }\n\n      if (pixelMax < pixelMin) {\n        var tmp = pixelMax;\n        pixelMax = pixelMin;\n        pixelMin = tmp;\n      }\n\n      opts._pixelMin = pixelMin;\n      opts._pixelMax = pixelMax;\n      setCursor(d3.select(dragCover), cursor);\n      setDataRange(rangeSlider, gd, axisOpts, opts);\n    }\n\n    function mouseUp() {\n      dragCover.removeEventListener('mousemove', mouseMove);\n      dragCover.removeEventListener('mouseup', mouseUp);\n      Lib.removeElement(dragCover);\n    }\n  });\n}\n\nfunction setDataRange(rangeSlider, gd, axisOpts, opts) {\n  function clamp(v) {\n    return axisOpts.l2r(Lib.constrain(v, opts._rl[0], opts._rl[1]));\n  }\n\n  var dataMin = clamp(opts.p2d(opts._pixelMin));\n  var dataMax = clamp(opts.p2d(opts._pixelMax));\n  window.requestAnimationFrame(function () {\n    Registry.call('_guiRelayout', gd, axisOpts._name + '.range', [dataMin, dataMax]);\n  });\n}\n\nfunction setPixelRange(rangeSlider, gd, axisOpts, opts, oppAxisOpts, oppAxisRangeOpts) {\n  var hw2 = constants.handleWidth / 2;\n\n  function clamp(v) {\n    return Lib.constrain(v, 0, opts._width);\n  }\n\n  function clampOppAxis(v) {\n    return Lib.constrain(v, 0, opts._height);\n  }\n\n  function clampHandle(v) {\n    return Lib.constrain(v, -hw2, opts._width + hw2);\n  }\n\n  var pixelMin = clamp(opts.d2p(axisOpts._rl[0]));\n  var pixelMax = clamp(opts.d2p(axisOpts._rl[1]));\n  rangeSlider.select('rect.' + constants.slideBoxClassName).attr('x', pixelMin).attr('width', pixelMax - pixelMin);\n  rangeSlider.select('rect.' + constants.maskMinClassName).attr('width', pixelMin);\n  rangeSlider.select('rect.' + constants.maskMaxClassName).attr('x', pixelMax).attr('width', opts._width - pixelMax);\n\n  if (oppAxisRangeOpts.rangemode !== 'match') {\n    var pixelMinOppAxis = opts._height - clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[1]));\n    var pixelMaxOppAxis = opts._height - clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[0]));\n    rangeSlider.select('rect.' + constants.maskMinOppAxisClassName).attr('x', pixelMin).attr('height', pixelMinOppAxis).attr('width', pixelMax - pixelMin);\n    rangeSlider.select('rect.' + constants.maskMaxOppAxisClassName).attr('x', pixelMin).attr('y', pixelMaxOppAxis).attr('height', opts._height - pixelMaxOppAxis).attr('width', pixelMax - pixelMin);\n    rangeSlider.select('rect.' + constants.slideBoxClassName).attr('y', pixelMinOppAxis).attr('height', pixelMaxOppAxis - pixelMinOppAxis);\n  } // add offset for crispier corners\n  // https://github.com/plotly/plotly.js/pull/1409\n\n\n  var offset = 0.5;\n  var xMin = Math.round(clampHandle(pixelMin - hw2)) - offset;\n  var xMax = Math.round(clampHandle(pixelMax - hw2)) + offset;\n  rangeSlider.select('g.' + constants.grabberMinClassName).attr('transform', 'translate(' + xMin + ',' + offset + ')');\n  rangeSlider.select('g.' + constants.grabberMaxClassName).attr('transform', 'translate(' + xMax + ',' + offset + ')');\n}\n\nfunction drawBg(rangeSlider, gd, axisOpts, opts) {\n  var bg = Lib.ensureSingle(rangeSlider, 'rect', constants.bgClassName, function (s) {\n    s.attr({\n      x: 0,\n      y: 0,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  var borderCorrect = opts.borderwidth % 2 === 0 ? opts.borderwidth : opts.borderwidth - 1;\n  var offsetShift = -opts._offsetShift;\n  var lw = Drawing.crispRound(gd, opts.borderwidth);\n  bg.attr({\n    width: opts._width + borderCorrect,\n    height: opts._height + borderCorrect,\n    transform: 'translate(' + offsetShift + ',' + offsetShift + ')',\n    fill: opts.bgcolor,\n    stroke: opts.bordercolor,\n    'stroke-width': lw\n  });\n}\n\nfunction addClipPath(rangeSlider, gd, axisOpts, opts) {\n  var fullLayout = gd._fullLayout;\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', opts._clipId, function (s) {\n    s.append('rect').attr({\n      x: 0,\n      y: 0\n    });\n  });\n  clipPath.select('rect').attr({\n    width: opts._width,\n    height: opts._height\n  });\n}\n\nfunction drawRangePlot(rangeSlider, gd, axisOpts, opts) {\n  var calcData = gd.calcdata;\n  var rangePlots = rangeSlider.selectAll('g.' + constants.rangePlotClassName).data(axisOpts._subplotsWith, Lib.identity);\n  rangePlots.enter().append('g').attr('class', function (id) {\n    return constants.rangePlotClassName + ' ' + id;\n  }).call(Drawing.setClipUrl, opts._clipId, gd);\n  rangePlots.order();\n  rangePlots.exit().remove();\n  var mainplotinfo;\n  rangePlots.each(function (id, i) {\n    var plotgroup = d3.select(this);\n    var isMainPlot = i === 0;\n    var oppAxisOpts = axisIDs.getFromId(gd, id, 'y');\n    var oppAxisName = oppAxisOpts._name;\n    var oppAxisRangeOpts = opts[oppAxisName];\n    var mockFigure = {\n      data: [],\n      layout: {\n        xaxis: {\n          type: axisOpts.type,\n          domain: [0, 1],\n          range: opts.range.slice(),\n          calendar: axisOpts.calendar\n        },\n        width: opts._width,\n        height: opts._height,\n        margin: {\n          t: 0,\n          b: 0,\n          l: 0,\n          r: 0\n        }\n      },\n      _context: gd._context\n    };\n    mockFigure.layout[oppAxisName] = {\n      type: oppAxisOpts.type,\n      domain: [0, 1],\n      range: oppAxisRangeOpts.rangemode !== 'match' ? oppAxisRangeOpts.range.slice() : oppAxisOpts.range.slice(),\n      calendar: oppAxisOpts.calendar\n    };\n    Plots.supplyDefaults(mockFigure);\n    var xa = mockFigure._fullLayout.xaxis;\n    var ya = mockFigure._fullLayout[oppAxisName];\n    xa.clearCalc();\n    xa.setScale();\n    ya.clearCalc();\n    ya.setScale();\n    var plotinfo = {\n      id: id,\n      plotgroup: plotgroup,\n      xaxis: xa,\n      yaxis: ya,\n      isRangePlot: true\n    };\n    if (isMainPlot) mainplotinfo = plotinfo;else {\n      plotinfo.mainplot = 'xy';\n      plotinfo.mainplotinfo = mainplotinfo;\n    }\n    Cartesian.rangePlot(gd, plotinfo, filterRangePlotCalcData(calcData, id));\n  });\n}\n\nfunction filterRangePlotCalcData(calcData, subplotId) {\n  var out = [];\n\n  for (var i = 0; i < calcData.length; i++) {\n    var calcTrace = calcData[i];\n    var trace = calcTrace[0].trace;\n\n    if (trace.xaxis + trace.yaxis === subplotId) {\n      out.push(calcTrace);\n    }\n  }\n\n  return out;\n}\n\nfunction drawMasks(rangeSlider, gd, axisOpts, opts, oppAxisRangeOpts) {\n  var maskMin = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMinClassName, function (s) {\n    s.attr({\n      x: 0,\n      y: 0,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  maskMin.attr('height', opts._height).call(Color.fill, constants.maskColor);\n  var maskMax = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMaxClassName, function (s) {\n    s.attr({\n      y: 0,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  maskMax.attr('height', opts._height).call(Color.fill, constants.maskColor); // masks used for oppAxis zoom\n\n  if (oppAxisRangeOpts.rangemode !== 'match') {\n    var maskMinOppAxis = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMinOppAxisClassName, function (s) {\n      s.attr({\n        y: 0,\n        'shape-rendering': 'crispEdges'\n      });\n    });\n    maskMinOppAxis.attr('width', opts._width).call(Color.fill, constants.maskOppAxisColor);\n    var maskMaxOppAxis = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMaxOppAxisClassName, function (s) {\n      s.attr({\n        y: 0,\n        'shape-rendering': 'crispEdges'\n      });\n    });\n    maskMaxOppAxis.attr('width', opts._width).style('border-top', constants.maskOppBorder).call(Color.fill, constants.maskOppAxisColor);\n  }\n}\n\nfunction drawSlideBox(rangeSlider, gd, axisOpts, opts) {\n  if (gd._context.staticPlot) return;\n  var slideBox = Lib.ensureSingle(rangeSlider, 'rect', constants.slideBoxClassName, function (s) {\n    s.attr({\n      y: 0,\n      cursor: constants.slideBoxCursor,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  slideBox.attr({\n    height: opts._height,\n    fill: constants.slideBoxFill\n  });\n}\n\nfunction drawGrabbers(rangeSlider, gd, axisOpts, opts) {\n  // <g grabber />\n  var grabberMin = Lib.ensureSingle(rangeSlider, 'g', constants.grabberMinClassName);\n  var grabberMax = Lib.ensureSingle(rangeSlider, 'g', constants.grabberMaxClassName); // <g handle />\n\n  var handleFixAttrs = {\n    x: 0,\n    width: constants.handleWidth,\n    rx: constants.handleRadius,\n    fill: Color.background,\n    stroke: Color.defaultLine,\n    'stroke-width': constants.handleStrokeWidth,\n    'shape-rendering': 'crispEdges'\n  };\n  var handleDynamicAttrs = {\n    y: Math.round(opts._height / 4),\n    height: Math.round(opts._height / 2)\n  };\n  var handleMin = Lib.ensureSingle(grabberMin, 'rect', constants.handleMinClassName, function (s) {\n    s.attr(handleFixAttrs);\n  });\n  handleMin.attr(handleDynamicAttrs);\n  var handleMax = Lib.ensureSingle(grabberMax, 'rect', constants.handleMaxClassName, function (s) {\n    s.attr(handleFixAttrs);\n  });\n  handleMax.attr(handleDynamicAttrs); // <g grabarea />\n\n  if (gd._context.staticPlot) return;\n  var grabAreaFixAttrs = {\n    width: constants.grabAreaWidth,\n    x: 0,\n    y: 0,\n    fill: constants.grabAreaFill,\n    cursor: constants.grabAreaCursor\n  };\n  var grabAreaMin = Lib.ensureSingle(grabberMin, 'rect', constants.grabAreaMinClassName, function (s) {\n    s.attr(grabAreaFixAttrs);\n  });\n  grabAreaMin.attr('height', opts._height);\n  var grabAreaMax = Lib.ensureSingle(grabberMax, 'rect', constants.grabAreaMaxClassName, function (s) {\n    s.attr(grabAreaFixAttrs);\n  });\n  grabAreaMax.attr('height', opts._height);\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/rangeslider/draw.js"],"names":["d3","require","Registry","Plots","Lib","Drawing","Color","Titles","Cartesian","axisIDs","dragElement","setCursor","constants","module","exports","gd","fullLayout","_fullLayout","rangeSliderData","_rangeSliderData","i","length","opts","name","_clipId","_id","_uid","keyFunction","axisOpts","_name","rangeSliders","_infolayer","selectAll","containerClassName","data","exit","each","_topdefs","select","remove","enter","append","classed","attr","rangeSlider","oppAxisOpts","id2name","anchor","oppAxisRangeOpts","range","rng","simpleMap","r2l","axRng","newRng","Math","min","max","_input","l2r","cleanRange","gs","_size","domain","_width","w","x","round","l","y","t","h","_counterDomainMin","side","_depth","_offsetShift","extraPad","range0","range1","dist","p2d","v","d2p","_rl","rangemode","range0OppAxis","range1OppAxis","distOppAxis","d2pOppAxis","_height","call","drawBg","addClipPath","drawRangePlot","drawMasks","drawSlideBox","drawGrabbers","setupDragElement","setPixelRange","draw","propContainer","propName","placeholder","_dfltTitle","attributes","_offset","_length","title","font","size","slideBox","slideBoxClassName","node","grabAreaMin","grabAreaMinClassName","grabAreaMax","grabAreaMaxClassName","on","event","target","startX","clientX","offsetX","getBoundingClientRect","left","minVal","maxVal","dragCover","coverSlip","addEventListener","mouseMove","mouseUp","e","delta","pixelMin","pixelMax","cursor","tmp","_pixelMin","_pixelMax","setDataRange","removeEventListener","removeElement","clamp","constrain","dataMin","dataMax","window","requestAnimationFrame","hw2","handleWidth","clampOppAxis","clampHandle","maskMinClassName","maskMaxClassName","pixelMinOppAxis","pixelMaxOppAxis","maskMinOppAxisClassName","maskMaxOppAxisClassName","offset","xMin","xMax","grabberMinClassName","grabberMaxClassName","bg","ensureSingle","bgClassName","s","borderCorrect","borderwidth","offsetShift","lw","crispRound","width","height","transform","fill","bgcolor","stroke","bordercolor","clipPath","ensureSingleById","calcData","calcdata","rangePlots","rangePlotClassName","_subplotsWith","identity","id","setClipUrl","order","mainplotinfo","plotgroup","isMainPlot","getFromId","oppAxisName","mockFigure","layout","xaxis","type","slice","calendar","margin","b","r","_context","supplyDefaults","xa","ya","clearCalc","setScale","plotinfo","yaxis","isRangePlot","mainplot","rangePlot","filterRangePlotCalcData","subplotId","out","calcTrace","trace","push","maskMin","maskColor","maskMax","maskMinOppAxis","maskOppAxisColor","maskMaxOppAxis","style","maskOppBorder","staticPlot","slideBoxCursor","slideBoxFill","grabberMin","grabberMax","handleFixAttrs","rx","handleRadius","background","defaultLine","handleStrokeWidth","handleDynamicAttrs","handleMin","handleMinClassName","handleMax","handleMaxClassName","grabAreaFixAttrs","grabAreaWidth","grabAreaFill","grabAreaCursor"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAIG,GAAG,GAAGH,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAIO,SAAS,GAAGP,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,gCAAD,CAArB;;AAEA,IAAIS,WAAW,GAAGT,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIU,SAAS,GAAGV,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIW,SAAS,GAAGX,OAAO,CAAC,aAAD,CAAvB;;AAEAY,MAAM,CAACC,OAAP,GAAiB,UAASC,EAAT,EAAa;AAC1B,MAAIC,UAAU,GAAGD,EAAE,CAACE,WAApB;AACA,MAAIC,eAAe,GAAGF,UAAU,CAACG,gBAAjC;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,eAAe,CAACG,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,QAAIE,IAAI,GAAGJ,eAAe,CAACE,CAAD,CAAf,CAAmBR,SAAS,CAACW,IAA7B,CAAX,CAD4C,CAE5C;;AACAD,IAAAA,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,GAAL,GAAW,GAAX,GAAiBT,UAAU,CAACU,IAA3C;AACH;AAED;;;;;;;;;;;;;;;;;;AAiBA,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,WAAOA,QAAQ,CAACC,KAAhB;AACH;;AAED,MAAIC,YAAY,GAAGd,UAAU,CAACe,UAAX,CACdC,SADc,CACJ,OAAOpB,SAAS,CAACqB,kBADb,EAEdC,IAFc,CAEThB,eAFS,EAEQS,WAFR,CAAnB,CA9B0B,CAkC1B;;;AACAG,EAAAA,YAAY,CAACK,IAAb,GAAoBC,IAApB,CAAyB,UAASR,QAAT,EAAmB;AACxC,QAAIN,IAAI,GAAGM,QAAQ,CAAChB,SAAS,CAACW,IAAX,CAAnB;;AACAP,IAAAA,UAAU,CAACqB,QAAX,CAAoBC,MAApB,CAA2B,MAAMhB,IAAI,CAACE,OAAtC,EAA+Ce,MAA/C;AACH,GAHD,EAGGA,MAHH,GAnC0B,CAwC1B;;AACA,MAAGrB,eAAe,CAACG,MAAhB,KAA2B,CAA9B,EAAiC;AAEjCS,EAAAA,YAAY,CAACU,KAAb,GAAqBC,MAArB,CAA4B,GAA5B,EACKC,OADL,CACa9B,SAAS,CAACqB,kBADvB,EAC2C,IAD3C,EAEKU,IAFL,CAEU,gBAFV,EAE4B,KAF5B,EA3C0B,CA+C1B;;AACAb,EAAAA,YAAY,CAACM,IAAb,CAAkB,UAASR,QAAT,EAAmB;AACjC,QAAIgB,WAAW,GAAG5C,EAAE,CAACsC,MAAH,CAAU,IAAV,CAAlB;AACA,QAAIhB,IAAI,GAAGM,QAAQ,CAAChB,SAAS,CAACW,IAAX,CAAnB;AACA,QAAIsB,WAAW,GAAG7B,UAAU,CAACP,OAAO,CAACqC,OAAR,CAAgBlB,QAAQ,CAACmB,MAAzB,CAAD,CAA5B;AACA,QAAIC,gBAAgB,GAAG1B,IAAI,CAACb,OAAO,CAACqC,OAAR,CAAgBlB,QAAQ,CAACmB,MAAzB,CAAD,CAA3B,CAJiC,CAMjC;AACA;;AACA,QAAGzB,IAAI,CAAC2B,KAAR,EAAe;AACX,UAAIC,GAAG,GAAG9C,GAAG,CAAC+C,SAAJ,CAAc7B,IAAI,CAAC2B,KAAnB,EAA0BrB,QAAQ,CAACwB,GAAnC,CAAV;AACA,UAAIC,KAAK,GAAGjD,GAAG,CAAC+C,SAAJ,CAAcvB,QAAQ,CAACqB,KAAvB,EAA8BrB,QAAQ,CAACwB,GAAvC,CAAZ;AACA,UAAIE,MAAJ;;AAEA,UAAGD,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAnB,EAAwB;AACpBC,QAAAA,MAAM,GAAG,CACLC,IAAI,CAACC,GAAL,CAASN,GAAG,CAAC,CAAD,CAAZ,EAAiBG,KAAK,CAAC,CAAD,CAAtB,CADK,EAELE,IAAI,CAACE,GAAL,CAASP,GAAG,CAAC,CAAD,CAAZ,EAAiBG,KAAK,CAAC,CAAD,CAAtB,CAFK,CAAT;AAIH,OALD,MAKO;AACHC,QAAAA,MAAM,GAAG,CACLC,IAAI,CAACE,GAAL,CAASP,GAAG,CAAC,CAAD,CAAZ,EAAiBG,KAAK,CAAC,CAAD,CAAtB,CADK,EAELE,IAAI,CAACC,GAAL,CAASN,GAAG,CAAC,CAAD,CAAZ,EAAiBG,KAAK,CAAC,CAAD,CAAtB,CAFK,CAAT;AAIH;;AAED/B,MAAAA,IAAI,CAAC2B,KAAL,GAAa3B,IAAI,CAACoC,MAAL,CAAYT,KAAZ,GAAoB7C,GAAG,CAAC+C,SAAJ,CAAcG,MAAd,EAAsB1B,QAAQ,CAAC+B,GAA/B,CAAjC;AACH;;AAED/B,IAAAA,QAAQ,CAACgC,UAAT,CAAoB,mBAApB,EA5BiC,CA8BjC;;AAEA,QAAIC,EAAE,GAAG7C,UAAU,CAAC8C,KAApB;AACA,QAAIC,MAAM,GAAGnC,QAAQ,CAACmC,MAAtB;AAEAzC,IAAAA,IAAI,CAAC0C,MAAL,GAAcH,EAAE,CAACI,CAAH,IAAQF,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA1B,CAAd;AAEA,QAAIG,CAAC,GAAGX,IAAI,CAACY,KAAL,CAAWN,EAAE,CAACO,CAAH,GAAQP,EAAE,CAACI,CAAH,GAAOF,MAAM,CAAC,CAAD,CAAhC,CAAR;AAEA,QAAIM,CAAC,GAAGd,IAAI,CAACY,KAAL,CACJN,EAAE,CAACS,CAAH,GAAOT,EAAE,CAACU,CAAH,IAAQ,IAAI3C,QAAQ,CAAC4C,iBAArB,CAAP,IACC5C,QAAQ,CAAC6C,IAAT,KAAkB,QAAlB,GAA6B7C,QAAQ,CAAC8C,MAAtC,GAA+C,CADhD,IAEApD,IAAI,CAACqD,YAFL,GAEoB/D,SAAS,CAACgE,QAH1B,CAAR;AAMAhC,IAAAA,WAAW,CAACD,IAAZ,CAAiB,WAAjB,EAA8B,eAAeuB,CAAf,GAAmB,GAAnB,GAAyBG,CAAzB,GAA6B,GAA3D,EA7CiC,CA+CjC;;AAEA,QAAIQ,MAAM,GAAGjD,QAAQ,CAACwB,GAAT,CAAa9B,IAAI,CAAC2B,KAAL,CAAW,CAAX,CAAb,CAAb;AACA,QAAI6B,MAAM,GAAGlD,QAAQ,CAACwB,GAAT,CAAa9B,IAAI,CAAC2B,KAAL,CAAW,CAAX,CAAb,CAAb;AACA,QAAI8B,IAAI,GAAGD,MAAM,GAAGD,MAApB;;AAEAvD,IAAAA,IAAI,CAAC0D,GAAL,GAAW,UAASC,CAAT,EAAY;AACnB,aAAQA,CAAC,GAAG3D,IAAI,CAAC0C,MAAV,GAAoBe,IAApB,GAA2BF,MAAlC;AACH,KAFD;;AAIAvD,IAAAA,IAAI,CAAC4D,GAAL,GAAW,UAASD,CAAT,EAAY;AACnB,aAAO,CAACA,CAAC,GAAGJ,MAAL,IAAeE,IAAf,GAAsBzD,IAAI,CAAC0C,MAAlC;AACH,KAFD;;AAIA1C,IAAAA,IAAI,CAAC6D,GAAL,GAAW,CAACN,MAAD,EAASC,MAAT,CAAX;;AAEA,QAAG9B,gBAAgB,CAACoC,SAAjB,KAA+B,OAAlC,EAA2C;AACvC,UAAIC,aAAa,GAAGxC,WAAW,CAACO,GAAZ,CAAgBJ,gBAAgB,CAACC,KAAjB,CAAuB,CAAvB,CAAhB,CAApB;AACA,UAAIqC,aAAa,GAAGzC,WAAW,CAACO,GAAZ,CAAgBJ,gBAAgB,CAACC,KAAjB,CAAuB,CAAvB,CAAhB,CAApB;AACA,UAAIsC,WAAW,GAAGD,aAAa,GAAGD,aAAlC;;AAEA/D,MAAAA,IAAI,CAACkE,UAAL,GAAkB,UAASP,CAAT,EAAY;AAC1B,eAAO,CAACA,CAAC,GAAGI,aAAL,IAAsBE,WAAtB,GAAoCjE,IAAI,CAACmE,OAAhD;AACH,OAFD;AAGH,KAvEgC,CAyEjC;;;AAEA7C,IAAAA,WAAW,CACN8C,IADL,CACUC,MADV,EACkB5E,EADlB,EACsBa,QADtB,EACgCN,IADhC,EAEKoE,IAFL,CAEUE,WAFV,EAEuB7E,EAFvB,EAE2Ba,QAF3B,EAEqCN,IAFrC,EAGKoE,IAHL,CAGUG,aAHV,EAGyB9E,EAHzB,EAG6Ba,QAH7B,EAGuCN,IAHvC,EAIKoE,IAJL,CAIUI,SAJV,EAIqB/E,EAJrB,EAIyBa,QAJzB,EAImCN,IAJnC,EAIyC0B,gBAJzC,EAKK0C,IALL,CAKUK,YALV,EAKwBhF,EALxB,EAK4Ba,QAL5B,EAKsCN,IALtC,EAMKoE,IANL,CAMUM,YANV,EAMwBjF,EANxB,EAM4Ba,QAN5B,EAMsCN,IANtC,EA3EiC,CAmFjC;;AACA2E,IAAAA,gBAAgB,CAACrD,WAAD,EAAc7B,EAAd,EAAkBa,QAAlB,EAA4BN,IAA5B,CAAhB,CApFiC,CAsFjC;;AACA4E,IAAAA,aAAa,CAACtD,WAAD,EAAc7B,EAAd,EAAkBa,QAAlB,EAA4BN,IAA5B,EAAkCuB,WAAlC,EAA+CG,gBAA/C,CAAb,CAvFiC,CAyFjC;AACA;;AACA,QAAGpB,QAAQ,CAAC6C,IAAT,KAAkB,QAArB,EAA+B;AAC3BlE,MAAAA,MAAM,CAAC4F,IAAP,CAAYpF,EAAZ,EAAgBa,QAAQ,CAACH,GAAT,GAAe,OAA/B,EAAwC;AACpC2E,QAAAA,aAAa,EAAExE,QADqB;AAEpCyE,QAAAA,QAAQ,EAAEzE,QAAQ,CAACC,KAAT,GAAiB,QAFS;AAGpCyE,QAAAA,WAAW,EAAEtF,UAAU,CAACuF,UAAX,CAAsBrC,CAHC;AAIpCsC,QAAAA,UAAU,EAAE;AACRtC,UAAAA,CAAC,EAAEtC,QAAQ,CAAC6E,OAAT,GAAmB7E,QAAQ,CAAC8E,OAAT,GAAmB,CADjC;AAERrC,UAAAA,CAAC,EAAEA,CAAC,GAAG/C,IAAI,CAACmE,OAAT,GAAmBnE,IAAI,CAACqD,YAAxB,GAAuC,EAAvC,GAA4C,MAAM/C,QAAQ,CAAC+E,KAAT,CAAeC,IAAf,CAAoBC,IAFjE;AAGR,yBAAe;AAHP;AAJwB,OAAxC;AAUH;AACJ,GAvGD;AAwGH,CAxJD;;AA0JA,SAASZ,gBAAT,CAA0BrD,WAA1B,EAAuC7B,EAAvC,EAA2Ca,QAA3C,EAAqDN,IAArD,EAA2D;AACvD,MAAIwF,QAAQ,GAAGlE,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACmG,iBAAvC,EAA0DC,IAA1D,EAAf;AACA,MAAIC,WAAW,GAAGrE,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACsG,oBAAvC,EAA6DF,IAA7D,EAAlB;AACA,MAAIG,WAAW,GAAGvE,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACwG,oBAAvC,EAA6DJ,IAA7D,EAAlB;AAEApE,EAAAA,WAAW,CAACyE,EAAZ,CAAe,WAAf,EAA4B,YAAW;AACnC,QAAIC,KAAK,GAAGtH,EAAE,CAACsH,KAAf;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAIC,MAAM,GAAGF,KAAK,CAACG,OAAnB;AACA,QAAIC,OAAO,GAAGF,MAAM,GAAG5E,WAAW,CAACoE,IAAZ,GAAmBW,qBAAnB,GAA2CC,IAAlE;AACA,QAAIC,MAAM,GAAGvG,IAAI,CAAC4D,GAAL,CAAStD,QAAQ,CAACuD,GAAT,CAAa,CAAb,CAAT,CAAb;AACA,QAAI2C,MAAM,GAAGxG,IAAI,CAAC4D,GAAL,CAAStD,QAAQ,CAACuD,GAAT,CAAa,CAAb,CAAT,CAAb;AAEA,QAAI4C,SAAS,GAAGrH,WAAW,CAACsH,SAAZ,EAAhB;AAEAD,IAAAA,SAAS,CAACE,gBAAV,CAA2B,WAA3B,EAAwCC,SAAxC;AACAH,IAAAA,SAAS,CAACE,gBAAV,CAA2B,SAA3B,EAAsCE,OAAtC;;AAEA,aAASD,SAAT,CAAmBE,CAAnB,EAAsB;AAClB,UAAIC,KAAK,GAAG,CAACD,CAAC,CAACX,OAAH,GAAaD,MAAzB;AACA,UAAIc,QAAJ,EAAcC,QAAd,EAAwBC,MAAxB;;AAEA,cAAOjB,MAAP;AACI,aAAKT,QAAL;AACI0B,UAAAA,MAAM,GAAG,WAAT;AACAF,UAAAA,QAAQ,GAAGT,MAAM,GAAGQ,KAApB;AACAE,UAAAA,QAAQ,GAAGT,MAAM,GAAGO,KAApB;AACA;;AAEJ,aAAKpB,WAAL;AACIuB,UAAAA,MAAM,GAAG,YAAT;AACAF,UAAAA,QAAQ,GAAGT,MAAM,GAAGQ,KAApB;AACAE,UAAAA,QAAQ,GAAGT,MAAX;AACA;;AAEJ,aAAKX,WAAL;AACIqB,UAAAA,MAAM,GAAG,YAAT;AACAF,UAAAA,QAAQ,GAAGT,MAAX;AACAU,UAAAA,QAAQ,GAAGT,MAAM,GAAGO,KAApB;AACA;;AAEJ;AACIG,UAAAA,MAAM,GAAG,WAAT;AACAF,UAAAA,QAAQ,GAAGZ,OAAX;AACAa,UAAAA,QAAQ,GAAGb,OAAO,GAAGW,KAArB;AACA;AAvBR;;AA0BA,UAAGE,QAAQ,GAAGD,QAAd,EAAwB;AACpB,YAAIG,GAAG,GAAGF,QAAV;AACAA,QAAAA,QAAQ,GAAGD,QAAX;AACAA,QAAAA,QAAQ,GAAGG,GAAX;AACH;;AAEDnH,MAAAA,IAAI,CAACoH,SAAL,GAAiBJ,QAAjB;AACAhH,MAAAA,IAAI,CAACqH,SAAL,GAAiBJ,QAAjB;AAEA5H,MAAAA,SAAS,CAACX,EAAE,CAACsC,MAAH,CAAUyF,SAAV,CAAD,EAAuBS,MAAvB,CAAT;AACAI,MAAAA,YAAY,CAAChG,WAAD,EAAc7B,EAAd,EAAkBa,QAAlB,EAA4BN,IAA5B,CAAZ;AACH;;AAED,aAAS6G,OAAT,GAAmB;AACfJ,MAAAA,SAAS,CAACc,mBAAV,CAA8B,WAA9B,EAA2CX,SAA3C;AACAH,MAAAA,SAAS,CAACc,mBAAV,CAA8B,SAA9B,EAAyCV,OAAzC;AACA/H,MAAAA,GAAG,CAAC0I,aAAJ,CAAkBf,SAAlB;AACH;AACJ,GA7DD;AA8DH;;AAED,SAASa,YAAT,CAAsBhG,WAAtB,EAAmC7B,EAAnC,EAAuCa,QAAvC,EAAiDN,IAAjD,EAAuD;AACnD,WAASyH,KAAT,CAAe9D,CAAf,EAAkB;AACd,WAAOrD,QAAQ,CAAC+B,GAAT,CAAavD,GAAG,CAAC4I,SAAJ,CAAc/D,CAAd,EAAiB3D,IAAI,CAAC6D,GAAL,CAAS,CAAT,CAAjB,EAA8B7D,IAAI,CAAC6D,GAAL,CAAS,CAAT,CAA9B,CAAb,CAAP;AACH;;AAED,MAAI8D,OAAO,GAAGF,KAAK,CAACzH,IAAI,CAAC0D,GAAL,CAAS1D,IAAI,CAACoH,SAAd,CAAD,CAAnB;AACA,MAAIQ,OAAO,GAAGH,KAAK,CAACzH,IAAI,CAAC0D,GAAL,CAAS1D,IAAI,CAACqH,SAAd,CAAD,CAAnB;AAEAQ,EAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAW;AACpClJ,IAAAA,QAAQ,CAACwF,IAAT,CAAc,cAAd,EAA8B3E,EAA9B,EAAkCa,QAAQ,CAACC,KAAT,GAAiB,QAAnD,EAA6D,CAACoH,OAAD,EAAUC,OAAV,CAA7D;AACH,GAFD;AAGH;;AAED,SAAShD,aAAT,CAAuBtD,WAAvB,EAAoC7B,EAApC,EAAwCa,QAAxC,EAAkDN,IAAlD,EAAwDuB,WAAxD,EAAqEG,gBAArE,EAAuF;AACnF,MAAIqG,GAAG,GAAGzI,SAAS,CAAC0I,WAAV,GAAwB,CAAlC;;AAEA,WAASP,KAAT,CAAe9D,CAAf,EAAkB;AACd,WAAO7E,GAAG,CAAC4I,SAAJ,CAAc/D,CAAd,EAAiB,CAAjB,EAAoB3D,IAAI,CAAC0C,MAAzB,CAAP;AACH;;AAED,WAASuF,YAAT,CAAsBtE,CAAtB,EAAyB;AACrB,WAAO7E,GAAG,CAAC4I,SAAJ,CAAc/D,CAAd,EAAiB,CAAjB,EAAoB3D,IAAI,CAACmE,OAAzB,CAAP;AACH;;AAED,WAAS+D,WAAT,CAAqBvE,CAArB,EAAwB;AACpB,WAAO7E,GAAG,CAAC4I,SAAJ,CAAc/D,CAAd,EAAiB,CAACoE,GAAlB,EAAuB/H,IAAI,CAAC0C,MAAL,GAAcqF,GAArC,CAAP;AACH;;AAED,MAAIf,QAAQ,GAAGS,KAAK,CAACzH,IAAI,CAAC4D,GAAL,CAAStD,QAAQ,CAACuD,GAAT,CAAa,CAAb,CAAT,CAAD,CAApB;AACA,MAAIoD,QAAQ,GAAGQ,KAAK,CAACzH,IAAI,CAAC4D,GAAL,CAAStD,QAAQ,CAACuD,GAAT,CAAa,CAAb,CAAT,CAAD,CAApB;AAEAvC,EAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACmG,iBAAvC,EACKpE,IADL,CACU,GADV,EACe2F,QADf,EAEK3F,IAFL,CAEU,OAFV,EAEmB4F,QAAQ,GAAGD,QAF9B;AAIA1F,EAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAAC6I,gBAAvC,EACK9G,IADL,CACU,OADV,EACmB2F,QADnB;AAGA1F,EAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAAC8I,gBAAvC,EACK/G,IADL,CACU,GADV,EACe4F,QADf,EAEK5F,IAFL,CAEU,OAFV,EAEmBrB,IAAI,CAAC0C,MAAL,GAAcuE,QAFjC;;AAIA,MAAGvF,gBAAgB,CAACoC,SAAjB,KAA+B,OAAlC,EAA2C;AACvC,QAAIuE,eAAe,GAAGrI,IAAI,CAACmE,OAAL,GAAe8D,YAAY,CAACjI,IAAI,CAACkE,UAAL,CAAgB3C,WAAW,CAACsC,GAAZ,CAAgB,CAAhB,CAAhB,CAAD,CAAjD;AACA,QAAIyE,eAAe,GAAGtI,IAAI,CAACmE,OAAL,GAAe8D,YAAY,CAACjI,IAAI,CAACkE,UAAL,CAAgB3C,WAAW,CAACsC,GAAZ,CAAgB,CAAhB,CAAhB,CAAD,CAAjD;AAEAvC,IAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACiJ,uBAAvC,EACKlH,IADL,CACU,GADV,EACe2F,QADf,EAEK3F,IAFL,CAEU,QAFV,EAEoBgH,eAFpB,EAGKhH,IAHL,CAGU,OAHV,EAGmB4F,QAAQ,GAAGD,QAH9B;AAKA1F,IAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACkJ,uBAAvC,EACKnH,IADL,CACU,GADV,EACe2F,QADf,EAEK3F,IAFL,CAEU,GAFV,EAEeiH,eAFf,EAGKjH,IAHL,CAGU,QAHV,EAGoBrB,IAAI,CAACmE,OAAL,GAAemE,eAHnC,EAIKjH,IAJL,CAIU,OAJV,EAImB4F,QAAQ,GAAGD,QAJ9B;AAMA1F,IAAAA,WAAW,CAACN,MAAZ,CAAmB,UAAU1B,SAAS,CAACmG,iBAAvC,EACKpE,IADL,CACU,GADV,EACegH,eADf,EAEKhH,IAFL,CAEU,QAFV,EAEoBiH,eAAe,GAAGD,eAFtC;AAGH,GA/CkF,CAiDnF;AACA;;;AACA,MAAII,MAAM,GAAG,GAAb;AAEA,MAAIC,IAAI,GAAGzG,IAAI,CAACY,KAAL,CAAWqF,WAAW,CAAClB,QAAQ,GAAGe,GAAZ,CAAtB,IAA0CU,MAArD;AACA,MAAIE,IAAI,GAAG1G,IAAI,CAACY,KAAL,CAAWqF,WAAW,CAACjB,QAAQ,GAAGc,GAAZ,CAAtB,IAA0CU,MAArD;AAEAnH,EAAAA,WAAW,CAACN,MAAZ,CAAmB,OAAO1B,SAAS,CAACsJ,mBAApC,EACKvH,IADL,CACU,WADV,EACuB,eAAeqH,IAAf,GAAsB,GAAtB,GAA4BD,MAA5B,GAAqC,GAD5D;AAGAnH,EAAAA,WAAW,CAACN,MAAZ,CAAmB,OAAO1B,SAAS,CAACuJ,mBAApC,EACKxH,IADL,CACU,WADV,EACuB,eAAesH,IAAf,GAAsB,GAAtB,GAA4BF,MAA5B,GAAqC,GAD5D;AAEH;;AAED,SAASpE,MAAT,CAAgB/C,WAAhB,EAA6B7B,EAA7B,EAAiCa,QAAjC,EAA2CN,IAA3C,EAAiD;AAC7C,MAAI8I,EAAE,GAAGhK,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAAC0J,WAAhD,EAA6D,UAASC,CAAT,EAAY;AAC9EA,IAAAA,CAAC,CAAC5H,IAAF,CAAO;AACHuB,MAAAA,CAAC,EAAE,CADA;AAEHG,MAAAA,CAAC,EAAE,CAFA;AAGH,yBAAmB;AAHhB,KAAP;AAKH,GANQ,CAAT;AAQA,MAAImG,aAAa,GAAIlJ,IAAI,CAACmJ,WAAL,GAAmB,CAApB,KAA2B,CAA3B,GAChBnJ,IAAI,CAACmJ,WADW,GAEhBnJ,IAAI,CAACmJ,WAAL,GAAmB,CAFvB;AAIA,MAAIC,WAAW,GAAG,CAACpJ,IAAI,CAACqD,YAAxB;AACA,MAAIgG,EAAE,GAAGtK,OAAO,CAACuK,UAAR,CAAmB7J,EAAnB,EAAuBO,IAAI,CAACmJ,WAA5B,CAAT;AAEAL,EAAAA,EAAE,CAACzH,IAAH,CAAQ;AACJkI,IAAAA,KAAK,EAAEvJ,IAAI,CAAC0C,MAAL,GAAcwG,aADjB;AAEJM,IAAAA,MAAM,EAAExJ,IAAI,CAACmE,OAAL,GAAe+E,aAFnB;AAGJO,IAAAA,SAAS,EAAE,eAAeL,WAAf,GAA6B,GAA7B,GAAmCA,WAAnC,GAAiD,GAHxD;AAIJM,IAAAA,IAAI,EAAE1J,IAAI,CAAC2J,OAJP;AAKJC,IAAAA,MAAM,EAAE5J,IAAI,CAAC6J,WALT;AAMJ,oBAAgBR;AANZ,GAAR;AAQH;;AAED,SAAS/E,WAAT,CAAqBhD,WAArB,EAAkC7B,EAAlC,EAAsCa,QAAtC,EAAgDN,IAAhD,EAAsD;AAClD,MAAIN,UAAU,GAAGD,EAAE,CAACE,WAApB;AAEA,MAAImK,QAAQ,GAAGhL,GAAG,CAACiL,gBAAJ,CAAqBrK,UAAU,CAACqB,QAAhC,EAA0C,UAA1C,EAAsDf,IAAI,CAACE,OAA3D,EAAoE,UAAS+I,CAAT,EAAY;AAC3FA,IAAAA,CAAC,CAAC9H,MAAF,CAAS,MAAT,EAAiBE,IAAjB,CAAsB;AAAEuB,MAAAA,CAAC,EAAE,CAAL;AAAQG,MAAAA,CAAC,EAAE;AAAX,KAAtB;AACH,GAFc,CAAf;AAIA+G,EAAAA,QAAQ,CAAC9I,MAAT,CAAgB,MAAhB,EAAwBK,IAAxB,CAA6B;AACzBkI,IAAAA,KAAK,EAAEvJ,IAAI,CAAC0C,MADa;AAEzB8G,IAAAA,MAAM,EAAExJ,IAAI,CAACmE;AAFY,GAA7B;AAIH;;AAED,SAASI,aAAT,CAAuBjD,WAAvB,EAAoC7B,EAApC,EAAwCa,QAAxC,EAAkDN,IAAlD,EAAwD;AACpD,MAAIgK,QAAQ,GAAGvK,EAAE,CAACwK,QAAlB;AAEA,MAAIC,UAAU,GAAG5I,WAAW,CAACZ,SAAZ,CAAsB,OAAOpB,SAAS,CAAC6K,kBAAvC,EACZvJ,IADY,CACPN,QAAQ,CAAC8J,aADF,EACiBtL,GAAG,CAACuL,QADrB,CAAjB;AAGAH,EAAAA,UAAU,CAAChJ,KAAX,GAAmBC,MAAnB,CAA0B,GAA1B,EACKE,IADL,CACU,OADV,EACmB,UAASiJ,EAAT,EAAa;AAAE,WAAOhL,SAAS,CAAC6K,kBAAV,GAA+B,GAA/B,GAAqCG,EAA5C;AAAiD,GADnF,EAEKlG,IAFL,CAEUrF,OAAO,CAACwL,UAFlB,EAE8BvK,IAAI,CAACE,OAFnC,EAE4CT,EAF5C;AAIAyK,EAAAA,UAAU,CAACM,KAAX;AAEAN,EAAAA,UAAU,CAACrJ,IAAX,GAAkBI,MAAlB;AAEA,MAAIwJ,YAAJ;AAEAP,EAAAA,UAAU,CAACpJ,IAAX,CAAgB,UAASwJ,EAAT,EAAaxK,CAAb,EAAgB;AAC5B,QAAI4K,SAAS,GAAGhM,EAAE,CAACsC,MAAH,CAAU,IAAV,CAAhB;AACA,QAAI2J,UAAU,GAAI7K,CAAC,KAAK,CAAxB;AAEA,QAAIyB,WAAW,GAAGpC,OAAO,CAACyL,SAAR,CAAkBnL,EAAlB,EAAsB6K,EAAtB,EAA0B,GAA1B,CAAlB;AACA,QAAIO,WAAW,GAAGtJ,WAAW,CAAChB,KAA9B;AACA,QAAImB,gBAAgB,GAAG1B,IAAI,CAAC6K,WAAD,CAA3B;AAEA,QAAIC,UAAU,GAAG;AACblK,MAAAA,IAAI,EAAE,EADO;AAEbmK,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE3K,QAAQ,CAAC2K,IADZ;AAEHxI,UAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFL;AAGHd,UAAAA,KAAK,EAAE3B,IAAI,CAAC2B,KAAL,CAAWuJ,KAAX,EAHJ;AAIHC,UAAAA,QAAQ,EAAE7K,QAAQ,CAAC6K;AAJhB,SADH;AAOJ5B,QAAAA,KAAK,EAAEvJ,IAAI,CAAC0C,MAPR;AAQJ8G,QAAAA,MAAM,EAAExJ,IAAI,CAACmE,OART;AASJiH,QAAAA,MAAM,EAAE;AAAEpI,UAAAA,CAAC,EAAE,CAAL;AAAQqI,UAAAA,CAAC,EAAE,CAAX;AAAcvI,UAAAA,CAAC,EAAE,CAAjB;AAAoBwI,UAAAA,CAAC,EAAE;AAAvB;AATJ,OAFK;AAabC,MAAAA,QAAQ,EAAE9L,EAAE,CAAC8L;AAbA,KAAjB;AAgBAT,IAAAA,UAAU,CAACC,MAAX,CAAkBF,WAAlB,IAAiC;AAC7BI,MAAAA,IAAI,EAAE1J,WAAW,CAAC0J,IADW;AAE7BxI,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFqB;AAG7Bd,MAAAA,KAAK,EAAED,gBAAgB,CAACoC,SAAjB,KAA+B,OAA/B,GAAyCpC,gBAAgB,CAACC,KAAjB,CAAuBuJ,KAAvB,EAAzC,GAA0E3J,WAAW,CAACI,KAAZ,CAAkBuJ,KAAlB,EAHpD;AAI7BC,MAAAA,QAAQ,EAAE5J,WAAW,CAAC4J;AAJO,KAAjC;AAOAtM,IAAAA,KAAK,CAAC2M,cAAN,CAAqBV,UAArB;AAEA,QAAIW,EAAE,GAAGX,UAAU,CAACnL,WAAX,CAAuBqL,KAAhC;AACA,QAAIU,EAAE,GAAGZ,UAAU,CAACnL,WAAX,CAAuBkL,WAAvB,CAAT;AAEAY,IAAAA,EAAE,CAACE,SAAH;AACAF,IAAAA,EAAE,CAACG,QAAH;AACAF,IAAAA,EAAE,CAACC,SAAH;AACAD,IAAAA,EAAE,CAACE,QAAH;AAEA,QAAIC,QAAQ,GAAG;AACXvB,MAAAA,EAAE,EAAEA,EADO;AAEXI,MAAAA,SAAS,EAAEA,SAFA;AAGXM,MAAAA,KAAK,EAAES,EAHI;AAIXK,MAAAA,KAAK,EAAEJ,EAJI;AAKXK,MAAAA,WAAW,EAAE;AALF,KAAf;AAQA,QAAGpB,UAAH,EAAeF,YAAY,GAAGoB,QAAf,CAAf,KACK;AACDA,MAAAA,QAAQ,CAACG,QAAT,GAAoB,IAApB;AACAH,MAAAA,QAAQ,CAACpB,YAAT,GAAwBA,YAAxB;AACH;AAEDvL,IAAAA,SAAS,CAAC+M,SAAV,CAAoBxM,EAApB,EAAwBoM,QAAxB,EAAkCK,uBAAuB,CAAClC,QAAD,EAAWM,EAAX,CAAzD;AACH,GAxDD;AAyDH;;AAED,SAAS4B,uBAAT,CAAiClC,QAAjC,EAA2CmC,SAA3C,EAAsD;AAClD,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAI,IAAItM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGkK,QAAQ,CAACjK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,QAAIuM,SAAS,GAAGrC,QAAQ,CAAClK,CAAD,CAAxB;AACA,QAAIwM,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAzB;;AAEA,QAAGA,KAAK,CAACtB,KAAN,GAAcsB,KAAK,CAACR,KAApB,KAA8BK,SAAjC,EAA4C;AACxCC,MAAAA,GAAG,CAACG,IAAJ,CAASF,SAAT;AACH;AACJ;;AAED,SAAOD,GAAP;AACH;;AAED,SAAS5H,SAAT,CAAmBlD,WAAnB,EAAgC7B,EAAhC,EAAoCa,QAApC,EAA8CN,IAA9C,EAAoD0B,gBAApD,EAAsE;AAClE,MAAI8K,OAAO,GAAG1N,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAAC6I,gBAAhD,EAAkE,UAASc,CAAT,EAAY;AACxFA,IAAAA,CAAC,CAAC5H,IAAF,CAAO;AACHuB,MAAAA,CAAC,EAAE,CADA;AAEHG,MAAAA,CAAC,EAAE,CAFA;AAGH,yBAAmB;AAHhB,KAAP;AAKH,GANa,CAAd;AAQAyJ,EAAAA,OAAO,CACFnL,IADL,CACU,QADV,EACoBrB,IAAI,CAACmE,OADzB,EAEKC,IAFL,CAEUpF,KAAK,CAAC0K,IAFhB,EAEsBpK,SAAS,CAACmN,SAFhC;AAIA,MAAIC,OAAO,GAAG5N,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAAC8I,gBAAhD,EAAkE,UAASa,CAAT,EAAY;AACxFA,IAAAA,CAAC,CAAC5H,IAAF,CAAO;AACH0B,MAAAA,CAAC,EAAE,CADA;AAEH,yBAAmB;AAFhB,KAAP;AAIH,GALa,CAAd;AAOA2J,EAAAA,OAAO,CACFrL,IADL,CACU,QADV,EACoBrB,IAAI,CAACmE,OADzB,EAEKC,IAFL,CAEUpF,KAAK,CAAC0K,IAFhB,EAEsBpK,SAAS,CAACmN,SAFhC,EApBkE,CAwBlE;;AACA,MAAG/K,gBAAgB,CAACoC,SAAjB,KAA+B,OAAlC,EAA2C;AACvC,QAAI6I,cAAc,GAAG7N,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAACiJ,uBAAhD,EAAyE,UAASU,CAAT,EAAY;AACtGA,MAAAA,CAAC,CAAC5H,IAAF,CAAO;AACH0B,QAAAA,CAAC,EAAE,CADA;AAEH,2BAAmB;AAFhB,OAAP;AAIH,KALoB,CAArB;AAOA4J,IAAAA,cAAc,CACTtL,IADL,CACU,OADV,EACmBrB,IAAI,CAAC0C,MADxB,EAEK0B,IAFL,CAEUpF,KAAK,CAAC0K,IAFhB,EAEsBpK,SAAS,CAACsN,gBAFhC;AAIA,QAAIC,cAAc,GAAG/N,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAACkJ,uBAAhD,EAAyE,UAASS,CAAT,EAAY;AACtGA,MAAAA,CAAC,CAAC5H,IAAF,CAAO;AACH0B,QAAAA,CAAC,EAAE,CADA;AAEH,2BAAmB;AAFhB,OAAP;AAIH,KALoB,CAArB;AAOA8J,IAAAA,cAAc,CACTxL,IADL,CACU,OADV,EACmBrB,IAAI,CAAC0C,MADxB,EAEKoK,KAFL,CAEW,YAFX,EAEyBxN,SAAS,CAACyN,aAFnC,EAGK3I,IAHL,CAGUpF,KAAK,CAAC0K,IAHhB,EAGsBpK,SAAS,CAACsN,gBAHhC;AAIH;AACJ;;AAED,SAASnI,YAAT,CAAsBnD,WAAtB,EAAmC7B,EAAnC,EAAuCa,QAAvC,EAAiDN,IAAjD,EAAuD;AACnD,MAAGP,EAAE,CAAC8L,QAAH,CAAYyB,UAAf,EAA2B;AAE3B,MAAIxH,QAAQ,GAAG1G,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,MAA9B,EAAsChC,SAAS,CAACmG,iBAAhD,EAAmE,UAASwD,CAAT,EAAY;AAC1FA,IAAAA,CAAC,CAAC5H,IAAF,CAAO;AACH0B,MAAAA,CAAC,EAAE,CADA;AAEHmE,MAAAA,MAAM,EAAE5H,SAAS,CAAC2N,cAFf;AAGH,yBAAmB;AAHhB,KAAP;AAKH,GANc,CAAf;AAQAzH,EAAAA,QAAQ,CAACnE,IAAT,CAAc;AACVmI,IAAAA,MAAM,EAAExJ,IAAI,CAACmE,OADH;AAEVuF,IAAAA,IAAI,EAAEpK,SAAS,CAAC4N;AAFN,GAAd;AAIH;;AAED,SAASxI,YAAT,CAAsBpD,WAAtB,EAAmC7B,EAAnC,EAAuCa,QAAvC,EAAiDN,IAAjD,EAAuD;AACnD;AACA,MAAImN,UAAU,GAAGrO,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,GAA9B,EAAmChC,SAAS,CAACsJ,mBAA7C,CAAjB;AACA,MAAIwE,UAAU,GAAGtO,GAAG,CAACiK,YAAJ,CAAiBzH,WAAjB,EAA8B,GAA9B,EAAmChC,SAAS,CAACuJ,mBAA7C,CAAjB,CAHmD,CAKnD;;AACA,MAAIwE,cAAc,GAAG;AACjBzK,IAAAA,CAAC,EAAE,CADc;AAEjB2G,IAAAA,KAAK,EAAEjK,SAAS,CAAC0I,WAFA;AAGjBsF,IAAAA,EAAE,EAAEhO,SAAS,CAACiO,YAHG;AAIjB7D,IAAAA,IAAI,EAAE1K,KAAK,CAACwO,UAJK;AAKjB5D,IAAAA,MAAM,EAAE5K,KAAK,CAACyO,WALG;AAMjB,oBAAgBnO,SAAS,CAACoO,iBANT;AAOjB,uBAAmB;AAPF,GAArB;AASA,MAAIC,kBAAkB,GAAG;AACrB5K,IAAAA,CAAC,EAAEd,IAAI,CAACY,KAAL,CAAW7C,IAAI,CAACmE,OAAL,GAAe,CAA1B,CADkB;AAErBqF,IAAAA,MAAM,EAAEvH,IAAI,CAACY,KAAL,CAAW7C,IAAI,CAACmE,OAAL,GAAe,CAA1B;AAFa,GAAzB;AAIA,MAAIyJ,SAAS,GAAG9O,GAAG,CAACiK,YAAJ,CAAiBoE,UAAjB,EAA6B,MAA7B,EAAqC7N,SAAS,CAACuO,kBAA/C,EAAmE,UAAS5E,CAAT,EAAY;AAC3FA,IAAAA,CAAC,CAAC5H,IAAF,CAAOgM,cAAP;AACH,GAFe,CAAhB;AAGAO,EAAAA,SAAS,CAACvM,IAAV,CAAesM,kBAAf;AAEA,MAAIG,SAAS,GAAGhP,GAAG,CAACiK,YAAJ,CAAiBqE,UAAjB,EAA6B,MAA7B,EAAqC9N,SAAS,CAACyO,kBAA/C,EAAmE,UAAS9E,CAAT,EAAY;AAC3FA,IAAAA,CAAC,CAAC5H,IAAF,CAAOgM,cAAP;AACH,GAFe,CAAhB;AAGAS,EAAAA,SAAS,CAACzM,IAAV,CAAesM,kBAAf,EA3BmD,CA6BnD;;AACA,MAAGlO,EAAE,CAAC8L,QAAH,CAAYyB,UAAf,EAA2B;AAE3B,MAAIgB,gBAAgB,GAAG;AACnBzE,IAAAA,KAAK,EAAEjK,SAAS,CAAC2O,aADE;AAEnBrL,IAAAA,CAAC,EAAE,CAFgB;AAGnBG,IAAAA,CAAC,EAAE,CAHgB;AAInB2G,IAAAA,IAAI,EAAEpK,SAAS,CAAC4O,YAJG;AAKnBhH,IAAAA,MAAM,EAAE5H,SAAS,CAAC6O;AALC,GAAvB;AAQA,MAAIxI,WAAW,GAAG7G,GAAG,CAACiK,YAAJ,CAAiBoE,UAAjB,EAA6B,MAA7B,EAAqC7N,SAAS,CAACsG,oBAA/C,EAAqE,UAASqD,CAAT,EAAY;AAC/FA,IAAAA,CAAC,CAAC5H,IAAF,CAAO2M,gBAAP;AACH,GAFiB,CAAlB;AAGArI,EAAAA,WAAW,CAACtE,IAAZ,CAAiB,QAAjB,EAA2BrB,IAAI,CAACmE,OAAhC;AAEA,MAAI0B,WAAW,GAAG/G,GAAG,CAACiK,YAAJ,CAAiBqE,UAAjB,EAA6B,MAA7B,EAAqC9N,SAAS,CAACwG,oBAA/C,EAAqE,UAASmD,CAAT,EAAY;AAC/FA,IAAAA,CAAC,CAAC5H,IAAF,CAAO2M,gBAAP;AACH,GAFiB,CAAlB;AAGAnI,EAAAA,WAAW,CAACxE,IAAZ,CAAiB,QAAjB,EAA2BrB,IAAI,CAACmE,OAAhC;AACH","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\nvar Plots = require('../../plots/plots');\n\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar Titles = require('../titles');\n\nvar Cartesian = require('../../plots/cartesian');\nvar axisIDs = require('../../plots/cartesian/axis_ids');\n\nvar dragElement = require('../dragelement');\nvar setCursor = require('../../lib/setcursor');\n\nvar constants = require('./constants');\n\nmodule.exports = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var rangeSliderData = fullLayout._rangeSliderData;\n    for(var i = 0; i < rangeSliderData.length; i++) {\n        var opts = rangeSliderData[i][constants.name];\n        // fullLayout._uid may not exist when we call makeData\n        opts._clipId = opts._id + '-' + fullLayout._uid;\n    }\n\n    /*\n     * <g container />\n     *  <rect bg />\n     *  < .... range plot />\n     *  <rect mask-min />\n     *  <rect mask-max />\n     *  <rect slidebox />\n     *  <g grabber-min />\n     *      <rect handle-min />\n     *      <rect grabare-min />\n     *  <g grabber-max />\n     *      <rect handle-max />\n     *      <rect grabare-max />\n     *\n     *  ...\n     */\n\n    function keyFunction(axisOpts) {\n        return axisOpts._name;\n    }\n\n    var rangeSliders = fullLayout._infolayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(rangeSliderData, keyFunction);\n\n    // remove exiting sliders and their corresponding clip paths\n    rangeSliders.exit().each(function(axisOpts) {\n        var opts = axisOpts[constants.name];\n        fullLayout._topdefs.select('#' + opts._clipId).remove();\n    }).remove();\n\n    // return early if no range slider is visible\n    if(rangeSliderData.length === 0) return;\n\n    rangeSliders.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .attr('pointer-events', 'all');\n\n    // for all present range sliders\n    rangeSliders.each(function(axisOpts) {\n        var rangeSlider = d3.select(this);\n        var opts = axisOpts[constants.name];\n        var oppAxisOpts = fullLayout[axisIDs.id2name(axisOpts.anchor)];\n        var oppAxisRangeOpts = opts[axisIDs.id2name(axisOpts.anchor)];\n\n        // update range\n        // Expand slider range to the axis range\n        if(opts.range) {\n            var rng = Lib.simpleMap(opts.range, axisOpts.r2l);\n            var axRng = Lib.simpleMap(axisOpts.range, axisOpts.r2l);\n            var newRng;\n\n            if(axRng[0] < axRng[1]) {\n                newRng = [\n                    Math.min(rng[0], axRng[0]),\n                    Math.max(rng[1], axRng[1])\n                ];\n            } else {\n                newRng = [\n                    Math.max(rng[0], axRng[0]),\n                    Math.min(rng[1], axRng[1])\n                ];\n            }\n\n            opts.range = opts._input.range = Lib.simpleMap(newRng, axisOpts.l2r);\n        }\n\n        axisOpts.cleanRange('rangeslider.range');\n\n        // update range slider dimensions\n\n        var gs = fullLayout._size;\n        var domain = axisOpts.domain;\n\n        opts._width = gs.w * (domain[1] - domain[0]);\n\n        var x = Math.round(gs.l + (gs.w * domain[0]));\n\n        var y = Math.round(\n            gs.t + gs.h * (1 - axisOpts._counterDomainMin) +\n            (axisOpts.side === 'bottom' ? axisOpts._depth : 0) +\n            opts._offsetShift + constants.extraPad\n        );\n\n        rangeSlider.attr('transform', 'translate(' + x + ',' + y + ')');\n\n        // update data <--> pixel coordinate conversion methods\n\n        var range0 = axisOpts.r2l(opts.range[0]);\n        var range1 = axisOpts.r2l(opts.range[1]);\n        var dist = range1 - range0;\n\n        opts.p2d = function(v) {\n            return (v / opts._width) * dist + range0;\n        };\n\n        opts.d2p = function(v) {\n            return (v - range0) / dist * opts._width;\n        };\n\n        opts._rl = [range0, range1];\n\n        if(oppAxisRangeOpts.rangemode !== 'match') {\n            var range0OppAxis = oppAxisOpts.r2l(oppAxisRangeOpts.range[0]);\n            var range1OppAxis = oppAxisOpts.r2l(oppAxisRangeOpts.range[1]);\n            var distOppAxis = range1OppAxis - range0OppAxis;\n\n            opts.d2pOppAxis = function(v) {\n                return (v - range0OppAxis) / distOppAxis * opts._height;\n            };\n        }\n\n        // update inner nodes\n\n        rangeSlider\n            .call(drawBg, gd, axisOpts, opts)\n            .call(addClipPath, gd, axisOpts, opts)\n            .call(drawRangePlot, gd, axisOpts, opts)\n            .call(drawMasks, gd, axisOpts, opts, oppAxisRangeOpts)\n            .call(drawSlideBox, gd, axisOpts, opts)\n            .call(drawGrabbers, gd, axisOpts, opts);\n\n        // setup drag element\n        setupDragElement(rangeSlider, gd, axisOpts, opts);\n\n        // update current range\n        setPixelRange(rangeSlider, gd, axisOpts, opts, oppAxisOpts, oppAxisRangeOpts);\n\n        // title goes next to range slider instead of tick labels, so\n        // just take it over and draw it from here\n        if(axisOpts.side === 'bottom') {\n            Titles.draw(gd, axisOpts._id + 'title', {\n                propContainer: axisOpts,\n                propName: axisOpts._name + '.title',\n                placeholder: fullLayout._dfltTitle.x,\n                attributes: {\n                    x: axisOpts._offset + axisOpts._length / 2,\n                    y: y + opts._height + opts._offsetShift + 10 + 1.5 * axisOpts.title.font.size,\n                    'text-anchor': 'middle'\n                }\n            });\n        }\n    });\n};\n\nfunction setupDragElement(rangeSlider, gd, axisOpts, opts) {\n    var slideBox = rangeSlider.select('rect.' + constants.slideBoxClassName).node();\n    var grabAreaMin = rangeSlider.select('rect.' + constants.grabAreaMinClassName).node();\n    var grabAreaMax = rangeSlider.select('rect.' + constants.grabAreaMaxClassName).node();\n\n    rangeSlider.on('mousedown', function() {\n        var event = d3.event;\n        var target = event.target;\n        var startX = event.clientX;\n        var offsetX = startX - rangeSlider.node().getBoundingClientRect().left;\n        var minVal = opts.d2p(axisOpts._rl[0]);\n        var maxVal = opts.d2p(axisOpts._rl[1]);\n\n        var dragCover = dragElement.coverSlip();\n\n        dragCover.addEventListener('mousemove', mouseMove);\n        dragCover.addEventListener('mouseup', mouseUp);\n\n        function mouseMove(e) {\n            var delta = +e.clientX - startX;\n            var pixelMin, pixelMax, cursor;\n\n            switch(target) {\n                case slideBox:\n                    cursor = 'ew-resize';\n                    pixelMin = minVal + delta;\n                    pixelMax = maxVal + delta;\n                    break;\n\n                case grabAreaMin:\n                    cursor = 'col-resize';\n                    pixelMin = minVal + delta;\n                    pixelMax = maxVal;\n                    break;\n\n                case grabAreaMax:\n                    cursor = 'col-resize';\n                    pixelMin = minVal;\n                    pixelMax = maxVal + delta;\n                    break;\n\n                default:\n                    cursor = 'ew-resize';\n                    pixelMin = offsetX;\n                    pixelMax = offsetX + delta;\n                    break;\n            }\n\n            if(pixelMax < pixelMin) {\n                var tmp = pixelMax;\n                pixelMax = pixelMin;\n                pixelMin = tmp;\n            }\n\n            opts._pixelMin = pixelMin;\n            opts._pixelMax = pixelMax;\n\n            setCursor(d3.select(dragCover), cursor);\n            setDataRange(rangeSlider, gd, axisOpts, opts);\n        }\n\n        function mouseUp() {\n            dragCover.removeEventListener('mousemove', mouseMove);\n            dragCover.removeEventListener('mouseup', mouseUp);\n            Lib.removeElement(dragCover);\n        }\n    });\n}\n\nfunction setDataRange(rangeSlider, gd, axisOpts, opts) {\n    function clamp(v) {\n        return axisOpts.l2r(Lib.constrain(v, opts._rl[0], opts._rl[1]));\n    }\n\n    var dataMin = clamp(opts.p2d(opts._pixelMin));\n    var dataMax = clamp(opts.p2d(opts._pixelMax));\n\n    window.requestAnimationFrame(function() {\n        Registry.call('_guiRelayout', gd, axisOpts._name + '.range', [dataMin, dataMax]);\n    });\n}\n\nfunction setPixelRange(rangeSlider, gd, axisOpts, opts, oppAxisOpts, oppAxisRangeOpts) {\n    var hw2 = constants.handleWidth / 2;\n\n    function clamp(v) {\n        return Lib.constrain(v, 0, opts._width);\n    }\n\n    function clampOppAxis(v) {\n        return Lib.constrain(v, 0, opts._height);\n    }\n\n    function clampHandle(v) {\n        return Lib.constrain(v, -hw2, opts._width + hw2);\n    }\n\n    var pixelMin = clamp(opts.d2p(axisOpts._rl[0]));\n    var pixelMax = clamp(opts.d2p(axisOpts._rl[1]));\n\n    rangeSlider.select('rect.' + constants.slideBoxClassName)\n        .attr('x', pixelMin)\n        .attr('width', pixelMax - pixelMin);\n\n    rangeSlider.select('rect.' + constants.maskMinClassName)\n        .attr('width', pixelMin);\n\n    rangeSlider.select('rect.' + constants.maskMaxClassName)\n        .attr('x', pixelMax)\n        .attr('width', opts._width - pixelMax);\n\n    if(oppAxisRangeOpts.rangemode !== 'match') {\n        var pixelMinOppAxis = opts._height - clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[1]));\n        var pixelMaxOppAxis = opts._height - clampOppAxis(opts.d2pOppAxis(oppAxisOpts._rl[0]));\n\n        rangeSlider.select('rect.' + constants.maskMinOppAxisClassName)\n            .attr('x', pixelMin)\n            .attr('height', pixelMinOppAxis)\n            .attr('width', pixelMax - pixelMin);\n\n        rangeSlider.select('rect.' + constants.maskMaxOppAxisClassName)\n            .attr('x', pixelMin)\n            .attr('y', pixelMaxOppAxis)\n            .attr('height', opts._height - pixelMaxOppAxis)\n            .attr('width', pixelMax - pixelMin);\n\n        rangeSlider.select('rect.' + constants.slideBoxClassName)\n            .attr('y', pixelMinOppAxis)\n            .attr('height', pixelMaxOppAxis - pixelMinOppAxis);\n    }\n\n    // add offset for crispier corners\n    // https://github.com/plotly/plotly.js/pull/1409\n    var offset = 0.5;\n\n    var xMin = Math.round(clampHandle(pixelMin - hw2)) - offset;\n    var xMax = Math.round(clampHandle(pixelMax - hw2)) + offset;\n\n    rangeSlider.select('g.' + constants.grabberMinClassName)\n        .attr('transform', 'translate(' + xMin + ',' + offset + ')');\n\n    rangeSlider.select('g.' + constants.grabberMaxClassName)\n        .attr('transform', 'translate(' + xMax + ',' + offset + ')');\n}\n\nfunction drawBg(rangeSlider, gd, axisOpts, opts) {\n    var bg = Lib.ensureSingle(rangeSlider, 'rect', constants.bgClassName, function(s) {\n        s.attr({\n            x: 0,\n            y: 0,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    var borderCorrect = (opts.borderwidth % 2) === 0 ?\n        opts.borderwidth :\n        opts.borderwidth - 1;\n\n    var offsetShift = -opts._offsetShift;\n    var lw = Drawing.crispRound(gd, opts.borderwidth);\n\n    bg.attr({\n        width: opts._width + borderCorrect,\n        height: opts._height + borderCorrect,\n        transform: 'translate(' + offsetShift + ',' + offsetShift + ')',\n        fill: opts.bgcolor,\n        stroke: opts.bordercolor,\n        'stroke-width': lw\n    });\n}\n\nfunction addClipPath(rangeSlider, gd, axisOpts, opts) {\n    var fullLayout = gd._fullLayout;\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', opts._clipId, function(s) {\n        s.append('rect').attr({ x: 0, y: 0 });\n    });\n\n    clipPath.select('rect').attr({\n        width: opts._width,\n        height: opts._height\n    });\n}\n\nfunction drawRangePlot(rangeSlider, gd, axisOpts, opts) {\n    var calcData = gd.calcdata;\n\n    var rangePlots = rangeSlider.selectAll('g.' + constants.rangePlotClassName)\n        .data(axisOpts._subplotsWith, Lib.identity);\n\n    rangePlots.enter().append('g')\n        .attr('class', function(id) { return constants.rangePlotClassName + ' ' + id; })\n        .call(Drawing.setClipUrl, opts._clipId, gd);\n\n    rangePlots.order();\n\n    rangePlots.exit().remove();\n\n    var mainplotinfo;\n\n    rangePlots.each(function(id, i) {\n        var plotgroup = d3.select(this);\n        var isMainPlot = (i === 0);\n\n        var oppAxisOpts = axisIDs.getFromId(gd, id, 'y');\n        var oppAxisName = oppAxisOpts._name;\n        var oppAxisRangeOpts = opts[oppAxisName];\n\n        var mockFigure = {\n            data: [],\n            layout: {\n                xaxis: {\n                    type: axisOpts.type,\n                    domain: [0, 1],\n                    range: opts.range.slice(),\n                    calendar: axisOpts.calendar\n                },\n                width: opts._width,\n                height: opts._height,\n                margin: { t: 0, b: 0, l: 0, r: 0 }\n            },\n            _context: gd._context\n        };\n\n        mockFigure.layout[oppAxisName] = {\n            type: oppAxisOpts.type,\n            domain: [0, 1],\n            range: oppAxisRangeOpts.rangemode !== 'match' ? oppAxisRangeOpts.range.slice() : oppAxisOpts.range.slice(),\n            calendar: oppAxisOpts.calendar\n        };\n\n        Plots.supplyDefaults(mockFigure);\n\n        var xa = mockFigure._fullLayout.xaxis;\n        var ya = mockFigure._fullLayout[oppAxisName];\n\n        xa.clearCalc();\n        xa.setScale();\n        ya.clearCalc();\n        ya.setScale();\n\n        var plotinfo = {\n            id: id,\n            plotgroup: plotgroup,\n            xaxis: xa,\n            yaxis: ya,\n            isRangePlot: true\n        };\n\n        if(isMainPlot) mainplotinfo = plotinfo;\n        else {\n            plotinfo.mainplot = 'xy';\n            plotinfo.mainplotinfo = mainplotinfo;\n        }\n\n        Cartesian.rangePlot(gd, plotinfo, filterRangePlotCalcData(calcData, id));\n    });\n}\n\nfunction filterRangePlotCalcData(calcData, subplotId) {\n    var out = [];\n\n    for(var i = 0; i < calcData.length; i++) {\n        var calcTrace = calcData[i];\n        var trace = calcTrace[0].trace;\n\n        if(trace.xaxis + trace.yaxis === subplotId) {\n            out.push(calcTrace);\n        }\n    }\n\n    return out;\n}\n\nfunction drawMasks(rangeSlider, gd, axisOpts, opts, oppAxisRangeOpts) {\n    var maskMin = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMinClassName, function(s) {\n        s.attr({\n            x: 0,\n            y: 0,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    maskMin\n        .attr('height', opts._height)\n        .call(Color.fill, constants.maskColor);\n\n    var maskMax = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMaxClassName, function(s) {\n        s.attr({\n            y: 0,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    maskMax\n        .attr('height', opts._height)\n        .call(Color.fill, constants.maskColor);\n\n    // masks used for oppAxis zoom\n    if(oppAxisRangeOpts.rangemode !== 'match') {\n        var maskMinOppAxis = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMinOppAxisClassName, function(s) {\n            s.attr({\n                y: 0,\n                'shape-rendering': 'crispEdges'\n            });\n        });\n\n        maskMinOppAxis\n            .attr('width', opts._width)\n            .call(Color.fill, constants.maskOppAxisColor);\n\n        var maskMaxOppAxis = Lib.ensureSingle(rangeSlider, 'rect', constants.maskMaxOppAxisClassName, function(s) {\n            s.attr({\n                y: 0,\n                'shape-rendering': 'crispEdges'\n            });\n        });\n\n        maskMaxOppAxis\n            .attr('width', opts._width)\n            .style('border-top', constants.maskOppBorder)\n            .call(Color.fill, constants.maskOppAxisColor);\n    }\n}\n\nfunction drawSlideBox(rangeSlider, gd, axisOpts, opts) {\n    if(gd._context.staticPlot) return;\n\n    var slideBox = Lib.ensureSingle(rangeSlider, 'rect', constants.slideBoxClassName, function(s) {\n        s.attr({\n            y: 0,\n            cursor: constants.slideBoxCursor,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    slideBox.attr({\n        height: opts._height,\n        fill: constants.slideBoxFill\n    });\n}\n\nfunction drawGrabbers(rangeSlider, gd, axisOpts, opts) {\n    // <g grabber />\n    var grabberMin = Lib.ensureSingle(rangeSlider, 'g', constants.grabberMinClassName);\n    var grabberMax = Lib.ensureSingle(rangeSlider, 'g', constants.grabberMaxClassName);\n\n    // <g handle />\n    var handleFixAttrs = {\n        x: 0,\n        width: constants.handleWidth,\n        rx: constants.handleRadius,\n        fill: Color.background,\n        stroke: Color.defaultLine,\n        'stroke-width': constants.handleStrokeWidth,\n        'shape-rendering': 'crispEdges'\n    };\n    var handleDynamicAttrs = {\n        y: Math.round(opts._height / 4),\n        height: Math.round(opts._height / 2),\n    };\n    var handleMin = Lib.ensureSingle(grabberMin, 'rect', constants.handleMinClassName, function(s) {\n        s.attr(handleFixAttrs);\n    });\n    handleMin.attr(handleDynamicAttrs);\n\n    var handleMax = Lib.ensureSingle(grabberMax, 'rect', constants.handleMaxClassName, function(s) {\n        s.attr(handleFixAttrs);\n    });\n    handleMax.attr(handleDynamicAttrs);\n\n    // <g grabarea />\n    if(gd._context.staticPlot) return;\n\n    var grabAreaFixAttrs = {\n        width: constants.grabAreaWidth,\n        x: 0,\n        y: 0,\n        fill: constants.grabAreaFill,\n        cursor: constants.grabAreaCursor\n    };\n\n    var grabAreaMin = Lib.ensureSingle(grabberMin, 'rect', constants.grabAreaMinClassName, function(s) {\n        s.attr(grabAreaFixAttrs);\n    });\n    grabAreaMin.attr('height', opts._height);\n\n    var grabAreaMax = Lib.ensureSingle(grabberMax, 'rect', constants.grabAreaMaxClassName, function(s) {\n        s.attr(grabAreaFixAttrs);\n    });\n    grabAreaMax.attr('height', opts._height);\n}\n"]},"metadata":{},"sourceType":"script"}
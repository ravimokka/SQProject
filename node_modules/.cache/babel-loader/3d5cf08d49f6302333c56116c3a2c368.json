{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from 'react';\nimport { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\n\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [{\n  label: 'Amount_USD.',\n  Actual: 2800,\n  Budget: 100\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'fold',\n  fields: ['series1', 'series2'],\n  key: 'type',\n  value: 'value'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Coord, {\n      type: \"rect\",\n      direction: \"LT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"value\",\n      position: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"label\",\n      label: {\n        offset: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"label*value\",\n      color: \"type\",\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Chart","Tooltip","Axis","Bar","Coord","Legend","DataSet","require","sourceData","label","Actual","Budget","dv","View","source","transform","type","fields","key","value","data","rows","Reactjs","render","offset","marginRatio"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,MAA3C,QAAyD,aAAzD;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,MAAM,EAAE,IAAhC;AAAsCC,EAAAA,MAAM,EAAE;AAA9C,CADiB,CAAnB;AAKA,MAAMC,EAAE,GAAG,IAAIN,OAAO,CAACO,IAAZ,GAAmBC,MAAnB,CAA0BN,UAA1B,CAAX;AACAI,EAAE,CAACG,SAAH,CAAa;AACXC,EAAAA,IAAI,EAAE,MADK;AAEXC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFG;AAGXC,EAAAA,GAAG,EAAE,MAHM;AAIXC,EAAAA,KAAK,EAAE;AAJI,CAAb;AAMA,MAAMC,IAAI,GAAGR,EAAE,CAACS,IAAhB;;AAEA,MAAMC,OAAN,SAAsBxB,KAAK,CAACC,SAA5B,CAAsC;AACpCwB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAEH,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAsB,MAAA,QAAQ,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAyC,MAAA,MAAM,EAAE,CAAC;AAAER,QAAAA,IAAI,EAAE,OAAR;AAAiBS,QAAAA,WAAW,EAAE,IAAI;AAAlC,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAZmC;;AAiBtC,eAAeH,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\n\nimport { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { label: 'Amount_USD.', Actual: 2800, Budget: 100 },\n\n];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'fold',\n  fields: ['series1', 'series2'],\n  key: 'type',\n  value: 'value',\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400} data={data}>\n        <Coord type=\"rect\" direction=\"LT\" />\n        <Tooltip />\n        <Legend />\n        <Axis dataKey=\"value\" position=\"right\" />\n        <Axis dataKey=\"label\" label={{ offset: 12 }} />\n        <Bar position=\"label*value\" color=\"type\" adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n    );\n  }\n}\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
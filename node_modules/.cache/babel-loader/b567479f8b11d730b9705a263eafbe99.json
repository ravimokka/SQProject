{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Line, Point } from 'viser-react';\nimport * as React from 'react';\nconst data = [{\n  year: '1991',\n  value: 30000000\n}, {\n  year: '1992',\n  value: 4\n}, {\n  year: '1993',\n  value: 3.5\n}, {\n  year: '1994',\n  value: 5\n}, {\n  year: '1995',\n  value: 4.9\n}, {\n  year: '1996',\n  value: 6\n}, {\n  year: '1997',\n  value: 7\n}, {\n  year: '1998',\n  value: 9\n}, {\n  year: '1999',\n  value: 13\n}];\nconst scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n    if (val < 100000) {\n      return Math.round(val / 1000 * 10) / 10 + 'k';\n    } else if (val >= 1000000) {\n      return val = val / 1000000 + \"M\";\n    } else if (val >= 10000000) {\n      return val = val / 10000000 + \"B\";\n    } else {\n      return val;\n    }\n  }\n}, {\n  dataKey: 'year',\n  min: 0,\n  max: 1\n}];\n\nclass Reactjs extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"year*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"year*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Line","Point","React","data","year","value","scale","dataKey","min","formatter","val","Math","round","max","Reactjs","Component","render"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,aAAlD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAJW,EAKX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALW,EAMX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CANW,EAOX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAPW,EAQX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CARW,EASX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CATW,CAAb;AAYA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE,OADI;AAEbC,EAAAA,GAAG,EAAE,CAFQ;AAGbC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACxB,QAAIA,GAAG,GAAG,MAAV,EAAkB;AACK,aAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,KAFpB,MAGgB,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,aAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,KAJI,MAKA,IAAIA,GAAG,IAAI,QAAX,EAAoB;AAEzB,aAAOA,GAAG,GAAEA,GAAG,GAAC,QAAL,GAAe,GAA1B;AAEC,KAJI,MAKC;AACM,aAAOA,GAAP;AACH;AACxB;AApBM,CAAD,EAqBZ;AACAH,EAAAA,OAAO,EAAE,MADT;AAEAC,EAAAA,GAAG,EAAE,CAFL;AAGAK,EAAAA,GAAG,EAAE;AAHL,CArBY,CAAd;;AA2BA,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAEb,IAAnC;AAAyC,MAAA,KAAK,EAAEG,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,YAAhB;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAVmC;;AAYtC,eAAeQ,OAAf","sourcesContent":["import { Chart, Tooltip, Axis, Line, Point } from 'viser-react';\nimport * as React from 'react';\n\nconst data = [\n  { year: '1991', value: 30000000 },\n  { year: '1992', value: 4 },\n  { year: '1993', value: 3.5 },\n  { year: '1994', value: 5 },\n  { year: '1995', value: 4.9 },\n  { year: '1996', value: 6 },\n  { year: '1997', value: 7 },\n  { year: '1998', value: 9 },\n  { year: '1999', value: 13 },\n];\n\nconst scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass Reactjs extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400} data={data} scale={scale}>\n        <Tooltip />\n        <Axis />\n        <Line position=\"year*value\" />\n        <Point position=\"year*value\" shape=\"circle\"/>\n      </Chart>\n    );\n  }\n}\nexport default Reactjs"]},"metadata":{},"sourceType":"module"}
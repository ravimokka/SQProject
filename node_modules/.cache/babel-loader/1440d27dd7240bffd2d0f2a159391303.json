{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as _ from 'lodash';\nimport * as setAxisConfig from '../components/setAxisConfig';\nimport * as setCoordConfig from '../components/setCoordConfig';\nimport * as setFilterConfig from '../components/setFilterConfig';\nimport * as setGuideConfig from '../components/setGuideConfig';\nimport * as setLegendConfig from '../components/setLegendConfig';\nimport * as setScaleConfig from '../components/setScaleConfig';\nimport * as setSeriesConfig from '../components/setSeriesConfig';\nimport * as setTooltipConfig from '../components/setTooltipConfig';\nimport loadShapes from '../shapes/loadShapes';\nimport * as EventUtils from '../utils/EventUtils';\n\nvar G2 = require('@antv/g2');\n\nvar Brush = require('@antv/g2-brush');\n\nfunction firstUpperCase(str) {\n  return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {\n    return L.toUpperCase();\n  });\n}\n\nvar CommonChart = function () {\n  function CommonChart(config) {\n    this.viewInstance = {};\n    this.config = _.cloneDeep(config);\n    this.checkChartConfig(this.config);\n    this.chartInstance = new G2.Chart(this.config.chart);\n  }\n\n  CommonChart.prototype.getWidth = function () {\n    return this.chartInstance.get('width');\n  };\n\n  CommonChart.prototype.getHeight = function () {\n    return this.chartInstance.get('height');\n  };\n\n  CommonChart.prototype.render = function () {\n    var config = this.config;\n    var chart = this.chartInstance;\n    loadShapes();\n    this.setEvents(chart, config);\n    this.setDataSource(chart, config.data);\n    this.setCoord(chart, config);\n    this.setTooltip(chart, config);\n    this.setAxis(chart, config);\n    this.setContent(chart, config);\n    this.setLegend(chart, config);\n    this.setViews(chart, config);\n    this.setFacet(chart, config);\n    chart.render();\n    this.setDefaultTooltip(chart, config);\n    this.setBrush(chart, config);\n  };\n\n  CommonChart.prototype.repaint = function (config) {\n    var newConfig = _.cloneDeep(config);\n\n    this.checkChartConfig(newConfig);\n    this.renderDiffConfig(newConfig);\n  };\n\n  CommonChart.prototype.destroy = function (chart) {\n    if (chart) {\n      chart.destroy();\n    }\n  };\n\n  CommonChart.prototype.clear = function (chart) {\n    if (chart) {\n      chart.clear();\n    }\n  };\n\n  CommonChart.prototype.checkChartConfig = function (config) {\n    var chart = config.chart;\n\n    if (!chart || !chart.height) {\n      throw new Error('please set correct chart option');\n    }\n  };\n\n  CommonChart.prototype.createView = function (chart, config) {\n    var opts = {};\n\n    if (config.start) {\n      opts.start = config.start;\n    }\n\n    if (config.end) {\n      opts.end = config.end;\n    }\n\n    var view = chart.view(opts);\n\n    if (!config.viewId) {\n      throw new Error('you must set viewId');\n    }\n\n    this.viewInstance[config.viewId] = view;\n    return view;\n  };\n\n  CommonChart.prototype.setEvents = function (chart, config) {\n    EventUtils.setEvent(chart, '', config.chart);\n  };\n\n  CommonChart.prototype.setDataSource = function (chart, data) {\n    if (!_.isNil(data) && !_.isEmpty(data)) {\n      chart.source(data);\n    }\n  };\n\n  CommonChart.prototype.setFilter = function (chart, config) {\n    return setFilterConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setScale = function (chart, config) {\n    return setScaleConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setCoord = function (chart, config) {\n    return setCoordConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setSeries = function (chart, config) {\n    return setSeriesConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setAxis = function (chart, config) {\n    return setAxisConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setTooltip = function (chart, config) {\n    return setTooltipConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setDefaultTooltip = function (chart, config) {\n    return setTooltipConfig.setDefaultPoint(chart, config);\n  };\n\n  CommonChart.prototype.setGuide = function (chart, config) {\n    return setGuideConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setLegend = function (chart, config) {\n    return setLegendConfig.process(chart, config);\n  };\n\n  CommonChart.prototype.setContent = function (chart, config) {\n    this.setScale(chart, config);\n    this.setFilter(chart, config);\n    this.setSeries(chart, config);\n    this.setGuide(chart, config);\n  };\n\n  CommonChart.prototype.setView = function (item, chart, config) {\n    var view = this.createView(chart, item);\n    var viewData = item.data ? item.data : config.data;\n    this.setDataSource(view, viewData);\n\n    if (!_.isNil(item.coord)) {\n      this.setCoord(view, item);\n    }\n\n    if (!_.isNil(item.tooltip)) {\n      this.setTooltip(view, item);\n    }\n\n    if (!_.isNil(item.axis)) {\n      this.setAxis(view, item);\n    }\n\n    if (!_.isNil(item.guide)) {\n      this.setGuide(view, item);\n    }\n\n    this.setContent(view, item);\n    return view;\n  };\n\n  CommonChart.prototype.setViews = function (chart, config) {\n    var cViews = _.cloneDeep(config.views);\n\n    var isArr = Array.isArray(cViews);\n\n    if (_.isNil(cViews) || _.isEmpty(cViews)) {\n      return;\n    }\n\n    var arrViews = isArr ? cViews : [cViews];\n\n    for (var _i = 0, arrViews_1 = arrViews; _i < arrViews_1.length; _i++) {\n      var item = arrViews_1[_i];\n      this.setView(item, chart, config);\n    }\n  };\n\n  CommonChart.prototype.setFacetViews = function (chart, facet, views) {\n    this.setDataSource(chart, views.data);\n\n    if (!_.isNil(views.coord)) {\n      this.setCoord(chart, views);\n    }\n\n    if (!_.isNil(views.tooltip)) {\n      this.setTooltip(chart, views);\n    }\n\n    if (!_.isNil(views.axis)) {\n      this.setAxis(chart, views);\n    }\n\n    if (!_.isNil(views.guide)) {\n      this.setGuide(chart, views);\n    }\n\n    this.setContent(chart, views);\n  };\n\n  CommonChart.prototype.setFacet = function (chart, config) {\n    var _this = this;\n\n    var cFacet = _.cloneDeep(config.facet);\n\n    if (_.isNil(cFacet) || _.isEmpty(cFacet)) {\n      return;\n    }\n\n    var options = _.omit(cFacet, ['type', 'views']);\n\n    if (_.isEmpty(cFacet.views) && !_.isFunction(cFacet.views)) {\n      return chart.facet(cFacet.type, options);\n    }\n\n    if (_.isFunction(cFacet.views)) {\n      options.eachView = function (v, f) {\n        _this.setFacetViews(v, f, cFacet.views(v, f));\n      };\n    } else {\n      cFacet.views = Array.isArray(cFacet.views) ? cFacet.views : [cFacet.views];\n\n      options.eachView = function (v, f) {\n        _this.setFacetViews(v, f, cFacet.views[0]);\n      };\n    }\n\n    return chart.facet(cFacet.type, options);\n  };\n\n  CommonChart.prototype.setBrush = function (chart, config) {\n    if (_.isNil(config.brush) || _.isEmpty(config.brush)) {\n      return;\n    }\n\n    var brush = config.brush;\n\n    var brushConfig = __assign({}, config.brush, {\n      canvas: chart.get('canvas'),\n      chart: chart\n    });\n\n    var regEvents = /on(BrushStart|BrushMove|BrushEnd|DragStart|DragMove|DragEnd)/;\n    var events = Object.keys(brush).filter(function (entry) {\n      return regEvents.test(entry);\n    });\n    events.forEach(function (entry) {\n      var item = regEvents.exec(entry);\n\n      if (item && item.length) {\n        var oriEventName = 'on' + firstUpperCase(item[0]);\n\n        brushConfig[oriEventName] = function (ev) {\n          brush[entry](ev, chart);\n        };\n      }\n    });\n    new Brush(brushConfig);\n  };\n\n  CommonChart.prototype.repaintWidthHeight = function (chart, config) {\n    var width = _.get(config, 'chart.width');\n\n    if (width) {\n      chart.changeWidth(width);\n    }\n\n    var height = _.get(config, 'chart.height');\n\n    if (height) {\n      chart.changeHeight(height);\n    }\n  };\n\n  CommonChart.prototype.renderDiffConfig = function (config) {\n    var chart = this.chartInstance;\n    this.clear(chart);\n    this.setScale(chart, config);\n    this.setCoord(chart, config);\n    this.setAxis(chart, config);\n    this.setSeries(chart, config);\n    this.setTooltip(chart, config);\n    this.setGuide(chart, config);\n    this.setViews(chart, config);\n    this.setLegend(chart, config);\n    this.setFacet(chart, config);\n    this.repaintWidthHeight(chart, config);\n\n    if (config.data) {\n      chart.changeData(config.data);\n    }\n\n    chart.repaint();\n    this.setBrush(chart, config);\n  };\n\n  return CommonChart;\n}();\n\nexport default CommonChart;","map":{"version":3,"sources":["../../src/core/CommonChart.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as _ from 'lodash';\nimport * as setAxisConfig from '../components/setAxisConfig';\nimport * as setCoordConfig from '../components/setCoordConfig';\nimport * as setFilterConfig from '../components/setFilterConfig';\nimport * as setGuideConfig from '../components/setGuideConfig';\nimport * as setLegendConfig from '../components/setLegendConfig';\nimport * as setScaleConfig from '../components/setScaleConfig';\nimport * as setSeriesConfig from '../components/setSeriesConfig';\nimport * as setTooltipConfig from '../components/setTooltipConfig';\nimport loadShapes from '../shapes/loadShapes';\nimport * as EventUtils from '../utils/EventUtils';\nvar G2 = require('@antv/g2');\nvar Brush = require('@antv/g2-brush');\nfunction firstUpperCase(str) {\n    return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) { return L.toUpperCase(); });\n}\nvar CommonChart = (function () {\n    function CommonChart(config) {\n        this.viewInstance = {};\n        this.config = _.cloneDeep(config);\n        this.checkChartConfig(this.config);\n        this.chartInstance = new G2.Chart(this.config.chart);\n    }\n    CommonChart.prototype.getWidth = function () {\n        return this.chartInstance.get('width');\n    };\n    CommonChart.prototype.getHeight = function () {\n        return this.chartInstance.get('height');\n    };\n    CommonChart.prototype.render = function () {\n        var config = this.config;\n        var chart = this.chartInstance;\n        loadShapes();\n        this.setEvents(chart, config);\n        this.setDataSource(chart, config.data);\n        this.setCoord(chart, config);\n        this.setTooltip(chart, config);\n        this.setAxis(chart, config);\n        this.setContent(chart, config);\n        this.setLegend(chart, config);\n        this.setViews(chart, config);\n        this.setFacet(chart, config);\n        chart.render();\n        this.setDefaultTooltip(chart, config);\n        this.setBrush(chart, config);\n    };\n    CommonChart.prototype.repaint = function (config) {\n        var newConfig = _.cloneDeep(config);\n        this.checkChartConfig(newConfig);\n        this.renderDiffConfig(newConfig);\n    };\n    CommonChart.prototype.destroy = function (chart) {\n        if (chart) {\n            chart.destroy();\n        }\n    };\n    CommonChart.prototype.clear = function (chart) {\n        if (chart) {\n            chart.clear();\n        }\n    };\n    CommonChart.prototype.checkChartConfig = function (config) {\n        var chart = config.chart;\n        if (!chart || !chart.height) {\n            throw new Error('please set correct chart option');\n        }\n    };\n    CommonChart.prototype.createView = function (chart, config) {\n        var opts = {};\n        if (config.start) {\n            opts.start = config.start;\n        }\n        if (config.end) {\n            opts.end = config.end;\n        }\n        var view = chart.view(opts);\n        if (!config.viewId) {\n            throw new Error('you must set viewId');\n        }\n        this.viewInstance[config.viewId] = view;\n        return view;\n    };\n    CommonChart.prototype.setEvents = function (chart, config) {\n        EventUtils.setEvent(chart, '', config.chart);\n    };\n    CommonChart.prototype.setDataSource = function (chart, data) {\n        if (!_.isNil(data) && !_.isEmpty(data)) {\n            chart.source(data);\n        }\n    };\n    CommonChart.prototype.setFilter = function (chart, config) {\n        return setFilterConfig.process(chart, config);\n    };\n    CommonChart.prototype.setScale = function (chart, config) {\n        return setScaleConfig.process(chart, config);\n    };\n    CommonChart.prototype.setCoord = function (chart, config) {\n        return setCoordConfig.process(chart, config);\n    };\n    CommonChart.prototype.setSeries = function (chart, config) {\n        return setSeriesConfig.process(chart, config);\n    };\n    CommonChart.prototype.setAxis = function (chart, config) {\n        return setAxisConfig.process(chart, config);\n    };\n    CommonChart.prototype.setTooltip = function (chart, config) {\n        return setTooltipConfig.process(chart, config);\n    };\n    CommonChart.prototype.setDefaultTooltip = function (chart, config) {\n        return setTooltipConfig.setDefaultPoint(chart, config);\n    };\n    CommonChart.prototype.setGuide = function (chart, config) {\n        return setGuideConfig.process(chart, config);\n    };\n    CommonChart.prototype.setLegend = function (chart, config) {\n        return setLegendConfig.process(chart, config);\n    };\n    CommonChart.prototype.setContent = function (chart, config) {\n        this.setScale(chart, config);\n        this.setFilter(chart, config);\n        this.setSeries(chart, config);\n        this.setGuide(chart, config);\n    };\n    CommonChart.prototype.setView = function (item, chart, config) {\n        var view = this.createView(chart, item);\n        var viewData = item.data ? item.data : config.data;\n        this.setDataSource(view, viewData);\n        if (!_.isNil(item.coord)) {\n            this.setCoord(view, item);\n        }\n        if (!_.isNil(item.tooltip)) {\n            this.setTooltip(view, item);\n        }\n        if (!_.isNil(item.axis)) {\n            this.setAxis(view, item);\n        }\n        if (!_.isNil(item.guide)) {\n            this.setGuide(view, item);\n        }\n        this.setContent(view, item);\n        return view;\n    };\n    CommonChart.prototype.setViews = function (chart, config) {\n        var cViews = _.cloneDeep(config.views);\n        var isArr = Array.isArray(cViews);\n        if (_.isNil(cViews) || _.isEmpty(cViews)) {\n            return;\n        }\n        var arrViews = isArr ? cViews : [cViews];\n        for (var _i = 0, arrViews_1 = arrViews; _i < arrViews_1.length; _i++) {\n            var item = arrViews_1[_i];\n            this.setView(item, chart, config);\n        }\n    };\n    CommonChart.prototype.setFacetViews = function (chart, facet, views) {\n        this.setDataSource(chart, views.data);\n        if (!_.isNil(views.coord)) {\n            this.setCoord(chart, views);\n        }\n        if (!_.isNil(views.tooltip)) {\n            this.setTooltip(chart, views);\n        }\n        if (!_.isNil(views.axis)) {\n            this.setAxis(chart, views);\n        }\n        if (!_.isNil(views.guide)) {\n            this.setGuide(chart, views);\n        }\n        this.setContent(chart, views);\n    };\n    CommonChart.prototype.setFacet = function (chart, config) {\n        var _this = this;\n        var cFacet = _.cloneDeep(config.facet);\n        if (_.isNil(cFacet) || _.isEmpty(cFacet)) {\n            return;\n        }\n        var options = _.omit(cFacet, ['type', 'views']);\n        if (_.isEmpty(cFacet.views) && !_.isFunction(cFacet.views)) {\n            return chart.facet(cFacet.type, options);\n        }\n        if (_.isFunction(cFacet.views)) {\n            options.eachView = function (v, f) {\n                _this.setFacetViews(v, f, cFacet.views(v, f));\n            };\n        }\n        else {\n            cFacet.views = Array.isArray(cFacet.views) ? cFacet.views : [cFacet.views];\n            options.eachView = function (v, f) {\n                _this.setFacetViews(v, f, cFacet.views[0]);\n            };\n        }\n        return chart.facet(cFacet.type, options);\n    };\n    CommonChart.prototype.setBrush = function (chart, config) {\n        if (_.isNil(config.brush) || _.isEmpty(config.brush)) {\n            return;\n        }\n        var brush = config.brush;\n        var brushConfig = __assign({}, config.brush, { canvas: chart.get('canvas'), chart: chart });\n        var regEvents = /on(BrushStart|BrushMove|BrushEnd|DragStart|DragMove|DragEnd)/;\n        var events = Object.keys(brush).filter(function (entry) { return regEvents.test(entry); });\n        events.forEach(function (entry) {\n            var item = regEvents.exec(entry);\n            if (item && item.length) {\n                var oriEventName = 'on' + firstUpperCase(item[0]);\n                brushConfig[oriEventName] = function (ev) {\n                    brush[entry](ev, chart);\n                };\n            }\n        });\n        new Brush(brushConfig);\n    };\n    CommonChart.prototype.repaintWidthHeight = function (chart, config) {\n        var width = _.get(config, 'chart.width');\n        if (width) {\n            chart.changeWidth(width);\n        }\n        var height = _.get(config, 'chart.height');\n        if (height) {\n            chart.changeHeight(height);\n        }\n    };\n    CommonChart.prototype.renderDiffConfig = function (config) {\n        var chart = this.chartInstance;\n        this.clear(chart);\n        this.setScale(chart, config);\n        this.setCoord(chart, config);\n        this.setAxis(chart, config);\n        this.setSeries(chart, config);\n        this.setTooltip(chart, config);\n        this.setGuide(chart, config);\n        this.setViews(chart, config);\n        this.setLegend(chart, config);\n        this.setFacet(chart, config);\n        this.repaintWidthHeight(chart, config);\n        if (config.data) {\n            chart.changeData(config.data);\n        }\n        chart.repaint();\n        this.setBrush(chart, config);\n    };\n    return CommonChart;\n}());\nexport default CommonChart;\n//# sourceMappingURL=CommonChart.js.map"]},"metadata":{},"sourceType":"module"}
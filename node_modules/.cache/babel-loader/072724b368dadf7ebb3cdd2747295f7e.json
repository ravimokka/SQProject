{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js\";\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst CollectionCreateForm = Form.create({\n  name: \"form_in_modal\"\n})(( // eslint-disable-next-line\n_temp = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.state = {\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        table_columns: table_column_list\n      });\n      this.setState({\n        table_data: table_data_list\n      });\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n    }\n  } // ===============================================Table data Line chart ================================================\n\n\n  async loadLineChartData(data) {\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      console.log(data);\n    }\n  } //======================================================================================================================\n\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 240\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Chart Table Data\",\n      okText: \"Download\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.line_table_columns,\n      dataSource: this.state.line_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }));\n  }\n\n}, _temp));\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst sourceData = [{\n  name: 'A',\n  value: 131744\n}, {\n  name: 'B',\n  value: 104970\n}, {\n  name: 'C',\n  value: 29034\n}, {\n  name: 'D',\n  value: 23489\n}, {\n  name: 'E',\n  value: 18203\n}];\nconst vertical_data = [{\n  name: 'A',\n  value: 30000000\n}, {\n  name: 'B',\n  value: 40000000\n}, {\n  name: 'C',\n  value: 530000000\n}];\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n    if (val < 100000) {\n      return Math.round(val / 1000 * 10) / 10 + 'k';\n    } else if (val >= 1000000) {\n      return val = val / 1000000 + \"M\";\n    } else {\n      return val;\n    }\n  }\n}, {\n  dataKey: 'year',\n  min: 0,\n  max: 1\n}];\nvar categories_data = [];\nvar months = categories_data.map(item => item.month).filter((item, index, array) => array.indexOf(item) == index);\nconst productTotals = categories_data.reduce((obj, curr) => {\n  if (!obj[curr.name]) {\n    obj[curr.name] = [];\n  }\n\n  obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records);\n  return obj;\n}, {});\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n  return {\n    name: name,\n    data: months.map((month, monthIndex) => {\n      if (!prodArr[monthIndex]) {\n        return 0;\n      } else {\n        return prodArr[monthIndex];\n      }\n    })\n  };\n});\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadGroupBarData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitVerticalBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_v_bar: e.target.value\n      });\n      this.VerticalBarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit = e => {\n      this.setState({\n        value_mx: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit1 = e => {\n      this.setState({\n        value_my: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit2 = e => {\n      this.setState({\n        value_mz: e.target.value\n      });\n    };\n\n    this.mixed_handleSubmit = e => {\n      e.preventDefault();\n      this.loadMixedChartData({\n        A: this.state.value_mx,\n        B: this.state.value_my,\n        C: this.state.value_mz\n      });\n    };\n\n    this.Area_CharthandleSubmit = e => {\n      this.setState({\n        value_ax: e.target.value\n      });\n    };\n\n    this.Area_CharthandleSubmit1 = e => {\n      this.setState({\n        value_ay: e.target.value\n      });\n    };\n\n    this.area_handleSubmit = e => {\n      e.preventDefault();\n      this.loadStackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ay\n      });\n    };\n\n    this.state = {\n      line_chart_options: {\n        chart: {\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: [...months]\n        }\n      },\n      line_chart_series: [],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        }\n      },\n      series2: [],\n      bar_chart_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      bar_chart_series: [],\n      mixed_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 4\n        },\n        title: {\n          text: '',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      mixed_chart_series: [{\n        name: 'Status',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'A',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'B',\n        type: 'column',\n        data: [30]\n      }, {\n        name: 'C',\n        type: 'column',\n        data: [150]\n      }, {\n        name: 'LINE',\n        type: 'line',\n        data: [40, 20]\n      }],\n      area_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          categories: [\"\"]\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        name: 'series3',\n        data: [31, 40, 28, 51, 42, 109, 100]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }],\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_status: \"Status\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: []\n    };\n  }\n\n  // ============================= Loading all charts ====================================================================\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          var table_data_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n          table_data_list.push(table_data_dict);\n        } else {}\n      }\n\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        table_columns: table_column_list\n      });\n      this.setState({\n        table_data: table_data_list\n      });\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n      }\n\n      const sd = [{\n        name: 'B',\n        value: 13000\n      }];\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      console.log(data);\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n      }\n\n      const sd = [{\n        name: 'B',\n        value: 13000\n      }];\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      console.log(data);\n    }\n  } //================================================ Group Bar Chart ====================================================================\n\n\n  async loadGroupBarData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      const d = [{\n        'name': 'Actual',\n        'data': [1, 23]\n      }, {\n        'name': 'Budget',\n        'data': [1, 2, 4, 5]\n      }];\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Bar_chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Bar_chart_list.push(data_dict);\n        } else {}\n      }\n\n      const x = [{\n        name: 'A',\n        value: 131744\n      }];\n      this.setState({\n        bar_data: Bar_chart_list\n      });\n    }\n  } //========================================== Vertical bar Chart ================================================================\n\n\n  async VerticalBarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      ve_bar_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Ve_Bar_chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Ve_Bar_chart_list.push(data_dict);\n        } else {}\n      }\n\n      const x = [{\n        name: 'A',\n        value: 131744\n      }];\n      this.setState({\n        ve_bar_data: Ve_Bar_chart_list\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n      }\n\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      console.log(data);\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async loadStackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        SArea_chart_list.push(data_dict);\n      }\n\n      const m = \"test\";\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  componentDidMount() {//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n    //  this.setState({line_data:sourceDataDaily})\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1637\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Line chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1645\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_xl,\n      onChange: this.handleSubmitLineChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1646\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1648\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1650\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_yl,\n      onChange: this.handleSubmitLineChart1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1654\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1656\n      },\n      __self: this\n    }, this.state.select_amount_USD), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1662\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitLineChartOK,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663\n      },\n      __self: this\n    }, \"OK\")), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1666\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showModal,\n      className: \"btn btn-primary\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.modalVisible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669\n      },\n      __self: this\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: this.state.line_chart_source_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1676\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1677\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1678\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1679\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1680\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"name*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1681\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1688\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1694\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_bar,\n      onChange: this.handleSubmitBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1697\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: basic_bar_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703\n      },\n      __self: this\n    }, React.createElement(Coord, {\n      type: \"rect\",\n      direction: \"LB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1704\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1705\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"country\",\n      label: {\n        offset: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1706\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Vertical Bar Chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1717\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1722\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_v_bar,\n      onChange: this.handleSubmitVerticalBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1725\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1727\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: vertical_bar_data,\n      scale: vertical_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1731\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1732\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1734\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1740\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Group Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1749\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1759\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1763\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1767\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1776\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Donut chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1778\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_donut,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1784\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1788\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: don_data,\n      scale: scale1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1795\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1797\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1800\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1818\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1823\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1824\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1828\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1839\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1840\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1865\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1867\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Mixed chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1868\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1873\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mx,\n      onChange: this.mixedCharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1876\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1878\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_my,\n      onChange: this.mixedCharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1882\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1884\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1886\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mz,\n      onChange: this.mixedCharthandleSubmit2,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1890\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1892\n      },\n      __self: this\n    }, \"Zaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1894\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1898\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.mixed_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.mixed_chart_options,\n      series: this.state.mixed_chart_series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1902\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Stacked Area Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ax,\n      onChange: this.Area_CharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1917\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1919\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ay,\n      onChange: this.Area_CharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1925\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1927\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1931\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.area_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1932\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1935\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1943\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","CollectionCreateForm","create","name","Component","constructor","props","handleSubmitLineChart","e","setState","value_xl","target","value","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loadLineChartData","A","state","B","line_table_columns","title","dataIndex","key","line_table_data","oNumber","table_columns","table_data","componentWillMount","loadAll_count_view","loadAllChartData","promise","post","status","data","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","Object","keys","length","console","log","push","value_bar","data_dict","load_data_dict","column_dict","bar_data","ve_bar_data","sourceData","sourceData_donut","headers","Headers","append","options","method","body","JSON","stringify","line_data","field_list","line_chart_source_data","chart_data","l_data","line_value_list","line_chart_list","load_bar_chart_list","render","visible","onCancel","onCreate","form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","overflowY","DataSet","require","scale","dataKey","min","formatter","scale1","vertical_data","vertical_scale","val","Math","round","max","categories_data","months","map","item","month","filter","index","array","indexOf","productTotals","reduce","obj","curr","parseInt","records","series","entries","prodArr","monthIndex","AnalyticalTest","showModal","modalVisible","handleCancel","saveFormRef","formRef","showDrawer","drawerVisible","onClose","handleSubmit","value_x","handleSubmit1","value_y","handleSubmit12","loadGroupBarData","handleSubmitBarChart","BarCheckbox","Column","handleSubmitVerticalBarChart","value_v_bar","VerticalBarCheckbox","handleSubmitDonut","value_donut","DonutCheckbox","handleSubmitPie","value_pie","PieCheckbox","mixedCharthandleSubmit","value_mx","mixedCharthandleSubmit1","value_my","mixedCharthandleSubmit2","value_mz","mixed_handleSubmit","loadMixedChartData","C","Area_CharthandleSubmit","value_ax","Area_CharthandleSubmit1","value_ay","area_handleSubmit","loadStackedAreaChartData","line_chart_options","chart","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","categories","line_chart_series","options2","plotOptions","bar","horizontal","position","offsetX","style","fontSize","show","width","labels","yaxis","series2","bar_chart_options","bar_chart_series","mixed_chart_options","axisTicks","axisBorder","color","tooltip","seriesName","opposite","fixed","offsetY","legend","horizontalAlign","mixed_chart_series","type","area_chart_options","x","format","area_chart_series","books","intHeader","select_status","select_amount_USD","donut_data","pie_data","chartData","loadAnalytical","loadIntHeaders","firstName","lastName","d","dou","sd","value_list","chart_list","g_data","Actual","Budget","g","Bar_chart_list","Ve_Bar_chart_list","count","d_data","SQBL","SQCL","sum_data","count_data","max_chart_list","j","c_keys_list","c_value_list","max_chart_count_list","m","SArea_chart_list","componentDidMount","dv","View","source","transform","field","dimension","as","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","ve_bar_dv","vertical_bar_data","order","minHeight","marginLeft","cursor","handleCreate","offset","lineWidth","point"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyDC,GAAzD,EAA8DC,KAA9D,QAA0E,aAA1E;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,IAAjD,EAAwDC,KAAxD,EAA+DC,KAA/D,QAA2E,MAA3E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,oBAAoB,GAAGL,IAAI,CAACM,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,IAC3B;AAD2B,QAE7B,cAAcd,KAAK,CAACe,SAApB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2JrBC,qBA3JqB,GA2JIC,CAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,KA7JmB;;AAAA,SA+JrBC,sBA/JqB,GA+JKL,CAAD,IAAO;AAC5B,WAAKC,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAEN,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KAjKkB;;AAAA,SAoKrBG,uBApKqB,GAoKMP,CAAD,IAAO;AAC7BA,MAAAA,CAAC,CAACQ,cAAF;AACC,WAAKC,iBAAL,CACI;AAACC,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAWT,QAAd;AAAwBU,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAWL;AAArC,OADJ;AAGF,KAzKkB;;AAEjB,SAAKK,KAAL,GAAa;AAEjBE,MAAAA,kBAAkB,EAAG,CAAC;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAwBC,QAAAA,SAAS,EAAE,SAAnC;AAA8CC,QAAAA,GAAG,EAAE;AAAnD,OAAD,CAFJ;AAGjBC,MAAAA,eAAe,EAAG,CAAC;AAAED,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAD,CAHD;AAKjBC,MAAAA,aAAa,EAAG,CAAC;AAAEL,QAAAA,KAAK,EAAE,cAAT;AAAwBC,QAAAA,SAAS,EAAE,SAAnC;AAA8CC,QAAAA,GAAG,EAAE;AAAnD,OAAD,CALC;AAMjBI,MAAAA,UAAU,EAAG,CAAC;AAAEJ,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAD;AANI,KAAb;AAUD;;AAGDG,EAAAA,kBAAkB,GAAG;AAElB,SAAKC,kBAAL;AACA,SAAKC,gBAAL,CAAsB;AAACb,MAAAA,CAAC,EAAC,QAAH;AAAaE,MAAAA,CAAC,EAAC;AAAf,KAAtB;AACF;;AAGD,QAAMU,kBAAN,GACA;AACE,SAAKrB,QAAL,CAAc;AAACkB,MAAAA,aAAa,EAAG;AAAjB,KAAd;AACA,SAAKlB,QAAL,CAAc;AAACmB,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,UAAMI,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,6CAAX,CAAtB;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,cAAc,GAAE,EAApB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,qBAAqB,GAAG,EAA5B;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWgC,SAAX,IAAwBvC,KAA5B,EAAkC;AAAC0B,UAAAA,cAAc,CAACY,IAAf,CAAoBtC,KAApB;AAA2B,SAA9D,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;AAEA,YAAIC,cAAc,GAAG,EAArB;;AACA,YAAI7B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA6B,UAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB7B,GAAvB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACAyC,UAAAA,cAAc,CAAC,OAAD,CAAd,GAAwBzC,KAAxB;AACA2B,UAAAA,eAAe,CAACW,IAAhB,CAAqBE,SAArB;AACAZ,UAAAA,qBAAqB,CAACU,IAAtB,CAA2BG,cAA3B;AACA,cAAIC,WAAW,GAAG,EAAlB;AAEAA,UAAAA,WAAW,CAAC,OAAD,CAAX,GAAsB9B,GAAtB;AACA8B,UAAAA,WAAW,CAAC,WAAD,CAAX,GAA0B9B,GAA1B;AACA8B,UAAAA,WAAW,CAAC,KAAD,CAAX,GAAoB9B,GAApB;AACAoB,UAAAA,eAAe,CAACpB,GAAD,CAAf,GAAuBZ,KAAvB;AAOC,SAnBD,MAoBI,CAAE;AACT;;AACH+B,MAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AACA,WAAKnC,QAAL,CAAc;AAAC8C,QAAAA,QAAQ,EAAChB;AAAV,OAAd;AACA,WAAK9B,QAAL,CAAc;AAAC+C,QAAAA,WAAW,EAACjB;AAAb,OAAd;AACA,WAAK9B,QAAL,CAAc;AAACgD,QAAAA,UAAU,EAACjB;AAAZ,OAAd;AACA,WAAK/B,QAAL,CAAc;AAACiD,QAAAA,gBAAgB,EAAClB;AAAlB,OAAd;AACA,WAAK/B,QAAL,CAAc;AAACkB,QAAAA,aAAa,EAACe;AAAf,OAAd;AACA,WAAKjC,QAAL,CAAc;AAACmB,QAAAA,UAAU,EAACe;AAAZ,OAAd;AAGD;AACF;;AACH,QAAMZ,gBAAN,CAAuBI,IAAvB,EAA4B;AAExB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAACY,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACA,SAAKZ,QAAL,CAAc;AAACgB,MAAAA,eAAe,EAAG;AAAnB,KAAd;AACA,SAAKhB,QAAL,CAAc;AAAC0D,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAK1D,QAAL,CAAc;AAAC2D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,SAAK3D,QAAL,CAAc;AAAC4D,MAAAA,sBAAsB,EAAG;AAA1B,KAAd;AACA,SAAK5D,QAAL,CAAc;AAAC6D,MAAAA,UAAU,EAAC;AAAZ,KAAd;AACH,UAAMtC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AAEA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIoC,MAAM,GAAG,CAACpC,IAAD,CAAb;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAImC,eAAe,GAAE,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACC,UAAIhC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACD,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;AACA,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;AACAgD,QAAAA,eAAe,CAACtB,IAAhB,CAAqBtC,KAArB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA6D,QAAAA,eAAe,CAACvB,IAAhB,CAAqBE,SAArB;AACA,YAAIC,cAAc,GAAG,EAArB;AACAA,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB7B,GAAvB;AACA6B,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB,CAACzC,KAAD,CAAvB;AACA8D,QAAAA,mBAAmB,CAACxB,IAApB,CAAyBG,cAAzB;AACA,YAAIC,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAAC,OAAD,CAAX,GAAsB9B,GAAtB;AACA8B,QAAAA,WAAW,CAAC,WAAD,CAAX,GAA0B9B,GAA1B;AACA8B,QAAAA,WAAW,CAAC,KAAD,CAAX,GAAoB9B,GAApB;AACAoB,QAAAA,eAAe,CAACpB,GAAD,CAAf,GAAuBZ,KAAvB;AACA8B,QAAAA,iBAAiB,CAACQ,IAAlB,CAAuBI,WAAvB;AACH;;AACFX,MAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AAGD,WAAKnC,QAAL,CAAc;AAAC4D,QAAAA,sBAAsB,EAACI;AAAxB,OAAd;AACA,WAAKhE,QAAL,CAAc;AAAC2D,QAAAA,UAAU,EAAC/B;AAAZ,OAAd;AACA,WAAK5B,QAAL,CAAc;AAAC6D,QAAAA,UAAU,EAACI;AAAZ,OAAd;AACA,WAAKjE,QAAL,CAAc;AAACY,QAAAA,kBAAkB,EAACqB;AAApB,OAAd;AACA,WAAKjC,QAAL,CAAc;AAACgB,QAAAA,eAAe,EAACkB;AAAjB,OAAd;AACD;AACJ,GA1J6B,CA2J9B;;;AAkBA,QAAM1B,iBAAN,CAAwBkB,IAAxB,EAA6B;AAE1B,SAAK1B,QAAL,CAAc;AAACY,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACC,SAAKZ,QAAL,CAAc;AAACgB,MAAAA,eAAe,EAAG;AAAnB,KAAd;AACA,UAAMkC,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAAC0D,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAK1D,QAAL,CAAc;AAAC2D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,SAAK3D,QAAL,CAAc;AAAC4D,MAAAA,sBAAsB,EAAG;AAA1B,KAAd;AACH,UAAMrC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AAEA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIoC,MAAM,GAAG,CAACpC,IAAD,CAAb;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAImC,eAAe,GAAE,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAI/B,iBAAiB,GAAG,EAAxB;AACC,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACD,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;AACA,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;AACAgD,QAAAA,eAAe,CAACtB,IAAhB,CAAqBtC,KAArB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA6D,QAAAA,eAAe,CAACvB,IAAhB,CAAqBE,SAArB;AACA,YAAIE,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAAC,OAAD,CAAX,GAAsB9B,GAAtB;AACA8B,QAAAA,WAAW,CAAC,WAAD,CAAX,GAA0B9B,GAA1B;AACA8B,QAAAA,WAAW,CAAC,KAAD,CAAX,GAAoB9B,GAApB;AACAoB,QAAAA,eAAe,CAACpB,GAAD,CAAf,GAAuBZ,KAAvB;AACA8B,QAAAA,iBAAiB,CAACQ,IAAlB,CAAuBI,WAAvB;AACH;;AAGHX,MAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AACA,WAAKnC,QAAL,CAAc;AAAC4D,QAAAA,sBAAsB,EAACI;AAAxB,OAAd;AACA,WAAKhE,QAAL,CAAc;AAAC2D,QAAAA,UAAU,EAAC/B;AAAZ,OAAd;AACA,WAAK5B,QAAL,CAAc;AAACY,QAAAA,kBAAkB,EAACqB;AAApB,OAAd;AACA,WAAKjC,QAAL,CAAc;AAACgB,QAAAA,eAAe,EAACkB;AAAjB,OAAd;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAIJ,GAxO6B,CA6O9B;;;AAEIwC,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKrE,KAD5C;AAAA,UACCsE,OADD,eACCA,OADD;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,QADpB,eACoBA,QADpB;AAAA,UAC8BC,IAD9B,eAC8BA,IAD9B;AAAA,UAECC,iBAFD,GAEuBD,IAFvB,CAECC,iBAFD;AAIP,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBE,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AAWA,WACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAER,OAAhB;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,MAAM,EAAC,UAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,IAAI,EAAEC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAK3D,KAAL,CAAWE,kBAA3B;AAA+C,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWM,eAAtE;AAAuF,MAAA,KAAK,EAAE;AAAC8D,QAAAA,SAAS,EAAC;AAAX,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADF;AAUD;;AAxQyB,CAFD,SAA7B;;AA+QA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE,SADI;AAEbC,EAAAA,GAAG,EAAE,CAFQ;AAGbC,EAAAA,SAAS,EAAE;AAHE,CAAD,CAAd;AAOA,MAAMC,MAAM,GAAG,CAAC;AACdH,EAAAA,OAAO,EAAE,SADK;AAEdC,EAAAA,GAAG,EAAE,CAFS;AAGdC,EAAAA,SAAS,EAAE;AAHG,CAAD,CAAf;AAQA,MAAMpC,UAAU,GAAG,CACjB;AAAEtD,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CADiB,EAEjB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CAFiB,EAGjB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CAHiB,EAIjB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CAJiB,EAKjB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CALiB,CAAnB;AAWA,MAAMmF,aAAa,GAAG,CACpB;AAAE5F,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CADoB,EAEpB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CAFoB,EAGpB;AAAET,EAAAA,IAAI,EAAE,GAAR;AAAaS,EAAAA,KAAK,EAAE;AAApB,CAHoB,CAAtB;AAOA,MAAMoF,cAAc,GAAG,CAAC;AACtBL,EAAAA,OAAO,EAAE,OADa;AAEtBC,EAAAA,GAAG,EAAE,CAFiB;AAGtBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBI,GAAnB,EAAwB;AACxB,QAAIA,GAAG,GAAG,MAAV,EAAkB;AACK,aAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,KAFpB,MAGgB,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,aAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,KAJI,MAMC;AACM,aAAOA,GAAP;AACH;AACxB;AAhBe,CAAD,EAiBrB;AACAN,EAAAA,OAAO,EAAE,MADT;AAEAC,EAAAA,GAAG,EAAE,CAFL;AAGAQ,EAAAA,GAAG,EAAE;AAHL,CAjBqB,CAAvB;AAmDA,IAAIC,eAAe,GAAG,EAAtB;AAEA,IAAIC,MAAM,GAAGD,eAAe,CAACE,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAACC,KAAnC,EAA0CC,MAA1C,CAAiD,CAACF,IAAD,EAAOG,KAAP,EAAcC,KAAd,KAAwBA,KAAK,CAACC,OAAN,CAAcL,IAAd,KAAuBG,KAAhG,CAAb;AAGA,MAAMG,aAAa,GAAGT,eAAe,CAACU,MAAhB,CAAuB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACxD,MAAG,CAACD,GAAG,CAACC,IAAI,CAAC9G,IAAN,CAAP,EAAmB;AACf6G,IAAAA,GAAG,CAACC,IAAI,CAAC9G,IAAN,CAAH,GAAiB,EAAjB;AACH;;AAED6G,EAAAA,GAAG,CAACC,IAAI,CAAC9G,IAAN,CAAH,CAAemG,MAAM,CAACO,OAAP,CAAeI,IAAI,CAACR,KAApB,CAAf,IAA6CS,QAAQ,CAACD,IAAI,CAACE,OAAN,CAArD;AACA,SAAOH,GAAP;AACH,CAPqB,EAOnB,EAPmB,CAAtB;AASA,MAAMI,MAAM,GAAGvE,MAAM,CAACwE,OAAP,CAAeP,aAAf,EAA8BP,GAA9B,CAAkC,CAAC,CAACpG,IAAD,EAAOmH,OAAP,CAAD,KAAqB;AAClE,SAAO;AACHnH,IAAAA,IAAI,EAAEA,IADH;AAEHgC,IAAAA,IAAI,EAAEmE,MAAM,CAACC,GAAP,CAAW,CAACE,KAAD,EAAQc,UAAR,KAAuB;AACpC,UAAG,CAACD,OAAO,CAACC,UAAD,CAAX,EAAwB;AACpB,eAAO,CAAP;AACH,OAFD,MAEO;AACH,eAAOD,OAAO,CAACC,UAAD,CAAd;AACH;AAEJ,KAPK;AAFH,GAAP;AAYH,CAbc,CAAf;;AAiBA,MAAMC,cAAN,SAA6BnI,KAAK,CAACe,SAAnC,CAA6C;AAE5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAqXnBmH,SArXmB,GAqXP,MAAM;AACf,WAAKhH,QAAL,CAAc;AAAEiH,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAvXiB;;AAAA,SAyXlBC,YAzXkB,GAyXH,MAAM;AACnB,WAAKlH,QAAL,CAAc;AAAEiH,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KA3XiB;;AAAA,SA+XlBE,WA/XkB,GA+XJC,OAAO,IAAI;AACvB,WAAKA,OAAL,GAAeA,OAAf;AACD,KAjYiB;;AAAA,SAmYlBC,UAnYkB,GAmYL,MAAM;AACjB,WAAKrH,QAAL,CAAc;AACZsH,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KAvYiB;;AAAA,SAyYlBC,OAzYkB,GAyYR,MAAM;AACd,WAAKvH,QAAL,CAAc;AACZsH,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KA7YiB;;AAAA,SAsjBpBxH,qBAtjBoB,GAsjBKC,CAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,KAxjBkB;;AAAA,SA0jBpBC,sBA1jBoB,GA0jBML,CAAD,IAAO;AAC5B,WAAKC,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAEN,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KA5jBiB;;AAAA,SA+jBpBG,uBA/jBoB,GA+jBOP,CAAD,IAAO;AAC7BA,MAAAA,CAAC,CAACQ,cAAF;AACC,WAAKC,iBAAL,CACI;AAACC,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAWT,QAAd;AAAwBU,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAWL;AAArC,OADJ;AAGF,KApkBiB;;AAAA,SAioBpBmH,YAjoBoB,GAioBJzH,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AAACyH,QAAAA,OAAO,EAAE1H,CAAC,CAACG,MAAF,CAASC;AAAnB,OAAd;AACH,KAnoBkB;;AAAA,SAqoBpBuH,aAroBoB,GAqoBH3H,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAAC2H,QAAAA,OAAO,EAAE5H,CAAC,CAACG,MAAF,CAASC;AAAnB,OAAd;AACD,KAvoBiB;;AAAA,SA0oBpByH,cA1oBoB,GA0oBF7H,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACQ,cAAF;AACC,WAAKsH,gBAAL,CACI;AAACpH,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAW+G,OAAd;AAAuB9G,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAWiH;AAApC,OADJ;AAGF,KA/oBiB;;AAAA,SAgsBpBG,oBAhsBoB,GAgsBI/H,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKP,QAAL,CAAc;AAAC0C,QAAAA,SAAS,EAAE3C,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACC,WAAK4H,WAAL,CACI;AAACC,QAAAA,MAAM,EAACjI,CAAC,CAACG,MAAF,CAASC;AAAjB,OADJ;AAGP,KAtsBkB;;AAAA,SAiwBpB8H,4BAjwBoB,GAiwBYlI,CAAD,IAAO;AAC9BA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKP,QAAL,CAAc;AAACkI,QAAAA,WAAW,EAAEnI,CAAC,CAACG,MAAF,CAASC;AAAvB,OAAd;AACC,WAAKgI,mBAAL,CACI;AAACH,QAAAA,MAAM,EAACjI,CAAC,CAACG,MAAF,CAASC;AAAjB,OADJ;AAGP,KAvwBkB;;AAAA,SA40BpBiI,iBA50BoB,GA40BCrI,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKP,QAAL,CAAc;AAACqI,QAAAA,WAAW,EAAEtI,CAAC,CAACG,MAAF,CAASC;AAAvB,OAAd;AACC,WAAKmI,aAAL,CACI;AAACN,QAAAA,MAAM,EAACjI,CAAC,CAACG,MAAF,CAASC;AAAjB,OADJ;AAGF,KAl1BiB;;AAAA,SAm5BnBoI,eAn5BmB,GAm5BAxI,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKP,QAAL,CAAc;AAACwI,QAAAA,SAAS,EAAEzI,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACC,WAAKsI,WAAL,CACI;AAACT,QAAAA,MAAM,EAACjI,CAAC,CAACG,MAAF,CAASC;AAAjB,OADJ;AAGF,KAz5BiB;;AAAA,SA09BpBuI,sBA19BoB,GA09BM3I,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AAAC2I,QAAAA,QAAQ,EAAE5I,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,KA59BkB;;AAAA,SA89BpByI,uBA99BoB,GA89BO7I,CAAD,IAAO;AAC7B,WAAKC,QAAL,CAAc;AAAC6I,QAAAA,QAAQ,EAAE9I,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KAh+BiB;;AAAA,SAm+BnB2I,uBAn+BmB,GAm+BQ/I,CAAD,IAAO;AAC9B,WAAKC,QAAL,CAAc;AAAC+I,QAAAA,QAAQ,EAAEhJ,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KAr+BiB;;AAAA,SAw+BpB6I,kBAx+BoB,GAw+BEjJ,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACQ,cAAF;AACC,WAAK0I,kBAAL,CACI;AAACxI,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAWiI,QAAd;AAAwBhI,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAWmI,QAArC;AAA+CK,QAAAA,CAAC,EAAC,KAAKxI,KAAL,CAAWqI;AAA5D,OADJ;AAGF,KA7+BiB;;AAAA,SAgjCpBI,sBAhjCoB,GAgjCMpJ,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AAACoJ,QAAAA,QAAQ,EAAErJ,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACH,KAljCkB;;AAAA,SAojCpBkJ,uBApjCoB,GAojCOtJ,CAAD,IAAO;AAC7B,WAAKC,QAAL,CAAc;AAACsJ,QAAAA,QAAQ,EAAEvJ,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KAtjCiB;;AAAA,SAyjCpBoJ,iBAzjCoB,GAyjCCxJ,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACQ,cAAF;AACC,WAAKiJ,wBAAL,CACI;AAAC/I,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAW0I,QAAd;AAAwBzI,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAW4I;AAArC,OADJ;AAGF,KA9jCiB;;AAEjB,SAAK5I,KAAL,GAAa;AAGhB+I,MAAAA,kBAAkB,EAAE;AACRC,QAAAA,KAAK,EAAE;AACDC,UAAAA,IAAI,EAAE;AACFC,YAAAA,OAAO,EAAE;AADP;AADL,SADC;AAMNC,QAAAA,UAAU,EAAE;AACRD,UAAAA,OAAO,EAAE;AADD,SANN;AASNE,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE;AADH,SATF;AAYNlJ,QAAAA,KAAK,EAAE;AACHmJ,UAAAA,IAAI,EAAE,EADH;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAZD;AAgBNC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE;AACDC,YAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,aAAZ,CADP;AACmC;AACpCC,YAAAA,OAAO,EAAE;AAFR;AADH,SAhBA;AAsBNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAE,CAAC,GAAG1E,MAAJ;AADT;AAtBD,OAHJ;AA6BN2E,MAAAA,iBAAiB,EAAC,EA7BZ;AAkChBC,MAAAA,QAAQ,EAAE;AACEC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,IADT;AAEHf,YAAAA,UAAU,EAAE;AACVgB,cAAAA,QAAQ,EAAE;AADA;AAFT;AADM,SADf;AASEhB,QAAAA,UAAU,EAAE;AACVD,UAAAA,OAAO,EAAE,KADC;AAEVkB,UAAAA,OAAO,EAAE,CAAC,CAFA;AAGVC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,MADL;AAELZ,YAAAA,MAAM,EAAE,CAAC,MAAD;AAFH;AAHG,SATd;AAiBEN,QAAAA,MAAM,EAAE;AACNmB,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,KAAK,EAAE,CAFD;AAGNd,UAAAA,MAAM,EAAE,CAAC,MAAD;AAHF,SAjBV;AAuBEE,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,EAAD,CADP;AAELY,UAAAA,MAAM,EAAE;AACF/F,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAdC;AAFH,SAvBT;AA0CE4F,QAAAA,KAAK,EAAE;AACLb,UAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CADP;AAELY,UAAAA,MAAM,EAAE;AACF/F,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAdC;AAFH;AA1CT,OAlCM;AAiGV6F,MAAAA,OAAO,EAAC,EAjGE;AAoGhBC,MAAAA,iBAAiB,EAAE;AACPZ,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE;AADT;AADM,SADN;AAMPf,QAAAA,UAAU,EAAE;AACVD,UAAAA,OAAO,EAAE;AADC,SANL;AAYPU,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE;AADP;AAZA,OApGH;AAoHhBgB,MAAAA,gBAAgB,EAAE,EApHF;AA0HhBC,MAAAA,mBAAmB,EAAG;AACV3B,QAAAA,UAAU,EAAE;AACVD,UAAAA,OAAO,EAAE;AADC,SADF;AAKVE,QAAAA,MAAM,EAAE;AACNoB,UAAAA,KAAK,EAAC;AADA,SALE;AAQVrK,QAAAA,KAAK,EAAE;AACLmJ,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,KAAK,EAAE,MAFF;AAGLa,UAAAA,OAAO,EAAE;AAHJ,SARG;AAaVR,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,EADP;AAGLY,UAAAA,MAAM,EAAE;AACF/F,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAdC;AAHH,SAbG;AAiCV4F,QAAAA,KAAK,EAAE,CACL;AACEK,UAAAA,SAAS,EAAE;AACTR,YAAAA,IAAI,EAAE;AADG,WADb;AAIES,UAAAA,UAAU,EAAE;AACVT,YAAAA,IAAI,EAAE,IADI;AAEVU,YAAAA,KAAK,EAAE;AAFG,WAJd;AAQGR,UAAAA,MAAM,EAAE;AACNJ,YAAAA,KAAK,EAAE;AACNY,cAAAA,KAAK,EAAE;AADD,aADD;AAILvG,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAjBI,WARX;AA2BE3E,UAAAA,KAAK,EAAE;AACLmJ,YAAAA,IAAI,EAAE,EADD;AAELe,YAAAA,KAAK,EAAE;AACLY,cAAAA,KAAK,EAAE;AADF;AAFF,WA3BT;AAiCEC,UAAAA,OAAO,EAAE;AACPhC,YAAAA,OAAO,EAAE;AADF;AAjCX,SADK,EAuCL;AACEiC,UAAAA,UAAU,EAAE,QADd;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEL,UAAAA,SAAS,EAAE;AACTR,YAAAA,IAAI,EAAE;AADG,WAHb;AAMES,UAAAA,UAAU,EAAE;AACVT,YAAAA,IAAI,EAAE,IADI;AAEVU,YAAAA,KAAK,EAAE;AAFG,WANd;AAUKR,UAAAA,MAAM,EAAE;AACRJ,YAAAA,KAAK,EAAE;AACNY,cAAAA,KAAK,EAAE;AADD,aADC;AAIPvG,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAjBM,WAVb;AA6BE3E,UAAAA,KAAK,EAAE;AACLmJ,YAAAA,IAAI,EAAE,EADD;AAELe,YAAAA,KAAK,EAAE;AACLY,cAAAA,KAAK,EAAE;AADF;AAFF;AA7BT,SAvCK,EA2EL;AACEE,UAAAA,UAAU,EAAE,SADd;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEL,UAAAA,SAAS,EAAE;AACTR,YAAAA,IAAI,EAAE;AADG,WAHb;AAMES,UAAAA,UAAU,EAAE;AACVT,YAAAA,IAAI,EAAE,IADI;AAEVU,YAAAA,KAAK,EAAE;AAFG,WANd;AAUGR,UAAAA,MAAM,EAAE;AACNJ,YAAAA,KAAK,EAAE;AACNY,cAAAA,KAAK,EAAE;AADD,aADD;AAKLvG,YAAAA,SAAS,EAAE,UAASI,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAlBI,WAVX;AA8BE3E,UAAAA,KAAK,EAAE;AACLmJ,YAAAA,IAAI,EAAE,EADD;AAELe,YAAAA,KAAK,EAAE;AACLY,cAAAA,KAAK,EAAE;AADF;AAFF;AA9BT,SA3EK,CAjCG;AAoJVC,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAE;AACLnC,YAAAA,OAAO,EAAE,IADJ;AAELiB,YAAAA,QAAQ,EAAE,SAFL;AAEgB;AACrBmB,YAAAA,OAAO,EAAE,EAHJ;AAILlB,YAAAA,OAAO,EAAE;AAJJ;AADA,SApJC;AA4JVmB,QAAAA,MAAM,EAAE;AACNC,UAAAA,eAAe,EAAE,MADX;AAENpB,UAAAA,OAAO,EAAE;AAFH;AA5JE,OA1HN;AA2RhBqB,MAAAA,kBAAkB,EAAE,CAAC;AACrBzM,QAAAA,IAAI,EAAE,QADe;AAErB0M,QAAAA,IAAI,EAAE,QAFe;AAGrB1K,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHe,OAAD,EAIjB;AACHhC,QAAAA,IAAI,EAAE,GADH;AAEH0M,QAAAA,IAAI,EAAE,QAFH;AAGH1K,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHH,OAJiB,EAUpB;AACAhC,QAAAA,IAAI,EAAE,GADN;AAEA0M,QAAAA,IAAI,EAAE,QAFN;AAGA1K,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHN,OAVoB,EAepB;AACAhC,QAAAA,IAAI,EAAE,GADN;AAEA0M,QAAAA,IAAI,EAAE,QAFN;AAGA1K,QAAAA,IAAI,EAAE,CAAC,GAAD;AAHN,OAfoB,EAsBpB;AACAhC,QAAAA,IAAI,EAAE,MADN;AAEA0M,QAAAA,IAAI,EAAE,MAFN;AAGA1K,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAHN,OAtBoB,CA3RJ;AA6ThB2K,MAAAA,kBAAkB,EAAE;AACRxC,QAAAA,UAAU,EAAE;AACVD,UAAAA,OAAO,EAAE;AADC,SADJ;AAIRE,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AADD,SAJA;AASRO,QAAAA,KAAK,EAAE;AAELC,UAAAA,UAAU,EAAE,CAAC,EAAD;AAFP,SATC;AAcRqB,QAAAA,OAAO,EAAE;AACPU,UAAAA,CAAC,EAAE;AACDC,YAAAA,MAAM,EAAE;AADP;AADI;AAdD,OA7TJ;AAmVhBC,MAAAA,iBAAiB,EAAC,CAAC;AACP9M,QAAAA,IAAI,EAAE,SADC;AAEPA,QAAAA,IAAI,EAAE,SAFC;AAGPgC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,GAA1B;AAHC,OAAD,EAIL;AACDhC,QAAAA,IAAI,EAAE,SADL;AAEDgC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAFL,OAJK,CAnVF;AA4VV+K,MAAAA,KAAK,EAAC,EA5VI;AA6VXC,MAAAA,SAAS,EAAC,EA7VC;AA8VXzG,MAAAA,MAAM,EAAC,EA9VI;AA+VX0G,MAAAA,aAAa,EAAC,QA/VH;AAgWXC,MAAAA,iBAAiB,EAAC,YAhWP;AAiWX/I,MAAAA,UAAU,EAAC,EAjWA;AAkWXgJ,MAAAA,UAAU,EAAC,EAlWA;AAmWXC,MAAAA,QAAQ,EAAC,EAnWE;AAoWXhK,MAAAA,QAAQ,EAAC,EApWE;AAqWXC,MAAAA,WAAW,EAAC,EArWD;AAsWXW,MAAAA,SAAS,EAAC,CAAC;AAAChE,QAAAA,IAAI,EAAC,EAAN;AAAU,aAAI,CAAd;AAAiB,aAAI;AAArB,OAAD,CAtWC;AAuWXiE,MAAAA,UAAU,EAAC,CAAC,GAAD,EAAK,GAAL,CAvWA;AAwWXoJ,MAAAA,SAAS,EAAE,EAxWA;AAyWX/J,MAAAA,UAAU,EAAE,EAzWD;AA0WXY,MAAAA,sBAAsB,EAAC,CAAC;AAAClE,QAAAA,IAAI,EAAE,GAAP;AAAYS,QAAAA,KAAK,EAAE;AAAnB,OAAD,CA1WZ;AA2WX8C,MAAAA,gBAAgB,EAAC;AA3WN,KAAb;AAgXC;;AA8BJ;AAEA7B,EAAAA,kBAAkB,GAAG;AACjB,SAAK4L,cAAL;AACC,SAAKC,cAAL;AACA,SAAK5L,kBAAL;AACA,SAAKC,gBAAL,CAAsB;AAACb,MAAAA,CAAC,EAAC,QAAH;AAAaE,MAAAA,CAAC,EAAC;AAAf,KAAtB;AACF;;AAEF,QAAMqM,cAAN,GACC;AACE,UAAMzL,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,sCAAX,EAAmD;AAAE0L,MAAAA,SAAS,EAAE,YAAb;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAnD,CAAtB;AACA,UAAM1L,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,WAAK1B,QAAL,CAAc;AAACyM,QAAAA,KAAK,EAAC/K;AAAP,OAAd;AACD;AACF;;AAEH,QAAMuL,cAAN,GACE;AACE,UAAM1L,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,wCAAX,EAAqD;AAAE0L,MAAAA,SAAS,EAAE,YAAb;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAArD,CAAtB;AACA,UAAM1L,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,WAAK1B,QAAL,CAAc;AAAC0M,QAAAA,SAAS,EAAChL;AAAX,OAAd;AACA,YAAM0L,CAAC,GAAG,CAAC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAD,EAAgC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAhC,CAAV;AACA,YAAMC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAZ;AACA,WAAKrN,QAAL,CAAc;AAAC6M,QAAAA,UAAU,EAACQ;AAAZ,OAAd;AACA,WAAKrN,QAAL,CAAc;AAAC6D,QAAAA,UAAU,EAACuJ;AAAZ,OAAd;AACC7K,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWmD,UAAvB;AAEF;AACF;;AACD,QAAMxC,kBAAN,GACA;AACE,SAAKrB,QAAL,CAAc;AAACkB,MAAAA,aAAa,EAAG;AAAjB,KAAd;AACA,SAAKlB,QAAL,CAAc;AAACmB,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,UAAMI,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,6CAAX,CAAtB;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,cAAc,GAAE,EAApB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,qBAAqB,GAAG,EAA5B;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWgC,SAAX,IAAwBvC,KAA5B,EAAkC;AAAC0B,UAAAA,cAAc,CAACY,IAAf,CAAoBtC,KAApB;AAA2B,SAA9D,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;AAEA,YAAIC,cAAc,GAAG,EAArB;;AACA,YAAI7B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA6B,UAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB7B,GAAvB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACAyC,UAAAA,cAAc,CAAC,OAAD,CAAd,GAAwBzC,KAAxB;AACA2B,UAAAA,eAAe,CAACW,IAAhB,CAAqBE,SAArB;AACAZ,UAAAA,qBAAqB,CAACU,IAAtB,CAA2BG,cAA3B;AACA,cAAIC,WAAW,GAAG,EAAlB;AACA,cAAIV,eAAe,GAAG,EAAtB;AACAU,UAAAA,WAAW,CAAC,OAAD,CAAX,GAAsB9B,GAAtB;AACA8B,UAAAA,WAAW,CAAC,WAAD,CAAX,GAA0B9B,GAA1B;AACA8B,UAAAA,WAAW,CAAC,KAAD,CAAX,GAAoB9B,GAApB;AACAoB,UAAAA,eAAe,CAACpB,GAAD,CAAf,GAAuBZ,KAAvB;AACA8B,UAAAA,iBAAiB,CAACQ,IAAlB,CAAuBI,WAAvB;AACAX,UAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AAKC,SAnBD,MAoBI,CAAE;AACT;;AAEH,WAAKnC,QAAL,CAAc;AAAC8C,QAAAA,QAAQ,EAAChB;AAAV,OAAd;AACA,WAAK9B,QAAL,CAAc;AAAC+C,QAAAA,WAAW,EAACjB;AAAb,OAAd;AACA,WAAK9B,QAAL,CAAc;AAACgD,QAAAA,UAAU,EAACjB;AAAZ,OAAd;AACA,WAAK/B,QAAL,CAAc;AAACiD,QAAAA,gBAAgB,EAAClB;AAAlB,OAAd;AACA,WAAK/B,QAAL,CAAc;AAACkB,QAAAA,aAAa,EAACe;AAAf,OAAd;AACA,WAAKjC,QAAL,CAAc;AAACmB,QAAAA,UAAU,EAACe;AAAZ,OAAd;AAGD;AACF;;AAIH,QAAMZ,gBAAN,CAAuBI,IAAvB,EAA4B;AAExB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAAC0D,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAK1D,QAAL,CAAc;AAAC2D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,SAAK3D,QAAL,CAAc;AAAC4D,MAAAA,sBAAsB,EAAG;AAA1B,KAAd;AACA,SAAK5D,QAAL,CAAc;AAAC6D,MAAAA,UAAU,EAAC;AAAZ,KAAd;AACH,UAAMtC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AAEA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIoC,MAAM,GAAG,CAACpC,IAAD,CAAb;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAImC,eAAe,GAAE,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,mBAAmB,GAAG,EAA1B;;AACA,WAAKtC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;AACA,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;AACAgD,QAAAA,eAAe,CAACtB,IAAhB,CAAqBtC,KAArB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA6D,QAAAA,eAAe,CAACvB,IAAhB,CAAqBE,SAArB;AACA,YAAIC,cAAc,GAAG,EAArB;AACAA,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB7B,GAAvB;AACA6B,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB,CAACzC,KAAD,CAAvB;AACA8D,QAAAA,mBAAmB,CAACxB,IAApB,CAAyBG,cAAzB;AACH;;AAGJ,YAAM0K,EAAE,GAAG,CAAC;AAAC5N,QAAAA,IAAI,EAAE,GAAP;AAAYS,QAAAA,KAAK,EAAE;AAAnB,OAAD,CAAX;AACC,WAAKH,QAAL,CAAc;AAAC4D,QAAAA,sBAAsB,EAACI;AAAxB,OAAd;AACA,WAAKhE,QAAL,CAAc;AAAC2D,QAAAA,UAAU,EAAC/B;AAAZ,OAAd;AACA,WAAK5B,QAAL,CAAc;AAAC6D,QAAAA,UAAU,EAACI;AAAZ,OAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAIJ,GApjB4C,CAsjB7C;;;AAmBA,QAAMlB,iBAAN,CAAwBkB,IAAxB,EAA6B;AAEzB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAAC0D,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAK1D,QAAL,CAAc;AAAC2D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,SAAK3D,QAAL,CAAc;AAAC4D,MAAAA,sBAAsB,EAAG;AAA1B,KAAd;AACH,UAAMrC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AAEA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,UAAIoC,MAAM,GAAG,CAACpC,IAAD,CAAb;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAImC,eAAe,GAAE,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAKrC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;AACA,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;AACAgD,QAAAA,eAAe,CAACtB,IAAhB,CAAqBtC,KAArB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA6D,QAAAA,eAAe,CAACvB,IAAhB,CAAqBE,SAArB;AACH;;AAGJ,YAAM2K,EAAE,GAAG,CAAC;AAAC5N,QAAAA,IAAI,EAAE,GAAP;AAAYS,QAAAA,KAAK,EAAE;AAAnB,OAAD,CAAX;AACC,WAAKH,QAAL,CAAc;AAAC4D,QAAAA,sBAAsB,EAACI;AAAxB,OAAd;AACA,WAAKhE,QAAL,CAAc;AAAC2D,QAAAA,UAAU,EAAC/B;AAAZ,OAAd;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAIJ,GAvnB4C,CAkoB7C;;;AAkBA,QAAMmG,gBAAN,CAAuBnG,IAAvB,EAA4B;AAExB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAAC6D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACH,UAAMtC,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAI2L,UAAU,GAAE,EAAhB;AAEA,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK7L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV,CAFyC,CAGrD;;AACY,YAAIxB,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB,CAJyC,CAKrD;;AACY,YAAI4B,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,CAACxC,KAAD,CAAlB;AACAqN,QAAAA,UAAU,CAAC/K,IAAX,CAAgBE,SAAhB;AACH;;AAEH,YAAM8K,MAAM,GAAG,CAAC,KAAK/M,KAAL,CAAWgN,MAAZ,EAAoB,KAAKhN,KAAL,CAAWiN,MAA/B,CAAf;AACA,WAAK3N,QAAL,CAAc;AAAC4N,QAAAA,CAAC,EAACH;AAAH,OAAd,EArBF,CAsBJ;AACA;AACA;;AACK,YAAML,CAAC,GAAG,CAAC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ,CAAC,CAAD,EAAI,EAAJ;AAA1B,OAAD,EAAqC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ,CAAC,CAAD,EAAI,CAAJ,EAAM,CAAN,EAAQ,CAAR;AAA1B,OAArC,CAAV;AACC,WAAKpN,QAAL,CAAc;AAAC6D,QAAAA,UAAU,EAAC2J;AAAZ,OAAd;AACAjL,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAEJ,GA/rB4C,CAisB7C;;;AAUA,QAAMqG,WAAN,CAAkBrG,IAAlB,EAAuB;AACnB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAMA,SAAK1B,QAAL,CAAc;AAAC8C,MAAAA,QAAQ,EAAG;AAAZ,KAAd;AACA,UAAMvB,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,wCAAX,EAAqD6B,OAArD,CAAtB;AACA,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,cAAc,GAAE,EAApB;AACA,UAAIgM,cAAc,GAAG,EAArB;AACA,UAAI7L,QAAQ,GAAG,EAAf;;AACA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWgC,SAAX,IAAwBvC,KAA5B,EAAkC;AAAC0B,UAAAA,cAAc,CAACY,IAAf,CAAoBtC,KAApB;AAA2B,SAA9D,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;;AACA,YAAI5B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA0N,UAAAA,cAAc,CAACpL,IAAf,CAAoBE,SAApB;AAEC,SALD,MAMI,CAAE;AACT;;AACJ,YAAM2J,CAAC,GAAG,CAAC;AAAE5M,QAAAA,IAAI,EAAE,GAAR;AAAaS,QAAAA,KAAK,EAAE;AAApB,OAAD,CAAV;AAEC,WAAKH,QAAL,CAAc;AAAC8C,QAAAA,QAAQ,EAAC+K;AAAV,OAAd;AAED;AAEJ,GA/vB4C,CAkwB7C;;;AAUA,QAAM1F,mBAAN,CAA0BzG,IAA1B,EAA+B;AAC3B,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAMA,SAAK1B,QAAL,CAAc;AAAC+C,MAAAA,WAAW,EAAG;AAAf,KAAd;AACA,UAAMxB,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,wCAAX,EAAqD6B,OAArD,CAAtB;AACA,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,cAAc,GAAE,EAApB;AACA,UAAIiM,iBAAiB,GAAG,EAAxB;AACA,UAAI9L,QAAQ,GAAG,EAAf;;AACA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWgC,SAAX,IAAwBvC,KAA5B,EAAkC;AAAC0B,UAAAA,cAAc,CAACY,IAAf,CAAoBtC,KAApB;AAA2B,SAA9D,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;;AACA,YAAI5B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACA2N,UAAAA,iBAAiB,CAACrL,IAAlB,CAAuBE,SAAvB;AAEC,SALD,MAMI,CAAE;AACT;;AACJ,YAAM2J,CAAC,GAAG,CAAC;AAAE5M,QAAAA,IAAI,EAAE,GAAR;AAAaS,QAAAA,KAAK,EAAE;AAApB,OAAD,CAAV;AAEC,WAAKH,QAAL,CAAc;AAAC+C,QAAAA,WAAW,EAAC+K;AAAb,OAAd;AAED;AAEJ,GAj0B4C,CA60B7C;;;AAQA,QAAMxF,aAAN,CAAoB5G,IAApB,EAAyB;AAErB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAMA,SAAK1B,QAAL,CAAc;AAACiD,MAAAA,gBAAgB,EAAG;AAApB,KAAd;AACA,UAAM1B,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,wCAAX,EAAqD6B,OAArD,CAAtB;AACA,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAI2L,UAAU,GAAE,EAAhB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIxL,QAAQ,GAAG,EAAf;;AACA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWP,KAAX,IAAoBA,KAAxB,EAA8B;AAACoN,UAAAA,UAAU,CAAC9K,IAAX,CAAgBtC,KAAhB;AAAuB,SAAtD,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;;AACA,YAAI5B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACAqN,UAAAA,UAAU,CAAC/K,IAAX,CAAgBE,SAAhB;AAEC,SALD,MAMI,CAAE;AAGT;;AACD,YAAM2K,EAAE,GAAG,CAAC;AAAEvH,QAAAA,IAAI,EAAE,GAAR;AAAagI,QAAAA,KAAK,EAAE;AAApB,OAAD,EAA4B;AAAEhI,QAAAA,IAAI,EAAE,WAAR;AAAqBgI,QAAAA,KAAK,EAAE;AAA5B,OAA5B,CAAX;AACCxL,MAAAA,OAAO,CAACC,GAAR,CAAYgL,UAAZ;AACH,WAAKxN,QAAL,CAAc;AAACiD,QAAAA,gBAAgB,EAACuK;AAAlB,OAAd;AACA,YAAMQ,MAAM,GAAG,CAAC,KAAKtN,KAAL,CAAWuN,IAAZ,EAAkB,KAAKvN,KAAL,CAAWuN,IAAX,GAAgB,CAAlC,EAAqC,KAAKvN,KAAL,CAAWuN,IAAX,GAAgB,CAArD,EAAwD,KAAKvN,KAAL,CAAWwN,IAAnE,EAAyE,KAAKxN,KAAL,CAAWwN,IAAX,GAAgB,CAAzF,EACE,KAAKxN,KAAL,CAAWuN,IAAX,GAAgB,CADlB,CAAf;AAEA,WAAKjO,QAAL,CAAc;AAAC6M,QAAAA,UAAU,EAACU;AAAZ,OAAd;AAED;AAEJ,GAj5B4C,CAo5B7C;;;AAQA,QAAM9E,WAAN,CAAkB/G,IAAlB,EAAuB;AAEnB,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAMA,SAAK1B,QAAL,CAAc;AAACgD,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,UAAMzB,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,wCAAX,EAAqD6B,OAArD,CAAtB;AACA,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAI2L,UAAU,GAAE,EAAhB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIxL,QAAQ,GAAG,EAAf;;AACA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACa,IAAV,CAAe1B,GAAf;;AACA,YAAIA,GAAG,IAAI,OAAX,EAAmB;AACnBiB,UAAAA,QAAQ,CAACS,IAAT,CAAc1B,GAAd;AAEC,SAHD,MAII,CAAE;;AAEN,YAAIZ,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB;;AACA,YAAI,KAAKL,KAAL,CAAWP,KAAX,IAAoBA,KAAxB,EAA8B;AAACoN,UAAAA,UAAU,CAAC9K,IAAX,CAAgBtC,KAAhB;AAAuB,SAAtD,MACK,CACJ;;AAED,YAAIwC,SAAS,GAAG,EAAhB;;AACA,YAAI5B,GAAG,IAAI,OAAX,EAAmB;AACnB4B,UAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAmBxC,KAAnB;AACAqN,UAAAA,UAAU,CAAC/K,IAAX,CAAgBE,SAAhB;AAEC,SALD,MAMI,CAAE;AAGT;;AACD,YAAM2K,EAAE,GAAG,CAAC;AAAEvH,QAAAA,IAAI,EAAE,GAAR;AAAagI,QAAAA,KAAK,EAAE;AAApB,OAAD,EAA4B;AAAEhI,QAAAA,IAAI,EAAE,WAAR;AAAqBgI,QAAAA,KAAK,EAAE;AAA5B,OAA5B,CAAX;AACCxL,MAAAA,OAAO,CAACC,GAAR,CAAYgL,UAAZ;AACH,WAAKxN,QAAL,CAAc;AAACgD,QAAAA,UAAU,EAACwK;AAAZ,OAAd;AACA,YAAMQ,MAAM,GAAG,CAAC,KAAKtN,KAAL,CAAWuN,IAAZ,EAAkB,KAAKvN,KAAL,CAAWuN,IAAX,GAAgB,CAAlC,EAAqC,KAAKvN,KAAL,CAAWuN,IAAX,GAAgB,CAArD,EAAwD,KAAKvN,KAAL,CAAWwN,IAAnE,EAAyE,KAAKxN,KAAL,CAAWwN,IAAX,GAAgB,CAAzF,EACE,KAAKxN,KAAL,CAAWuN,IAAX,GAAgB,CADlB,CAAf;AAEA,WAAKjO,QAAL,CAAc;AAAC6M,QAAAA,UAAU,EAACU;AAAZ,OAAd;AAED;AAEJ,GAx9B4C,CA09B7C;;;AAwBA,QAAMtE,kBAAN,CAAyBvH,IAAzB,EAA8B;AAE1B,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAACmM,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACH,UAAM5K,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,2CAAX,EAAwD6B,OAAxD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AAEE,YAAM0M,QAAQ,GAAG5M,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkB,UAAlB,CAAjB;AACA,YAAM0M,UAAU,GAAG7M,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkB,YAAlB,CAAnB;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAI2L,UAAU,GAAE,EAAhB;AACA,UAAIc,cAAc,GAAG,EAArB;;AACA,WAAK1M,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAY8L,QAAZ,EAAsB7L,MAAtC,EAA8CX,CAAC,EAA/C,EAAmD;AAC7CY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAY8L,QAAZ,EAAsBxM,CAAtB,CAAV,CAF6C,CAGzD;;AACY,YAAIxB,KAAK,GAAGgO,QAAQ,CAACpN,GAAD,CAApB;AACAwM,QAAAA,UAAU,CAAC9K,IAAX,CAAgBtC,KAAhB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,QAAlB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,CAACxC,KAAD,CAAlB;AACAkO,QAAAA,cAAc,CAAC5L,IAAf,CAAoBE,SAApB;AACH;;AACH,UAAI2L,CAAJ;AACA,UAAIC,WAAW,GAAE,EAAjB;AACA,UAAIC,YAAY,GAAE,EAAlB;AACA,UAAIC,oBAAoB,GAAE,EAA1B;;AACA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlM,MAAM,CAACC,IAAP,CAAY+L,UAAZ,EAAwB9L,MAAxC,EAAgDgM,CAAC,EAAjD,EAAqD;AAC/C/L,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAAC4M,CAAD,CAAhB;AACA,YAAIvN,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAY8L,QAAZ,EAAsBG,CAAtB,CAAV,CAF+C,CAG3D;;AACY,YAAInO,KAAK,GAAGgO,QAAQ,CAACpN,GAAD,CAApB;AACAyN,QAAAA,YAAY,CAAC/L,IAAb,CAAkBtC,KAAlB;AACA,YAAIwC,SAAS,GAAG,EAAhB;AACA8L,QAAAA,oBAAoB,CAAC,MAAD,CAApB,GAA6BL,UAAU,CAAC,OAAD,CAAvC;AACAK,QAAAA,oBAAoB,CAAC,MAAD,CAApB,GAA6B,MAA7B;AACAA,QAAAA,oBAAoB,CAAC,MAAD,CAApB,GAA6BD,YAA7B;AAEH;;AAEDH,MAAAA,cAAc,CAAC5L,IAAf,CAAoBgM,oBAApB;AAEF,YAAMhB,MAAM,GAAG,CAAC,KAAK/M,KAAL,CAAWgN,MAAZ,EAAoB,KAAKhN,KAAL,CAAWiN,MAA/B,CAAf;AACA,WAAK3N,QAAL,CAAc;AAAC4N,QAAAA,CAAC,EAACH;AAAH,OAAd;AACA,YAAMiB,CAAC,GAAG,CAAC;AAAChP,QAAAA,IAAI,EAAE,MAAP;AAAegC,QAAAA,IAAI,EAAE,CAAC,OAAD,CAArB;AAAgC0K,QAAAA,IAAI,EAAE;AAAtC,OAAD,CAAV;AACA,WAAKpM,QAAL,CAAc;AAACmM,QAAAA,kBAAkB,EAACkC;AAApB,OAAd;AACA9L,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAEJ,GA9iC4C,CAgjC7C;;;AAmBA,QAAM8H,wBAAN,CAA+B9H,IAA/B,EAAoC;AAEhC,UAAMwB,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBJ,MAAAA,OAFgB;AAGhBK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe/B,IAAf;AAHW,KAAhB;AAKA,SAAK1B,QAAL,CAAc;AAACwM,MAAAA,iBAAiB,EAAG;AAArB,KAAd;AACH,UAAMjL,OAAO,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,mCAAX,EAAgD6B,OAAhD,CAAtB;AACG,UAAM5B,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,CAAaA,IAA1B;AACA,WAAK1B,QAAL,CAAc0B,IAAd;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAI2L,UAAU,GAAE,EAAhB;AAEA,UAAIoB,gBAAgB,GAAG,EAAvB;;AACA,WAAKhN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AACzCY,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACC,CAAD,CAAhB;AACA,YAAIZ,GAAG,GAAGqB,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBC,CAAlB,CAAV,CAFyC,CAGrD;;AACY,YAAIxB,KAAK,GAAGuB,IAAI,CAACX,GAAD,CAAhB,CAJyC,CAKrD;;AACY,YAAI4B,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB5B,GAAlB;AACA4B,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,CAACxC,KAAD,CAAlB;AACAwO,QAAAA,gBAAgB,CAAClM,IAAjB,CAAsBE,SAAtB;AAEH;;AACD,YAAM+L,CAAC,GAAE,MAAT;AACF,WAAK1O,QAAL,CAAc;AAACwM,QAAAA,iBAAiB,EAACmC;AAAnB,OAAd;AACApM,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD;AAEJ;;AAmBDkN,EAAAA,iBAAiB,GAAG,CACpB;AACA;AAGG;;AAKD1K,EAAAA,MAAM,GAAG;AAGX,UAAM2K,EAAE,GAAG,IAAI9J,OAAO,CAAC+J,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKrO,KAAL,CAAWsC,UAArC,CAAX;AACA6L,IAAAA,EAAE,CAACG,SAAH,CAAa;AACX5C,MAAAA,IAAI,EAAE,SADK;AAEX6C,MAAAA,KAAK,EAAE,OAFI;AAGXC,MAAAA,SAAS,EAAE,MAHA;AAIXC,MAAAA,EAAE,EAAE,SAJO;AAKXlF,MAAAA,KAAK,EAAE;AALI,KAAb;AAOA,UAAM6C,QAAQ,GAAG+B,EAAE,CAACO,IAApB;AAGA,UAAMC,GAAG,GAAG,IAAItK,OAAO,CAAC+J,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKrO,KAAL,CAAWuC,gBAArC,CAAZ;AACAoM,IAAAA,GAAG,CAACL,SAAJ,CAAc;AACZ5C,MAAAA,IAAI,EAAE,SADM;AAEZ6C,MAAAA,KAAK,EAAE,OAFK;AAGZC,MAAAA,SAAS,EAAE,MAHC;AAIZC,MAAAA,EAAE,EAAE;AAJQ,KAAd;AAMA,UAAMG,QAAQ,GAAGD,GAAG,CAACD,IAArB;AAEA,UAAMG,IAAI,GAAG,IAAIxK,OAAO,CAAC+J,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKrO,KAAL,CAAWgD,SAArC,CAAb;AACI6L,IAAAA,IAAI,CAACP,SAAL,CAAe;AACb5C,MAAAA,IAAI,EAAE,MADO;AAEboD,MAAAA,MAAM,EAAC,KAAK9O,KAAL,CAAWiD,UAFL;AAGb5C,MAAAA,GAAG,EAAE,WAHQ;AAIbZ,MAAAA,KAAK,EAAE;AAJM,KAAf;AAMA,UAAMsP,QAAQ,GAAGF,IAAI,CAACH,IAAtB;AAIJ,UAAMM,MAAM,GAAG,IAAI3K,OAAO,CAAC+J,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKrO,KAAL,CAAWoC,QAArC,CAAf;AACA4M,IAAAA,MAAM,CAACV,SAAP,CAAiB;AACf5C,MAAAA,IAAI,EAAE,MADS;;AAEfuD,MAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,eAAOD,CAAC,CAACzP,KAAF,GAAU0P,CAAC,CAAC1P,KAAZ,GAAoB,CAA3B;AACD;;AAJc,KAAjB;AAMA,UAAM2P,cAAc,GAAGJ,MAAM,CAACN,IAA9B;AAMA,UAAMW,uBAAuB,GAAG,CAAC;AAC/B7K,MAAAA,OAAO,EAAE,OADsB;AAE/BC,MAAAA,GAAG,EAAE,CAF0B;AAG/BC,MAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBI,GAAnB,EAAwB;AACxB,YAAIA,GAAG,GAAG,MAAV,EAAkB;AACK,iBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,SAFpB,MAGgB,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,iBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,SAJI,MAMC;AACM,iBAAOA,GAAP;AACH;AACxB;AAhBwB,KAAD,EAiB9B;AACAN,MAAAA,OAAO,EAAE,MADT;AAEAC,MAAAA,GAAG,EAAE,CAFL;AAGAQ,MAAAA,GAAG,EAAE;AAHL,KAjB8B,CAAhC;AAyBA,UAAMqK,SAAS,GAAG,IAAIjL,OAAO,CAAC+J,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKrO,KAAL,CAAWqC,WAArC,CAAlB;AACAiN,IAAAA,SAAS,CAAChB,SAAV,CAAoB;AAClB5C,MAAAA,IAAI,EAAE,MADY;;AAElBuD,MAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,eAAOD,CAAC,CAACzP,KAAF,GAAU0P,CAAC,CAAC1P,KAAZ,GAAoB,CAA3B;AACD;;AAJiB,KAApB;AAMA,UAAM8P,iBAAiB,GAAGD,SAAS,CAACZ,IAApC;AAII,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACzK,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAWT,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKH,qBAA1E;AACI,MAAA,KAAK,EAAE;AAAEoL,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAK1P,KAAL,CAAWiM,aAApB,CAFL,EAGM,KAAKjM,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EASI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWL,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,sBAA1E;AACK,MAAA,KAAK,EAAE;AAAE8K,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAK1P,KAAL,CAAWkM,iBAApB,CAFN,EAGO,KAAKlM,KAAL,CAAWgM,SAAX,CAAqB5G,GAArB,CAAyB,CAAC3F,KAAD,EAAO+F,KAAP,KACjB;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHP,CATJ,EAiBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,OAAO,EAAE,KAAKG,uBAAtB;AAA+C,MAAA,SAAS,EAAC,cAAzD;AAAwE,MAAA,KAAK,EAAE;AAAC8P,QAAAA,UAAU,EAAC;AAAZ,OAA/E;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAjBJ,EAqBV,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACW;AAAQ,MAAA,OAAO,EAAE,KAAKpJ,SAAtB;AAAiC,MAAA,SAAS,EAAC,iBAA3C;AAA6D,MAAA,KAAK,EAAE;AAACoJ,QAAAA,UAAU,EAAC;AAAZ,OAApE;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADX,EAGa,oBAAC,oBAAD;AACI,MAAA,mBAAmB,EAAE,KAAKjJ,WAD9B;AAEI,MAAA,OAAO,EAAE,KAAKzG,KAAL,CAAWuG,YAFxB;AAGI,MAAA,QAAQ,EAAE,KAAKC,YAHnB;AAII,MAAA,QAAQ,EAAE,KAAKoJ,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb,CArBU,EA+BT,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE,KAAK5P,KAAL,CAAWkD,sBAA9C;AAAsE,MAAA,KAAK,EAAEmM,uBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,YAAhB;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CA/BS,CALH,CADA,CADJ,EAkDR,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACpL,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAWgC,SAAjD;AAA4D,MAAA,QAAQ,EAAE,KAAKoF,oBAA3E;AACI,MAAA,KAAK,EAAE;AAAEoD,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAK1P,KAAL,CAAWiM,aAApB,CAFL,EAGM,KAAKjM,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EASA,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE2P,cAAnC;AAAmD,MAAA,KAAK,EAAEC,uBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,EAEP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,EAGP,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHO,EAIP,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJO,CATA,CALH,CADZ,CAlDQ,CADA,EA8EP,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAAC5L,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,qBADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAWwH,WAAjD;AAA8D,MAAA,QAAQ,EAAE,KAAKD,4BAA7E;AACI,MAAA,KAAK,EAAE;AAAEiD,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAK1P,KAAL,CAAWiM,aAA/B,CAFL,EAGM,KAAKjM,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EAST,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE8P,iBAAnC;AAAsD,MAAA,KAAK,EAAE1K,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CATS,CALH,CADD,CADV,EAyBD,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACZ,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,kBADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAW+G,OAAjD;AAA0D,MAAA,QAAQ,EAAE,KAAKD,YAAzE;AACI,MAAA,KAAK,EAAE;AAAE0D,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGM,KAAK1P,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EASI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWiH,OAAjD;AAA0D,MAAA,QAAQ,EAAE,KAAKD,aAAzE;AACK,MAAA,KAAK,EAAE;AAAEwD,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN,EAGO,KAAK1P,KAAL,CAAWgM,SAAX,CAAqB5G,GAArB,CAAyB,CAAC3F,KAAD,EAAO+F,KAAP,KACjB;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHP,CATJ,EAiBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,OAAO,EAAE,KAAKyH,cAAtB;AAAsC,MAAA,SAAS,EAAC,cAAhD;AAA+D,MAAA,KAAK,EAAE;AAACwI,QAAAA,UAAU,EAAC;AAAZ,OAAtE;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAjBJ,EAqBG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK1P,KAAL,CAAW+J,QAApC;AAA8C,MAAA,MAAM,EAAE,KAAK/J,KAAL,CAAWmD,UAAjE;AAA6E,MAAA,IAAI,EAAC,KAAlF;AAAwF,MAAA,KAAK,EAAC,KAA9F;AAAoG,MAAA,MAAM,EAAC,KAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBH,CALH,CADZ,CAzBC,CA9EO,EAyIP,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACc,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEO,oBAAC,IAAD;AACQ,MAAA,KAAK,EAAC,cADd;AAEQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFf;AAGQ,MAAA,QAAQ,EAAE,KAHlB;AAIQ,MAAA,SAAS,EAAC,qDAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAW2H,WAAjD;AAA8D,MAAA,QAAQ,EAAE,KAAKD,iBAA7E;AACY,MAAA,KAAK,EAAE;AAAE8C,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEa;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAK1P,KAAL,CAAWiM,aAA/B,CAFb,EAGc,KAAKjM,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHd,CADC,EAYD,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAEmP,QAAnC;AAA6C,MAAA,KAAK,EAAEjK,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,MAAM,EAAE,IAA5B;AAAkC,MAAA,WAAW,EAAE,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAE;AAAEyE,QAAAA,MAAM,EAAE,MAAV;AAAkB0G,QAAAA,SAAS,EAAE;AAA7B,OAA5C;AACE,MAAA,KAAK,EAAE,CAAC,SAAD,EAAY;AACjBpL,QAAAA,SAAS,EAAE,CAACI,GAAD,EAAMO,IAAN,KAAe;AACxB,iBAAOA,IAAI,CAAC0K,KAAL,CAAW1K,IAAX,GAAkB,IAAlB,GAAyBP,GAAhC;AACD;AAHgB,OAAZ,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CAZC,CALD,CAFP,CAFA,EA0CD,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACb,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,IAAD;AACQ,MAAA,KAAK,EAAC,YADd;AAEQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFf;AAGQ,MAAA,QAAQ,EAAE,KAHlB;AAIQ,MAAA,SAAS,EAAC,qDAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAW8H,SAAjD;AAA4D,MAAA,QAAQ,EAAE,KAAKD,eAA3E;AACY,MAAA,KAAK,EAAE;AAAE2C,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEa;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAK1P,KAAL,CAAWiM,aAA/B,CAFb,EAGc,KAAKjM,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHd,CADC,EAYD,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE2M,QAAnC;AAA6C,MAAA,KAAK,EAAE7H,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKoB,oBAAC,GAAD;AAClB,MAAA,QAAQ,EAAC,SADS;AAElB,MAAA,KAAK,EAAC,MAFY;AAGlB,MAAA,KAAK,EAAE;AAAE6E,QAAAA,MAAM,EAAE,MAAV;AAAkB0G,QAAAA,SAAS,EAAE;AAA7B,OAHW;AAIlB,MAAA,KAAK,EAAE,CAAC,SAAD,EAAY;AACjBpL,QAAAA,SAAS,EAAE,CAACI,GAAD,EAAMO,IAAN,KAAe;AACxB,iBAAOA,IAAI,CAAC0K,KAAL,CAAW1K,IAAX,GAAkB,IAAlB,GAAyBP,GAAhC;AACD;AAHgB,OAAZ,CAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALpB,CAZC,CALD,CAFR,CA1CC,CAzIO,EAoOR,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACb,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,cADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAWiI,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,sBAA1E;AACI,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGM,KAAK1P,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EASI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWmI,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,uBAA1E;AACK,MAAA,KAAK,EAAE;AAAEsC,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN,EAGO,KAAK1P,KAAL,CAAWgM,SAAX,CAAqB5G,GAArB,CAAyB,CAAC3F,KAAD,EAAO+F,KAAP,KACjB;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHP,CATJ,EAiBI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWqI,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,uBAA1E;AACK,MAAA,KAAK,EAAE;AAAEoC,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN,EAGO,KAAK1P,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHP,CAjBJ,EAyBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,OAAO,EAAE,KAAK6I,kBAAtB;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAmE,MAAA,KAAK,EAAE;AAACoH,QAAAA,UAAU,EAAC;AAAZ,OAA1E;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAzBJ,EA6BG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK1P,KAAL,CAAW8K,mBAApC;AACA,MAAA,MAAM,EAAE,KAAK9K,KAAL,CAAWyL,kBADnB;AACuC,MAAA,IAAI,EAAC,MAD5C;AACmD,MAAA,KAAK,EAAC,KADzD;AAC+D,MAAA,MAAM,EAAC,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BH,CALH,CADZ,CAFA,EA2CA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACxH,QAAAA,IAAI,EAAE,EAAP;AAAWuL,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACvL,QAAAA,IAAI,EAAC,EAAN;AAAUuL,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFX;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,SAAS,EAAC,qDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKzP,KAAL,CAAW0I,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,sBAA1E;AACI,MAAA,KAAK,EAAE;AAAE+B,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,EAGM,KAAK1P,KAAL,CAAW+L,KAAX,CAAiB3G,GAAjB,CAAqB,CAAC3F,KAAD,EAAO+F,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHN,CADL,EASI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW4I,QAAjD;AAA2D,MAAA,QAAQ,EAAE,KAAKD,uBAA1E;AACK,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAC,OAAR;AAAiBkF,QAAAA,UAAU,EAAC;AAA5B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN,EAGO,KAAK1P,KAAL,CAAWgM,SAAX,CAAqB5G,GAArB,CAAyB,CAAC3F,KAAD,EAAO+F,KAAP,KACjB;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEmK,UAAAA,MAAM,EAAE,UAAV;AAAsBrF,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE9E,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD/F,KADpD,MAAT;AAC+E,KAFxF,CAHP,CATJ,EAiBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAQ,MAAA,OAAO,EAAE,KAAKoJ,iBAAtB;AAAyC,MAAA,SAAS,EAAC,cAAnD;AAAkE,MAAA,KAAK,EAAE;AAAC6G,QAAAA,UAAU,EAAC;AAAZ,OAAzE;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAjBJ,EAqBG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK1P,KAAL,CAAW2L,kBAApC;AACA,MAAA,MAAM,EAAE,KAAK3L,KAAL,CAAW8L,iBADnB;AACsC,MAAA,IAAI,EAAC,MAD3C;AACkD,MAAA,KAAK,EAAC,KADxD;AAC8D,MAAA,MAAM,EAAC,KADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBH,CALH,CADZ,CA3CA,CApOQ,EAkTN,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlTM,CADJ,CADA;AA6TD;;AAthD0C;;AA6hD7C,eAAezF,cAAf","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\nline_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\nline_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\ntable_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\ntable_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n    };\n  }\n\n\n  componentWillMount() {\n\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n  }\n\n\n  async loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n\n\n\n\n\n\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n      this.setState({table_columns:table_column_list})\n      this.setState({table_data:table_data_list})\n\n\n    }\n  }\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_table_columns : []})\n    this.setState({line_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n    }\n}\n// ===============================================Table data Line chart ================================================\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n   this.setState({line_table_columns : []})\n    this.setState({line_table_data : []})\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n      var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n\n      table_data_list.push(table_data_dict)\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n      console.log(data);\n    }\n\n\n\n}\n\n\n\n\n//======================================================================================================================\n\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 240 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n      return (\n        <Modal visible={visible}\n          title=\"Chart Table Data\"\n          okText=\"Download\"\n          onCancel={onCancel}\n          onOk={onCreate}\n          >\n         <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n        </Modal>\n      );\n    }\n  }\n);\n\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\nconst sourceData = [\n  { name: 'A', value: 131744 },\n  { name: 'B', value: 104970 },\n  { name: 'C', value: 29034 },\n  { name: 'D', value: 23489 },\n  { name: 'E', value: 18203 },\n];\n\n\n\n\nconst vertical_data = [\n  { name: 'A', value: 30000000 },\n  { name: 'B', value: 40000000 },\n  { name: 'C', value: 530000000 },\n\n];\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar categories_data = [];\n\nvar months = categories_data.map((item) => item.month).filter((item, index, array) => array.indexOf(item) == index)\n\n\nconst productTotals = categories_data.reduce((obj, curr) => {\n    if(!obj[curr.name]){\n        obj[curr.name] = []\n    }\n\n    obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records)\n    return obj\n}, {})\n\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n    return {\n        name: name,\n        data: months.map((month, monthIndex) => {\n            if(!prodArr[monthIndex]){\n                return 0\n            } else {\n                return prodArr[monthIndex]\n            }\n\n        })\n    }\n\n})\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\nline_chart_options: {\n            chart: {\n                  zoom: {\n                      enabled: false\n                  }\n              },\n              dataLabels: {\n                  enabled: false\n              },\n              stroke: {\n                  curve: 'straight'\n              },\n              title: {\n                  text: '',\n                  align: 'left'\n              },\n              grid: {\n                  row: {\n                      colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n                      opacity: 0.5\n                  },\n              },\n              xaxis: {\n                  categories: [...months],\n              }\n          },\n          line_chart_series:[],\n\n\n\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: {\n              categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            }\n          },\n\n      series2:[],\n\n\nbar_chart_options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              }\n            },\n            dataLabels: {\n              enabled: false,\n\n            },\n\n\n            xaxis: {\n              categories: [],\n            }\n          },\nbar_chart_series: [],\n\n\n\n\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n\n\n\n\narea_chart_options: {\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n\n\n            xaxis: {\n\n              categories: [\"\"],\n\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              },\n            }\n          },\n\n\narea_chart_series:[{\n            name: 'series1',\n            name: 'series3',\n            data: [31, 40, 28, 51, 42, 109, 100]\n          }, {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          }],\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_status:\"Status\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[]\n\n      }\n\n\n   }\n\n\n showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n  async loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            var table_data_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            table_data_list.push(table_data_dict)\n\n\n\n\n            }\n            else{}\n        }\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n      this.setState({table_columns:table_column_list})\n      this.setState({table_data:table_data_list})\n\n\n    }\n  }\n\n\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n        }\n\n\n     const sd = [{name: 'B', value: 13000}]\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      console.log(data);\n    }\n\n\n\n}\n\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n        }\n\n\n     const sd = [{name: 'B', value: 13000}]\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      console.log(data);\n    }\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n     this.loadGroupBarData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadGroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [1, 23]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            }\n            else{}\n        }\n     const x = [{ name: 'A', value: 131744 }]\n\n      this.setState({bar_data:Bar_chart_list})\n\n    }\n\n}\n\n\n//========================================== Vertical bar Chart ================================================================\nhandleSubmitVerticalBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_v_bar: e.target.value});\n         this.VerticalBarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync VerticalBarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            }\n            else{}\n        }\n     const x = [{ name: 'A', value: 131744 }]\n\n      this.setState({ve_bar_data:Ve_Bar_chart_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n//========================================== Donut Chart ================================================================\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nmixedCharthandleSubmit = (e) => {\n     this.setState({value_mx: e.target.value});\n };\n\nmixedCharthandleSubmit1 = (e) => {\n    this.setState({value_my: e.target.value});\n  };\n\n\n mixedCharthandleSubmit2 = (e) => {\n    this.setState({value_mz: e.target.value});\n  };\n\n\nmixed_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadMixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my, C:this.state.value_mz}\n  );\n  };\n\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n        }\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n        max_chart_list.push(max_chart_count_list)\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      console.log(data);\n    }\n\n}\n\n//==========================================================Stacked Area chart==========================================\n\nArea_CharthandleSubmit = (e) => {\n     this.setState({value_ax: e.target.value});\n };\n\nArea_CharthandleSubmit1 = (e) => {\n    this.setState({value_ay: e.target.value});\n  };\n\n\narea_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadStackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay}\n  );\n  };\n\n\nasync loadStackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            SArea_chart_list.push(data_dict)\n\n        }\n        const m =\"test\"\n      this.setState({area_chart_series:SArea_chart_list})\n      console.log(data);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomponentDidMount() {\n//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n//  this.setState({line_data:sourceDataDaily})\n\n\n  }\n\n\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\n\n    return (\n    <div>\n        <div id=\"content\">\n        <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Line chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_amount_USD}</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmitLineChartOK} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n     <React.Fragment>\n                <button onClick={this.showModal} className='btn btn-primary' style={{marginLeft:\"10px\"}}\n                  type='button'>Table View</button>\n                  <CollectionCreateForm\n                      wrappedComponentRef={this.saveFormRef}\n                      visible={this.state.modalVisible}\n                      onCancel={this.handleCancel}\n                      onCreate={this.handleCreate}\n                  />\n    </React.Fragment>\n      <Chart forceFit height={400} data={this.state.line_chart_source_data} scale={line_chart_source_scale}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Line position=\"name*value\"/>\n        <Point position=\"name*value\" shape=\"circle\"/>\n      </Chart>\n\n\n             </div>\n         </Card>\n      </Col>\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n        <Coord type=\"rect\" direction=\"LB\" />\n        <Tooltip />\n        <Axis dataKey=\"country\" label={{ offset: 12 }} />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n\n </Row>\n <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Vertical Bar Chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_v_bar} onChange={this.handleSubmitVerticalBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n      <Chart forceFit height={400} data={vertical_bar_data} scale={vertical_scale}>\n        <Tooltip />\n        <Axis />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Group Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n </Row>\n\n\n <Row type=\"flex\" gutter={24}>\n\n <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Donut chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_donut} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={don_data} scale={scale1}>\n        <Tooltip showTitle={false} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={pie_data} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n                            <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n\n\n<Row type=\"flex\" gutter={24}>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Mixed chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_mx} onChange={this.mixedCharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_my} onChange={this.mixedCharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_mz} onChange={this.mixedCharthandleSubmit2}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Zaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.mixed_handleSubmit} className='btn btn-info' style={{marginLeft:\"15px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.mixed_chart_options}\n                  series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Stacked Area Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_ax} onChange={this.Area_CharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_ay} onChange={this.Area_CharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.area_handleSubmit} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.area_chart_options}\n                  series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n</Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
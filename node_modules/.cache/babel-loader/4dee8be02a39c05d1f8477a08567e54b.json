{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar attributes = require('./attributes');\n\nvar basePlotLayoutAttributes = require('../../plots/layout_attributes');\n\nvar helpers = require('./helpers');\n\nmodule.exports = function legendDefaults(layoutIn, layoutOut, fullData) {\n  var containerIn = layoutIn.legend || {};\n  var legendTraceCount = 0;\n  var legendReallyHasATrace = false;\n  var defaultOrder = 'normal';\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    if (!trace.visible) continue; // Note that we explicitly count any trace that is either shown or\n    // *would* be shown by default, toward the two traces you need to\n    // ensure the legend is shown by default, because this can still help\n    // disambiguate.\n\n    if (trace.showlegend || trace._dfltShowLegend) {\n      legendTraceCount++;\n\n      if (trace.showlegend) {\n        legendReallyHasATrace = true; // Always show the legend by default if there's a pie,\n        // or if there's only one trace but it's explicitly shown\n\n        if (Registry.traceIs(trace, 'pie-like') || trace._input.showlegend === true) {\n          legendTraceCount++;\n        }\n      }\n    }\n\n    if (Registry.traceIs(trace, 'bar') && layoutOut.barmode === 'stack' || ['tonextx', 'tonexty'].indexOf(trace.fill) !== -1) {\n      defaultOrder = helpers.isGrouped({\n        traceorder: defaultOrder\n      }) ? 'grouped+reversed' : 'reversed';\n    }\n\n    if (trace.legendgroup !== undefined && trace.legendgroup !== '') {\n      defaultOrder = helpers.isReversed({\n        traceorder: defaultOrder\n      }) ? 'reversed+grouped' : 'grouped';\n    }\n  }\n\n  var showLegend = Lib.coerce(layoutIn, layoutOut, basePlotLayoutAttributes, 'showlegend', legendReallyHasATrace && legendTraceCount > 1);\n  if (showLegend === false && !containerIn.uirevision) return;\n  var containerOut = Template.newContainer(layoutOut, 'legend');\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  coerce('uirevision', layoutOut.uirevision);\n  if (showLegend === false) return;\n  coerce('bgcolor', layoutOut.paper_bgcolor);\n  coerce('bordercolor');\n  coerce('borderwidth');\n  Lib.coerceFont(coerce, 'font', layoutOut.font);\n  var orientation = coerce('orientation');\n  var defaultX, defaultY, defaultYAnchor;\n\n  if (orientation === 'h') {\n    defaultX = 0;\n\n    if (Registry.getComponentMethod('rangeslider', 'isVisible')(layoutIn.xaxis)) {\n      defaultY = 1.1;\n      defaultYAnchor = 'bottom';\n    } else {\n      // maybe use y=1.1 / yanchor=bottom as above\n      //   to avoid https://github.com/plotly/plotly.js/issues/1199\n      //   in v2\n      defaultY = -0.1;\n      defaultYAnchor = 'top';\n    }\n  } else {\n    defaultX = 1.02;\n    defaultY = 1;\n    defaultYAnchor = 'auto';\n  }\n\n  coerce('traceorder', defaultOrder);\n  if (helpers.isGrouped(layoutOut.legend)) coerce('tracegroupgap');\n  coerce('itemsizing');\n  coerce('itemclick');\n  coerce('itemdoubleclick');\n  coerce('x', defaultX);\n  coerce('xanchor');\n  coerce('y', defaultY);\n  coerce('yanchor', defaultYAnchor);\n  coerce('valign');\n  Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/legend/defaults.js"],"names":["Registry","require","Lib","Template","attributes","basePlotLayoutAttributes","helpers","module","exports","legendDefaults","layoutIn","layoutOut","fullData","containerIn","legend","legendTraceCount","legendReallyHasATrace","defaultOrder","i","length","trace","visible","showlegend","_dfltShowLegend","traceIs","_input","barmode","indexOf","fill","isGrouped","traceorder","legendgroup","undefined","isReversed","showLegend","coerce","uirevision","containerOut","newContainer","attr","dflt","paper_bgcolor","coerceFont","font","orientation","defaultX","defaultY","defaultYAnchor","getComponentMethod","xaxis","noneOrAll"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Template = require('../../plot_api/plot_template');\n\nvar attributes = require('./attributes');\nvar basePlotLayoutAttributes = require('../../plots/layout_attributes');\nvar helpers = require('./helpers');\n\n\nmodule.exports = function legendDefaults(layoutIn, layoutOut, fullData) {\n    var containerIn = layoutIn.legend || {};\n\n    var legendTraceCount = 0;\n    var legendReallyHasATrace = false;\n    var defaultOrder = 'normal';\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(!trace.visible) continue;\n\n        // Note that we explicitly count any trace that is either shown or\n        // *would* be shown by default, toward the two traces you need to\n        // ensure the legend is shown by default, because this can still help\n        // disambiguate.\n        if(trace.showlegend || trace._dfltShowLegend) {\n            legendTraceCount++;\n            if(trace.showlegend) {\n                legendReallyHasATrace = true;\n                // Always show the legend by default if there's a pie,\n                // or if there's only one trace but it's explicitly shown\n                if(Registry.traceIs(trace, 'pie-like') ||\n                    trace._input.showlegend === true\n                ) {\n                    legendTraceCount++;\n                }\n            }\n        }\n\n        if((Registry.traceIs(trace, 'bar') && layoutOut.barmode === 'stack') ||\n                ['tonextx', 'tonexty'].indexOf(trace.fill) !== -1) {\n            defaultOrder = helpers.isGrouped({traceorder: defaultOrder}) ?\n                'grouped+reversed' : 'reversed';\n        }\n\n        if(trace.legendgroup !== undefined && trace.legendgroup !== '') {\n            defaultOrder = helpers.isReversed({traceorder: defaultOrder}) ?\n                'reversed+grouped' : 'grouped';\n        }\n    }\n\n    var showLegend = Lib.coerce(layoutIn, layoutOut,\n        basePlotLayoutAttributes, 'showlegend',\n        legendReallyHasATrace && legendTraceCount > 1);\n\n    if(showLegend === false && !containerIn.uirevision) return;\n\n    var containerOut = Template.newContainer(layoutOut, 'legend');\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    coerce('uirevision', layoutOut.uirevision);\n\n    if(showLegend === false) return;\n\n    coerce('bgcolor', layoutOut.paper_bgcolor);\n    coerce('bordercolor');\n    coerce('borderwidth');\n    Lib.coerceFont(coerce, 'font', layoutOut.font);\n\n    var orientation = coerce('orientation');\n    var defaultX, defaultY, defaultYAnchor;\n\n    if(orientation === 'h') {\n        defaultX = 0;\n\n        if(Registry.getComponentMethod('rangeslider', 'isVisible')(layoutIn.xaxis)) {\n            defaultY = 1.1;\n            defaultYAnchor = 'bottom';\n        } else {\n            // maybe use y=1.1 / yanchor=bottom as above\n            //   to avoid https://github.com/plotly/plotly.js/issues/1199\n            //   in v2\n            defaultY = -0.1;\n            defaultYAnchor = 'top';\n        }\n    } else {\n        defaultX = 1.02;\n        defaultY = 1;\n        defaultYAnchor = 'auto';\n    }\n\n    coerce('traceorder', defaultOrder);\n    if(helpers.isGrouped(layoutOut.legend)) coerce('tracegroupgap');\n\n    coerce('itemsizing');\n\n    coerce('itemclick');\n    coerce('itemdoubleclick');\n\n    coerce('x', defaultX);\n    coerce('xanchor');\n    coerce('y', defaultY);\n    coerce('yanchor', defaultYAnchor);\n    coerce('valign');\n    Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n};\n"]},"metadata":{},"sourceType":"script"}
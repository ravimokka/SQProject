{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\n\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\n\nvar calcSelection = require('../scatter/calc_selection');\n\nfunction isNonBlankString(v) {\n  return v && typeof v === 'string';\n}\n\nmodule.exports = function calc(gd, trace) {\n  var len = trace._length;\n  var calcTrace = new Array(len);\n  var isValidLoc;\n\n  if (trace.geojson) {\n    isValidLoc = function (v) {\n      return isNonBlankString(v) || isNumeric(v);\n    };\n  } else {\n    isValidLoc = isNonBlankString;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var calcPt = calcTrace[i] = {};\n    var loc = trace.locations[i];\n    var z = trace.z[i];\n\n    if (isValidLoc(loc) && isNumeric(z)) {\n      calcPt.loc = loc;\n      calcPt.z = z;\n    } else {\n      calcPt.loc = null;\n      calcPt.z = BADNUM;\n    }\n\n    calcPt.index = i;\n  }\n\n  arraysToCalcdata(calcTrace, trace);\n  colorscaleCalc(gd, trace, {\n    vals: trace.z,\n    containerStr: '',\n    cLetter: 'z'\n  });\n  calcSelection(calcTrace, trace);\n  return calcTrace;\n};","map":null,"metadata":{},"sourceType":"script"}
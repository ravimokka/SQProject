{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\"; // First way to import\n\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader } from \"react-spinners\";\nimport { SyncLoader } from \"react-spinners\";\nimport { LoadingSpinner } from \"react-spinners\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Load Data\"), loading ? React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : React.createElement(ResultsTable, {\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AwesomeComponent;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","css","ClipLoader","FadeLoader","SyncLoader","LoadingSpinner","override","AwesomeComponent","Component","constructor","props","state","loading","render","data","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAAgC,gBAAhC,C,CAGA;;AACA,MAAMC,QAAQ,GAAGL,GAAI;;;;;;;;CAArB;;AAUA,MAAMM,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEFC,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKF,KAD3B;AAAA,UACIG,IADJ,eACIA,IADJ;AAAA,UACUF,OADV,eACUA,OADV;AAGJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKG,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EASGH,OAAO,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAwB,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATlC,CADF;AAaL;;AAxB8C;;AA0B9C,eAAeP,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\n// First way to import\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader\t } from \"react-spinners\";\nimport { SyncLoader\t } from \"react-spinners\";\nimport { LoadingSpinner\t } from \"react-spinners\";\n\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n render() {\n      const { data, loading } = this.state;\n\n      return (\n        <div>\n          <button onClick={this.onClick}>\n            Load Data\n          </button>\n\n          {/*\n            Check the status of the 'loading' variable. If true, then display\n            the loading spinner. Otherwise, display the results.\n          */}\n          {loading ? <LoadingSpinner /> : <ResultsTable results={data} />}\n        </div>\n      );\n}\n}\n export default AwesomeComponent;"]},"metadata":{},"sourceType":"module"}
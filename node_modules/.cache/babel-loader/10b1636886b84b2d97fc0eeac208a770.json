{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/MixedChart.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table } from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\nconst TreeNode = Tree.TreeNode,\n      DirectoryTree = Tree.DirectoryTree;\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider;\n\nclass MixedChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = (keys, event) => {\n      console.log('Trigger Select', keys, event);\n    };\n\n    this.onExpand = () => {\n      console.log('Trigger Expand');\n    };\n\n    this.showModal = () => {\n      alert('hi');\n    };\n\n    this.onChange_Xaxis = checkedValue => {\n      this.setState({\n        checkVal: checkedValue\n      });\n      this.setState({\n        selected_Xaxis: []\n      });\n      const selectedOptions = {\n        'checkedValue': checkedValue.target.value\n      };\n      this.state.selected_Xaxis.push(selectedOptions);\n\n      if (checkedValue.target.checked == true) {\n        this.MixedChartData({\n          ValueX: this.state.selected_Xaxis,\n          ValueY: this.state.selected_Yaxis,\n          ValueZ: this.state.selected_Zaxis,\n          Menu: Menu_name\n        });\n      }\n    };\n\n    this.onChange_Yaxis = checkedValue => {\n      this.setState({\n        checkVal: checkedValue\n      });\n      const selectedOptions = {\n        'checkedValue': 'Amount'\n      };\n      this.state.selected_Yaxis.push(selectedOptions);\n    };\n\n    this.onChange_Zaxis = checkedValue => {\n      this.setState({\n        checkVal: checkedValue\n      });\n      this.setState({\n        selected_Xaxis: []\n      });\n      const selectedOptions = {\n        'checkedValue': checkedValue.target.value\n      };\n      this.state.selected_Zaxis.push(selectedOptions);\n\n      if (checkedValue.target.checked == true) {\n        this.MixedChartData({\n          ValueX: this.state.selected_Xaxis,\n          ValueY: this.state.selected_Yaxis,\n          ValueZ: this.state.selected_Zaxis,\n          Menu: Menu_name\n        });\n      }\n    };\n\n    this.state = {\n      mixed_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 4\n        },\n        title: {\n          text: '',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      mixed_chart_series: [{\n        name: 'Status',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'A',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'B',\n        type: 'column',\n        data: [30]\n      }, {\n        name: 'C',\n        type: 'column',\n        data: [150]\n      }, {\n        name: 'LINE',\n        type: 'line',\n        data: [40, 20]\n      }],\n      checked: true,\n      filterHeaders: [],\n      intHeader: [],\n      filter: [],\n      selected_Xaxis: [{\n        'checkedValue': 'Group'\n      }],\n      selected_Yaxis: [{\n        'checkedValue': 'Amount'\n      }],\n      selected_Zaxis: [{\n        'checkedValue': 'Group'\n      }],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      loading: true,\n      mix_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_mixedChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadFilterHeaders();\n    this.loadIntHeaders();\n    this.loadMixedChartData({\n      ValueX: this.state.selected_Xaxis,\n      ValueY: this.state.selected_Yaxis,\n      ValueZ: this.state.selected_Zaxis,\n      Menu: Menu_name\n    });\n  }\n\n  async loadFilterHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        filterHeaders: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/mixed_dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n      this.setState({\n        mix_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async MixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/mixed_dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n      this.setState({\n        mix_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: '#fff',\n        padding: 24,\n        minHeight: 380\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        padding: '0 50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"button-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }), \"Edit\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }), \"Delete\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Mixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }), \"  Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Mixed\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"Mixed Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.mix_table_columns,\n      dataSource: this.state.mix_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_mixedChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \" Download \")), \";\")))))))))), React.createElement(Layout, {\n      style: {\n        padding: '24px 0',\n        background: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      mode: \"inline\",\n      defaultSelectedKeys: ['1'],\n      defaultOpenKeys: ['sub1'],\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), \" Financial \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"subA\",\n      defaultOpenKeys: ['subA'],\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }), \" Xaxis \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, this.state.filterHeaders.map((value, index) => React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange_Xaxis,\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, value)))), this.state.intHeader.map((value, index) => React.createElement(SubMenu, {\n      key: \"subB\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }), \" Yaxis \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange_Yaxis,\n      checked: this.state.checked,\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, value)))), React.createElement(SubMenu, {\n      key: \"subC\",\n      defaultOpenKeys: ['subA'],\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }), \" Zaxis \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, this.state.filterHeaders.map((value, index) => React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange_Zaxis,\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, value))))), React.createElement(SubMenu, {\n      key: \"sub2\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"solution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }), \" Operational \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \"Status\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, \"Type\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"Filter\"))), React.createElement(SubMenu, {\n      key: \"sub3\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }), \" Management \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, \"Status\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, \"Type\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, \"Filter\"))))), React.createElement(Content, {\n      style: {\n        padding: '0 24px',\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }), this.state.mix_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.mixed_chart_options,\n      series: this.state.mixed_chart_series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    }) : null)))));\n  }\n\n}\n\nexport default MixedChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/MixedChart.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Layout","Menu","Breadcrumb","Icon","Tree","Checkbox","Table","Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","TreeNode","DirectoryTree","SubMenu","Header","Content","Footer","Sider","MixedChart","constructor","props","onSelect","keys","event","console","log","onExpand","showModal","alert","onChange_Xaxis","checkedValue","setState","checkVal","selected_Xaxis","selectedOptions","target","value","state","push","checked","MixedChartData","ValueX","ValueY","selected_Yaxis","ValueZ","selected_Zaxis","onChange_Yaxis","onChange_Zaxis","mixed_chart_options","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","labels","formatter","val","Math","round","yaxis","axisTicks","show","axisBorder","color","style","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","mixed_chart_series","name","type","data","filterHeaders","intHeader","filter","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_xl","value_yl","loading","mix_display","table_columns","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","mix_table_columns","mix_table_data","download_mixedChart_table","firstname","lastname","email","componentWillMount","loadFilterHeaders","loadIntHeaders","loadMixedChartData","promise","post","loginURL","status","d","dou","headers","Headers","append","options","method","body","JSON","stringify","sum_data","count_data","table_dict","i","keys_list","value_list","max_chart_list","table_column_list","table_data_list","table_data_dict","Object","length","data_dict","column_dict","j","c_keys_list","c_value_list","max_chart_count_list","g_data","Actual","Budget","g","m","render","override","background","padding","minHeight","overflowY","height","map","index","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n     checked: true,\n    filterHeaders:[],\n    intHeader:[],\n     filter:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     selected_Yaxis: [{'checkedValue':'Amount'}],\n     selected_Zaxis: [{'checkedValue':'Group'}],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     mix_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.MixedChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, ValueZ:this.state.selected_Zaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\nonChange_Zaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Zaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.MixedChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, ValueZ:this.state.selected_Zaxis, Menu:Menu_name})\n  }\n}\n\n\n\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadMixedChartData({ValueX:this.state.selected_Xaxis,\n                              ValueY:this.state.selected_Yaxis,\n                              ValueZ:this.state.selected_Zaxis,\n                              Menu:Menu_name});\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\n\nasync MixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n\n    }\n\n}\n\n\nrender() {\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <div>\n\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n                                    <div class=\"modal-dialog\">\n                                      <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                         {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                          <h4 class=\"modal-title\">Mixed Table Data</h4>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                         <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                                         style={{overflowY:\"scroll\"}}/>\n\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                          <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                          <CSVLink data={this.state.download_mixedChart_table}>\n                                          <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                                          </CSVLink>;\n                                        </div>\n                                      </div>\n\n                                    </div>\n                                  </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n\n                           <SubMenu key=\"subC\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Zaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Zaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                           </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                              css={override}\n                              size={150} // or 150px\n                              color={\"#123abc\"}\n                              loading={this.state.loading}\n                             />\n                          {this.state.mix_display == true?\n                          <ReactApexChart options={this.state.mixed_chart_options}\n                          series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />:null\n                          }\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n\n    );\n  }\n}\nexport default MixedChart;"]},"metadata":{},"sourceType":"module"}
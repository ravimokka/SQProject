{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function calc(gd, trace, opts) {\n  var fullLayout = gd._fullLayout;\n  var vals = opts.vals;\n  var containerStr = opts.containerStr;\n  var container = containerStr ? Lib.nestedProperty(trace, containerStr).get() : trace;\n  var cOpts = extractOpts(container);\n  var auto = cOpts.auto !== false;\n  var min = cOpts.min;\n  var max = cOpts.max;\n  var mid = cOpts.mid;\n\n  var minVal = function () {\n    return Lib.aggNums(Math.min, null, vals);\n  };\n\n  var maxVal = function () {\n    return Lib.aggNums(Math.max, null, vals);\n  };\n\n  if (min === undefined) {\n    min = minVal();\n  } else if (auto) {\n    if (container._colorAx && isNumeric(min)) {\n      min = Math.min(min, minVal());\n    } else {\n      min = minVal();\n    }\n  }\n\n  if (max === undefined) {\n    max = maxVal();\n  } else if (auto) {\n    if (container._colorAx && isNumeric(max)) {\n      max = Math.max(max, maxVal());\n    } else {\n      max = maxVal();\n    }\n  }\n\n  if (auto && mid !== undefined) {\n    if (max - mid > mid - min) {\n      min = mid - (max - mid);\n    } else if (max - mid < mid - min) {\n      max = mid + (mid - min);\n    }\n  }\n\n  if (min === max) {\n    min -= 0.5;\n    max += 0.5;\n  }\n\n  cOpts._sync('min', min);\n\n  cOpts._sync('max', max);\n\n  if (cOpts.autocolorscale) {\n    var scl;\n    if (min * max < 0) scl = fullLayout.colorscale.diverging;else if (min >= 0) scl = fullLayout.colorscale.sequential;else scl = fullLayout.colorscale.sequentialminus;\n\n    cOpts._sync('colorscale', scl);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
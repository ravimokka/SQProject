{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/AreaChart.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table } from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\nconst TreeNode = Tree.TreeNode,\n      DirectoryTree = Tree.DirectoryTree;\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider;\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = (keys, event) => {\n      console.log('Trigger Select', keys, event);\n    };\n\n    this.onExpand = () => {\n      console.log('Trigger Expand');\n    };\n\n    this.showModal = () => {\n      alert('hi');\n    };\n\n    this.onChange_Xaxis = checkedValue => {\n      this.setState({\n        checkVal: checkedValue\n      });\n      this.setState({\n        selected_Xaxis: []\n      });\n      const selectedOptions = {\n        'checkedValue': checkedValue.target.value\n      };\n      this.state.selected_Xaxis.push(selectedOptions);\n\n      if (checkedValue.target.checked == true) {\n        this.StackedAreaChartData({\n          ValueX: this.state.selected_Xaxis,\n          ValueY: this.state.selected_Yaxis,\n          Menu: Menu_name\n        });\n      }\n    };\n\n    this.onChange_Yaxis = checkedValue => {\n      this.setState({\n        checkVal: checkedValue\n      });\n      const selectedOptions = {\n        'checkedValue': 'Amount'\n      };\n      this.state.selected_Yaxis.push(selectedOptions);\n    };\n\n    this.state = {\n      area_chart_options: {\n        chart: {\n          stacked: true\n        },\n        colors: ['#008FFB', '#00E396', '#CED4DC'],\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true\n        },\n        xaxis: {\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"10M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"100M\";\n              } else if (val >= 1000000000) {\n                return val = val / 1000000000 + \"1B\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"10M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"100M\";\n              } else if (val >= 1000000000) {\n                return val = val / 1000000000 + \"1B\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            opacityFrom: 0.6,\n            opacityTo: 0.8\n          }\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'left'\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        data: [31, 40]\n      }, {\n        name: 'series1',\n        data: [35, 19]\n      }],\n      checked: true,\n      filterHeaders: [],\n      intHeader: [],\n      filter: [],\n      selected_Xaxis: [{\n        'checkedValue': 'Group'\n      }],\n      selected_Yaxis: [{\n        'checkedValue': 'Amount'\n      }],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      loading: true,\n      area_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      area_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      area_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_areaChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadFilterHeaders();\n    this.loadIntHeaders();\n    this.loadAreaChartData({\n      ValueX: this.state.selected_Xaxis,\n      ValueY: this.state.selected_Yaxis,\n      Menu: Menu_name\n    });\n  }\n\n  async loadFilterHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        filterHeaders: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async StackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_areaChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = value_list;\n        SArea_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_areaChart_table: [table_dict]\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: '#fff',\n        padding: 24,\n        minHeight: 380\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        padding: '0 50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"button-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }), \"Edit\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), \"Delete\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Stacked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }), \"  Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Stacked\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"Stacked Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.area_table_columns,\n      dataSource: this.state.area_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_areaChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      type: \"download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), \" Download \")), \";\")))))))))), React.createElement(Layout, {\n      style: {\n        padding: '24px 0',\n        background: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      width: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      mode: \"inline\",\n      defaultSelectedKeys: ['1'],\n      defaultOpenKeys: ['sub1'],\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }), \" Financial \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"subA\",\n      defaultOpenKeys: ['subA'],\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }), \" Xaxis \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, this.state.filterHeaders.map((value, index) => React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange_Xaxis,\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, value)))), this.state.intHeader.map((value, index) => React.createElement(SubMenu, {\n      key: \"subB\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }), \" Yaxis \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange_Yaxis,\n      checked: this.state.checked,\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, value))))), React.createElement(SubMenu, {\n      key: \"sub2\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"solution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), \" Operational \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"Status\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"Type\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, \"Filter\"))), React.createElement(SubMenu, {\n      key: \"sub3\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }), \" Management \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"Status\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, \"Type\")), React.createElement(Menu.Item, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, \"Filter\"))))), React.createElement(Content, {\n      style: {\n        padding: '0 24px',\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }), this.state.area_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }) : null)))));\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/AreaChart.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Layout","Menu","Breadcrumb","Icon","Tree","Checkbox","Table","Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","TreeNode","DirectoryTree","SubMenu","Header","Content","Footer","Sider","AreaChart","constructor","props","onSelect","keys","event","console","log","onExpand","showModal","alert","onChange_Xaxis","checkedValue","setState","checkVal","selected_Xaxis","selectedOptions","target","value","state","push","checked","StackedAreaChartData","ValueX","ValueY","selected_Yaxis","onChange_Yaxis","area_chart_options","chart","stacked","colors","dataLabels","enabled","stroke","show","xaxis","labels","formatter","val","Math","round","yaxis","fill","type","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","area_chart_series","name","data","filterHeaders","intHeader","filter","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_xl","value_yl","loading","area_display","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","area_table_columns","area_table_data","download_areaChart_table","firstname","lastname","email","componentWillMount","loadFilterHeaders","loadIntHeaders","loadAreaChartData","promise","post","loginURL","status","d","dou","headers","Headers","append","options","method","body","JSON","stringify","download_lineChart_table","download_group_barChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","length","data_dict","load_data_dict","column_dict","area_dict","line_table_columns","line_table_data","Gbar_table_columns","Gbar_table_data","mix_table_columns","mix_table_data","value_list","SArea_chart_list","render","dv","View","source","transform","field","dimension","as","align","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","dataKey","min","max","ve_bar_dv","vertical_bar_data","override","background","padding","minHeight","overflowY","height","map","index","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     checked: true,\n    filterHeaders:[],\n    intHeader:[],\n     filter:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     selected_Yaxis: [{'checkedValue':'Amount'}],\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.StackedAreaChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({ValueX:this.state.selected_Xaxis, ValueY:this.state.selected_Yaxis,  Menu:Menu_name});\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n        <div>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Stacked\" >\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                                             style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_areaChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > <Icon type='download' /> Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                      css={override}\n                      size={150} // or 150px\n                      color={\"#123abc\"}\n                      loading={this.state.loading}\n                     />\n                     {this.state.area_display == true?\n                    <ReactApexChart options={this.state.area_chart_options}\n                    series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />:null\n                    }\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n\n\n    );\n  }\n}\nexport default AreaChart;"]},"metadata":{},"sourceType":"module"}
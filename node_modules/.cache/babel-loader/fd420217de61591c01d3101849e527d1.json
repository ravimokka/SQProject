{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar loggers = require('./loggers');\n/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */\n\n\nfunction getGraphDiv(gd) {\n  var gdElement;\n\n  if (typeof gd === 'string') {\n    gdElement = document.getElementById(gd);\n\n    if (gdElement === null) {\n      throw new Error('No DOM element with id \\'' + gd + '\\' exists on the page.');\n    }\n\n    return gdElement;\n  } else if (gd === null || gd === undefined) {\n    throw new Error('DOM element provided is null or undefined');\n  } // otherwise assume that gd is a DOM element\n\n\n  return gd;\n}\n\nfunction isPlotDiv(el) {\n  var el3 = d3.select(el);\n  return el3.node() instanceof HTMLElement && el3.size() && el3.classed('js-plotly-plot');\n}\n\nfunction removeElement(el) {\n  var elParent = el && el.parentNode;\n  if (elParent) elParent.removeChild(el);\n}\n/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */\n\n\nfunction addStyleRule(selector, styleString) {\n  addRelatedStyleRule('global', selector, styleString);\n}\n/**\n * for dynamically adding style rules\n * to a stylesheet uniquely identified by a uid\n */\n\n\nfunction addRelatedStyleRule(uid, selector, styleString) {\n  var id = 'plotly.js-style-' + uid;\n  var style = document.getElementById(id);\n\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('id', id); // WebKit hack :(\n\n    style.appendChild(document.createTextNode(''));\n    document.head.appendChild(style);\n  }\n\n  var styleSheet = style.sheet;\n\n  if (styleSheet.insertRule) {\n    styleSheet.insertRule(selector + '{' + styleString + '}', 0);\n  } else if (styleSheet.addRule) {\n    styleSheet.addRule(selector, styleString, 0);\n  } else loggers.warn('addStyleRule failed');\n}\n/**\n * to remove from the page a stylesheet identified by a given uid\n */\n\n\nfunction deleteRelatedStyleRule(uid) {\n  var id = 'plotly.js-style-' + uid;\n  var style = document.getElementById(id);\n  if (style) removeElement(style);\n}\n\nmodule.exports = {\n  getGraphDiv: getGraphDiv,\n  isPlotDiv: isPlotDiv,\n  removeElement: removeElement,\n  addStyleRule: addStyleRule,\n  addRelatedStyleRule: addRelatedStyleRule,\n  deleteRelatedStyleRule: deleteRelatedStyleRule\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/lib/dom.js"],"names":["d3","require","loggers","getGraphDiv","gd","gdElement","document","getElementById","Error","undefined","isPlotDiv","el","el3","select","node","HTMLElement","size","classed","removeElement","elParent","parentNode","removeChild","addStyleRule","selector","styleString","addRelatedStyleRule","uid","id","style","createElement","setAttribute","appendChild","createTextNode","head","styleSheet","sheet","insertRule","addRule","warn","deleteRelatedStyleRule","module","exports"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar loggers = require('./loggers');\n\n/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */\nfunction getGraphDiv(gd) {\n    var gdElement;\n\n    if(typeof gd === 'string') {\n        gdElement = document.getElementById(gd);\n\n        if(gdElement === null) {\n            throw new Error('No DOM element with id \\'' + gd + '\\' exists on the page.');\n        }\n\n        return gdElement;\n    } else if(gd === null || gd === undefined) {\n        throw new Error('DOM element provided is null or undefined');\n    }\n\n    // otherwise assume that gd is a DOM element\n    return gd;\n}\n\nfunction isPlotDiv(el) {\n    var el3 = d3.select(el);\n    return el3.node() instanceof HTMLElement &&\n        el3.size() &&\n        el3.classed('js-plotly-plot');\n}\n\nfunction removeElement(el) {\n    var elParent = el && el.parentNode;\n    if(elParent) elParent.removeChild(el);\n}\n\n/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */\nfunction addStyleRule(selector, styleString) {\n    addRelatedStyleRule('global', selector, styleString);\n}\n\n/**\n * for dynamically adding style rules\n * to a stylesheet uniquely identified by a uid\n */\nfunction addRelatedStyleRule(uid, selector, styleString) {\n    var id = 'plotly.js-style-' + uid;\n    var style = document.getElementById(id);\n    if(!style) {\n        style = document.createElement('style');\n        style.setAttribute('id', id);\n        // WebKit hack :(\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n    }\n    var styleSheet = style.sheet;\n\n    if(styleSheet.insertRule) {\n        styleSheet.insertRule(selector + '{' + styleString + '}', 0);\n    } else if(styleSheet.addRule) {\n        styleSheet.addRule(selector, styleString, 0);\n    } else loggers.warn('addStyleRule failed');\n}\n\n/**\n * to remove from the page a stylesheet identified by a given uid\n */\nfunction deleteRelatedStyleRule(uid) {\n    var id = 'plotly.js-style-' + uid;\n    var style = document.getElementById(id);\n    if(style) removeElement(style);\n}\n\nmodule.exports = {\n    getGraphDiv: getGraphDiv,\n    isPlotDiv: isPlotDiv,\n    removeElement: removeElement,\n    addStyleRule: addStyleRule,\n    addRelatedStyleRule: addRelatedStyleRule,\n    deleteRelatedStyleRule: deleteRelatedStyleRule\n};\n"]},"metadata":{},"sourceType":"script"}
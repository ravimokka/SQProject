{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/LineChart.js\";\nimport React, { Component } from \"react\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst CollectionCreateForm = Form.create({\n  name: \"form_in_modal\"\n})( // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Chart Table Data\",\n      okText: \"Download\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.line_table_columns,\n      dataSource: this.state.line_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007]\n        }\n      },\n      series: [{\n        data: [44, 55, 41, 64, 22, 43, 21]\n      }, {\n        data: [53, 32, 33, 52, 13, 44, 32]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/LineChart.js"],"names":["React","Component","Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","CollectionCreateForm","create","name","constructor","props","state","line_table_columns","title","dataIndex","key","line_table_data","oNumber","componentWillMount","loadAll_count_view","loadAllChartData","A","B","data","headers","Headers","append","options","method","body","JSON","stringify","setState","line_data","field_list","line_chart_source_data","chart_data","promise","post","status","l_data","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","Object","keys","length","console","log","push","value","data_dict","load_data_dict","column_dict","render","visible","onCancel","onCreate","form","overflowY","LineChart","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","xaxis","categories","series"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\nline_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\nline_table_data : [{ key: '1', oNumber: 'DVO524',}],\n    };\n  }\n  componentWillMount() {\n\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n  }\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_table_columns : []})\n    this.setState({line_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n    }\n}\n\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      return (\n        <Modal visible={visible}\n          title=\"Chart Table Data\"\n          okText=\"Download\"\n          onCancel={onCancel}\n          onOk={onCreate}\n          >\n         <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n        </Modal>\n      );\n    }\n  }\n);\n\n\n\n\n\n\nclass LineChart extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: true,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n            }\n          },\n          series: [{\n            data: [44, 55, 41, 64, 22, 43, 21]\n          }, {\n            data: [53, 32, 33, 52, 13, 44, 32]\n          }],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}
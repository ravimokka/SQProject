{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from 'react';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport { CSVLink } from \"react-csv\";\nvar someReactComponent = React.createClass({\n  displayName: \"someReactComponent\",\n  getInitialState: function () {\n    var that = this;\n    $(\"element\").on(\"event\", function () {\n      $.get(\"new-data-from-url\", function (newData) {\n        that.setState(newData); // to sync manually do\n\n        that.refs.myRef.syncData();\n      });\n    });\n    return {\n      myData: [{\n        value: 'One',\n        selected: true\n      }, {\n        value: 'Two'\n      }]\n    };\n  },\n  render: function () {\n    return React.createElement(Multiselect, {\n      onChange: this.handleChange,\n      ref: \"myRef\",\n      data: this.state.myData,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n});\nexport default SelectPage;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","$","Popper","Multiselect","CSVLink","someReactComponent","createClass","getInitialState","that","on","get","newData","setState","refs","myRef","syncData","myData","value","selected","render","handleChange","state","SelectPage"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyDC,GAAzD,EAA8DC,KAA9D,QAA0E,aAA1E;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,IAAjD,EAAwDC,KAAxD,EAA+DC,KAA/D,QAA2E,MAA3E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,sCAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,wCAAP;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAIA,IAAIC,kBAAkB,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB;AAAA;AACvCC,EAAAA,eAAe,EAAE,YAAU;AACvB,QAAIC,IAAI,GAAG,IAAX;AACAP,IAAAA,CAAC,CAAC,SAAD,CAAD,CAAaQ,EAAb,CAAgB,OAAhB,EAAyB,YAAU;AAC/BR,MAAAA,CAAC,CAACS,GAAF,CAAM,mBAAN,EAA2B,UAASC,OAAT,EAAiB;AACxCH,QAAAA,IAAI,CAACI,QAAL,CAAcD,OAAd,EADwC,CAGxC;;AACAH,QAAAA,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgBC,QAAhB;AACH,OALD;AAMH,KAPD;AASA,WAAO;AACHC,MAAAA,MAAM,EAAG,CAAC;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,QAAQ,EAAC;AAAtB,OAAD,EAA6B;AAACD,QAAAA,KAAK,EAAC;AAAP,OAA7B;AADN,KAAP;AAGH,GAfsC;AAgBvCE,EAAAA,MAAM,EAAE,YAAY;AAChB,WACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKC,YAA5B;AAA0C,MAAA,GAAG,EAAC,OAA9C;AAAsD,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWL,MAAvE;AAA+E,MAAA,QAAQ,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AApBsC,CAAlB,CAAzB;AAsBA,eAAeM,UAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\n\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Multiselect from 'react-bootstrap-multiselect'\nimport { CSVLink } from \"react-csv\";\n\n\n\nvar someReactComponent = React.createClass({\n    getInitialState: function(){\n        var that = this;\n        $(\"element\").on(\"event\", function(){\n            $.get(\"new-data-from-url\", function(newData){\n                that.setState(newData);\n\n                // to sync manually do\n                that.refs.myRef.syncData();\n            });\n        });\n\n        return {\n            myData : [{value:'One',selected:true},{value:'Two'}]\n        };\n    },\n    render: function () {\n        return (\n            <Multiselect onChange={this.handleChange} ref=\"myRef\" data={this.state.myData} multiple />\n        );\n    }\n});\nexport default SelectPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport \"./chat.css\";\nimport ChatHistory from \"./chat_history.js\";\nimport firebase from 'firebase';\nconst Config = {\n  apiKey: \"AIzaSyB5fOOl4b5DpbBhaeXAL-61qkpJoENQeTY\",\n  authDomain: \"sqd-project.firebaseapp.com\",\n  databaseURL: \"https://sqd-project.firebaseio.com\",\n  projectId: \"sqd-project\",\n  storageBucket: \"sqd-project.appspot.com\",\n  messagingSenderId: \"727802836038\",\n  appId: \"1:727802836038:web:44732927a6e01d5abdc647\",\n  measurementId: \"G-YVGMP4HC63\"\n};\nfirebase.initializeApp(Config);\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectUser = e => {\n      this.setState({\n        massage_box: true\n      });\n      this.setState({\n        select_username: e.target.innerText\n      });\n      this.setState({\n        select_username: e.target.textContent\n      });\n    };\n\n    this.sendMassage = e => {\n      alert(this.refs.msg.value);\n      this.setState({\n        sendMsg: 'test'\n      });\n    };\n\n    this.state = {\n      online: false,\n      massage_box: false,\n      select_username: '',\n      user_list: [{\n        username: 'ravi'\n      }, {\n        username: 'vijay'\n      }, {\n        username: 'surya'\n      }, {\n        username: 'Anbu'\n      }],\n      send_list: [{\n        message: \"hi\",\n        rev_id: 2,\n        send_id: 1,\n        userName: \"Raveendra M\"\n      }, {\n        message: \"what\",\n        rev_id: 2,\n        send_id: 1,\n        userName: \"Raveendra M\"\n      }],\n      userName: 'Ravi',\n      send_id: 1,\n      received_id: 2\n    };\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.listSendMessages();\n  }\n\n  componentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({\n      User_Name: profile_data['first_name'] + \"  \" + profile_data['last_name']\n    });\n    this.setState({\n      User_Email: profile_data['email']\n    });\n  }\n\n  handleSendMassage() {\n    if (this.state.message) {\n      var newItem = {\n        userName: this.state.userName,\n        message: this.refs.msg.value,\n        send_id: this.state.send_id,\n        rev_id: this.state.received_id,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      };\n      this.messageSend.push(newItem);\n      this.setState({\n        message: ''\n      });\n    }\n  }\n\n  listSendMessages() {\n    this.messageSend.limitToLast(10).on('value', message => {\n      this.setState({\n        send_list: Object.values(message.val())\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"messaging\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inbox_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inbox_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"headind_srch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"recent_heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Recent\")), React.createElement(\"div\", {\n      class: \"srch_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"stylish-input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"search-bar\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"inbox_chat scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.user_list.map((value, index) => React.createElement(\"div\", {\n      class: \"chat_list active_chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"chat_people\",\n      value: this.state.select_username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      class: \"chat_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      key: index,\n      onClick: this.selectUser,\n      value: value.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, value.username), \"  \", React.createElement(\"span\", {\n      class: \"chat_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Dec 25\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Test, which is a new approach to have all solutions astrology under one roof.\"))))))), React.createElement(\"div\", {\n      class: \"mesgs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"alert alert-success  select_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        marginLeft: \"19px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.select_username), React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      class: \"hear_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), this.state.massage_box == true ? React.createElement(\"div\", {\n      class: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"incoming_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.send_list.map((value, index) => React.createElement(\"div\", {\n      class: \"received_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"received_withd_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, value.message, \" \"), React.createElement(\"span\", {\n      class: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" 11:01 AM    |    June 9\"))))), React.createElement(\"div\", {\n      class: \"outgoing_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"sent_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Test which is a new approach to have all solutions\"), React.createElement(\"span\", {\n      class: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \" 11:01 AM    |    June 9\"), \" \"))) : React.createElement(\"div\", {\n      class: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \" welcome Massage Chatting\"), React.createElement(\"div\", {\n      class: \"type_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input_msg_write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"msg\",\n      class: \"write_msg\",\n      placeholder: \"Type a message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"msg_send_btn\",\n      type: \"button\",\n      onClick: this.handleSendMassage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-paper-plane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default ChartRoom;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js"],"names":["React","Component","useState","useEffect","Layout","Menu","Dropdown","Icon","Button","Avatar","Drawer","Input","Link","AppRouter","NotificationTab","ReactApexChart","$","Popper","isAbsolute","ChatHistory","firebase","Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ChartRoom","constructor","props","selectUser","e","setState","massage_box","select_username","target","innerText","textContent","sendMassage","alert","refs","msg","value","sendMsg","state","online","user_list","username","send_list","message","rev_id","send_id","userName","received_id","messageSend","database","ref","child","text","listSendMessages","componentWillMount","profile_data","JSON","parse","sessionStorage","getItem","User_Name","User_Email","handleSendMassage","newItem","timestamp","ServerValue","TIMESTAMP","push","limitToLast","on","Object","values","val","render","map","index","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport \"./chat.css\"\nimport  ChatHistory from \"./chat_history.js\"\nimport firebase from 'firebase';\n\nconst Config = {\n  apiKey: \"AIzaSyB5fOOl4b5DpbBhaeXAL-61qkpJoENQeTY\",\n  authDomain: \"sqd-project.firebaseapp.com\",\n  databaseURL: \"https://sqd-project.firebaseio.com\",\n  projectId: \"sqd-project\",\n  storageBucket: \"sqd-project.appspot.com\",\n  messagingSenderId: \"727802836038\",\n  appId: \"1:727802836038:web:44732927a6e01d5abdc647\",\n  measurementId: \"G-YVGMP4HC63\"\n};\n\nfirebase.initializeApp(Config);\n\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    online:false,\n    massage_box:false,\n    select_username:'',\n    user_list:[{username:'ravi'},{username:'vijay'},{username:'surya'},{username:'Anbu'}],\n    send_list:[{message: \"hi\", rev_id: 2, send_id: 1, userName: \"Raveendra M\"},\n    {message: \"what\", rev_id: 2, send_id: 1, userName: \"Raveendra M\"}],\n    userName:'Ravi',\n    send_id:1,\n    received_id:2,\n   \n\n    }\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.listSendMessages();\n\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({User_Name:profile_data['first_name'] + \"  \" + profile_data['last_name']});\n    this.setState({User_Email:profile_data['email']});\n}\n\nselectUser = (e) => {\n    this.setState({massage_box:true});\n    this.setState({select_username:e.target.innerText});\n    this.setState({select_username:e.target.textContent});\n  };\n\nsendMassage = (e) => {\n     alert(this.refs.msg.value)\n    this.setState({\n      sendMsg: 'test',\n    });\n\n  };\n\n  handleSendMassage() {\n    if (this.state.message) {\n      var newItem = {\n        userName: this.state.userName,\n        message: this.refs.msg.value,\n        send_id: this.state.send_id,\n        rev_id: this.state.received_id,\n        timestamp : firebase.database.ServerValue.TIMESTAMP\n      }\n      this.messageSend.push(newItem);\n      this.setState({ message: '' });\n    }\n  }\n\n\nlistSendMessages() {\n    this.messageSend\n      .limitToLast(10)\n      .on('value', message => {\n        this.setState({\n          send_list: Object.values(message.val()),\n        });\n      });\n\n  }\n\n\n\n\n  render() {\n\n    return (\n    <div class=\"messaging\">\n      <div class=\"inbox_msg\">\n        <div class=\"inbox_people\">\n\t  <div class=\"headind_srch\">\n\t\t<div class=\"recent_heading\">\n\t\t  <h4>Recent</h4>\n\t\t</div>\n\t\t<div class=\"srch_bar\">\n\t\t  <div class=\"stylish-input-group\">\n\t\t\t<input type=\"text\" class=\"search-bar\"  placeholder=\"Search\"  / >\n\t\t\t</div>\n\t\t</div>\n\t  </div>\n\n\n\n\t  <div class=\"inbox_chat scroll\">\n\t  { this.state.user_list.map((value, index) =>\n\t\t<div class=\"chat_list active_chat\" >\n\t\t  <div class=\"chat_people\" value={this.state.select_username}>\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"chat_img\" />\n\t\t\t<div class=\"chat_ib\">\n\t\t\t  <h5 key={index}  onClick={this.selectUser} value={value.username}>{value.username}\n\t\t\t   </h5>  <span class=\"chat_date\">Dec 25</span>\n\t\t\t  <p>Test, which is a new approach to have all solutions\n\t\t\t\tastrology under one roof.</p>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n        )}\n\n\n\n\t\t{/*\n\t\t<div class=\"chat_list\">\n\t\t  <div class=\"chat_people\">\n          <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"chat_img\" />\n\t\t\t<div class=\"chat_ib\">\n\t\t\t  <h5>Surya<span class=\"chat_date\">Dec 25</span></h5>\n\t\t\t  <p>Test, which is a new approach to have all solutions\n\t\t\t\tastrology under one roof.</p>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n\t\t<div class=\"chat_list\">\n\t\t  <div class=\"chat_people\">\n          <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"chat_img\" />\n\t\t\t<div class=\"chat_ib\">\n\t\t\t  <h5>Anbu Deva<span class=\"chat_date\">Dec 25</span></h5>\n\t\t\t  <p>Test, which is a new approach to have all solutions\n\t\t\t\tastrology under one roof.</p>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n\t\t<div class=\"chat_list\">\n\t\t  <div class=\"chat_people\">\n          <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"chat_img\" />\n\t\t\t<div class=\"chat_ib\">\n\t\t\t  <h5>Vijay<span class=\"chat_date\">Dec 25</span></h5>\n\t\t\t  <p>Test, which is a new approach to have all solutions\n\t\t\t\tastrology under one roof.</p>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div> */}\n\n\t  </div>\n\t</div>\n\n        <div class=\"mesgs\">\n        <div class=\"alert alert-success  select_user\">\n          <strong style={{marginLeft:\"19px\"}}>{this.state.select_username}</strong >\n         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"hear_user\" />\n          </div>\n        {this.state.massage_box == true?\n          <div class=\"msg_history\">\n\n                  <div class=\"incoming_msg\">\n                         { this.state.send_list.map((value, index) =>\n                          <div class=\"received_msg\">\n                            <div class=\"received_withd_msg\">\n                                <p key={index}>{value.message} </p>\n                              <span class=\"time_date\"> 11:01 AM    |    June 9</span>\n                              </div>\n                          </div>\n                          )}\n                        </div>\n\n\n\n\n                    <div class=\"outgoing_msg\">\n                      <div class=\"sent_msg\">\n                        <p>Test which is a new approach to have all\n                          solutions</p>\n                        <span class=\"time_date\"> 11:01 AM    |    June 9</span> </div>\n                    </div>\n\n\n\n\n\n                        {/*  <div class=\"incoming_msg\">\n                         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"incoming_msg_img\" />\n                          <div class=\"received_msg\">\n                            <div class=\"received_withd_msg\">\n                              <p>Test which is a new approach to have all\n                                solutions</p>\n                              <span class=\"time_date\"> 11:01 AM    |    June 9</span></div>\n                          </div>\n                        </div>\n                    <div class=\"outgoing_msg\">\n                      <div class=\"sent_msg\">\n                        <p>Test which is a new approach to have all\n                          solutions</p>\n                        <span class=\"time_date\"> 11:01 AM    |    June 9</span> </div>\n                    </div>\n                    <div class=\"incoming_msg\">\n                      <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" class=\"incoming_msg_img\" />\n                      <div class=\"received_msg\">\n                        <div class=\"received_withd_msg\">\n                          <p>Test, which is a new approach to have</p>\n                          <span class=\"time_date\"> 11:01 AM    |    Yesterday</span></div>\n                      </div>\n                    </div>\n                    <div class=\"outgoing_msg\">\n                      <div class=\"sent_msg\">\n                        <p>Apollo University, Delhi, India Test</p>\n                        <span class=\"time_date\"> 11:01 AM    |    Today</span> </div>\n                    </div>\n\n                    <div class=\"outgoing_msg\">\n                      <div class=\"sent_msg\">\n                        <p>{this.state.sendMsg}</p>\n                        <span class=\"time_date\"> 11:01 AM    |    Today</span> </div>\n                    </div>  */}\n\n          </div>:<div class=\"msg_history\"> welcome Massage Chatting</div>\n          }\n\n          <div class=\"type_msg\">\n            <div class=\"input_msg_write\">\n              <input type=\"text\"  ref='msg' class=\"write_msg\" placeholder=\"Type a message\" />\n              <button class=\"msg_send_btn\" type=\"button\" onClick={this.handleSendMassage}>\n                                    <i class=\"fa fa-paper-plane\"></i></button>\n            </div>\n          </div>\n\n        </div>\n  </div>\n</div>\n\n    );\n  }\n}\n\nexport default ChartRoom;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/components/Form/FormAccountSetting.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Host } from \"../../../Host\";\nimport { Form, Input, Divider, Tooltip, Icon, Cascader, Select, Row, Col, Card, Modal, Drawer, Checkbox, Button, Radio } from \"antd\";\n\nclass FormAccountSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n      e.preventDefault();\n      const first_nam = e.target.fname.value;\n      const last_nam = e.target.lname.value;\n      const officePhone = e.target.officePhone.value;\n      const cellPhone = e.target.cellPhone.value;\n      const homePhone = e.target.homePhone.value;\n      const address = e.target.address_1.value + ' ' + e.target.address_2.value + ' ' + e.target.city.value + ' ' + e.target.state.value + '-' + e.target.zipCode.value;\n      const req_data = {\n        'username': profile_data[\"username\"],\n        'email': profile_data[\"email\"],\n        'first_nam': first_nam,\n        'last_nam': last_nam,\n        'office_number': officePhone,\n        'cell_number': cellPhone,\n        'home_number': homePhone,\n        'address': address,\n        'flog_value': 'profileUpdate'\n      };\n      this.ProfileUpdateAPI(req_data);\n    };\n\n    this.state = {\n      User_Name: '',\n      User_Email: '',\n      Account_type: '',\n      profile_up_data: JSON.parse(sessionStorage.getItem(\"session_data\"))\n    };\n  }\n\n  async ProfileUpdateAPI(req_data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(req_data)\n    };\n\n    try {\n      const promise = await axios.post(Host.loginURL + \"/signup_api\", options);\n      const status = promise.status;\n\n      if (status == 200) {\n        const data = promise.data.data;\n        console.log(data);\n        const p = JSON.parse(sessionStorage.getItem(\"session_data\"));\n        this.setState({\n          profile_up_data: {}\n        });\n        this.setState({\n          profile_up_data: data\n        });\n        console.log(data);\n        this.props.history.push(\"/\");\n      }\n    } catch (err) {\n      this.setState({\n        msg: \"Profile data update\"\n      });\n    } //  this.setState({msg: \"Username & Password is Invalid\"});\n\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 16,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Contact Information\"))), React.createElement(Form.Item, {\n      label: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, getFieldDecorator('fname', {\n      initialValue: this.state.profile_up_data['first_name']\n    })(React.createElement(Input, {\n      name: \"first_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, getFieldDecorator('lname', {\n      initialValue: this.state.profile_up_data['last_name']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Office Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, getFieldDecorator('officePhone', {\n      initialValue: this.state.profile_up_data['office_number']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Cell Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, getFieldDecorator('cellPhone', {\n      initialValue: this.state.profile_up_data['cell_number']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Home Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, getFieldDecorator('homePhone', {\n      initialValue: this.state.profile_up_data['home_number']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 16,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Address\"))), React.createElement(Form.Item, {\n      label: \"Address 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, getFieldDecorator('address_1', {\n      initialValue: this.state.profile_up_data['address']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Address 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, getFieldDecorator('address_2', {\n      initialValue: this.state.profile_up_data['address']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, getFieldDecorator('city', {\n      initialValue: this.state.profile_up_data['address']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, getFieldDecorator('state', {\n      initialValue: this.state.profile_up_data['address']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Zip Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, getFieldDecorator('zipCode', {\n      initialValue: this.state.profile_up_data['address']\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Update\")));\n  }\n\n}\n\nconst WrappedAccountForm = Form.create()(FormAccountSetting);\nexport default WrappedAccountForm;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/components/Form/FormAccountSetting.js"],"names":["React","Component","axios","Host","Form","Input","Divider","Tooltip","Icon","Cascader","Select","Row","Col","Card","Modal","Drawer","Checkbox","Button","Radio","FormAccountSetting","constructor","props","handleSubmit","e","profile_data","JSON","parse","sessionStorage","getItem","preventDefault","first_nam","target","fname","value","last_nam","lname","officePhone","cellPhone","homePhone","address","address_1","address_2","city","state","zipCode","req_data","ProfileUpdateAPI","User_Name","User_Email","Account_type","profile_up_data","headers","Headers","append","options","method","body","stringify","promise","post","loginURL","status","data","console","log","p","setState","history","push","err","msg","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","getFieldDecorator","form","initialValue","WrappedAccountForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Host } from  \"../../../Host\";\nimport {\n    Form,\n    Input,\n    Divider,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Card,\n    Modal,\n    Drawer,\n    Checkbox,\n    Button,\n    Radio\n} from \"antd\";\n\nclass FormAccountSetting extends Component {\n constructor(props) {\n    super(props);\n    this.state = {\n     User_Name:'',\n     User_Email:'',\n     Account_type:'',\n     profile_up_data :JSON.parse(sessionStorage.getItem(\"session_data\")),\n    }\n }\n\n handleSubmit = (e) => {\n    const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    e.preventDefault();\n     const first_nam = e.target.fname.value;\n     const last_nam = e.target.lname.value;\n     const officePhone = e.target.officePhone.value;\n     const cellPhone = e.target.cellPhone.value;\n     const homePhone = e.target.homePhone.value;\n     const address = e.target.address_1.value +' ' + e.target.address_2.value +' ' + e.target.city.value\n                      +' '+ e.target.state.value +'-' +e.target.zipCode.value;\n     const req_data =   {'username':profile_data[\"username\"], 'email':profile_data[\"email\"],'first_nam':first_nam,\n                        'last_nam':last_nam, 'office_number' : officePhone, 'cell_number':cellPhone,\n                         'home_number':homePhone, 'address':address, 'flog_value':'profileUpdate'}\n     this.ProfileUpdateAPI(req_data);\n};\n async ProfileUpdateAPI(req_data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(req_data),\n    }\n    try{\n     const promise = await axios.post(Host.loginURL+\"/signup_api\", options);\n     const status = promise.status;\n     if(status==200)\n    {\n      const data = promise.data.data;\n      console.log(data)\n      const p = JSON.parse(sessionStorage.getItem(\"session_data\"));\n      this.setState({profile_up_data:{}})\n      this.setState({profile_up_data:data})\n      console.log(data)\n      this.props.history.push(\"/\")\n     }\n\n  }\n  catch(err){this.setState({msg: \"Profile data update\"});}\n//  this.setState({msg: \"Username & Password is Invalid\"});\n}\n\n    render () {\n\n        const formItemLayout = {\n            labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            },\n            wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n            },\n        };\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <Form {...formItemLayout}  onSubmit={this.handleSubmit}>\n                \n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Contact Information</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"First Name\">\n                    {getFieldDecorator('fname' ,{initialValue:this.state.profile_up_data['first_name']})\n                    (<Input name=\"first_name\" />)}\n                </Form.Item>\n                <Form.Item label=\"Last Name\">\n                    {getFieldDecorator('lname',{initialValue:this.state.profile_up_data['last_name']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Office Phone\">\n                    {getFieldDecorator('officePhone',{initialValue:this.state.profile_up_data['office_number']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Cell Phone\">\n                    {getFieldDecorator('cellPhone',{initialValue:this.state.profile_up_data['cell_number']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Home Phone\">\n                    {getFieldDecorator('homePhone',{initialValue:this.state.profile_up_data['home_number']})(<Input />)}\n\n                </Form.Item>\n\n\n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Address</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"Address 1\">\n                    {getFieldDecorator('address_1',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Address 2\">\n                    {getFieldDecorator('address_2',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                    {getFieldDecorator('city',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"State\">\n                    {getFieldDecorator('state',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Zip Code\">\n                    {getFieldDecorator('zipCode',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Update\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\nconst WrappedAccountForm = Form.create()(FormAccountSetting);\nexport default WrappedAccountForm;"]},"metadata":{},"sourceType":"module"}
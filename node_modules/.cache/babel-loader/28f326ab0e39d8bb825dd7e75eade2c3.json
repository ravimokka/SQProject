{"ast":null,"code":"import transform from \"./transform\";\nexport default function (topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology),\n        p0,\n        p1 = new Array(2),\n        name,\n        x0 = Infinity,\n        y0 = x0,\n        x1 = -x0,\n        y1 = -x0;\n    topology.arcs.forEach(function (arc) {\n      var i = -1,\n          n = arc.length;\n\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/topojson-client/src/bbox.js"],"names":["transform","topology","bbox","bboxPoint","p0","p1","t","x0","x1","y0","y1","bboxGeometry","o","type","geometries","forEach","coordinates","Array","name","Infinity","arcs","arc","i","n","length","objects"],"mappings":"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","sourcesContent":["import transform from \"./transform\";\n\nexport default function(topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology), p0, p1 = new Array(2), name,\n        x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n    topology.arcs.forEach(function(arc) {\n      var i = -1, n = arc.length;\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}\n"]},"metadata":{},"sourceType":"module"}
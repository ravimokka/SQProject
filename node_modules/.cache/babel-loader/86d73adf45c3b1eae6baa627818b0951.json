{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n{\n  /* import { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\n  const DataSet = require('@antv/data-set');\n  const sourceData = [\n  { label: 'Amount_USD.', Actual: 2800, Budget: 2260 },\n  ];\n  const dv = new DataSet.View().source(sourceData);\n  dv.transform({\n  type: 'fold',\n  fields: ['Actual', 'Budget'],\n  key: 'type',\n  value: 'value',\n  });\n  const data = dv.rows;\n  class Reactjs extends React.Component {\n  render() {\n   return (\n     <Chart forceFit height={400} data={data}>\n       <Coord type=\"rect\" direction=\"LT\" />\n       <Tooltip />\n       <Legend />\n       <Axis dataKey=\"value\" position=\"right\" />\n       <Axis dataKey=\"label\" label={{ offset: 12 }} />\n       <Bar position=\"label*value\" color=\"type\" adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n     </Chart>\n   );\n  }\n  }  */\n}\nvar tt = ['Team A', 'Team B', 'Team C', 'Team D'];\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        d: [1, 2]\n      });\n    };\n\n    this.state = {\n      d: [],\n      options: {\n        labels: tt,\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }],\n        \"labels\": [\"10%\", \"20%\", \"30%\", \"40%\", \"50%\", \"60%\", \"70%\", \"80%\", \"90%\", \"100%\"],\n        \"colors\": [\"#5a99d3\", \"#e97c30\", \"#a3a3a3\", \"#fbbd00\", \"#4270c1\", \"#444444\", \"#245c8f\", \"#9b460c\", \"#626262\", \"#977200\"]\n      },\n      series: [44, 55, 13, 43]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitDonut,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"pie\",\n      width: \"380\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","ReactApexChart","tt","Reactjs","constructor","props","handleSubmitDonut","e","preventDefault","setState","d","state","options","labels","responsive","breakpoint","chart","width","legend","position","series","render","marginLeft"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEE;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;AAEN,IAAIC,EAAE,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,CAAT;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACC,SAA5B,CAAsC;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,iBA5BmB,GA4BEC,CAAD,IAAO;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,CAAC,EAAC,CAAC,CAAD,EAAG,CAAH;AAAH,OAAd;AAED,KAhCsB;;AAGjB,SAAKC,KAAL,GAAa;AACbD,MAAAA,CAAC,EAAC,EADW;AAEXE,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAEX,EADD;AAEPY,QAAAA,UAAU,EAAE,CAAC;AACXC,UAAAA,UAAU,EAAE,GADD;AAEXH,UAAAA,OAAO,EAAE;AACPI,YAAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE;AADF,aADA;AAIPC,YAAAA,MAAM,EAAE;AACNC,cAAAA,QAAQ,EAAE;AADJ;AAJD;AAFE,SAAD,CAFL;AAaP,kBAAU,CAAG,KAAH,EAAU,KAAV,EAAiB,KAAjB,EAAwB,KAAxB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C,KAA7C,EAAoD,KAApD,EAA2D,KAA3D,EAAkE,MAAlE,CAbH;AAcP,kBAAU,CAAG,SAAH,EAAa,SAAb,EAAuB,SAAvB,EAAiC,SAAjC,EAA4C,SAA5C,EAAsD,SAAtD,EAAgE,SAAhE,EAA2E,SAA3E,EAAqF,SAArF,EAA+F,SAA/F;AAdH,OAFE;AAmBXC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAnBG,KAAb;AAuBD;;AAQDC,EAAAA,MAAM,GAAG;AACP,WAGE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAQ,MAAA,OAAO,EAAE,KAAKf,iBAAtB;AAAyC,MAAA,SAAS,EAAC,cAAnD;AAAkE,MAAA,KAAK,EAAE;AAACgB,QAAAA,UAAU,EAAC;AAAZ,OAAzE;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,CADA,CADA,EAOE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAApC;AAA6C,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWS,MAAhE;AAAwE,MAAA,IAAI,EAAC,KAA7E;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAHF;AAeD;;AApD+B;;AA0DtC,eAAejB,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts'\n\n  {/* import { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { label: 'Amount_USD.', Actual: 2800, Budget: 2260 },\n\n];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'fold',\n  fields: ['Actual', 'Budget'],\n  key: 'type',\n  value: 'value',\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400} data={data}>\n        <Coord type=\"rect\" direction=\"LT\" />\n        <Tooltip />\n        <Legend />\n        <Axis dataKey=\"value\" position=\"right\" />\n        <Axis dataKey=\"label\" label={{ offset: 12 }} />\n        <Bar position=\"label*value\" color=\"type\" adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n    );\n  }\n}  */}\n\nvar tt = ['Team A', 'Team B', 'Team C', 'Team D']\n\nclass Reactjs extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n        d:[],\n          options: {\n            labels: tt,\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }],\n            \"labels\": [  \"10%\", \"20%\", \"30%\", \"40%\", \"50%\", \"60%\", \"70%\", \"80%\", \"90%\", \"100%\"],\n            \"colors\": [  \"#5a99d3\",\"#e97c30\",\"#a3a3a3\",\"#fbbd00\", \"#4270c1\",\"#444444\",\"#245c8f\", \"#9b460c\",\"#626262\",\"#977200\" ],\n\n          },\n          series: [44, 55, 13, 43],\n        }\n\n\n      }\n\n      handleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({d:[1,2]});\n\n  };\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n          <div>\n          <React.Fragment>\n    <button onClick={this.handleSubmitDonut} className='btn btn-info' style={{marginLeft:\"20px\"}}\n      type='button'>OK</button>\n    </React.Fragment>\n</div>\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"pie\" width=\"380\" />\n          </div>\n\n\n        );\n      }\n    }\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
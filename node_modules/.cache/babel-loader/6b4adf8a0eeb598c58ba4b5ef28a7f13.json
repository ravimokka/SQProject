{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component(props) {\n    _classCallCheck(this, Component);\n\n    var _this = _possibleConstructorReturn(this, (Component.__proto__ || Object.getPrototypeOf(Component)).call(this, props));\n\n    _this.count = 0;\n    _this.runningTimerId = null;\n    _this.hidingTimerId = null;\n\n    _this.initElement = function (el) {\n      _this.element = el;\n    };\n\n    _this.toHiddenState = function () {\n      _this.element.setAttribute('data-state', 'hidden');\n    };\n\n    _this.state = {\n      state: 'hidden'\n    };\n    return _this;\n  }\n\n  _createClass(Component, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          cls = _props.cls,\n          style = _props.style,\n          thumbStyle = _props.thumbStyle;\n      var className = 'loader-60devs ' + cls;\n      return _react2.default.createElement('div', {\n        className: className,\n        style: style,\n        'data-state': this.state.state,\n        ref: this.initElement\n      }, _react2.default.createElement('div', {\n        className: 'loader-60devs-progress',\n        style: thumbStyle\n      }));\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      if (++this.count > 1) return;\n      clearTimeout(this.hidingTimerId);\n      var element = this.element;\n      var progressEl = element.querySelector('.loader-60devs-progress');\n      element.setAttribute('data-state', 'hidden' // the only working way to restart a transition on firefox\n      );\n      progressEl.outerHTML = progressEl.outerHTML;\n      element.offsetHeight;\n      element.setAttribute('data-state', '');\n      element.offsetHeight;\n      element.setAttribute('data-state', 'running');\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (--this.count > 0) return;\n      this.element.setAttribute('data-state', 'finishing');\n      this.hidingTimerId = setTimeout(this.toHiddenState, 500);\n    }\n  }, {\n    key: 'hideAll',\n    value: function hideAll() {\n      this.count = 1;\n      this.hide();\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      Component.instance = this;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.hidingTimerId);\n      delete Component.instance;\n    }\n  }, {\n    key: 'isVisible',\n    value: function isVisible() {\n      return this.element.getAttribute('data-state') != 'hidden';\n    }\n  }]);\n\n  return Component;\n}(_react2.default.Component);\n\nComponent.defaultProps = {\n  cls: '',\n  style: {},\n  thumbStyle: {}\n};\nexports.default = {\n  Component: Component,\n  show: function show() {\n    Component.instance.show();\n  },\n  hide: function hide() {\n    Component.instance.hide();\n  },\n  hideAll: function hideAll() {\n    Component.instance.hideAll();\n  },\n  isVisible: function isVisible() {\n    return Component.instance.isVisible();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
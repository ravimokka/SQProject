{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar ConstantInfiniteComputer = require('../computers/constantInfiniteComputer.js');\n\nvar ArrayInfiniteComputer = require('../computers/arrayInfiniteComputer.js');\n\nvar scaleEnum = require('./scaleEnum');\n\nvar React = global.React || require('react');\n\nvar window = require('./window');\n\nfunction createInfiniteComputer(data, children) {\n  var computer;\n  var numberOfChildren = React.Children.count(children); // This should be guaranteed by checkProps\n\n  if (Array.isArray(data)) {\n    computer = new ArrayInfiniteComputer(data, numberOfChildren);\n  } else {\n    computer = new ConstantInfiniteComputer(data, numberOfChildren);\n  }\n\n  return computer;\n} // Given the scrollTop of the container, computes the state the\n// component should be in. The goal is to abstract all of this\n// from any actual representation in the DOM.\n// The window is the block with any preloadAdditionalHeight\n// added to it.\n\n\nfunction recomputeApertureStateFromOptionsAndScrollTop(_ref, scrollTop) {\n  var preloadBatchSize = _ref.preloadBatchSize,\n      preloadAdditionalHeight = _ref.preloadAdditionalHeight,\n      infiniteComputer = _ref.infiniteComputer;\n  var blockNumber = preloadBatchSize === 0 ? 0 : Math.floor(scrollTop / preloadBatchSize),\n      blockStart = preloadBatchSize * blockNumber,\n      blockEnd = blockStart + preloadBatchSize,\n      apertureTop = Math.max(0, blockStart - preloadAdditionalHeight),\n      apertureBottom = Math.min(infiniteComputer.getTotalScrollableHeight(), blockEnd + preloadAdditionalHeight);\n  return {\n    displayIndexStart: infiniteComputer.getDisplayIndexStart(apertureTop),\n    displayIndexEnd: infiniteComputer.getDisplayIndexEnd(apertureBottom)\n  };\n}\n\nfunction generateComputedProps(props) {\n  // These are extracted so their type definitions do not conflict.\n  var containerHeight = props.containerHeight,\n      preloadBatchSize = props.preloadBatchSize,\n      preloadAdditionalHeight = props.preloadAdditionalHeight,\n      handleScroll = props.handleScroll,\n      onInfiniteLoad = props.onInfiniteLoad,\n      oldProps = _objectWithoutProperties(props, ['containerHeight', 'preloadBatchSize', 'preloadAdditionalHeight', 'handleScroll', 'onInfiniteLoad']);\n\n  var newProps = {};\n  containerHeight = typeof containerHeight === 'number' ? containerHeight : 0;\n  newProps.containerHeight = props.useWindowAsScrollContainer ? window.innerHeight : containerHeight;\n\n  newProps.handleScroll = handleScroll || function () {};\n\n  newProps.onInfiniteLoad = onInfiniteLoad || function () {};\n\n  var defaultPreloadBatchSizeScaling = {\n    type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n    amount: 0.5\n  };\n  var batchSize = preloadBatchSize && preloadBatchSize.type ? preloadBatchSize : defaultPreloadBatchSizeScaling;\n\n  if (typeof preloadBatchSize === 'number') {\n    newProps.preloadBatchSize = preloadBatchSize;\n  } else if ((typeof batchSize === 'undefined' ? 'undefined' : _typeof(batchSize)) === 'object' && batchSize.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n    newProps.preloadBatchSize = newProps.containerHeight * batchSize.amount;\n  } else {\n    newProps.preloadBatchSize = 0;\n  }\n\n  var defaultPreloadAdditionalHeightScaling = {\n    type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n    amount: 1\n  };\n  var additionalHeight = preloadAdditionalHeight && preloadAdditionalHeight.type ? preloadAdditionalHeight : defaultPreloadAdditionalHeightScaling;\n\n  if (typeof preloadAdditionalHeight === 'number') {\n    newProps.preloadAdditionalHeight = preloadAdditionalHeight;\n  } else if ((typeof additionalHeight === 'undefined' ? 'undefined' : _typeof(additionalHeight)) === 'object' && additionalHeight.type === scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR) {\n    newProps.preloadAdditionalHeight = newProps.containerHeight * additionalHeight.amount;\n  } else {\n    newProps.preloadAdditionalHeight = 0;\n  }\n\n  return Object.assign(oldProps, newProps);\n}\n\nfunction buildHeightStyle(height) {\n  return {\n    width: '100%',\n    height: Math.ceil(height)\n  };\n}\n\nmodule.exports = {\n  createInfiniteComputer: createInfiniteComputer,\n  recomputeApertureStateFromOptionsAndScrollTop: recomputeApertureStateFromOptionsAndScrollTop,\n  generateComputedProps: generateComputedProps,\n  buildHeightStyle: buildHeightStyle\n};","map":null,"metadata":{},"sourceType":"script"}
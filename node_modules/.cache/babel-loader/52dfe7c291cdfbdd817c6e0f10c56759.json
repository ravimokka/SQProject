{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              position: 'top' // top, center, bottom\n\n            }\n          }\n        },\n        subtitles: [{\n          text: \"100.00% Positive\",\n          verticalAlign: \"center\",\n          fontSize: 50\n        }],\n        dataLabels: {\n          enabled: true,\n          formatter: function (val) {\n            return val + \"%\";\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '12px',\n            colors: [\"#304758\"]\n          }\n        },\n        xaxis: {\n          categories: [\"NET PROFIT / LOSS\"],\n          position: 'top',\n          labels: {\n            offsetY: -18\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            fill: {\n              type: 'gradient',\n              gradient: {\n                colorFrom: '#D8E3F0',\n                colorTo: '#BED1E6',\n                stops: [0, 100],\n                opacityFrom: 0.4,\n                opacityTo: 0.5\n              }\n            }\n          },\n          tooltip: {\n            enabled: true,\n            offsetY: -35\n          }\n        },\n        fill: {\n          gradient: {\n            shade: 'light',\n            type: \"horizontal\",\n            shadeIntensity: 0.25,\n            gradientToColors: undefined,\n            inverseColors: true,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [50, 0, 100, 100]\n          }\n        },\n        yaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            formatter: function (val) {\n              return val + \"%\";\n            }\n          }\n        },\n        title: {\n          text: 'Monthly Inflation in Argentina, 2002',\n          floating: true,\n          offsetY: 320,\n          align: 'center',\n          style: {\n            color: '#444'\n          }\n        }\n      },\n      options1: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#1df20a']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"Net Profit/(Loss) â€¦\"]\n        }\n      },\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#1df20a']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      },\n      series2: [1],\n      series: [{\n        name: 'SQBL',\n        data: [4.0]\n      }, {\n        name: 'SQCL',\n        data: [2.3]\n      }],\n      series1: [{\n        name: 'SQBL',\n        data: [44]\n      }, {\n        name: 'SQCL',\n        data: [53]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 24,\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bordered: false,\n      className: \"mi-card mi-card-boxshadow card-statistics\",\n      style: {\n        minHeight: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-statistics-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options1,\n      series: this.state.series1,\n      type: \"bar\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.series2,\n      type: \"donut\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-statistics-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options1,\n      series: this.state.series1,\n      type: \"bar\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.series2,\n      type: \"donut\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","Analytical","constructor","props","state","options","plotOptions","bar","dataLabels","position","subtitles","text","verticalAlign","fontSize","enabled","formatter","val","offsetY","style","colors","xaxis","categories","labels","axisBorder","show","axisTicks","crosshairs","fill","type","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","title","floating","align","color","options1","horizontal","offsetX","stroke","width","options2","responsive","breakpoint","chart","legend","series2","series","name","data","series1","render","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\n\n\n\n\nclass Analytical extends React.Component{\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            plotOptions: {\n              bar: {\n                dataLabels: {\n                  position: 'top', // top, center, bottom\n                },\n              }\n            },\n            subtitles: [{\n\t\t\t\ttext: \"100.00% Positive\",\n\t\t\t\tverticalAlign: \"center\",\n\t\t\t\tfontSize: 50,\n\n\t\t\t}],\n            dataLabels: {\n              enabled: true,\n              formatter: function (val) {\n                return val + \"%\";\n              },\n              offsetY: -20,\n              style: {\n                fontSize: '12px',\n                colors: [\"#304758\"]\n              }\n            },\n            xaxis: {\n              categories: [\"NET PROFIT / LOSS\"],\n              position: 'top',\n              labels: {\n                offsetY: -18,\n              },\n              axisBorder: {\n                show: false\n              },\n              axisTicks: {\n                show: false\n              },\n              crosshairs: {\n                fill: {\n                  type: 'gradient',\n                  gradient: {\n                    colorFrom: '#D8E3F0',\n                    colorTo: '#BED1E6',\n                    stops: [0, 100],\n                    opacityFrom: 0.4,\n                    opacityTo: 0.5,\n                  }\n                }\n              },\n              tooltip: {\n                enabled: true,\n                offsetY: -35,\n              }\n            },\n            fill: {\n              gradient: {\n                shade: 'light',\n                type: \"horizontal\",\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [50, 0, 100, 100]\n              },\n            },\n            yaxis: {\n              axisBorder: {\n                show: false\n              },\n              axisTicks: {\n                show: false,\n              },\n              labels: {\n                show: false,\n                formatter: function (val) {\n                  return val + \"%\";\n                }\n              }\n            },\n            title: {\n              text: 'Monthly Inflation in Argentina, 2002',\n              floating: true,\n              offsetY: 320,\n              align: 'center',\n              style: {\n                color: '#444'\n              }\n            }\n          },\n\n\n\n\n\n options1: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#1df20a']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories:[\"Net Profit/(Loss) â€¦\"],\n            }\n          },\n\n\noptions2: {\n        plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n   dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#1df20a']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          },\n          series2: [1],\n\n          series: [{\n            name: 'SQBL',\n            data: [4.0]\n          },\n{\n            name: 'SQCL',\n            data: [2.3]\n          },\n\n          ],\n\n           series1: [{\n            name: 'SQBL',\n            data: [44]\n          }, {\n            name: 'SQCL',\n            data: [53]\n          }],\n\n        }\n      }\n\n\n  render() {\n    return (\n    <Col xs={24} sm={24} md={12} lg={24} className=\"c-mb\">\n\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n\n                  <ReactApexChart options={this.state.options1} series={this.state.series1} type=\"bar\" width={300} height={150} />\n                  <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" width={300} height={150} />\n                  <ReactApexChart options={this.state.options2} series={this.state.series2} type=\"donut\" width={300} height={150} />\n                     </div>\n\n              <div className=\"card-statistics-block\">\n\n                  <ReactApexChart options={this.state.options1} series={this.state.series1} type=\"bar\" width={300} height={150} />\n                  <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" width={300} height={150} />\n                  <ReactApexChart options={this.state.options2} series={this.state.series2} type=\"donut\" width={300} height={150} />\n                     </div>\n\n                </Card>\n\n\n\n            </Col>\n\n\n\n\n    )\n  }\n}\n\nexport default Analytical;"]},"metadata":{},"sourceType":"module"}
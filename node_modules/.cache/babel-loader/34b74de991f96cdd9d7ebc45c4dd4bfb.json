{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/LineChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl,\n        Menu: Menu_name\n      });\n    };\n\n    this.handleDownload = e => {\n      e.preventDefault();\n      this.lineChart_TableDownload({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.state = {\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      loading: true,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      bar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      bar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      vertical_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      vertical_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      value_xl: \"Group\",\n      value_yl: \"Amount\",\n      download_lineChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAllChartData({\n      A: \"Group\",\n      B: \"Amount\",\n      Menu: Menu_name\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      const table_dict = data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        download_lineChart_table: [table_dict]\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //=================================================== Line Chart Table Data Download ===================================\n\n\n  async lineChart_TableDownload(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(Host.loginURL + \"/download_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n    }\n  }\n\n  render() {\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_xl,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_xl,\n      onChange: this.handleSubmitLineChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Group\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_yl,\n      onChange: this.handleSubmitLineChart1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, this.state.select_amount), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitLineChartOK,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_line\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '21px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_line\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Line Chart TableData\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"modal-title\",\n      style: {\n        marginLeft: \"160px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.line_table_columns,\n      dataSource: this.state.line_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_lineChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      forceFit: true,\n      width: 400,\n      height: 400,\n      data: this.state.line_chart_source_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"name*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/LineChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","LineChart","Component","constructor","props","handleSubmitLineChart","e","setState","value_xl","target","value","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loading","loadLineChartData","A","state","B","Menu","handleDownload","lineChart_TableDownload","books","intHeader","filter","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","download_lineChart_table","firstname","lastname","email","download_barChart_table","componentWillMount","loadAnalytical","loadIntHeaders","loadAllChartData","promise","post","loginURL","status","data","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","area_chart_series","download_group_barChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","area_table_columns","area_table_data","download_areaChart_table","render","line_chart_source_scale","dataKey","min","formatter","val","Math","round","max","override","minHeight","width","marginLeft","map","index","cursor","fontSize","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\n\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n             books:[],\n             intHeader:[],\n             filter:[],\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\", Menu:Menu_name});\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl:\"\"})\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl:\"\"})\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl, Menu:Menu_name}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n//=================================================== Line Chart Table Data Download ===================================\n\nhandleDownload = (e) => {\n    e.preventDefault();\n     this.lineChart_TableDownload(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync lineChart_TableDownload(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n const promise = await axios.post(Host.loginURL +\"/download_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n    }\n}\n\n\n\n\n\n\nrender() {\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n          formatter: function formatter(val) {\n                     if (val < 100000) {\n                         return Math.round((val/1000) * 10)/10+'k';\n                     }\n                    else if (val >= 1000000){\n                        return val=(val/1000000)+\"M\";\n                    }\n                     else{\n                         return val;\n                     }\n          }\n},\n{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <Card\n            title={this.state.value_xl}\n            style={{ minHeight: \"100%\" }}\n            bordered={false}\n            className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n       <div id=\"chart\">\n            <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>Group</option>\n                 {this.state.books.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>{this.state.select_amount}</option>\n                 {this.state.intHeader.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <React.Fragment>\n                <button onClick={this.handleSubmitLineChartOK} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment>\n         <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_line\"\n                style={{marginLeft:\"3px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'21px'}}/> </button>\n              <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                     {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                      <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                    </div>\n                    <div>\n                    <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n\n                    </div>\n                    <div class=\"modal-body\">\n                     <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                      <CSVLink data={this.state.download_lineChart_table}>\n                      <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                      </CSVLink>;\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n              <Chart forceFit width={400} height={400} data={this.state.line_chart_source_data}\n                                                       scale={line_chart_source_scale}>\n                <Tooltip />\n                <Axis />\n                <Legend />\n                <Line position=\"name*value\"/>\n                <Point position=\"name*value\" shape=\"circle\"/>\n              </Chart>\n          </div>\n        </div>\n     </Card>\n    );\n  }\n}\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport { Chart, Tooltip, Axis, Legend, Bar, Line } from \"viser-react\";\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass Reactjs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n  }\n\n  componentDidMount() {\n    const sourceDataDaily = [{\n      name: \"Recieved\",\n      \"1AMMMMMMMMM\": 18.9,\n      \"2AM\": 28.8\n    }, {\n      name: \"Sent\",\n      \"1AMMMMMMMMM\": 90.9,\n      \"2AM\": 71.8\n    }];\n    const dv = new DataSet.View().source(sourceDataDaily);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"1AMMMMMMMMM\", \"2AM\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({\n      chartData: data,\n      selectedKey: \"daily\"\n    });\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: this.props.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"keySelect*average\",\n      color: \"name\",\n      adjust: [{\n        type: \"dodge\",\n        marginRatio: 1 / 32\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","Chart","Tooltip","Axis","Legend","Bar","Line","ChartHistoryGroupColumn","DataSet","require","Reactjs","constructor","props","state","chartData","selectedKey","componentDidMount","sourceDataDaily","name","dv","View","source","transform","type","fields","key","value","data","rows","setState","render","marginRatio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAuD,aAAvD;AACA,OAAOC,uBAAP,MAAoC,8CAApC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAMC,OAAN,SAAsBhB,SAAtB,CAAgC;AAC9BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKD;;AAGHC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,eAAe,GAAG,CACxB;AACEC,MAAAA,IAAI,EAAE,UADR;AAEE,qBAAe,IAFjB;AAGE,aAAO;AAHT,KADwB,EAMxB;AACEA,MAAAA,IAAI,EAAE,MADR;AAEE,qBAAe,IAFjB;AAGE,aAAO;AAHT,KANwB,CAAxB;AAcE,UAAMC,EAAE,GAAG,IAAIX,OAAO,CAACY,IAAZ,GAAmBC,MAAnB,CAA0BJ,eAA1B,CAAX;AACAE,IAAAA,EAAE,CAACG,SAAH,CAAa;AACXC,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,MAAM,EAAE,CAAC,aAAD,EAAe,KAAf,CAFG;AAGXC,MAAAA,GAAG,EAAE,WAHM;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,UAAMC,IAAI,GAAGR,EAAE,CAACS,IAAhB;AACA,SAAKC,QAAL,CAAc;AAAEf,MAAAA,SAAS,EAAEa,IAAb;AAAmBZ,MAAAA,WAAW,EAAE;AAAhC,KAAd;AACD;;AAIDe,EAAAA,MAAM,GAAG;AACR,WACG,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWE,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAC,mBADX;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAE,CAAC;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBQ,QAAAA,WAAW,EAAE,IAAI;AAAlC,OAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADH;AAYA;;AApD6B;;AAsDhC,eAAerB,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport { Chart, Tooltip, Axis, Legend, Bar, Line} from \"viser-react\";\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nconst DataSet = require(\"@antv/data-set\");\n\nclass Reactjs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n\n  }\n\n\ncomponentDidMount() {\n  const sourceDataDaily = [\n  {\n    name: \"Recieved\",\n    \"1AMMMMMMMMM\": 18.9,\n    \"2AM\": 28.8,\n  },\n  {\n    name: \"Sent\",\n    \"1AMMMMMMMMM\": 90.9,\n    \"2AM\": 71.8,\n\n  }\n];\n\n    const dv = new DataSet.View().source(sourceDataDaily);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"1AMMMMMMMMM\",\"2AM\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({ chartData: data, selectedKey: \"daily\" });\n  }\n\n\n\n  render() {\n   return (\n      <Chart forceFit height={400} data={this.props.chartData}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Line\n          position=\"keySelect*average\"\n          color=\"name\"\n          adjust={[{ type: \"dodge\", marginRatio: 1 / 32 }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default Reactjs;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/ChartBreakdownDonut.js\";\nimport { Chart, Tooltip, Axis, Legend, Coord, Guide, Pie } from 'viser-react';\nimport * as React from 'react';\n\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [{\n  item: '',\n  count: \"\"\n}];\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass ChartBreakdownDonut extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      width: 400,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartBreakdownDonut;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/ChartBreakdownDonut.js"],"names":["Chart","Tooltip","Axis","Legend","Coord","Guide","Pie","React","DataSet","require","sourceData","item","count","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","data","rows","ChartBreakdownDonut","Component","render","stroke","lineWidth","val","point"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,GAArD,QAAgE,aAAhE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CADiB,CAAnB;AAKA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE,SADI;AAEbC,EAAAA,GAAG,EAAE,CAFQ;AAGbC,EAAAA,SAAS,EAAE;AAHE,CAAD,CAAd;AAMA,MAAMC,EAAE,GAAG,IAAIT,OAAO,CAACU,IAAZ,GAAmBC,MAAnB,CAA0BT,UAA1B,CAAX;AACAO,EAAE,CAACG,SAAH,CAAa;AACXC,EAAAA,IAAI,EAAE,SADK;AAEXC,EAAAA,KAAK,EAAE,OAFI;AAGXC,EAAAA,SAAS,EAAE,MAHA;AAIXC,EAAAA,EAAE,EAAE;AAJO,CAAb;AAMA,MAAMC,IAAI,GAAGR,EAAE,CAACS,IAAhB;;AAEA,MAAMC,mBAAN,SAAkCpB,KAAK,CAACqB,SAAxC,CAAkD;AAChDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,GAAd;AAAmB,MAAA,MAAM,EAAE,GAA3B;AAAgC,MAAA,IAAI,EAAEJ,IAAtC;AAA4C,MAAA,KAAK,EAAEZ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,MAAM,EAAE,IAA5B;AAAkC,MAAA,WAAW,EAAE,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAE;AAAEiB,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA5C;AACE,MAAA,KAAK,EAAE,CAAC,SAAD,EAAY;AACjBf,QAAAA,SAAS,EAAE,CAACgB,GAAD,EAAMrB,IAAN,KAAe;AACxB,iBAAOA,IAAI,CAACsB,KAAL,CAAWtB,IAAX,GAAkB,IAAlB,GAAyBqB,GAAhC;AACD;AAHgB,OAAZ,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAeD;;AAjB+C;;AAmBlD,eAAeL,mBAAf","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Coord, Guide, Pie } from 'viser-react';\nimport * as React from 'react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { item: '', count: \"\" },\n\n];\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass ChartBreakdownDonut extends React.Component {\n  render() {\n    return (\n      <Chart width={400} height={400} data={data} scale={scale}>\n        <Tooltip showTitle={true} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default ChartBreakdownDonut;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
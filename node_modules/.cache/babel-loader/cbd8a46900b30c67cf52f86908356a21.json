{"ast":null,"code":"import _classCallCheck from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Link,Switch,Route}from\"react-router-dom\";import{Row,Col,Card,Button,Modal,Layout,Menu,Breadcrumb,Icon,Tree}from'antd';import LineChart from'./chart';var TreeNode=Tree.TreeNode,DirectoryTree=Tree.DirectoryTree;var SubMenu=Menu.SubMenu;var Header=Layout.Header,Content=Layout.Content,Footer=Layout.Footer,Sider=Layout.Sider;var DataSet=require(\"@antv/data-set\");var ChartDashboard=/*#__PURE__*/function(_React$Component){_inherits(ChartDashboard,_React$Component);function ChartDashboard(){var _getPrototypeOf2;var _this;_classCallCheck(this,ChartDashboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ChartDashboard)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={ModalText:'Content of the modal',visible:false,confirmLoading:false};_this.showModal=function(){_this.setState({visible:true});};_this.handleOk=function(){_this.setState({ModalText:'The modal will be closed after two seconds',confirmLoading:true});setTimeout(function(){_this.setState({visible:false,confirmLoading:false});},2000);};_this.handleCancel=function(){console.log('Clicked cancel button');_this.setState({visible:false});};return _this;}_createClass(ChartDashboard,[{key:\"render\",value:function render(){var _this$state=this.state,visible=_this$state.visible,confirmLoading=_this$state.confirmLoading,ModalText=_this$state.ModalText;return React.createElement(\"div\",null,React.createElement(Button,{type:\"primary\",onClick:this.showModal},\"Open Modal with async logic\"),React.createElement(Modal,{title:\"Title\",visible:visible,onOk:this.handleOk,confirmLoading:confirmLoading,onCancel:this.handleCancel},React.createElement(\"p\",null,ModalText)));}}]);return ChartDashboard;}(React.Component);export default ChartDashboard;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Modal","Layout","Menu","Breadcrumb","Icon","Tree","LineChart","TreeNode","DirectoryTree","SubMenu","Header","Content","Footer","Sider","DataSet","require","ChartDashboard","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log"],"mappings":"q2BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,IAAR,CAAcC,MAAd,CAAsBC,KAAtB,KAAmC,kBAAnC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,MAAzB,CAAiCC,KAAjC,CAAyCC,MAAzC,CAAiDC,IAAjD,CAAuDC,UAAvD,CAAmEC,IAAnE,CAAyEC,IAAzE,KAAoF,MAApF,CACA,MAAOC,CAAAA,SAAP,KAAsB,SAAtB,C,GAEQC,CAAAA,Q,CAA4BF,I,CAA5BE,Q,CAAUC,a,CAAkBH,I,CAAlBG,a,IAEVC,CAAAA,O,CAAYP,I,CAAZO,O,IACAC,CAAAA,M,CAAmCT,M,CAAnCS,M,CAAQC,O,CAA2BV,M,CAA3BU,O,CAASC,M,CAAkBX,M,CAAlBW,M,CAAQC,K,CAAUZ,M,CAAVY,K,CACjC,GAAMC,CAAAA,OAAO,CAAGC,OAAO,CAAC,gBAAD,CAAvB,C,GAEMC,CAAAA,c,2aACJC,K,CAAQ,CACNC,SAAS,CAAE,sBADL,CAENC,OAAO,CAAE,KAFH,CAGNC,cAAc,CAAE,KAHV,C,OAMRC,S,CAAY,UAAM,CAChB,MAAKC,QAAL,CAAc,CACZH,OAAO,CAAE,IADG,CAAd,EAGD,C,OAEDI,Q,CAAW,UAAM,CACf,MAAKD,QAAL,CAAc,CACZJ,SAAS,CAAE,4CADC,CAEZE,cAAc,CAAE,IAFJ,CAAd,EAIAI,UAAU,CAAC,UAAM,CACf,MAAKF,QAAL,CAAc,CACZH,OAAO,CAAE,KADG,CAEZC,cAAc,CAAE,KAFJ,CAAd,EAID,CALS,CAKP,IALO,CAAV,CAMD,C,OAEDK,Y,CAAe,UAAM,CACnBC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACA,MAAKL,QAAL,CAAc,CACZH,OAAO,CAAE,KADG,CAAd,EAGD,C,iFAEQ,iBACwC,KAAKF,KAD7C,CACCE,OADD,aACCA,OADD,CACUC,cADV,aACUA,cADV,CAC0BF,SAD1B,aAC0BA,SAD1B,CAEP,MACE,gCACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,OAAO,CAAE,KAAKG,SAArC,gCADF,CAIE,oBAAC,KAAD,EACE,KAAK,CAAC,OADR,CAEE,OAAO,CAAEF,OAFX,CAGE,IAAI,CAAE,KAAKI,QAHb,CAIE,cAAc,CAAEH,cAJlB,CAKE,QAAQ,CAAE,KAAKK,YALjB,EAOE,6BAAIP,SAAJ,CAPF,CAJF,CADF,CAgBD,C,4BAnD0B3B,KAAK,CAACC,S,EAsDnC,cAAewB,CAAAA,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Modal , Layout, Menu, Breadcrumb, Icon, Tree} from 'antd';\nimport LineChart from './chart';\n\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\nconst DataSet = require(\"@antv/data-set\");\n\nclass ChartDashboard extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Open Modal with async logic\n        </Button>\n        <Modal\n          title=\"Title\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <p>{ModalText}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChartDashboard;\n\n\n"]},"metadata":{},"sourceType":"module"}
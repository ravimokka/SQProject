{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\n\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nvar deprecationWarning = ['Legacy polar charts are deprecated!', 'Please switch to *polar* subplots.'].join(' ');\nvar domainAttr = extendFlat({}, axesAttrs.domain, {\n  description: ['Polar chart subplots are not supported yet.', 'This key has currently no effect.'].join(' ')\n});\n\nfunction mergeAttrs(axisName, nonCommonAttrs) {\n  var commonAttrs = {\n    showline: {\n      valType: 'boolean',\n      role: 'style',\n      description: [deprecationWarning, 'Determines whether or not the line bounding this', axisName, 'axis', 'will be shown on the figure.'].join(' ')\n    },\n    showticklabels: {\n      valType: 'boolean',\n      role: 'style',\n      description: [deprecationWarning, 'Determines whether or not the', axisName, 'axis ticks', 'will feature tick labels.'].join(' ')\n    },\n    tickorientation: {\n      valType: 'enumerated',\n      values: ['horizontal', 'vertical'],\n      role: 'style',\n      description: [deprecationWarning, 'Sets the orientation (from the paper perspective)', 'of the', axisName, 'axis tick labels.'].join(' ')\n    },\n    ticklen: {\n      valType: 'number',\n      min: 0,\n      role: 'style',\n      description: [deprecationWarning, 'Sets the length of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    tickcolor: {\n      valType: 'color',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the color of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    ticksuffix: {\n      valType: 'string',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the length of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    endpadding: {\n      valType: 'number',\n      role: 'style',\n      description: deprecationWarning\n    },\n    visible: {\n      valType: 'boolean',\n      role: 'info',\n      description: [deprecationWarning, 'Determines whether or not this axis will be visible.'].join(' ')\n    }\n  };\n  return extendFlat({}, nonCommonAttrs, commonAttrs);\n}\n\nmodule.exports = overrideAll({\n  radialaxis: mergeAttrs('radial', {\n    range: {\n      valType: 'info_array',\n      role: 'info',\n      items: [{\n        valType: 'number'\n      }, {\n        valType: 'number'\n      }],\n      description: [deprecationWarning, 'Defines the start and end point of this radial axis.'].join(' ')\n    },\n    domain: domainAttr,\n    orientation: {\n      valType: 'number',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the orientation (an angle with respect to the origin)', 'of the radial axis.'].join(' ')\n    }\n  }),\n  angularaxis: mergeAttrs('angular', {\n    range: {\n      valType: 'info_array',\n      role: 'info',\n      items: [{\n        valType: 'number',\n        dflt: 0\n      }, {\n        valType: 'number',\n        dflt: 360\n      }],\n      description: [deprecationWarning, 'Defines the start and end point of this angular axis.'].join(' ')\n    },\n    domain: domainAttr\n  }),\n  // attributes that appear at layout root\n  layout: {\n    direction: {\n      valType: 'enumerated',\n      values: ['clockwise', 'counterclockwise'],\n      role: 'info',\n      description: [deprecationWarning, 'Sets the direction corresponding to positive angles', 'in legacy polar charts.'].join(' ')\n    },\n    orientation: {\n      valType: 'angle',\n      role: 'info',\n      description: [deprecationWarning, 'Rotates the entire polar by the given angle', 'in legacy polar charts.'].join(' ')\n    }\n  }\n}, 'plot', 'nested');","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\"; // First way to import\n\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader } from \"react-spinners\";\nimport { SyncLoader } from \"react-spinners\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => {\n      /*\n        Begin by setting loading = true, and use the callback function\n        of setState() to make the ajax request. Set loading = false after\n        the request completes.\n      */\n      this.setState({\n        loading: false\n      }, () => {});\n    };\n\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Load Data\"), \"loading ? \", React.createElement(FadeLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AwesomeComponent;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","css","ClipLoader","FadeLoader","SyncLoader","override","AwesomeComponent","Component","constructor","props","onClick","setState","loading","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA4B,gBAA5B,C,CAGA;;AACA,MAAMC,QAAQ,GAAGJ,GAAI;;;;;;;;CAArB;;AAUA,MAAMK,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,OAPmB,GAOT,MAAM;AAChB;;;;;AAKA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAkC,MAAM,CAAE,CAA1C;AAED,KAfoB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAYDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKJ,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,gBAIY,oBAAC,UAAD;AACR,MAAA,GAAG,EAAEL,QADG;AAER,MAAA,IAAI,EAAE,GAFE,CAEG;AAFH;AAGR,MAAA,KAAK,EAAE,SAHC;AAIR,MAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWD,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ,CADF;AAaD;;AAhC4C;;AAkC9C,eAAeN,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\n// First way to import\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader\t } from \"react-spinners\";\nimport { SyncLoader\t } from \"react-spinners\";\n\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  onClick = () => {\n  /*\n    Begin by setting loading = true, and use the callback function\n    of setState() to make the ajax request. Set loading = false after\n    the request completes.\n  */\n  this.setState({ loading: false }, () => {})\n\n}\n\n  render() {\n    return (\n      <div>\n       <button onClick={this.onClick}>\n            Load Data\n          </button>\n        loading ? <FadeLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n export default AwesomeComponent;"]},"metadata":{},"sourceType":"module"}
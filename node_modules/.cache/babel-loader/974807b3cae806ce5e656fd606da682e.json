{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst data = [{\n  country: 'Asia',\n  year: '1750',\n  value: 502\n}, {\n  country: 'Africa',\n  year: '1750',\n  value: 10000\n}, {\n  country: 'Europe',\n  year: '1750',\n  value: 163\n}, {\n  country: 'Europe',\n  year: '1999',\n  value: 729\n}, {\n  country: 'Oceania',\n  year: '2050',\n  value: 300\n}];\nconst scale = [{\n  dataKey: 'year',\n  type: 'linear',\n  tickInterval: 50\n}];\n\nclass AnalyticalTest extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      width: 1000,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"year*value\",\n      size: 2,\n      color: \"country\",\n      adjust: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(StackArea, {\n      position: \"year*value\",\n      color: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","StackArea","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","data","country","year","value","scale","dataKey","type","tickInterval","AnalyticalTest","Component","render"],"mappings":";AAEA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmDC,SAAnD,EAA8DC,IAA9D,EAAoEC,GAApE,EAAyEC,KAAzE,QAAqF,aAArF;AAGA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAGA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,OAAO,EAAE,MAAV;AAAkBC,EAAAA,IAAI,EAAE,MAAxB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CADW,EAGX;AAACF,EAAAA,OAAO,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE,MAA1B;AAAkCC,EAAAA,KAAK,EAAE;AAAzC,CAHW,EAKX;AAACF,EAAAA,OAAO,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE,MAA1B;AAAkCC,EAAAA,KAAK,EAAE;AAAzC,CALW,EAOX;AAACF,EAAAA,OAAO,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE,MAA1B;AAAkCC,EAAAA,KAAK,EAAE;AAAzC,CAPW,EASX;AAACF,EAAAA,OAAO,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE,MAA3B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CATW,CAAb;AAYA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE,MADI;AAEbC,EAAAA,IAAI,EAAE,QAFO;AAGbC,EAAAA,YAAY,EAAE;AAHD,CAAD,CAAd;;AAMA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAC3CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA8B,MAAA,KAAK,EAAE,IAArC;AAA2C,MAAA,IAAI,EAAEV,IAAjD;AAAuD,MAAA,KAAK,EAAEI,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,YAAf;AAA4B,MAAA,IAAI,EAAE,CAAlC;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAqD,MAAA,MAAM,EAAC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,YAApB;AAAiC,MAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAX0C;;AAgB7C,eAAeI,cAAf","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point} from 'viser-react';\n\n\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n\nconst data = [\n  {country: 'Asia', year: '1750', value: 502},\n\n  {country: 'Africa', year: '1750', value: 10000},\n\n  {country: 'Europe', year: '1750', value: 163},\n\n  {country: 'Europe', year: '1999', value: 729},\n\n  {country: 'Oceania', year: '2050', value: 300},\n];\n\nconst scale = [{\n  dataKey: 'year',\n  type: 'linear',\n  tickInterval: 50,\n}];\n\nclass AnalyticalTest extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400}  width={1000} data={data} scale={scale}>\n        <Tooltip />\n        <Axis dataKey=\"value\" />\n        <Legend />\n        <Line position=\"year*value\" size={2} color=\"country\" adjust=\"stack\" />\n        <StackArea position=\"year*value\" color=\"country\" />\n      </Chart>\n    );\n  }\n}\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
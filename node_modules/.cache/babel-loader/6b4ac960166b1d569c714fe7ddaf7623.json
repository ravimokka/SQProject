{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport * as React from 'react';\nimport { MultiSelectComponent, CheckBoxSelection, Inject } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from '../common/sample-base';\nimport { PropertyPane } from '../common/property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nexport class Analytical extends SampleBase {\n  constructor() {\n    super(...arguments); //define the data with category\n\n    this.countries = [{\n      Name: 'Australia',\n      Code: 'AU'\n    }, {\n      Name: 'Bermuda',\n      Code: 'BM'\n    }, {\n      Name: 'Canada',\n      Code: 'CA'\n    }, {\n      Name: 'Cameroon',\n      Code: 'CM'\n    }, {\n      Name: 'Denmark',\n      Code: 'DK'\n    }, {\n      Name: 'France',\n      Code: 'FR'\n    }, {\n      Name: 'Finland',\n      Code: 'FI'\n    }, {\n      Name: 'Germany',\n      Code: 'DE'\n    }, {\n      Name: 'Greenland',\n      Code: 'GL'\n    }, {\n      Name: 'Hong Kong',\n      Code: 'HK'\n    }, {\n      Name: 'India',\n      Code: 'IN'\n    }, {\n      Name: 'Italy',\n      Code: 'IT'\n    }, {\n      Name: 'Japan',\n      Code: 'JP'\n    }, {\n      Name: 'Mexico',\n      Code: 'MX'\n    }, {\n      Name: 'Norway',\n      Code: 'NO'\n    }, {\n      Name: 'Poland',\n      Code: 'PL'\n    }, {\n      Name: 'Switzerland',\n      Code: 'CH'\n    }, {\n      Name: 'United Kingdom',\n      Code: 'GB'\n    }, {\n      Name: 'United States',\n      Code: 'US'\n    }]; // maps the appropriate column to fields property\n\n    this.checkFields = {\n      text: 'Name',\n      value: 'Code'\n    };\n  } // function to handle the CheckBox change event\n\n\n  onChange(args) {\n    // enable or disable the SelectAll in multiselect on CheckBox checked state\n    this.mulObj.showSelectAll = args.checked;\n  } // function to handle the CheckBox change event\n\n\n  onChangeDrop(args) {\n    // enable or disable the Dropdown button in multiselect on CheckBox checked state\n    this.mulObj.showDropDownIcon = args.checked;\n  } // function to handle the CheckBox change event\n\n\n  onChangeLimit(args) {\n    // enable or disable the selection limit in multiselect on CheckBox checked state\n    this.mulObj.enableSelectionOrder = args.checked;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"multichecbox\",\n      className: \"control-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control-section col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"multigroup\",\n      className: \"control-styles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"CheckBox\"), React.createElement(MultiSelectComponent, {\n      id: \"checkbox\",\n      ref: scope => {\n        this.mulObj = scope;\n      },\n      dataSource: this.countries,\n      fields: this.checkFields,\n      placeholder: \"Select countries\",\n      mode: \"CheckBox\",\n      showSelectAll: true,\n      showDropDownIcon: true,\n      filterBarPlaceholder: \"Search countries\",\n      popupHeight: \"350px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Inject, {\n      services: [CheckBoxSelection],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-lg-4 property-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(PropertyPane, {\n      title: \"Properties\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"property\",\n      title: \"Properties\",\n      className: \"property-panel-table\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CheckBoxComponent, {\n      checked: true,\n      label: \"Show Select All\",\n      ref: scope => {\n        this.checkboxObj = scope;\n      },\n      change: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CheckBoxComponent, {\n      checked: true,\n      label: \"DropDown Button\",\n      ref: scope => {\n        this.checkboxObj = scope;\n      },\n      change: this.onChangeDrop.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(CheckBoxComponent, {\n      checked: true,\n      label: \"Selection Reorder\",\n      ref: scope => {\n        this.checkboxObj = scope;\n      },\n      change: this.onChangeLimit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))))))));\n  }\n\n}\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","MultiSelectComponent","CheckBoxSelection","Inject","SampleBase","PropertyPane","CheckBoxComponent","Analytical","constructor","arguments","countries","Name","Code","checkFields","text","value","onChange","args","mulObj","showSelectAll","checked","onChangeDrop","showDropDownIcon","onChangeLimit","enableSelectionOrder","render","scope","width","checkboxObj","bind"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MultiSelectComponent, CheckBoxSelection, Inject } from '@syncfusion/ej2-react-dropdowns';\nimport { SampleBase } from '../common/sample-base';\nimport { PropertyPane } from '../common/property-pane';\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\nexport class Analytical extends SampleBase {\n    constructor() {\n        super(...arguments);\n        //define the data with category\n        this.countries = [\n            { Name: 'Australia', Code: 'AU' },\n            { Name: 'Bermuda', Code: 'BM' },\n            { Name: 'Canada', Code: 'CA' },\n            { Name: 'Cameroon', Code: 'CM' },\n            { Name: 'Denmark', Code: 'DK' },\n            { Name: 'France', Code: 'FR' },\n            { Name: 'Finland', Code: 'FI' },\n            { Name: 'Germany', Code: 'DE' },\n            { Name: 'Greenland', Code: 'GL' },\n            { Name: 'Hong Kong', Code: 'HK' },\n            { Name: 'India', Code: 'IN' },\n            { Name: 'Italy', Code: 'IT' },\n            { Name: 'Japan', Code: 'JP' },\n            { Name: 'Mexico', Code: 'MX' },\n            { Name: 'Norway', Code: 'NO' },\n            { Name: 'Poland', Code: 'PL' },\n            { Name: 'Switzerland', Code: 'CH' },\n            { Name: 'United Kingdom', Code: 'GB' },\n            { Name: 'United States', Code: 'US' }\n        ];\n        // maps the appropriate column to fields property\n        this.checkFields = { text: 'Name', value: 'Code' };\n    }\n    // function to handle the CheckBox change event\n    onChange(args) {\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\n        this.mulObj.showSelectAll = args.checked;\n    }\n    // function to handle the CheckBox change event\n    onChangeDrop(args) {\n        // enable or disable the Dropdown button in multiselect on CheckBox checked state\n        this.mulObj.showDropDownIcon = args.checked;\n    }\n    // function to handle the CheckBox change event\n    onChangeLimit(args) {\n        // enable or disable the selection limit in multiselect on CheckBox checked state\n        this.mulObj.enableSelectionOrder = args.checked;\n    }\n    render() {\n        return (<div id=\"multichecbox\" className='control-pane'>\n        <div className='control-section col-lg-8'>\n          <div id=\"multigroup\" className=\"control-styles\">\n            <h4>CheckBox</h4>\n            <MultiSelectComponent id=\"checkbox\" ref={(scope) => { this.mulObj = scope; }} dataSource={this.countries} fields={this.checkFields} placeholder=\"Select countries\" mode=\"CheckBox\" showSelectAll={true} showDropDownIcon={true} filterBarPlaceholder=\"Search countries\" popupHeight=\"350px\">\n              <Inject services={[CheckBoxSelection]}/>\n            </MultiSelectComponent>\n          </div>\n        </div>\n        <div className='col-lg-4 property-section'>\n          <PropertyPane title='Properties'>\n            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='Show Select All' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChange.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='DropDown Button' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeDrop.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div>\n                    <CheckBoxComponent checked={true} label='Selection Reorder' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeLimit.bind(this)}></CheckBoxComponent>\n                  </div>\n                </td>\n              </tr>\n            </table>\n          </PropertyPane>\n        </div>\n\n      </div>);\n    }\n}\n\nexport default Analytical;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar getSubplotCalcData = require('../../plots/get_data').getSubplotCalcData;\n\nvar counterRegex = require('../../lib').counterRegex;\n\nvar createGeo = require('./geo');\n\nvar GEO = 'geo';\nvar counter = counterRegex(GEO);\nvar attributes = {};\nattributes[GEO] = {\n  valType: 'subplotid',\n  role: 'info',\n  dflt: GEO,\n  editType: 'calc',\n  description: ['Sets a reference between this trace\\'s geospatial coordinates and', 'a geographic map.', 'If *geo* (the default value), the geospatial coordinates refer to', '`layout.geo`.', 'If *geo2*, the geospatial coordinates refer to `layout.geo2`,', 'and so on.'].join(' ')\n};\n\nfunction plotGeo(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var geoIds = fullLayout._subplots[GEO];\n\n  for (var i = 0; i < geoIds.length; i++) {\n    var geoId = geoIds[i];\n    var geoCalcData = getSubplotCalcData(calcData, GEO, geoId);\n    var geoLayout = fullLayout[geoId];\n    var geo = geoLayout._subplot;\n\n    if (!geo) {\n      geo = createGeo({\n        id: geoId,\n        graphDiv: gd,\n        container: fullLayout._geolayer.node(),\n        topojsonURL: gd._context.topojsonURL,\n        staticPlot: gd._context.staticPlot\n      });\n      fullLayout[geoId]._subplot = geo;\n    }\n\n    geo.plot(geoCalcData, fullLayout, gd._promises);\n  }\n}\n\nfunction clean(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldGeoKeys = oldFullLayout._subplots[GEO] || [];\n\n  for (var i = 0; i < oldGeoKeys.length; i++) {\n    var oldGeoKey = oldGeoKeys[i];\n    var oldGeo = oldFullLayout[oldGeoKey]._subplot;\n\n    if (!newFullLayout[oldGeoKey] && !!oldGeo) {\n      oldGeo.framework.remove();\n      oldGeo.clipDef.remove();\n    }\n  }\n}\n\nfunction updateFx(gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[GEO];\n\n  for (var i = 0; i < subplotIds.length; i++) {\n    var subplotLayout = fullLayout[subplotIds[i]];\n    var subplotObj = subplotLayout._subplot;\n    subplotObj.updateFx(fullLayout, subplotLayout);\n  }\n}\n\nmodule.exports = {\n  attr: GEO,\n  name: GEO,\n  idRoot: GEO,\n  idRegex: counter,\n  attrRegex: counter,\n  attributes: attributes,\n  layoutAttributes: require('./layout_attributes'),\n  supplyLayoutDefaults: require('./layout_defaults'),\n  plot: plotGeo,\n  updateFx: updateFx,\n  clean: clean\n};","map":null,"metadata":{},"sourceType":"script"}
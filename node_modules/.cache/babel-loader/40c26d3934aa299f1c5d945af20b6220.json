{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar cleanTicks = require('./clean_ticks');\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n  var tickmode;\n\n  if (containerIn.tickmode === 'array' && (axType === 'log' || axType === 'date')) {\n    tickmode = containerOut.tickmode = 'auto';\n  } else {\n    var tickmodeDefault = Array.isArray(containerIn.tickvals) ? 'array' : containerIn.dtick ? 'linear' : 'auto';\n    tickmode = coerce('tickmode', tickmodeDefault);\n  }\n\n  if (tickmode === 'auto') coerce('nticks');else if (tickmode === 'linear') {\n    // dtick is usually a positive number, but there are some\n    // special strings available for log or date axes\n    // tick0 also has special logic\n    var dtick = containerOut.dtick = cleanTicks.dtick(containerIn.dtick, axType);\n    containerOut.tick0 = cleanTicks.tick0(containerIn.tick0, axType, containerOut.calendar, dtick);\n  } else if (axType !== 'multicategory') {\n    var tickvals = coerce('tickvals');\n    if (tickvals === undefined) containerOut.tickmode = 'auto';else coerce('ticktext');\n  }\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/plots/cartesian/tick_value_defaults.js"],"names":["cleanTicks","require","module","exports","handleTickValueDefaults","containerIn","containerOut","coerce","axType","tickmode","tickmodeDefault","Array","isArray","tickvals","dtick","tick0","calendar","undefined"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,WAAjC,EAA8CC,YAA9C,EAA4DC,MAA5D,EAAoEC,MAApE,EAA4E;AACzF,MAAIC,QAAJ;;AAEA,MAAGJ,WAAW,CAACI,QAAZ,KAAyB,OAAzB,KACMD,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,MADrC,CAAH,EACiD;AAC7CC,IAAAA,QAAQ,GAAGH,YAAY,CAACG,QAAb,GAAwB,MAAnC;AACH,GAHD,MAGO;AACH,QAAIC,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAcP,WAAW,CAACQ,QAA1B,IAAsC,OAAtC,GAClBR,WAAW,CAACS,KAAZ,GAAoB,QAApB,GACA,MAFJ;AAGAL,IAAAA,QAAQ,GAAGF,MAAM,CAAC,UAAD,EAAaG,eAAb,CAAjB;AACH;;AAED,MAAGD,QAAQ,KAAK,MAAhB,EAAwBF,MAAM,CAAC,QAAD,CAAN,CAAxB,KACK,IAAGE,QAAQ,KAAK,QAAhB,EAA0B;AAC3B;AACA;AACA;AACA,QAAIK,KAAK,GAAGR,YAAY,CAACQ,KAAb,GAAqBd,UAAU,CAACc,KAAX,CAC7BT,WAAW,CAACS,KADiB,EACVN,MADU,CAAjC;AAEAF,IAAAA,YAAY,CAACS,KAAb,GAAqBf,UAAU,CAACe,KAAX,CACjBV,WAAW,CAACU,KADK,EACEP,MADF,EACUF,YAAY,CAACU,QADvB,EACiCF,KADjC,CAArB;AAEH,GARI,MAQE,IAAGN,MAAM,KAAK,eAAd,EAA+B;AAClC,QAAIK,QAAQ,GAAGN,MAAM,CAAC,UAAD,CAArB;AACA,QAAGM,QAAQ,KAAKI,SAAhB,EAA2BX,YAAY,CAACG,QAAb,GAAwB,MAAxB,CAA3B,KACKF,MAAM,CAAC,UAAD,CAAN;AACR;AACJ,CA3BD","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cleanTicks = require('./clean_ticks');\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n    var tickmode;\n\n    if(containerIn.tickmode === 'array' &&\n            (axType === 'log' || axType === 'date')) {\n        tickmode = containerOut.tickmode = 'auto';\n    } else {\n        var tickmodeDefault = Array.isArray(containerIn.tickvals) ? 'array' :\n            containerIn.dtick ? 'linear' :\n            'auto';\n        tickmode = coerce('tickmode', tickmodeDefault);\n    }\n\n    if(tickmode === 'auto') coerce('nticks');\n    else if(tickmode === 'linear') {\n        // dtick is usually a positive number, but there are some\n        // special strings available for log or date axes\n        // tick0 also has special logic\n        var dtick = containerOut.dtick = cleanTicks.dtick(\n            containerIn.dtick, axType);\n        containerOut.tick0 = cleanTicks.tick0(\n            containerIn.tick0, axType, containerOut.calendar, dtick);\n    } else if(axType !== 'multicategory') {\n        var tickvals = coerce('tickvals');\n        if(tickvals === undefined) containerOut.tickmode = 'auto';\n        else coerce('ticktext');\n    }\n};\n"]},"metadata":{},"sourceType":"script"}
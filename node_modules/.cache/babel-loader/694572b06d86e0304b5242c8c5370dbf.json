{"ast":null,"code":"import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\n\nfunction setHighlight(item) {\n  item.onHover = function (ev) {\n    var shapes = ev.shapes;\n    var geom = ev.geom;\n    geom.highlightShapes(shapes);\n  };\n\n  return item;\n}\n\nexport var process = function (chart, config) {\n  var cLegend = _.cloneDeep(config.legend);\n\n  var isArr = Array.isArray(cLegend);\n\n  if (_.isNil(cLegend) || cLegend === false || isArr && cLegend.length === 0) {\n    return chart.legend(false);\n  }\n\n  if (cLegend === true) {\n    return chart.legend();\n  }\n\n  var arrLegend = isArr ? cLegend : [cLegend];\n\n  for (var _i = 0, arrLegend_1 = arrLegend; _i < arrLegend_1.length; _i++) {\n    var res = arrLegend_1[_i];\n\n    if (res.highlight) {\n      res = setHighlight(res);\n    }\n\n    var _loop_1 = function (item) {\n      if (res.hasOwnProperty(item)) {\n        if (item === 'onClick') {\n          var content_1 = res.onClick;\n\n          res.onClick = function (ev) {\n            content_1(ev, chart);\n          };\n        }\n\n        EventUtils.setSEvent(chart, 'legend', item, res[item]);\n      }\n    };\n\n    for (var item in res) {\n      _loop_1(item);\n    }\n\n    if (!_.isNil(res.legendMarker)) {\n      res['g2-legend-marker'] = res.legendMarker;\n    }\n\n    if (!_.isNil(res.legendListItem)) {\n      res['g2-legend-list-item'] = res.legendListItem;\n    }\n\n    if (!_.isNil(res.legendTitle)) {\n      res['g2-legend-title'] = res.legendTitle;\n    }\n\n    if (!_.isNil(res.legendList)) {\n      res['g2-legend-list'] = res.legendList;\n    }\n\n    res = _.omit(res, ['legendMarker', 'legendListItem', 'legendTitle', 'legendList']);\n\n    if (res.dataKey) {\n      if (res.show === false) {\n        chart.legend(res.dataKey, false);\n      } else {\n        var option = _.omit(res, ['dataKey', 'show']);\n\n        chart.legend(res.dataKey, option);\n      }\n    } else {\n      chart.legend(res);\n    }\n  }\n\n  return chart;\n};","map":{"version":3,"sources":["../../src/components/setLegendConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nfunction setHighlight(item) {\n    item.onHover = function (ev) {\n        var shapes = ev.shapes;\n        var geom = ev.geom;\n        geom.highlightShapes(shapes);\n    };\n    return item;\n}\nexport var process = function (chart, config) {\n    var cLegend = _.cloneDeep(config.legend);\n    var isArr = Array.isArray(cLegend);\n    if (_.isNil(cLegend) || cLegend === false ||\n        (isArr && cLegend.length === 0)) {\n        return chart.legend(false);\n    }\n    if (cLegend === true) {\n        return chart.legend();\n    }\n    var arrLegend = isArr ? cLegend : [cLegend];\n    for (var _i = 0, arrLegend_1 = arrLegend; _i < arrLegend_1.length; _i++) {\n        var res = arrLegend_1[_i];\n        if (res.highlight) {\n            res = setHighlight(res);\n        }\n        var _loop_1 = function (item) {\n            if (res.hasOwnProperty(item)) {\n                if (item === 'onClick') {\n                    var content_1 = res.onClick;\n                    res.onClick = function (ev) {\n                        content_1(ev, chart);\n                    };\n                }\n                EventUtils.setSEvent(chart, 'legend', item, res[item]);\n            }\n        };\n        for (var item in res) {\n            _loop_1(item);\n        }\n        if (!_.isNil(res.legendMarker)) {\n            res['g2-legend-marker'] = res.legendMarker;\n        }\n        if (!_.isNil(res.legendListItem)) {\n            res['g2-legend-list-item'] = res.legendListItem;\n        }\n        if (!_.isNil(res.legendTitle)) {\n            res['g2-legend-title'] = res.legendTitle;\n        }\n        if (!_.isNil(res.legendList)) {\n            res['g2-legend-list'] = res.legendList;\n        }\n        res = _.omit(res, ['legendMarker', 'legendListItem', 'legendTitle', 'legendList']);\n        if (res.dataKey) {\n            if (res.show === false) {\n                chart.legend(res.dataKey, false);\n            }\n            else {\n                var option = _.omit(res, ['dataKey', 'show']);\n                chart.legend(res.dataKey, option);\n            }\n        }\n        else {\n            chart.legend(res);\n        }\n    }\n    return chart;\n};\n//# sourceMappingURL=setLegendConfig.js.map"]},"metadata":{},"sourceType":"module"}
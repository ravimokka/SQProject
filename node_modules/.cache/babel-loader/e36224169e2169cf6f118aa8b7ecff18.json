{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\n\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\n\nvar Events = require('../../lib/events');\n\nvar dragElement = require('../dragelement');\n\nvar Drawing = require('../drawing');\n\nvar Color = require('../color');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\n\nvar alignmentConstants = require('../../constants/alignment');\n\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\n\nvar style = require('./style');\n\nvar helpers = require('./helpers');\n\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var clipId = 'legend' + fullLayout._uid;\n  if (!fullLayout._infolayer || !gd.calcdata) return;\n  if (!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n  var opts = fullLayout.legend;\n  var legendData = fullLayout.showlegend && getLegendData(gd.calcdata, opts);\n  var hiddenSlices = fullLayout.hiddenlabels || [];\n\n  if (!fullLayout.showlegend || !legendData.length) {\n    fullLayout._infolayer.selectAll('.legend').remove();\n\n    fullLayout._topdefs.select('#' + clipId).remove();\n\n    return Plots.autoMargin(gd, 'legend');\n  }\n\n  var legend = Lib.ensureSingle(fullLayout._infolayer, 'g', 'legend', function (s) {\n    s.attr('pointer-events', 'all');\n  });\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function (s) {\n    s.append('rect');\n  });\n  var bg = Lib.ensureSingle(legend, 'rect', 'bg', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  bg.call(Color.stroke, opts.bordercolor).call(Color.fill, opts.bgcolor).style('stroke-width', opts.borderwidth + 'px');\n  var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n  var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function (s) {\n    s.attr(constants.scrollBarEnterAttrs).call(Color.fill, constants.scrollBarColor);\n  });\n  var groups = scrollBox.selectAll('g.groups').data(legendData);\n  groups.enter().append('g').attr('class', 'groups');\n  groups.exit().remove();\n  var traces = groups.selectAll('g.traces').data(Lib.identity);\n  traces.enter().append('g').attr('class', 'traces');\n  traces.exit().remove();\n  traces.style('opacity', function (d) {\n    var trace = d[0].trace;\n\n    if (Registry.traceIs(trace, 'pie-like')) {\n      return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n    } else {\n      return trace.visible === 'legendonly' ? 0.5 : 1;\n    }\n  }).each(function () {\n    d3.select(this).call(drawTexts, gd);\n  }).call(style, gd).each(function () {\n    d3.select(this).call(setupTraceToggle, gd);\n  });\n  Lib.syncOrAsync([Plots.previousPromises, function () {\n    return computeLegendDimensions(gd, groups, traces);\n  }, function () {\n    // IF expandMargin return a Promise (which is truthy),\n    // we're under a doAutoMargin redraw, so we don't have to\n    // draw the remaining pieces below\n    if (expandMargin(gd)) return;\n    var gs = fullLayout._size;\n    var bw = opts.borderwidth;\n\n    var lx = gs.l + gs.w * opts.x - FROM_TL[getXanchor(opts)] * opts._width;\n\n    var ly = gs.t + gs.h * (1 - opts.y) - FROM_TL[getYanchor(opts)] * opts._effHeight;\n\n    if (fullLayout.margin.autoexpand) {\n      var lx0 = lx;\n      var ly0 = ly;\n      lx = Lib.constrain(lx, 0, fullLayout.width - opts._width);\n      ly = Lib.constrain(ly, 0, fullLayout.height - opts._effHeight);\n\n      if (lx !== lx0) {\n        Lib.log('Constrain legend.x to make legend fit inside graph');\n      }\n\n      if (ly !== ly0) {\n        Lib.log('Constrain legend.y to make legend fit inside graph');\n      }\n    } // Set size and position of all the elements that make up a legend:\n    // legend, background and border, scroll box and scroll bar\n\n\n    Drawing.setTranslate(legend, lx, ly); // to be safe, remove previous listeners\n\n    scrollBar.on('.drag', null);\n    legend.on('wheel', null);\n\n    if (opts._height <= opts._maxHeight || gd._context.staticPlot) {\n      // if scrollbar should not be shown.\n      bg.attr({\n        width: opts._width - bw,\n        height: opts._effHeight - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      Drawing.setTranslate(scrollBox, 0, 0);\n      clipPath.select('rect').attr({\n        width: opts._width - 2 * bw,\n        height: opts._effHeight - 2 * bw,\n        x: bw,\n        y: bw\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      Drawing.setRect(scrollBar, 0, 0, 0, 0);\n      delete opts._scrollY;\n    } else {\n      var scrollBarHeight = Math.max(constants.scrollBarMinHeight, opts._effHeight * opts._effHeight / opts._height);\n      var scrollBarYMax = opts._effHeight - scrollBarHeight - 2 * constants.scrollBarMargin;\n      var scrollBoxYMax = opts._height - opts._effHeight;\n      var scrollRatio = scrollBarYMax / scrollBoxYMax;\n      var scrollBoxY = Math.min(opts._scrollY || 0, scrollBoxYMax); // increase the background and clip-path width\n      // by the scrollbar width and margin\n\n      bg.attr({\n        width: opts._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: opts._effHeight - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      clipPath.select('rect').attr({\n        width: opts._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: opts._effHeight - 2 * bw,\n        x: bw,\n        y: bw + scrollBoxY\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio); // scroll legend by mousewheel or touchpad swipe up/down\n\n      legend.on('wheel', function () {\n        scrollBoxY = Lib.constrain(opts._scrollY + d3.event.deltaY / scrollBarYMax * scrollBoxYMax, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n        if (scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n          d3.event.preventDefault();\n        }\n      });\n      var eventY0, eventY1, scrollBoxY0;\n\n      var getScrollBarDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY1 - eventY0) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n\n      var getNaturalDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY0 - eventY1) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      }; // scroll legend by dragging scrollBAR\n\n\n      var scrollBarDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n        } else {\n          eventY0 = e.clientY;\n        }\n\n        scrollBoxY0 = scrollBoxY;\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.buttons === 2 || e.ctrlKey) return;\n\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n        } else {\n          eventY1 = e.clientY;\n        }\n\n        scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      });\n      scrollBar.call(scrollBarDrag); // scroll legend by touch-dragging scrollBOX\n\n      var scrollBoxTouchDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n          scrollBoxY0 = scrollBoxY;\n        }\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n          scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n          scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        }\n      });\n      scrollBox.call(scrollBoxTouchDrag);\n    }\n\n    function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n      opts._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n      Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n      Drawing.setRect(scrollBar, opts._width, constants.scrollBarMargin + scrollBoxY * scrollRatio, constants.scrollBarWidth, scrollBarHeight);\n      clipPath.select('rect').attr('y', bw + scrollBoxY);\n    }\n\n    if (gd._context.edits.legendPosition) {\n      var xf, yf, x0, y0;\n      legend.classed('cursor-move', true);\n      dragElement.init({\n        element: legend.node(),\n        gd: gd,\n        prepFn: function () {\n          var transform = Drawing.getTranslate(legend);\n          x0 = transform.x;\n          y0 = transform.y;\n        },\n        moveFn: function (dx, dy) {\n          var newX = x0 + dx;\n          var newY = y0 + dy;\n          Drawing.setTranslate(legend, newX, newY);\n          xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, opts.xanchor);\n          yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, opts.yanchor);\n        },\n        doneFn: function () {\n          if (xf !== undefined && yf !== undefined) {\n            Registry.call('_guiRelayout', gd, {\n              'legend.x': xf,\n              'legend.y': yf\n            });\n          }\n        },\n        clickFn: function (numClicks, e) {\n          var clickedTrace = fullLayout._infolayer.selectAll('g.traces').filter(function () {\n            var bbox = this.getBoundingClientRect();\n            return e.clientX >= bbox.left && e.clientX <= bbox.right && e.clientY >= bbox.top && e.clientY <= bbox.bottom;\n          });\n\n          if (clickedTrace.size() > 0) {\n            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n          }\n        }\n      });\n    }\n  }], gd);\n};\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n  var trace = legendItem.data()[0][0].trace;\n  var evtData = {\n    event: evt,\n    node: legendItem.node(),\n    curveNumber: trace.index,\n    expandedIndex: trace._expandedIndex,\n    data: gd.data,\n    layout: gd.layout,\n    frames: gd._transitionData._frames,\n    config: gd._context,\n    fullData: gd._fullData,\n    fullLayout: gd._fullLayout\n  };\n\n  if (trace._group) {\n    evtData.group = trace._group;\n  }\n\n  if (Registry.traceIs(trace, 'pie-like')) {\n    evtData.label = legendItem.datum()[0].label;\n  }\n\n  var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n  if (clickVal === false) return;\n\n  if (numClicks === 1) {\n    legend._clickTimeout = setTimeout(function () {\n      handleClick(legendItem, gd, numClicks);\n    }, gd._context.doubleClickDelay);\n  } else if (numClicks === 2) {\n    if (legend._clickTimeout) clearTimeout(legend._clickTimeout);\n    gd._legendMouseDownTime = 0;\n    var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n    if (dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n  }\n}\n\nfunction drawTexts(g, gd) {\n  var legendItem = g.data()[0][0];\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var trace = legendItem.trace;\n  var isPieLike = Registry.traceIs(trace, 'pie-like');\n  var traceIndex = trace.index;\n  var isEditable = gd._context.edits.legendText && !isPieLike;\n  var maxNameLength = opts._maxNameLength;\n  var name = isPieLike ? legendItem.label : trace.name;\n\n  if (trace._meta) {\n    name = Lib.templateString(name, trace._meta);\n  }\n\n  var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n  textEl.attr('text-anchor', 'start').classed('user-select-none', true).call(Drawing.font, fullLayout.legend.font).text(isEditable ? ensureLength(name, maxNameLength) : name);\n  svgTextUtils.positionText(textEl, constants.textGap, 0);\n\n  function textLayout(s) {\n    svgTextUtils.convertToTspans(s, gd, function () {\n      computeTextDimensions(g, gd);\n    });\n  }\n\n  if (isEditable) {\n    textEl.call(svgTextUtils.makeEditable, {\n      gd: gd,\n      text: name\n    }).call(textLayout).on('edit', function (newName) {\n      this.text(ensureLength(newName, maxNameLength)).call(textLayout);\n      var fullInput = legendItem.trace._fullInput || {};\n      var update = {};\n\n      if (Registry.hasTransform(fullInput, 'groupby')) {\n        var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n        var index = groupbyIndices[groupbyIndices.length - 1];\n        var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n        kcont.set(legendItem.trace._group, newName);\n        update = kcont.constructUpdate();\n      } else {\n        update.name = newName;\n      }\n\n      return Registry.call('_guiRestyle', gd, update, traceIndex);\n    });\n  } else {\n    textLayout(textEl);\n  }\n}\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\n\n\nfunction ensureLength(str, maxLength) {\n  var targetLength = Math.max(4, maxLength);\n  if (str && str.trim().length >= targetLength / 2) return str;\n  str = str || '';\n\n  for (var i = targetLength - str.length; i > 0; i--) str += ' ';\n\n  return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n  var doubleClickDelay = gd._context.doubleClickDelay;\n  var newMouseDownTime;\n  var numClicks = 1;\n  var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function (s) {\n    s.style('cursor', 'pointer').attr('pointer-events', 'all').call(Color.fill, 'rgba(0,0,0,0)');\n  });\n  traceToggle.on('mousedown', function () {\n    newMouseDownTime = new Date().getTime();\n\n    if (newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n      // in a click train\n      numClicks += 1;\n    } else {\n      // new click train\n      numClicks = 1;\n      gd._legendMouseDownTime = newMouseDownTime;\n    }\n  });\n  traceToggle.on('mouseup', function () {\n    if (gd._dragged || gd._editing) return;\n    var legend = gd._fullLayout.legend;\n\n    if (new Date().getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n      numClicks = Math.max(numClicks - 1, 1);\n    }\n\n    clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n  });\n}\n\nfunction computeTextDimensions(g, gd) {\n  var legendItem = g.data()[0][0];\n\n  if (!legendItem.trace.showlegend) {\n    g.remove();\n    return;\n  }\n\n  var mathjaxGroup = g.select('g[class*=math-group]');\n  var mathjaxNode = mathjaxGroup.node();\n  var opts = gd._fullLayout.legend;\n  var lineHeight = opts.font.size * LINE_SPACING;\n  var height, width;\n\n  if (mathjaxNode) {\n    var mathjaxBB = Drawing.bBox(mathjaxNode);\n    height = mathjaxBB.height;\n    width = mathjaxBB.width;\n    Drawing.setTranslate(mathjaxGroup, 0, height / 4);\n  } else {\n    var text = g.select('.legendtext');\n    var textLines = svgTextUtils.lineCount(text);\n    var textNode = text.node();\n    height = lineHeight * textLines;\n    width = textNode ? Drawing.bBox(textNode).width : 0; // approximation to height offset to center the font\n    // to avoid getBoundingClientRect\n\n    var textY = lineHeight * (0.3 + (1 - textLines) / 2);\n    svgTextUtils.positionText(text, constants.textGap, textY);\n  }\n\n  legendItem.lineHeight = lineHeight;\n  legendItem.height = Math.max(height, 16) + 3;\n  legendItem.width = width;\n}\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\n\n\nfunction computeLegendDimensions(gd, groups, traces) {\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var gs = fullLayout._size;\n  var isVertical = helpers.isVertical(opts);\n  var isGrouped = helpers.isGrouped(opts);\n  var bw = opts.borderwidth;\n  var bw2 = 2 * bw;\n  var textGap = constants.textGap;\n  var itemGap = constants.itemGap;\n  var endPad = 2 * (bw + itemGap);\n  var yanchor = getYanchor(opts);\n  var isBelowPlotArea = opts.y < 0 || opts.y === 0 && yanchor === 'top';\n  var isAbovePlotArea = opts.y > 1 || opts.y === 1 && yanchor === 'bottom'; // - if below/above plot area, give it the maximum potential margin-push value\n  // - otherwise, extend the height of the plot area\n\n  opts._maxHeight = Math.max(isBelowPlotArea || isAbovePlotArea ? fullLayout.height / 2 : gs.h, 30);\n  var toggleRectWidth = 0;\n  opts._width = 0;\n  opts._height = 0;\n\n  if (isVertical) {\n    traces.each(function (d) {\n      var h = d[0].height;\n      Drawing.setTranslate(this, bw, itemGap + bw + opts._height + h / 2);\n      opts._height += h;\n      opts._width = Math.max(opts._width, d[0].width);\n    });\n    toggleRectWidth = textGap + opts._width;\n    opts._width += itemGap + textGap + bw2;\n    opts._height += endPad;\n\n    if (isGrouped) {\n      groups.each(function (d, i) {\n        Drawing.setTranslate(this, 0, i * opts.tracegroupgap);\n      });\n      opts._height += (opts._lgroupsLength - 1) * opts.tracegroupgap;\n    }\n  } else {\n    var xanchor = getXanchor(opts);\n    var isLeftOfPlotArea = opts.x < 0 || opts.x === 0 && xanchor === 'right';\n    var isRightOfPlotArea = opts.x > 1 || opts.x === 1 && xanchor === 'left';\n    var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n    var hw = fullLayout.width / 2; // - if placed within x-margins, extend the width of the plot area\n    // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n    // - otherwise give it the maximum potential margin-push value\n\n    opts._maxWidth = Math.max(isLeftOfPlotArea ? isBeyondPlotAreaY && xanchor === 'left' ? gs.l + gs.w : hw : isRightOfPlotArea ? isBeyondPlotAreaY && xanchor === 'right' ? gs.r + gs.w : hw : gs.w, 2 * textGap);\n    var maxItemWidth = 0;\n    var combinedItemWidth = 0;\n    traces.each(function (d) {\n      var w = d[0].width + textGap;\n      maxItemWidth = Math.max(maxItemWidth, w);\n      combinedItemWidth += w;\n    });\n    toggleRectWidth = null;\n    var maxRowWidth = 0;\n\n    if (isGrouped) {\n      var maxGroupHeightInRow = 0;\n      var groupOffsetX = 0;\n      var groupOffsetY = 0;\n      groups.each(function () {\n        var maxWidthInGroup = 0;\n        var offsetY = 0;\n        d3.select(this).selectAll('g.traces').each(function (d) {\n          var h = d[0].height;\n          Drawing.setTranslate(this, 0, itemGap + bw + h / 2 + offsetY);\n          offsetY += h;\n          maxWidthInGroup = Math.max(maxWidthInGroup, textGap + d[0].width);\n        });\n        maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n        var next = maxWidthInGroup + itemGap;\n\n        if (next + bw + groupOffsetX > opts._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n          groupOffsetX = 0;\n          groupOffsetY += maxGroupHeightInRow + opts.tracegroupgap;\n          maxGroupHeightInRow = offsetY;\n        }\n\n        Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n        groupOffsetX += next;\n      });\n      opts._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n      opts._height = groupOffsetY + maxGroupHeightInRow + endPad;\n    } else {\n      var nTraces = traces.size();\n      var oneRowLegend = combinedItemWidth + bw2 + (nTraces - 1) * itemGap < opts._maxWidth;\n      var maxItemHeightInRow = 0;\n      var offsetX = 0;\n      var offsetY = 0;\n      var rowWidth = 0;\n      traces.each(function (d) {\n        var h = d[0].height;\n        var w = textGap + d[0].width;\n        var next = (oneRowLegend ? w : maxItemWidth) + itemGap;\n\n        if (next + bw + offsetX > opts._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, rowWidth);\n          offsetX = 0;\n          offsetY += maxItemHeightInRow;\n          opts._height += maxItemHeightInRow;\n          maxItemHeightInRow = 0;\n        }\n\n        Drawing.setTranslate(this, bw + offsetX, itemGap + bw + h / 2 + offsetY);\n        rowWidth = offsetX + w + itemGap;\n        offsetX += next;\n        maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n      });\n\n      if (oneRowLegend) {\n        opts._width = offsetX + bw2;\n        opts._height = maxItemHeightInRow + endPad;\n      } else {\n        opts._width = Math.max(maxRowWidth, rowWidth) + bw2;\n        opts._height += maxItemHeightInRow + endPad;\n      }\n    }\n  }\n\n  opts._width = Math.ceil(opts._width);\n  opts._height = Math.ceil(opts._height);\n  opts._effHeight = Math.min(opts._height, opts._maxHeight);\n  var edits = gd._context.edits;\n  var isEditable = edits.legendText || edits.legendPosition;\n  traces.each(function (d) {\n    var traceToggle = d3.select(this).select('.legendtoggle');\n    var h = d[0].height;\n    var w = isEditable ? textGap : toggleRectWidth || textGap + d[0].width;\n    if (!isVertical) w += itemGap / 2;\n    Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n  });\n}\n\nfunction expandMargin(gd) {\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var xanchor = getXanchor(opts);\n  var yanchor = getYanchor(opts);\n  return Plots.autoMargin(gd, 'legend', {\n    x: opts.x,\n    y: opts.y,\n    l: opts._width * FROM_TL[xanchor],\n    r: opts._width * FROM_BR[xanchor],\n    b: opts._effHeight * FROM_BR[yanchor],\n    t: opts._effHeight * FROM_TL[yanchor]\n  });\n}\n\nfunction getXanchor(opts) {\n  return Lib.isRightAnchor(opts) ? 'right' : Lib.isCenterAnchor(opts) ? 'center' : 'left';\n}\n\nfunction getYanchor(opts) {\n  return Lib.isBottomAnchor(opts) ? 'bottom' : Lib.isMiddleAnchor(opts) ? 'middle' : 'top';\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/legend/draw.js"],"names":["d3","require","Lib","Plots","Registry","Events","dragElement","Drawing","Color","svgTextUtils","handleClick","constants","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","getLegendData","style","helpers","module","exports","draw","gd","fullLayout","_fullLayout","clipId","_uid","_infolayer","calcdata","_legendMouseDownTime","opts","legend","legendData","showlegend","hiddenSlices","hiddenlabels","length","selectAll","remove","_topdefs","select","autoMargin","ensureSingle","s","attr","clipPath","ensureSingleById","append","bg","call","stroke","bordercolor","fill","bgcolor","borderwidth","scrollBox","scrollBar","scrollBarEnterAttrs","scrollBarColor","groups","data","enter","exit","traces","identity","d","trace","traceIs","indexOf","label","visible","each","drawTexts","setupTraceToggle","syncOrAsync","previousPromises","computeLegendDimensions","expandMargin","gs","_size","bw","lx","l","w","x","getXanchor","_width","ly","t","h","y","getYanchor","_effHeight","margin","autoexpand","lx0","ly0","constrain","width","height","log","setTranslate","on","_height","_maxHeight","_context","staticPlot","setClipUrl","setRect","_scrollY","scrollBarHeight","Math","max","scrollBarMinHeight","scrollBarYMax","scrollBarMargin","scrollBoxYMax","scrollRatio","scrollBoxY","min","scrollBarWidth","scrollHandler","event","deltaY","preventDefault","eventY0","eventY1","scrollBoxY0","getScrollBarDragY","getNaturalDragY","scrollBarDrag","behavior","drag","e","sourceEvent","type","changedTouches","clientY","buttons","ctrlKey","scrollBoxTouchDrag","edits","legendPosition","xf","yf","x0","y0","classed","init","element","node","prepFn","transform","getTranslate","moveFn","dx","dy","newX","newY","align","xanchor","yanchor","doneFn","undefined","clickFn","numClicks","clickedTrace","filter","bbox","getBoundingClientRect","clientX","left","right","top","bottom","size","clickOrDoubleClick","legendItem","evt","evtData","curveNumber","index","expandedIndex","_expandedIndex","layout","frames","_transitionData","_frames","config","fullData","_fullData","_group","group","datum","clickVal","triggerHandler","_clickTimeout","setTimeout","doubleClickDelay","clearTimeout","dblClickVal","g","isPieLike","traceIndex","isEditable","legendText","maxNameLength","_maxNameLength","name","_meta","templateString","textEl","font","text","ensureLength","positionText","textGap","textLayout","convertToTspans","computeTextDimensions","makeEditable","newName","fullInput","_fullInput","update","hasTransform","groupbyIndices","getTransformIndices","kcont","keyedContainer","set","constructUpdate","str","maxLength","targetLength","trim","i","newMouseDownTime","traceToggle","Date","getTime","_dragged","_editing","mathjaxGroup","mathjaxNode","lineHeight","mathjaxBB","bBox","textLines","lineCount","textNode","textY","isVertical","isGrouped","bw2","itemGap","endPad","isBelowPlotArea","isAbovePlotArea","toggleRectWidth","tracegroupgap","_lgroupsLength","isLeftOfPlotArea","isRightOfPlotArea","isBeyondPlotAreaY","hw","_maxWidth","r","maxItemWidth","combinedItemWidth","maxRowWidth","maxGroupHeightInRow","groupOffsetX","groupOffsetY","maxWidthInGroup","offsetY","next","nTraces","oneRowLegend","maxItemHeightInRow","offsetX","rowWidth","ceil","b","isRightAnchor","isCenterAnchor","isBottomAnchor","isMiddleAnchor"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var clipId = 'legend' + fullLayout._uid;\n\n    if(!fullLayout._infolayer || !gd.calcdata) return;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var opts = fullLayout.legend;\n    var legendData = fullLayout.showlegend && getLegendData(gd.calcdata, opts);\n    var hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!fullLayout.showlegend || !legendData.length) {\n        fullLayout._infolayer.selectAll('.legend').remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n        return Plots.autoMargin(gd, 'legend');\n    }\n\n    var legend = Lib.ensureSingle(fullLayout._infolayer, 'g', 'legend', function(s) {\n        s.attr('pointer-events', 'all');\n    });\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function(s) {\n        s.append('rect');\n    });\n\n    var bg = Lib.ensureSingle(legend, 'rect', 'bg', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n    bg.call(Color.stroke, opts.bordercolor)\n        .call(Color.fill, opts.bgcolor)\n        .style('stroke-width', opts.borderwidth + 'px');\n\n    var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n\n    var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function(s) {\n        s.attr(constants.scrollBarEnterAttrs)\n         .call(Color.fill, constants.scrollBarColor);\n    });\n\n    var groups = scrollBox.selectAll('g.groups').data(legendData);\n    groups.enter().append('g').attr('class', 'groups');\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces').data(Lib.identity);\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.style('opacity', function(d) {\n        var trace = d[0].trace;\n        if(Registry.traceIs(trace, 'pie-like')) {\n            return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n        } else {\n            return trace.visible === 'legendonly' ? 0.5 : 1;\n        }\n    })\n    .each(function() { d3.select(this).call(drawTexts, gd); })\n    .call(style, gd)\n    .each(function() { d3.select(this).call(setupTraceToggle, gd); });\n\n    Lib.syncOrAsync([\n        Plots.previousPromises,\n        function() { return computeLegendDimensions(gd, groups, traces); },\n        function() {\n            // IF expandMargin return a Promise (which is truthy),\n            // we're under a doAutoMargin redraw, so we don't have to\n            // draw the remaining pieces below\n            if(expandMargin(gd)) return;\n\n            var gs = fullLayout._size;\n            var bw = opts.borderwidth;\n\n            var lx = gs.l + gs.w * opts.x - FROM_TL[getXanchor(opts)] * opts._width;\n            var ly = gs.t + gs.h * (1 - opts.y) - FROM_TL[getYanchor(opts)] * opts._effHeight;\n\n            if(fullLayout.margin.autoexpand) {\n                var lx0 = lx;\n                var ly0 = ly;\n\n                lx = Lib.constrain(lx, 0, fullLayout.width - opts._width);\n                ly = Lib.constrain(ly, 0, fullLayout.height - opts._effHeight);\n\n                if(lx !== lx0) {\n                    Lib.log('Constrain legend.x to make legend fit inside graph');\n                }\n                if(ly !== ly0) {\n                    Lib.log('Constrain legend.y to make legend fit inside graph');\n                }\n            }\n\n            // Set size and position of all the elements that make up a legend:\n            // legend, background and border, scroll box and scroll bar\n            Drawing.setTranslate(legend, lx, ly);\n\n            // to be safe, remove previous listeners\n            scrollBar.on('.drag', null);\n            legend.on('wheel', null);\n\n            if(opts._height <= opts._maxHeight || gd._context.staticPlot) {\n                // if scrollbar should not be shown.\n                bg.attr({\n                    width: opts._width - bw,\n                    height: opts._effHeight - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                Drawing.setTranslate(scrollBox, 0, 0);\n\n                clipPath.select('rect').attr({\n                    width: opts._width - 2 * bw,\n                    height: opts._effHeight - 2 * bw,\n                    x: bw,\n                    y: bw\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                Drawing.setRect(scrollBar, 0, 0, 0, 0);\n                delete opts._scrollY;\n            } else {\n                var scrollBarHeight = Math.max(constants.scrollBarMinHeight,\n                    opts._effHeight * opts._effHeight / opts._height);\n                var scrollBarYMax = opts._effHeight -\n                    scrollBarHeight -\n                    2 * constants.scrollBarMargin;\n                var scrollBoxYMax = opts._height - opts._effHeight;\n                var scrollRatio = scrollBarYMax / scrollBoxYMax;\n\n                var scrollBoxY = Math.min(opts._scrollY || 0, scrollBoxYMax);\n\n                // increase the background and clip-path width\n                // by the scrollbar width and margin\n                bg.attr({\n                    width: opts._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: opts._effHeight - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                clipPath.select('rect').attr({\n                    width: opts._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: opts._effHeight - 2 * bw,\n                    x: bw,\n                    y: bw + scrollBoxY\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n                // scroll legend by mousewheel or touchpad swipe up/down\n                legend.on('wheel', function() {\n                    scrollBoxY = Lib.constrain(\n                        opts._scrollY +\n                            ((d3.event.deltaY / scrollBarYMax) * scrollBoxYMax),\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    if(scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n                        d3.event.preventDefault();\n                    }\n                });\n\n                var eventY0, eventY1, scrollBoxY0;\n\n                var getScrollBarDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY1 - eventY0) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                var getNaturalDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY0 - eventY1) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                // scroll legend by dragging scrollBAR\n                var scrollBarDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY0 = e.clientY;\n                    }\n                    scrollBoxY0 = scrollBoxY;\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.buttons === 2 || e.ctrlKey) return;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY1 = e.clientY;\n                    }\n                    scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                });\n                scrollBar.call(scrollBarDrag);\n\n                // scroll legend by touch-dragging scrollBOX\n                var scrollBoxTouchDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                        scrollBoxY0 = scrollBoxY;\n                    }\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                        scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n                        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    }\n                });\n                scrollBox.call(scrollBoxTouchDrag);\n            }\n\n            function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n                opts._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n                Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n\n                Drawing.setRect(\n                    scrollBar,\n                    opts._width,\n                    constants.scrollBarMargin + scrollBoxY * scrollRatio,\n                    constants.scrollBarWidth,\n                    scrollBarHeight\n                );\n                clipPath.select('rect').attr('y', bw + scrollBoxY);\n            }\n\n            if(gd._context.edits.legendPosition) {\n                var xf, yf, x0, y0;\n\n                legend.classed('cursor-move', true);\n\n                dragElement.init({\n                    element: legend.node(),\n                    gd: gd,\n                    prepFn: function() {\n                        var transform = Drawing.getTranslate(legend);\n                        x0 = transform.x;\n                        y0 = transform.y;\n                    },\n                    moveFn: function(dx, dy) {\n                        var newX = x0 + dx;\n                        var newY = y0 + dy;\n\n                        Drawing.setTranslate(legend, newX, newY);\n\n                        xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, opts.xanchor);\n                        yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, opts.yanchor);\n                    },\n                    doneFn: function() {\n                        if(xf !== undefined && yf !== undefined) {\n                            Registry.call('_guiRelayout', gd, {'legend.x': xf, 'legend.y': yf});\n                        }\n                    },\n                    clickFn: function(numClicks, e) {\n                        var clickedTrace = fullLayout._infolayer.selectAll('g.traces').filter(function() {\n                            var bbox = this.getBoundingClientRect();\n                            return (\n                                e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                                e.clientY >= bbox.top && e.clientY <= bbox.bottom\n                            );\n                        });\n                        if(clickedTrace.size() > 0) {\n                            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n                        }\n                    }\n                });\n            }\n        }], gd);\n};\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n    var trace = legendItem.data()[0][0].trace;\n    var evtData = {\n        event: evt,\n        node: legendItem.node(),\n        curveNumber: trace.index,\n        expandedIndex: trace._expandedIndex,\n        data: gd.data,\n        layout: gd.layout,\n        frames: gd._transitionData._frames,\n        config: gd._context,\n        fullData: gd._fullData,\n        fullLayout: gd._fullLayout\n    };\n\n    if(trace._group) {\n        evtData.group = trace._group;\n    }\n    if(Registry.traceIs(trace, 'pie-like')) {\n        evtData.label = legendItem.datum()[0].label;\n    }\n\n    var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n    if(clickVal === false) return;\n\n    if(numClicks === 1) {\n        legend._clickTimeout = setTimeout(function() {\n            handleClick(legendItem, gd, numClicks);\n        }, gd._context.doubleClickDelay);\n    } else if(numClicks === 2) {\n        if(legend._clickTimeout) clearTimeout(legend._clickTimeout);\n        gd._legendMouseDownTime = 0;\n\n        var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n        if(dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n    }\n}\n\nfunction drawTexts(g, gd) {\n    var legendItem = g.data()[0][0];\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n    var trace = legendItem.trace;\n    var isPieLike = Registry.traceIs(trace, 'pie-like');\n    var traceIndex = trace.index;\n    var isEditable = gd._context.edits.legendText && !isPieLike;\n    var maxNameLength = opts._maxNameLength;\n\n    var name = isPieLike ? legendItem.label : trace.name;\n    if(trace._meta) {\n        name = Lib.templateString(name, trace._meta);\n    }\n\n    var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n\n    textEl.attr('text-anchor', 'start')\n        .classed('user-select-none', true)\n        .call(Drawing.font, fullLayout.legend.font)\n        .text(isEditable ? ensureLength(name, maxNameLength) : name);\n\n    svgTextUtils.positionText(textEl, constants.textGap, 0);\n\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd, function() {\n            computeTextDimensions(g, gd);\n        });\n    }\n\n    if(isEditable) {\n        textEl.call(svgTextUtils.makeEditable, {gd: gd, text: name})\n            .call(textLayout)\n            .on('edit', function(newName) {\n                this.text(ensureLength(newName, maxNameLength))\n                    .call(textLayout);\n\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n\n                    kcont.set(legendItem.trace._group, newName);\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = newName;\n                }\n\n                return Registry.call('_guiRestyle', gd, update, traceIndex);\n            });\n    } else {\n        textLayout(textEl);\n    }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n    var targetLength = Math.max(4, maxLength);\n    if(str && str.trim().length >= targetLength / 2) return str;\n    str = str || '';\n    for(var i = targetLength - str.length; i > 0; i--) str += ' ';\n    return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n    var doubleClickDelay = gd._context.doubleClickDelay;\n    var newMouseDownTime;\n    var numClicks = 1;\n\n    var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function(s) {\n        s.style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call(Color.fill, 'rgba(0,0,0,0)');\n    });\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n            // in a click train\n            numClicks += 1;\n        } else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout.legend;\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n    });\n}\n\nfunction computeTextDimensions(g, gd) {\n    var legendItem = g.data()[0][0];\n\n    if(!legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n    var opts = gd._fullLayout.legend;\n    var lineHeight = opts.font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        Drawing.setTranslate(mathjaxGroup, 0, (height / 4));\n    } else {\n        var text = g.select('.legendtext');\n        var textLines = svgTextUtils.lineCount(text);\n        var textNode = text.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        var textY = lineHeight * (0.3 + (1 - textLines) / 2);\n        svgTextUtils.positionText(text, constants.textGap, textY);\n    }\n\n    legendItem.lineHeight = lineHeight;\n    legendItem.height = Math.max(height, 16) + 3;\n    legendItem.width = width;\n}\n\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n    var gs = fullLayout._size;\n    var isVertical = helpers.isVertical(opts);\n    var isGrouped = helpers.isGrouped(opts);\n\n    var bw = opts.borderwidth;\n    var bw2 = 2 * bw;\n    var textGap = constants.textGap;\n    var itemGap = constants.itemGap;\n    var endPad = 2 * (bw + itemGap);\n\n    var yanchor = getYanchor(opts);\n    var isBelowPlotArea = opts.y < 0 || (opts.y === 0 && yanchor === 'top');\n    var isAbovePlotArea = opts.y > 1 || (opts.y === 1 && yanchor === 'bottom');\n\n    // - if below/above plot area, give it the maximum potential margin-push value\n    // - otherwise, extend the height of the plot area\n    opts._maxHeight = Math.max(\n        (isBelowPlotArea || isAbovePlotArea) ? fullLayout.height / 2 : gs.h,\n        30\n    );\n\n    var toggleRectWidth = 0;\n    opts._width = 0;\n    opts._height = 0;\n\n    if(isVertical) {\n        traces.each(function(d) {\n            var h = d[0].height;\n            Drawing.setTranslate(this, bw, itemGap + bw + opts._height + h / 2);\n            opts._height += h;\n            opts._width = Math.max(opts._width, d[0].width);\n        });\n\n        toggleRectWidth = textGap + opts._width;\n        opts._width += itemGap + textGap + bw2;\n        opts._height += endPad;\n\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * opts.tracegroupgap);\n            });\n            opts._height += (opts._lgroupsLength - 1) * opts.tracegroupgap;\n        }\n    } else {\n        var xanchor = getXanchor(opts);\n        var isLeftOfPlotArea = opts.x < 0 || (opts.x === 0 && xanchor === 'right');\n        var isRightOfPlotArea = opts.x > 1 || (opts.x === 1 && xanchor === 'left');\n        var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n        var hw = fullLayout.width / 2;\n\n        // - if placed within x-margins, extend the width of the plot area\n        // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n        // - otherwise give it the maximum potential margin-push value\n        opts._maxWidth = Math.max(\n            isLeftOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'left') ? gs.l + gs.w : hw) :\n            isRightOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'right') ? gs.r + gs.w : hw) :\n            gs.w,\n        2 * textGap);\n        var maxItemWidth = 0;\n        var combinedItemWidth = 0;\n        traces.each(function(d) {\n            var w = d[0].width + textGap;\n            maxItemWidth = Math.max(maxItemWidth, w);\n            combinedItemWidth += w;\n        });\n\n        toggleRectWidth = null;\n        var maxRowWidth = 0;\n\n        if(isGrouped) {\n            var maxGroupHeightInRow = 0;\n            var groupOffsetX = 0;\n            var groupOffsetY = 0;\n            groups.each(function() {\n                var maxWidthInGroup = 0;\n                var offsetY = 0;\n                d3.select(this).selectAll('g.traces').each(function(d) {\n                    var h = d[0].height;\n                    Drawing.setTranslate(this, 0, itemGap + bw + h / 2 + offsetY);\n                    offsetY += h;\n                    maxWidthInGroup = Math.max(maxWidthInGroup, textGap + d[0].width);\n                });\n                maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n\n                var next = maxWidthInGroup + itemGap;\n\n                if((next + bw + groupOffsetX) > opts._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n                    groupOffsetX = 0;\n                    groupOffsetY += maxGroupHeightInRow + opts.tracegroupgap;\n                    maxGroupHeightInRow = offsetY;\n                }\n\n                Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n\n                groupOffsetX += next;\n            });\n\n            opts._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n            opts._height = groupOffsetY + maxGroupHeightInRow + endPad;\n        } else {\n            var nTraces = traces.size();\n            var oneRowLegend = (combinedItemWidth + bw2 + (nTraces - 1) * itemGap) < opts._maxWidth;\n\n            var maxItemHeightInRow = 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var rowWidth = 0;\n            traces.each(function(d) {\n                var h = d[0].height;\n                var w = textGap + d[0].width;\n                var next = (oneRowLegend ? w : maxItemWidth) + itemGap;\n\n                if((next + bw + offsetX) > opts._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, rowWidth);\n                    offsetX = 0;\n                    offsetY += maxItemHeightInRow;\n                    opts._height += maxItemHeightInRow;\n                    maxItemHeightInRow = 0;\n                }\n\n                Drawing.setTranslate(this, bw + offsetX, itemGap + bw + h / 2 + offsetY);\n\n                rowWidth = offsetX + w + itemGap;\n                offsetX += next;\n                maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n            });\n\n            if(oneRowLegend) {\n                opts._width = offsetX + bw2;\n                opts._height = maxItemHeightInRow + endPad;\n            } else {\n                opts._width = Math.max(maxRowWidth, rowWidth) + bw2;\n                opts._height += maxItemHeightInRow + endPad;\n            }\n        }\n    }\n\n    opts._width = Math.ceil(opts._width);\n    opts._height = Math.ceil(opts._height);\n\n    opts._effHeight = Math.min(opts._height, opts._maxHeight);\n\n    var edits = gd._context.edits;\n    var isEditable = edits.legendText || edits.legendPosition;\n    traces.each(function(d) {\n        var traceToggle = d3.select(this).select('.legendtoggle');\n        var h = d[0].height;\n        var w = isEditable ? textGap : (toggleRectWidth || (textGap + d[0].width));\n        if(!isVertical) w += itemGap / 2;\n        Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n    });\n}\n\nfunction expandMargin(gd) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n    var xanchor = getXanchor(opts);\n    var yanchor = getYanchor(opts);\n\n    return Plots.autoMargin(gd, 'legend', {\n        x: opts.x,\n        y: opts.y,\n        l: opts._width * (FROM_TL[xanchor]),\n        r: opts._width * (FROM_BR[xanchor]),\n        b: opts._effHeight * (FROM_BR[yanchor]),\n        t: opts._effHeight * (FROM_TL[yanchor])\n    });\n}\n\nfunction getXanchor(opts) {\n    return Lib.isRightAnchor(opts) ? 'right' :\n        Lib.isCenterAnchor(opts) ? 'center' :\n        'left';\n}\n\nfunction getYanchor(opts) {\n    return Lib.isBottomAnchor(opts) ? 'bottom' :\n        Lib.isMiddleAnchor(opts) ? 'middle' :\n        'top';\n}\n"]},"metadata":{},"sourceType":"script"}
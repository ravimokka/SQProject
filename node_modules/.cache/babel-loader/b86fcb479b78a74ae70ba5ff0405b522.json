{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Form, Row, Col, Input, Button, Icon } from 'antd';\n\nclass AdvancedSearchForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expand: false\n    };\n\n    this.handleSearch = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        console.log('Received values of form: ', values);\n      });\n    };\n\n    this.handleReset = () => {\n      this.props.form.resetFields();\n    };\n\n    this.toggle = () => {\n      const expand = this.state.expand;\n      this.setState({\n        expand: !expand\n      });\n    };\n  }\n\n  // To generate mock Form.Item\n  getFields() {\n    const count = this.state.expand ? 10 : 6;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const children = [];\n\n    for (let i = 0; i < 10; i++) {\n      children.push(React.createElement(Col, {\n        span: 8,\n        key: i,\n        style: {\n          display: i < count ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: `Field ${i}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, getFieldDecorator(`field-${i}`, {\n        rules: [{\n          required: true,\n          message: 'Input something!'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })))));\n    }\n\n    return children;\n  }\n\n  render() {\n    return React.createElement(Form, {\n      className: \"ant-advanced-search-form\",\n      onSubmit: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.getFields()), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"a\", {\n      style: {\n        marginLeft: 8,\n        fontSize: 12\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Collapse \", React.createElement(Icon, {\n      type: this.state.expand ? 'up' : 'down',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedAdvancedSearchForm = Form.create({\n  name: 'advanced_search'\n})(AdvancedSearchForm);\nReactDOM.render(React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(WrappedAdvancedSearchForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"search-result-list\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"Search Result List\")), mountNode);","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Form","Row","Col","Input","Button","Icon","AdvancedSearchForm","React","Component","state","expand","handleSearch","e","preventDefault","props","form","validateFields","err","values","console","log","handleReset","resetFields","toggle","setState","getFields","count","getFieldDecorator","children","i","push","display","rules","required","message","render","textAlign","marginLeft","fontSize","WrappedAdvancedSearchForm","create","name","ReactDOM","mountNode"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Input, Button, Icon } from 'antd';\n\nclass AdvancedSearchForm extends React.Component {\n  state = {\n    expand: false,\n  };\n\n  // To generate mock Form.Item\n  getFields() {\n    const count = this.state.expand ? 10 : 6;\n    const { getFieldDecorator } = this.props.form;\n    const children = [];\n    for (let i = 0; i < 10; i++) {\n      children.push(\n        <Col span={8} key={i} style={{ display: i < count ? 'block' : 'none' }}>\n          <Form.Item label={`Field ${i}`}>\n            {getFieldDecorator(`field-${i}`, {\n              rules: [\n                {\n                  required: true,\n                  message: 'Input something!',\n                },\n              ],\n            })(<Input placeholder=\"placeholder\" />)}\n          </Form.Item>\n        </Col>,\n      );\n    }\n    return children;\n  }\n\n  handleSearch = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      console.log('Received values of form: ', values);\n    });\n  };\n\n  handleReset = () => {\n    this.props.form.resetFields();\n  };\n\n  toggle = () => {\n    const { expand } = this.state;\n    this.setState({ expand: !expand });\n  };\n\n  render() {\n    return (\n      <Form className=\"ant-advanced-search-form\" onSubmit={this.handleSearch}>\n        <Row gutter={24}>{this.getFields()}</Row>\n        <Row>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Search\n            </Button>\n            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n              Clear\n            </Button>\n            <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n              Collapse <Icon type={this.state.expand ? 'up' : 'down'} />\n            </a>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nconst WrappedAdvancedSearchForm = Form.create({ name: 'advanced_search' })(AdvancedSearchForm);\nReactDOM.render(\n  <div>\n    <WrappedAdvancedSearchForm />\n    <div className=\"search-result-list\">Search Result List</div>\n  </div>,\n  mountNode,\n);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js\";\nimport React, { Component } from \"react\";\nimport { Chart, Tooltip, Axis, Legend, Bar, Line } from \"viser-react\";\nimport RouterTest from \"./router\";\nimport { Link, Switch, Route } from \"react-router-dom\";\n{\n  /*\n  class Test extends React.Component {\n  constructor(props) {\n     super(props)\n     this.state = {\n       sistemas: [],\n       child: 'Data received'\n     };\n    }\n    update = (data) => {\n     this.setState({ fromChild: data })\n   }\n    render() {\n     return (\n       <div className=\"App\">\n         <h1>Child Component </h1>\n         <h1>{this.props.data}</h1>\n        <button onClick={() =>this.props.update(this.state.child)} >Click from Child</button>\n       </div>\n     );\n   }\n  }export default Test;\n  *\n  \n  class Test extends React.Component {\n  constructor(props) {\n     super(props)\n     this.state = {\n       sistemas: [],\n       child: 'Data received',\n       data:this.props.location.data\n     };\n    }\n    update = (data) => {\n     this.setState({ fromChild: data })\n   }\n    render() {\n   const { data } = this.props.location\n     return (\n       <div className=\"App\">\n         <Route exact path='/test-react' component={RouterTest}/>\n         <h1>{this.state.data.color}</h1>\n        </div>\n     );\n   }\n  }export default Test;\n  */\n}\n\nclass ChatBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSendMassage = e => {\n      this.setState({\n        message: 'hi'\n      });\n      console.log(this.state.message);\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.state = {\n      name: ' ',\n      email: ' ',\n      message: 'hi'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      type: \"text\",\n      ref: \"msg\",\n      class: \"write_msg\",\n      placeholder: \"Type a message\",\n      value: this.state.message,\n      onClick: this.handleSendMassage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" onClick \"));\n  }\n\n}\n\nexport default ChatBox;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js"],"names":["React","Component","Chart","Tooltip","Axis","Legend","Bar","Line","RouterTest","Link","Switch","Route","ChatBox","constructor","props","handleSendMassage","e","setState","message","console","log","state","name","email","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,IAA5C,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AAEA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDE;;AAGH,MAAMC,OAAN,SAAsBZ,KAAK,CAACC,SAA5B,CAAsC;AACtCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACX,UAAMA,KAAN;;AADW,SAelBC,iBAfkB,GAeGC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAC;AAAV,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,OAAvB;AACA,WAAKD,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEH,KApBgB;;AAEX,SAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,GADG;AAETC,MAAAA,KAAK,EAAE,GAFE;AAGTL,MAAAA,OAAO,EAAC;AAHC,KAAb;AAKH;;AAcDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAG,MAAA,IAAI,EAAC,MAAR;AAAgB,MAAA,GAAG,EAAC,KAApB;AAA0B,MAAA,KAAK,EAAC,WAAhC;AAA4C,MAAA,WAAW,EAAC,gBAAxD;AAC8C,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWH,OADhE;AAE+C,MAAA,OAAO,EAAE,KAAKH,iBAAL,CAAuBU,IAAvB,CAA4B,IAA5B,CAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADQ,CADJ;AAQH;;AA/BiC;;AAmCtC,eAAeb,OAAf","sourcesContent":["import React, { Component} from \"react\";\nimport { Chart, Tooltip, Axis, Legend, Bar, Line} from \"viser-react\";\nimport RouterTest from \"./router\";\nimport {Link, Switch, Route } from \"react-router-dom\";\n\n{/*\nclass Test extends React.Component {\n\nconstructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      child: 'Data received'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({ fromChild: data })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Child Component </h1>\n        <h1>{this.props.data}</h1>\n       <button onClick={() =>this.props.update(this.state.child)} >Click from Child</button>\n      </div>\n    );\n  }\n}export default Test;\n*\n\n\nclass Test extends React.Component {\n\nconstructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      child: 'Data received',\n      data:this.props.location.data\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({ fromChild: data })\n  }\n\n  render() {\n  const { data } = this.props.location\n    return (\n      <div className=\"App\">\n        <Route exact path='/test-react' component={RouterTest}/>\n        <h1>{this.state.data.color}</h1>\n\n      </div>\n    );\n  }\n}export default Test;\n*/}\n\n\nclass ChatBox extends React.Component {\nconstructor(props) {\n        super(props);\n        this.state = {\n            name: ' ',\n            email: ' ',\n            message:'hi'\n        };\n    }\n\n\n\n\n\n\n\n handleSendMassage = (e) => {\n      this.setState({ message:'hi'});\n      console.log(this.state.message)\n      this.setState({ message: '' });\n\n  }\n    render() {\n        return (\n            <div>\n    <p type=\"text\"  ref='msg' class=\"write_msg\" placeholder=\"Type a message\"\n                                                  value={this.state.message}\n                                                   onClick={this.handleSendMassage.bind(this)}\n                                                  > onClick </p>\n            </div>\n        );\n    }\n}\n\n\nexport default ChatBox;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          shadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 1\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        colors: ['#77B6EA', '#545454'],\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 't',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 6\n        },\n        xaxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n          title: {\n            text: 'Month'\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Temperature'\n          },\n          min: 5,\n          max: 40\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true,\n          offsetY: -25,\n          offsetX: -5\n        }\n      },\n      series: [{\n        name: \"High - 2013\",\n        data: [28, 29, 33, 36, 32, 32, 33]\n      }, {\n        name: \"Low - 2013\",\n        data: [12, 11, 14, 18, 17, 13, 13]\n      }],\n      options1: {\n        annotations: {\n          yaxis: [{\n            y: 8200,\n            borderColor: '#00E396',\n            label: {\n              borderColor: '#00E396',\n              style: {\n                color: '#fff',\n                background: '#00E396'\n              },\n              text: 'Support'\n            }\n          }, {\n            y: 8600,\n            y2: 9000,\n            borderColor: '#FEB019',\n            opacity: 0.1,\n            label: {\n              borderColor: '#333',\n              style: {\n                fontSize: '10px',\n                color: '#333',\n                background: '#FEB019'\n              },\n              text: 'Y-axis range'\n            }\n          }],\n          xaxis: [{\n            x: new Date('23 Nov 2017').getTime(),\n            strokeDashArray: 0,\n            borderColor: '#775DD0',\n            label: {\n              borderColor: '#775DD0',\n              style: {\n                color: '#fff',\n                background: '#775DD0'\n              },\n              text: 'Anno Test'\n            }\n          }, {\n            x: new Date('26 Nov 2017').getTime(),\n            x2: new Date('28 Nov 2017').getTime(),\n            borderColor: '#B3F7CA',\n            opacity: 0.5,\n            label: {\n              borderColor: '#B3F7CA',\n              style: {\n                fontSize: '10px',\n                color: '#fff',\n                background: '#00E396'\n              },\n              offsetY: -10,\n              text: 'X-axis range'\n            }\n          }],\n          points: [{\n            x: new Date('01 Dec 2017').getTime(),\n            y: 8607.55,\n            marker: {\n              size: 8,\n              fillColor: '#fff',\n              strokeColor: 'red',\n              radius: 2,\n              cssClass: 'apexcharts-custom-class'\n            },\n            label: {\n              borderColor: '#FF4560',\n              offsetY: 0,\n              style: {\n                color: '#fff',\n                background: '#FF4560'\n              },\n              text: 'Point Annotation'\n            }\n          }]\n        },\n        chart: {\n          height: 350,\n          type: 'line',\n          id: 'areachart-2'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        grid: {\n          padding: {\n            right: 30,\n            left: 20\n          }\n        },\n        title: {\n          text: 'Line with Annotations',\n          align: 'left'\n        },\n        labels: series.monthDataSeries1.dates,\n        xaxis: {\n          type: 'datetime'\n        }\n      },\n      series1: [{\n        data: series.monthDataSeries1.prices\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"FINANCIAL YEAR\")))), React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 8,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Breakdown\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"250\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 8,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Breakdown\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options1,\n      series: this.state.series1,\n      type: \"line\",\n      width: \"250\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 8,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Breakdown\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"250\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","Analytical","constructor","props","state","options","chart","shadow","enabled","color","top","left","blur","opacity","toolbar","show","colors","dataLabels","stroke","curve","title","text","align","grid","borderColor","row","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","series","name","data","options1","annotations","y","label","style","background","y2","fontSize","x","Date","getTime","strokeDashArray","x2","points","marker","fillColor","strokeColor","radius","cssClass","height","type","id","padding","right","labels","monthDataSeries1","dates","series1","prices","render","span","order","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\n\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n   this.state = {\n\n\n        options: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: false\n            }\n          },\n          colors: ['#77B6EA', '#545454'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 't',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n\n            size: 6\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n              text: 'Month'\n            }\n          },\n          yaxis: {\n            title: {\n              text: 'Temperature'\n            },\n            min: 5,\n            max: 40\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n        series: [\n          {\n            name: \"High - 2013\",\n            data: [28, 29, 33, 36, 32, 32, 33]\n          },\n          {\n            name: \"Low - 2013\",\n            data: [12, 11, 14, 18, 17, 13, 13]\n          }\n        ],\n\n\n    options1: {\n        annotations: {\n          yaxis: [{\n            y: 8200,\n            borderColor: '#00E396',\n            label: {\n              borderColor: '#00E396',\n              style: {\n                color: '#fff',\n                background: '#00E396',\n              },\n              text: 'Support',\n            }\n          }, {\n            y: 8600,\n            y2: 9000,\n            borderColor: '#FEB019',\n            opacity: 0.1,\n            label: {\n              borderColor: '#333',\n              style: {\n                fontSize: '10px',\n                color: '#333',\n                background: '#FEB019',\n              },\n              text: 'Y-axis range',\n            }\n          }],\n          xaxis: [{\n            x: new Date('23 Nov 2017').getTime(),\n            strokeDashArray: 0,\n            borderColor: '#775DD0',\n            label: {\n              borderColor: '#775DD0',\n              style: {\n                color: '#fff',\n                background: '#775DD0',\n              },\n              text: 'Anno Test',\n            }\n          }, {\n            x: new Date('26 Nov 2017').getTime(),\n            x2: new Date('28 Nov 2017').getTime(),\n            borderColor: '#B3F7CA',\n            opacity: 0.5,\n            label: {\n              borderColor: '#B3F7CA',\n              style: {\n                fontSize: '10px',\n                color: '#fff',\n                background: '#00E396',\n              },\n              offsetY: -10,\n              text: 'X-axis range',\n            }\n          }],\n          points: [{\n            x: new Date('01 Dec 2017').getTime(),\n            y: 8607.55,\n            marker: {\n              size: 8,\n              fillColor: '#fff',\n              strokeColor: 'red',\n              radius: 2,\n              cssClass: 'apexcharts-custom-class'\n            },\n            label: {\n              borderColor: '#FF4560',\n              offsetY: 0,\n              style: {\n                color: '#fff',\n                background: '#FF4560',\n              },\n\n              text: 'Point Annotation',\n            }\n          }]\n        },\n\n        chart: {\n          height: 350,\n          type: 'line',\n          id: 'areachart-2'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        grid: {\n          padding: {\n            right: 30,\n            left: 20\n          }\n        },\n\n        title: {\n          text: 'Line with Annotations',\n          align: 'left'\n        },\n        labels: series.monthDataSeries1.dates,\n        xaxis: {\n          type: 'datetime',\n        }\n      },\n      series1: [{\n        data: series.monthDataSeries1.prices\n      }],\n      }\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <h1 className=\"page-heading\">FINANCIAL YEAR</h1>\n            </Col>\n          </Row>\n        </div>\n        <div id=\"content\">\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:8, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Breakdown\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"250\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:8, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Breakdown\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options1} series={this.state.series1} type=\"line\" width=\"250\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:8, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Breakdown\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"250\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Analytical;\n\n"]},"metadata":{},"sourceType":"module"}
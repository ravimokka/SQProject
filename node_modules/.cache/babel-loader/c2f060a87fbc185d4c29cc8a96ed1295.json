{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/MixedChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\nclass MixedChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mixedCharthandleSubmit = e => {\n      this.setState({\n        value_mx: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit1 = e => {\n      this.setState({\n        value_my: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit2 = e => {\n      this.setState({\n        value_mz: e.target.value\n      });\n    };\n\n    this.mixed_handleSubmit = e => {\n      e.preventDefault();\n      this.loadMixedChartData({\n        A: this.state.value_mx,\n        B: this.state.value_my,\n        C: this.state.value_mz\n      });\n    };\n\n    this.state = {\n      mixed_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 4\n        },\n        title: {\n          text: '',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      mixed_chart_series: [{\n        name: 'Status',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'A',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'B',\n        type: 'column',\n        data: [30]\n      }, {\n        name: 'C',\n        type: 'column',\n        data: [150]\n      }, {\n        name: 'LINE',\n        type: 'line',\n        data: [40, 20]\n      }],\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_mixedChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadMixedChartData({\n      A: \"Status\",\n      B: \"Amount_USD\",\n      C: \"Status\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/header_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/int_header_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/fin_Maxdata_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/fin_Maxdata_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mx,\n      onChange: this.mixedCharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_my,\n      onChange: this.mixedCharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, this.state.select_amount), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mz,\n      onChange: this.mixedCharthandleSubmit2,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.mixed_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Mixed\",\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Mixed\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, \"Mixed Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.mix_table_columns,\n      dataSource: this.state.mix_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_mixedChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(ReactApexChart, {\n      options: this.state.mixed_chart_options,\n      series: this.state.mixed_chart_series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MixedChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/MixedChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","$","Popper","CSVLink","DataSet","require","MixedChart","Component","constructor","props","mixedCharthandleSubmit","e","setState","value_mx","target","value","mixedCharthandleSubmit1","value_my","mixedCharthandleSubmit2","value_mz","mixed_handleSubmit","preventDefault","loadMixedChartData","A","state","B","C","mixed_chart_options","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","labels","formatter","val","Math","round","yaxis","axisTicks","show","axisBorder","color","style","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","mixed_chart_series","name","type","data","books","intHeader","filter","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_xl","value_yl","table_columns","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","mix_table_columns","mix_table_data","download_mixedChart_table","firstname","lastname","email","componentWillMount","loadAnalytical","loadIntHeaders","promise","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","sum_data","count_data","table_dict","i","keys_list","value_list","max_chart_list","table_column_list","table_data_list","table_data_dict","Object","keys","length","push","data_dict","column_dict","j","c_keys_list","c_value_list","max_chart_count_list","g_data","Actual","Budget","g","m","render","marginLeft","map","index","cursor","fontSize","marginTop","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadMixedChartData({A:\"Status\", B:\"Amount_USD\", C:\"Status\"})\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/header_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/int_header_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/fin_Maxdata_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nmixedCharthandleSubmit = (e) => {\n     this.setState({value_mx: e.target.value});\n };\n\nmixedCharthandleSubmit1 = (e) => {\n    this.setState({value_my: e.target.value});\n  };\n\n\n mixedCharthandleSubmit2 = (e) => {\n    this.setState({value_mz: e.target.value});\n  };\n\n\nmixed_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadMixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my, C:this.state.value_mz}\n  );\n  };\n\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/fin_Maxdata_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n\nrender() {\n    return (\n   <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_mx} onChange={this.mixedCharthandleSubmit}\n            style={{ width:\"110px\", marginLeft:\"8px\" }}>\n             <option>{this.state.select_group}</option>\n             {this.state.books.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n       </select>\n       <select class=\"custom-select\"  value={this.state.value_my} onChange={this.mixedCharthandleSubmit1}\n            style={{ width:\"110px\", marginLeft:\"8px\" }}>\n             <option>{this.state.select_amount}</option>\n             {this.state.intHeader.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n       </select>\n       <select class=\"custom-select\"  value={this.state.value_mz} onChange={this.mixedCharthandleSubmit2}\n            style={{ width:\"110px\", marginLeft:\"8px\" }}>\n             <option>{this.state.select_group}</option>\n             {this.state.books.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n       </select>\n       <React.Fragment>\n            <button onClick={this.mixed_handleSubmit} className='btn btn-info' style={{marginLeft:\"15px\"}}\n              type='button'>OK</button>\n        </React.Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\"\n        style={{marginLeft:\"10px\", marginTop:\"5px\"}}>Table View</button>\n          <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Mixed Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_mixedChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n      <ReactApexChart options={this.state.mixed_chart_options}\n      series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />\n </div>\n\n    );\n  }\n}\nexport default MixedChart;"]},"metadata":{},"sourceType":"module"}
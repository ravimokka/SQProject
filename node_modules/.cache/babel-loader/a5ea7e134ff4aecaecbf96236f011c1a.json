{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#1df20a']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"test\"]\n        }\n      },\n      options1: {\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              position: 'top' // top, center, bottom\n\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function (val) {\n            return val + \"%\";\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '12px',\n            colors: [\"#304758\"]\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          position: 'top',\n          labels: {\n            offsetY: -18\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            fill: {\n              type: 'gradient',\n              gradient: {\n                colorFrom: '#D8E3F0',\n                colorTo: '#BED1E6',\n                stops: [0, 100],\n                opacityFrom: 0.4,\n                opacityTo: 0.5\n              }\n            }\n          },\n          tooltip: {\n            enabled: true,\n            offsetY: -35\n          }\n        },\n        fill: {\n          gradient: {\n            shade: 'light',\n            type: \"horizontal\",\n            shadeIntensity: 0.25,\n            gradientToColors: undefined,\n            inverseColors: true,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [50, 0, 100, 100]\n          }\n        },\n        yaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            formatter: function (val) {\n              return val + \"%\";\n            }\n          }\n        },\n        title: {\n          text: 'Monthly Inflation in Argentina, 2002',\n          floating: true,\n          offsetY: 320,\n          align: 'center',\n          style: {\n            color: '#444'\n          }\n        }\n      },\n      series: [{\n        data: [44]\n      }, {\n        data: [53]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 24,\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bordered: false,\n      className: \"mi-card mi-card-boxshadow card-statistics\",\n      style: {\n        minHeight: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-statistics-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.options1,\n      series: this.state.series,\n      type: \"column\",\n      width: 300,\n      height: 150,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","Analytical","constructor","props","state","options","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","xaxis","categories","options1","formatter","val","offsetY","labels","axisBorder","axisTicks","crosshairs","fill","type","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","shade","shadeIntensity","gradientToColors","undefined","inverseColors","yaxis","title","text","floating","align","color","series","data","render","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,OAAO,sCAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,wCAAP;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,8CAApC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;;AAMA,MAAMC,UAAN,SAAyBd,KAAK,CAACC,SAA/B,CAAwC;AAClCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,IADT;AAEHC,YAAAA,UAAU,EAAE;AACVC,cAAAA,QAAQ,EAAE;AADA;AAFT;AADM,SADN;AAUPD,QAAAA,UAAU,EAAE;AACVE,UAAAA,OAAO,EAAE,KADC;AAEVC,UAAAA,OAAO,EAAE,CAAC,CAFA;AAGVC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,MADL;AAELC,YAAAA,MAAM,EAAE,CAAC,SAAD;AAFH;AAHG,SAVL;AAkBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,KAAK,EAAE,CAFD;AAGNH,UAAAA,MAAM,EAAE,CAAC,MAAD;AAHF,SAlBD;AAwBPI,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAC,CAAC,MAAD;AADN;AAxBA,OADE;AA6BnBC,MAAAA,QAAQ,EAAE;AACAf,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHE,YAAAA,UAAU,EAAE;AACVC,cAAAA,QAAQ,EAAE,KADA,CACO;;AADP;AADT;AADM,SADb;AAQAD,QAAAA,UAAU,EAAE;AACVE,UAAAA,OAAO,EAAE,IADC;AAEVW,UAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACxB,mBAAOA,GAAG,GAAG,GAAb;AACD,WAJS;AAKVC,UAAAA,OAAO,EAAE,CAAC,EALA;AAMVX,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,MADL;AAELC,YAAAA,MAAM,EAAE,CAAC,SAAD;AAFH;AANG,SARZ;AAmBAI,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CADP;AAELV,UAAAA,QAAQ,EAAE,KAFL;AAGLe,UAAAA,MAAM,EAAE;AACND,YAAAA,OAAO,EAAE,CAAC;AADJ,WAHH;AAMLE,UAAAA,UAAU,EAAE;AACVT,YAAAA,IAAI,EAAE;AADI,WANP;AASLU,UAAAA,SAAS,EAAE;AACTV,YAAAA,IAAI,EAAE;AADG,WATN;AAYLW,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AACJC,cAAAA,IAAI,EAAE,UADF;AAEJC,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,SAAS,EAAE,SADH;AAERC,gBAAAA,OAAO,EAAE,SAFD;AAGRC,gBAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,CAHC;AAIRC,gBAAAA,WAAW,EAAE,GAJL;AAKRC,gBAAAA,SAAS,EAAE;AALH;AAFN;AADI,WAZP;AAwBLC,UAAAA,OAAO,EAAE;AACP1B,YAAAA,OAAO,EAAE,IADF;AAEPa,YAAAA,OAAO,EAAE,CAAC;AAFH;AAxBJ,SAnBP;AAgDAK,QAAAA,IAAI,EAAE;AACJE,UAAAA,QAAQ,EAAE;AACRO,YAAAA,KAAK,EAAE,OADC;AAERR,YAAAA,IAAI,EAAE,YAFE;AAGRS,YAAAA,cAAc,EAAE,IAHR;AAIRC,YAAAA,gBAAgB,EAAEC,SAJV;AAKRC,YAAAA,aAAa,EAAE,IALP;AAMRP,YAAAA,WAAW,EAAE,CANL;AAORC,YAAAA,SAAS,EAAE,CAPH;AAQRF,YAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,GAAR,EAAa,GAAb;AARC;AADN,SAhDN;AA4DAS,QAAAA,KAAK,EAAE;AACLjB,UAAAA,UAAU,EAAE;AACVT,YAAAA,IAAI,EAAE;AADI,WADP;AAILU,UAAAA,SAAS,EAAE;AACTV,YAAAA,IAAI,EAAE;AADG,WAJN;AAOLQ,UAAAA,MAAM,EAAE;AACNR,YAAAA,IAAI,EAAE,KADA;AAENK,YAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACxB,qBAAOA,GAAG,GAAG,GAAb;AACD;AAJK;AAPH,SA5DP;AA0EAqB,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,sCADD;AAELC,UAAAA,QAAQ,EAAE,IAFL;AAGLtB,UAAAA,OAAO,EAAE,GAHJ;AAILuB,UAAAA,KAAK,EAAE,QAJF;AAKLlC,UAAAA,KAAK,EAAE;AACLmC,YAAAA,KAAK,EAAE;AADF;AALF;AA1EP,OA7BS;AAiHXC,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,CAAC,EAAD;AADC,OAAD,EAEL;AACDA,QAAAA,IAAI,EAAE,CAAC,EAAD;AADL,OAFK;AAjHG,KAAb;AA0HD;;AAGLC,EAAAA,MAAM,GAAG;AACP,WACA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAqC,MAAA,SAAS,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,KADZ;AAEE,MAAA,SAAS,EAAC,2CAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKhD,KAAL,CAAWC,OAApC;AAA6C,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAW6C,MAAhE;AAAwE,MAAA,IAAI,EAAC,KAA7E;AAAmF,MAAA,KAAK,EAAE,GAA1F;AAA+F,MAAA,MAAM,EAAE,GAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWiB,QAApC;AAA8C,MAAA,MAAM,EAAE,KAAKjB,KAAL,CAAW6C,MAAjE;AAAyE,MAAA,IAAI,EAAC,QAA9E;AAAuF,MAAA,KAAK,EAAE,GAA9F;AAAmG,MAAA,MAAM,EAAE,GAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CALF,CAFZ,CADA;AAyBD;;AA3JqC;;AA8JxC,eAAehD,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\n\n\n\n\nclass Analytical extends React.Component{\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#1df20a']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories:[\"test\"],\n            }\n          },\n  options1: {\n            plotOptions: {\n              bar: {\n                dataLabels: {\n                  position: 'top', // top, center, bottom\n                },\n              }\n            },\n            dataLabels: {\n              enabled: true,\n              formatter: function (val) {\n                return val + \"%\";\n              },\n              offsetY: -20,\n              style: {\n                fontSize: '12px',\n                colors: [\"#304758\"]\n              }\n            },\n            xaxis: {\n              categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n              position: 'top',\n              labels: {\n                offsetY: -18,\n              },\n              axisBorder: {\n                show: false\n              },\n              axisTicks: {\n                show: false\n              },\n              crosshairs: {\n                fill: {\n                  type: 'gradient',\n                  gradient: {\n                    colorFrom: '#D8E3F0',\n                    colorTo: '#BED1E6',\n                    stops: [0, 100],\n                    opacityFrom: 0.4,\n                    opacityTo: 0.5,\n                  }\n                }\n              },\n              tooltip: {\n                enabled: true,\n                offsetY: -35,\n              }\n            },\n            fill: {\n              gradient: {\n                shade: 'light',\n                type: \"horizontal\",\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [50, 0, 100, 100]\n              },\n            },\n            yaxis: {\n              axisBorder: {\n                show: false\n              },\n              axisTicks: {\n                show: false,\n              },\n              labels: {\n                show: false,\n                formatter: function (val) {\n                  return val + \"%\";\n                }\n              }\n            },\n            title: {\n              text: 'Monthly Inflation in Argentina, 2002',\n              floating: true,\n              offsetY: 320,\n              align: 'center',\n              style: {\n                color: '#444'\n              }\n            }\n          },\n          series: [{\n            data: [44]\n          }, {\n            data: [53]\n          }],\n        }\n\n\n\n      }\n\n\n  render() {\n    return (\n    <Col xs={24} sm={24} md={12} lg={24} className=\"c-mb\">\n\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n\n                  <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" width={300} height={150} />\n                  <ReactApexChart options={this.state.options1} series={this.state.series} type=\"column\" width={300} height={150} />\n                     </div>\n\n\n                </Card>\n\n\n\n            </Col>\n\n\n\n\n    )\n  }\n}\n\nexport default Analytical;"]},"metadata":{},"sourceType":"module"}
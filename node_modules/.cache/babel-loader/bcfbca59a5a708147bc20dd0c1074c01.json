{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport { Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport axios from \"axios\";\nconst sourceData = [{\n  item: '事例一',\n  count: 40\n}, {\n  item: '事例二',\n  count: 21\n}, {\n  item: '事例三',\n  count: 17\n}, {\n  item: '事例四',\n  count: 13\n}, {\n  item: '事例五',\n  count: 9\n}];\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst data = dv.rows;\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadData({\n        A: this.state.value,\n        B: this.state.value1\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value3: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value4: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      options: {\n        chart: {\n          shadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 1\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        colors: ['#77B6EA', '#545454'],\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 't',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 6\n        },\n        xaxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n          title: {\n            text: 'Month'\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Temperature'\n          },\n          min: 5,\n          max: 40\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true,\n          offsetY: -25,\n          offsetX: -5\n        }\n      },\n      series: [{\n        name: \"High - 2013\",\n        data: [12, 11, 14]\n      }, {\n        name: \"Low - 2013\",\n        data: [12, 11, 14, 18, 17, 13, 13]\n      }],\n      options1: {\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      },\n      series1: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"Amount_USD\"]\n        }\n      },\n      series2: [],\n      options3: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {\n          text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n          labels: {\n            formatter: function (val) {\n              return val + \"K\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return val + \"K\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      series3: [{\n        name: 'Marine Sprite',\n        data: [44, 55, 41, 37, 22, 43, 21]\n      }, {\n        name: 'Striking Calf',\n        data: [53, 32, 33, 52, 13, 43, 32]\n      }, {\n        name: 'Tank Picture',\n        data: [12, 17, 11, 9, 15, 11, 20]\n      }, {\n        name: 'Bucket Slope',\n        data: [9, 7, 5, 8, 6, 9, 4]\n      }, {\n        name: 'Reborn Kid',\n        data: [25, 12, 19, 32, 25, 24, 10]\n      }],\n      options4: {\n        stroke: {\n          width: [0, 4]\n        },\n        title: {\n          text: 'Traffic Sources'\n        },\n        labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: [{\n          title: {\n            text: 'Website Blog'\n          }\n        }, {\n          opposite: true,\n          title: {\n            text: 'Social Media'\n          }\n        }]\n      },\n      series4: [{\n        name: 'Website Blog',\n        type: 'column',\n        data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\n      }, {\n        name: 'Social Media',\n        type: 'line',\n        data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n      }],\n      options5: {\n        chart: {\n          stacked: false\n        },\n        stroke: {\n          width: [0, 2, 5],\n          curve: 'smooth'\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '50%'\n          }\n        },\n        fill: {\n          opacity: [0.85, 0.25, 1],\n          gradient: {\n            inverseColors: false,\n            shade: 'light',\n            type: \"vertical\",\n            opacityFrom: 0.85,\n            opacityTo: 0.55,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'],\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          title: {\n            text: 'Points'\n          },\n          min: 0\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (y) {\n              if (typeof y !== \"undefined\") {\n                return y.toFixed(0) + \" points\";\n              }\n\n              return y;\n            }\n          }\n        }\n      },\n      series5: [{\n        name: 'TEAM A',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'TEAM B',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'TEAM C',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n      options6: {\n        dataLabels: {\n          enabled: false\n        },\n        fill: {\n          type: 'gradient'\n        },\n        legend: {\n          formatter: function (val, opts) {\n            return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      },\n      series3: [5, 5, 8],\n      options7: {\n        labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      },\n      series7: [44, 55, 13, 43, 22],\n      books: [],\n      intHeader: [],\n      filter: [],\n      data: [],\n      chart_data: [],\n      donut_data: []\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState({\n        filter: data\n      });\n      console.log(data);\n    }\n  }\n\n  async loadData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const d = [{\n        'name': 'Actual',\n        'data': [this.state.Actual]\n      }, {\n        'name': 'Budget',\n        'data': [this.state.Budget]\n      }];\n      this.setState({\n        c: ['test']\n      });\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      donut_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n\n        if (this.state.value3 != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      donut_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n\n        if (this.state.value4 != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value1,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"nextBtn\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Column Charts\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.series1,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Grouped Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value1,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Stacked Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options3,\n      series: this.state.series3,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Line & Column\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options4,\n      series: this.state.series4,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Line Column Area\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options5,\n      series: this.state.series5,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Grouped Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value3,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(ReactApexChart, {\n      options: this.state.options6,\n      series: this.state.donut_data,\n      type: \"donut\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value4,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 3\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","ReactMultiSelectCheckboxes","Tooltip","Axis","Legend","Pie","Coord","axios","sourceData","item","count","DataSet","require","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","align","data","rows","Analytical","constructor","props","handleSubmit","e","setState","value","target","preventDefault","loadCheckbox","Column","handleSubmit12","loadData","A","state","B","value1","handleSubmit1","handleSubmitDonut","value3","DonutCheckbox","handleSubmitPie","value4","PieCheckbox","options","chart","shadow","enabled","color","top","left","blur","opacity","toolbar","show","colors","dataLabels","stroke","curve","title","text","grid","borderColor","row","markers","size","xaxis","categories","yaxis","max","legend","position","horizontalAlign","floating","offsetY","offsetX","series","name","options1","plotOptions","bar","horizontal","columnWidth","endingShape","width","fill","tooltip","y","val","series1","options2","style","fontSize","series2","options3","stacked","labels","undefined","series3","options4","opposite","series4","options5","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","shared","intersect","toFixed","series5","options6","opts","w","globals","seriesIndex","responsive","breakpoint","options7","series7","books","intHeader","filter","chart_data","donut_data","componentWillMount","loadAnalytical","loadIntHeaders","promise","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","method","body","JSON","stringify","g_data","Actual","Budget","g","i","keys_list","value_list","chart_list","Object","keys","length","key","data_dict","push","c","d_data","SQBL","SQCL","render","span","order","minHeight","marginLeft","map","index","cursor","lineWidth","point"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport {Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport axios from \"axios\";\n\n\nconst sourceData = [\n  { item: '事例一', count: 40 },\n  { item: '事例二', count: 21 },\n  { item: '事例三', count: 17 },\n  { item: '事例四', count: 13 },\n  { item: '事例五', count: 9 }\n];\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst data = dv.rows;\n\n\n\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n   this.state = {\n        options: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: false\n            }\n          },\n          colors: ['#77B6EA', '#545454'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 't',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n\n            size: 6\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n              text: 'Month'\n            }\n          },\n          yaxis: {\n            title: {\n              text: 'Temperature'\n            },\n            min: 5,\n            max: 40\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n        series: [\n    {\n            name: \"High - 2013\",\n            data: [12, 11, 14]\n          },\n          {\n            name: \"Low - 2013\",\n            data: [12, 11, 14, 18, 17, 13, 13]\n          }\n        ],\n\n\n        options1: {\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n              width: 2,\n              colors: ['transparent']\n            },\n            xaxis: {\n              categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n            },\n            yaxis: {\n              title: {\n                text: '$ (thousands)'\n              }\n            },\n            fill: {\n              opacity: 1\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return \"$ \" + val + \" thousands\"\n                }\n              }\n            }\n          },\n          series1: [{\n            name: 'Net Profit',\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n          }, {\n            name: 'Revenue',\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n          }],\n\n\n\n\n\n\n   options2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: true,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"Amount_USD\"],\n            }\n          },\n\n          series2:[],\n\n\n\n\n\n\n\n options3: {\n            chart: {\n              stacked: true,\n            },\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              },\n\n            },\n            stroke: {\n              width: 1,\n              colors: ['#fff']\n            },\n\n            title: {\n              text: 'Fiction Books Sales'\n            },\n            xaxis: {\n              categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n              labels: {\n                formatter: function (val) {\n                  return val + \"K\"\n                }\n              }\n            },\n            yaxis: {\n              title: {\n                text: undefined\n              },\n\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return val + \"K\"\n                }\n              }\n            },\n            fill: {\n              opacity: 1\n\n            },\n\n            legend: {\n              position: 'top',\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\n          series3: [{\n            name: 'Marine Sprite',\n            data: [44, 55, 41, 37, 22, 43, 21]\n          }, {\n            name: 'Striking Calf',\n            data: [53, 32, 33, 52, 13, 43, 32]\n          }, {\n            name: 'Tank Picture',\n            data: [12, 17, 11, 9, 15, 11, 20]\n          }, {\n            name: 'Bucket Slope',\n            data: [9, 7, 5, 8, 6, 9, 4]\n          }, {\n            name: 'Reborn Kid',\n            data: [25, 12, 19, 32, 25, 24, 10]\n          }],\n options4: {\n            stroke: {\n              width: [0, 4]\n            },\n            title: {\n              text: 'Traffic Sources'\n            },\n            labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'\n            ],\n            xaxis: {\n              type: 'datetime'\n            },\n            yaxis: [{\n              title: {\n                text: 'Website Blog',\n              },\n\n            }, {\n              opposite: true,\n              title: {\n                text: 'Social Media'\n              }\n            }]\n          },\n          series4: [{\n            name: 'Website Blog',\n            type: 'column',\n            data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\n          }, {\n            name: 'Social Media',\n            type: 'line',\n            data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n          }],\n\n       options5: {\n        chart: {\n          stacked: false,\n        },\n        stroke: {\n          width: [0, 2, 5],\n          curve: 'smooth'\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '50%'\n          }\n        },\n\n        fill: {\n          opacity: [0.85, 0.25, 1],\n          gradient: {\n            inverseColors: false,\n            shade: 'light',\n            type: \"vertical\",\n            opacityFrom: 0.85,\n            opacityTo: 0.55,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'\n        ],\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          title: {\n            text: 'Points',\n          },\n          min: 0\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (y) {\n              if (typeof y !== \"undefined\") {\n                return y.toFixed(0) + \" points\";\n              }\n              return y;\n            }\n          }\n        }\n      },\n      series5: [{\n        name: 'TEAM A',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'TEAM B',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'TEAM C',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n\n\n\n\noptions6: {\n            dataLabels: {\n              enabled: false\n            },\n            fill: {\n              type: 'gradient',\n            },\n            legend: {\n              formatter: function (val, opts) {\n                return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\n              }\n            },\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          },\n          series3: [5,5,8],\n\n\n\n\n          options7: {\n            labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          },\n          series7: [44, 55, 13, 43, 22],\n\n    books:[],\n    intHeader:[],\n    filter:[],\n     data:[],\n     chart_data:[],\n     donut_data:[]\n\n      }\n\n\n\n  }\n\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n\n\n  }\n\n  handleSubmit = (e) => {\n     this.setState({value: e.target.value});\n };\n\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n\n     this.loadData(\n         {A:this.state.value, B:this.state.value1}\n  );\n  };\n\n\n\n\nhandleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  handleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n  async loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n  async loadCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({filter:data});\n      console.log(data);\n    }\n\n}\n\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      this.setState({c:['test']})\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value3: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({donut_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            var value = data[key]\n            if (this.state.value3 != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n      }\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\nhandleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value4: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({donut_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            var value = data[key]\n            if (this.state.value4 != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n      }\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <div id=\"content\">\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                     {/* <div class=\"dropdown\">\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Column\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\" style={{ marginTop : \"10.6rem\", fontSize: \"5px\"}}>\n                            {this.state.books.map((value,index)=>\n                              {return   <a class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>\n\n                    <div class=\"dropdown\" style={{ marginLeft : \"5.5rem\", marginTop : \"-2.4rem\"}}>\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Filter\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\" style={{ marginTop : \"10.6rem\", fontSize: \"5px\"}}>\n                              {this.state.books.map((value,index)=>\n                              {return   <a  class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>\n\n                    <div class=\"dropdown\" style={{ marginLeft : \"10rem\", marginTop : \"-2.4rem\"}}>\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Value\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\">\n                               {this.state.filter.map((value,index)=>\n                              {return   <a  class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>  */}\n                    <div>\n\n\n\n\n           {/*  <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\"}}>\n                     <option  value=\"\" >Column</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\" type=\"checkbox\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n                     </select>\n\n<div className=\"dropdown\" id=\"valueItemDrop\" style={{ width:\"110px\"}}>\n    <button className=\"custom-select\" id=\"dLabel\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        Xaxis\n    </button>\n    <ul className=\"dropdown-menu\" aria-labelledby=\"dLabel\">\n\n        <li className=\"checkbox form-group\" size=\"4\">\n\n            {this.state.books.map((value,index)=>\n                              {return   <label class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"11px\", marginTop:\"-40px\"}} key={index}>\n                              <div style={{ marginTop:\"32px;\" }}>\n                              <input type=\"checkbox\" id=\"valuePot\" value=\"Value Pot\" name=\"Value Pot\" style={{ marginLeft:\"-135px\" }}/>\n                              </div>\n                              {value} </label> }\n                              )}\n\n        </li>\n\n\n\n    </ul>\n</div>\n\n<div className=\"dropdown\" id=\"valueItemDrop\" style={{ width:\"110px\", marginLeft:\"150px\", marginTop:\"-40px\"}}>\n    <button className=\"custom-select\" id=\"dLabel\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        Yaxis\n    </button>\n    <ul className=\"dropdown-menu\" aria-labelledby=\"dLabel\">\n\n        <li className=\"checkbox form-group\" size=\"4\">\n\n            {this.state.books.map((value,index)=>\n                              {return   <label class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"11px\", marginTop:\"-40px\"}} key={index}>\n                              <div style={{ marginTop:\"32px;\" }}>\n                              <input type=\"checkbox\" id=\"valuePot\" value=\"Value Pot\" name=\"Value Pot\" style={{ marginLeft:\"-135px\" }}/>\n                              </div>\n                              {value} </label> }\n                              )}\n\n        </li>\n\n\n\n    </ul>\n</div>  */}\n\n\n\n\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n<select class=\"custom-select\"  value={this.state.value1} onChange={this.handleSubmit1}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Yaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n<React.Fragment>\n    <button onClick={this.handleSubmit12} className='nextBtn'\n      type='button'>OK</button>\n    </React.Fragment>\n                    {/* <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Filter</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n                     </select>\n\n                     <select class=\"custom-select\" value={this.state.value} onChange={this.handleSubmit}\n                     style={{ width:\"110px\" , marginLeft:\"20px\"}} >\n                     <option  value=\"\" >Value</option>\n                      {this.state.filter.map((value,index)=>\n                              {return   <option class=\"custom-select\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select> */}\n\n                  {/*   <select class=\"btn btn-default\" value={this.state.value} onChange={this.handleSubmit}\n                       style={{ width:\"110px\" }}>\n                      {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select>\n                     <select class=\"btn btn-default\" value={this.state.value} onChange={this.handleSubmit}\n                     style={{ width:\"110px\" }} >\n                      {this.state.filter.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select> */}\n\n                    </div>\n\n\n\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n\n              </Card>\n\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Column Charts\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n             <ReactApexChart options={this.state.options2} series={this.state.series1} type=\"bar\" width=\"420\" height=\"350\" />\n         </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n\n           <Row type=\"flex\" gutter={24}>\n\n\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Grouped Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                <div>\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n<select class=\"custom-select\"  value={this.state.value1} onChange={this.handleSubmit1}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Yaxis</option>\n                     {this.state.intHeader.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n<React.Fragment>\n    <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"20px\"}}\n      type='button'>OK</button>\n    </React.Fragment>\n\n\n                    </div>\n\n            <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Stacked Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options3} series={this.state.series3} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n           <Row type=\"flex\" gutter={24}>\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Line & Column\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options4} series={this.state.series4} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Line Column Area\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options5} series={this.state.series5} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n\n<Row type=\"flex\" gutter={24}>\n        <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Grouped Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value3} onChange={this.handleSubmitDonut}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                  <ReactApexChart options={this.state.options6} series={this.state.donut_data} type=\"donut\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value4} onChange={this.handleSubmitPie}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                  <Chart forceFit height={400} data={data} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n        <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 3 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n             </div>\n         </Card>\n      </Col>\n\n</Row>\n\n\n\n\n\n          <Row type=\"flex\" gutter={24}>\n\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Analytical;"]},"metadata":{},"sourceType":"module"}
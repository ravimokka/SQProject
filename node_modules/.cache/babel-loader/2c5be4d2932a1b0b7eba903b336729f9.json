{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [1, 1, 4]\n        },\n        title: {\n          text: 'XYZ - Stock Analysis (2009 - 2016)',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: []\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            }\n          },\n          title: {\n            text: \"Income (thousand crores)\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            }\n          },\n          title: {\n            text: \"Operating Cashflow (thousand crores)\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            }\n          },\n          title: {\n            text: \"Revenue (thousand crores)\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      series: [{\n        name: 'Income',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'Cashflow',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'Revenue',\n        type: 'line',\n        data: [20, 29, 37, 36, 44, 45, 50, 58]\n      }, {\n        name: 'Income1',\n        type: 'column',\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","AnalyticalTest","Component","constructor","props","state","options","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","yaxis","axisTicks","show","axisBorder","color","labels","style","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","series","name","type","data","render"],"mappings":"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","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n class AnalyticalTest extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n\n\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width: [1, 1, 4]\n            },\n            title: {\n              text: 'XYZ - Stock Analysis (2009 - 2016)',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                labels: {\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                title: {\n                  text: \"Income (thousand crores)\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                labels: {\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n                title: {\n                  text: \"Operating Cashflow (thousand crores)\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                labels: {\n                  style: {\n                    color: '#FEB019',\n                  },\n                },\n                title: {\n                  text: \"Revenue (thousand crores)\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\n          series: [{\n            name: 'Income',\n            type: 'column',\n            data: [10]\n          }, {\n            name: 'Cashflow',\n            type: 'column',\n            data: [20]\n          }, {\n            name: 'Revenue',\n            type: 'line',\n            data: [20, 29, 37, 36, 44, 45, 50, 58]\n          },\n\n          {\n            name: 'Income1',\n            type: 'column',\n            data: []\n          }\n\n          ],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"600\"height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Modal, Layout, Menu, Breadcrumb, Icon, Tree } from 'antd';\nimport LineChart from './chart';\nconst TreeNode = Tree.TreeNode,\n      DirectoryTree = Tree.DirectoryTree;\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider;\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass ChartDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          ModalText = _this$state.ModalText;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Create Dashboard\"), React.createElement(Modal, {\n      title: \"Title\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.ModalText))));\n  }\n\n}\n\nexport default ChartDashboard;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Modal","Layout","Menu","Breadcrumb","Icon","Tree","LineChart","TreeNode","DirectoryTree","SubMenu","Header","Content","Footer","Sider","DataSet","require","ChartDashboard","constructor","props","showModal","setState","visible","handleOk","ModalText","confirmLoading","setTimeout","handleCancel","console","log","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuDC,UAAvD,EAAmEC,IAAnE,EAAyEC,IAAzE,QAAoF,MAApF;AACA,OAAOC,SAAP,MAAsB,SAAtB;MAEQC,Q,GAA4BF,I,CAA5BE,Q;MAAUC,a,GAAkBH,I,CAAlBG,a;MAEVC,O,GAAYP,I,CAAZO,O;MACAC,M,GAAmCT,M,CAAnCS,M;MAAQC,O,GAA2BV,M,CAA3BU,O;MAASC,M,GAAkBX,M,CAAlBW,M;MAAQC,K,GAAUZ,M,CAAVY,K;;AACjC,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAMC,cAAN,SAA6BzB,KAAK,CAACC,SAAnC,CAA6C;AAE5CyB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SASlBC,SATkB,GASN,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAbiB;;AAAA,SAelBC,QAfkB,GAeP,MAAM;AACf,WAAKF,QAAL,CAAc;AACZG,QAAAA,SAAS,EAAE,4CADC;AAEZC,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAIAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKL,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,KADG;AAEZG,UAAAA,cAAc,EAAE;AAFJ,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,KA1BiB;;AAAA,SA4BlBE,YA5BkB,GA4BH,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAKR,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAjCiB;;AAElB,SAAKQ,KAAL,GAAa;AACXN,MAAAA,SAAS,EAAE,sBADA;AAEXF,MAAAA,OAAO,EAAE,KAFE;AAGXG,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA;;AA4BAM,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKD,KAD7C;AAAA,UACCR,OADD,eACCA,OADD;AAAA,UACUG,cADV,eACUA,cADV;AAAA,UAC0BD,SAD1B,eAC0BA,SAD1B;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKJ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAIuB,oBAAC,KAAD;AACG,MAAA,KAAK,EAAC,OADT;AAEG,MAAA,OAAO,EAAEE,OAFZ;AAGG,MAAA,IAAI,EAAE,KAAKC,QAHd;AAIG,MAAA,cAAc,EAAEE,cAJnB;AAKG,MAAA,QAAQ,EAAE,KAAKE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,SAAT,CAPH,CAJvB,CAFN,CADF;AAmBD;;AA1D0C;;AA6D7C,eAAeP,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Modal , Layout, Menu, Breadcrumb, Icon, Tree} from 'antd';\nimport LineChart from './chart';\n\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\nconst DataSet = require(\"@antv/data-set\");\n\nclass ChartDashboard extends React.Component {\n\n constructor(props) {\n    super(props)\n  this.state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  };\n }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n\n            <div className=\"page-header\">\n             <Button type=\"primary\" onClick={this.showModal}>\n                                  Create Dashboard\n                                </Button>\n                                   <Modal\n                                      title=\"Title\"\n                                      visible={visible}\n                                      onOk={this.handleOk}\n                                      confirmLoading={confirmLoading}\n                                      onCancel={this.handleCancel}\n                                      >\n                                      <p>{this.ModalText}</p>\n                                    </Modal>\n               </div>\n      </div>\n    );\n  }\n}\n\nexport default ChartDashboard;\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Legend, Axis, Tooltip, StackInterval } from 'viser-react';\nimport * as React from 'react';\n\nconst DataSet = require('@antv/data-set');\n\nconst data = [{\n  country: 'Asia',\n  year: '1750',\n  value: 502\n}, {\n  country: 'Asia',\n  year: '1800',\n  value: 635\n}, {\n  country: 'Asia',\n  year: '1850',\n  value: 809\n}, {\n  country: 'Asia',\n  year: '1900',\n  value: 947\n}, {\n  country: 'Asia',\n  year: '1950',\n  value: 1402\n}, {\n  country: 'Asia',\n  year: '1999',\n  value: 3634\n}, {\n  country: 'Asia',\n  year: '2050',\n  value: 5268\n}, {\n  country: 'Africa',\n  year: '1750',\n  value: 106\n}, {\n  country: 'Africa',\n  year: '1800',\n  value: 107\n}, {\n  country: 'Africa',\n  year: '1850',\n  value: 111\n}, {\n  country: 'Africa',\n  year: '1900',\n  value: 133\n}, {\n  country: 'Africa',\n  year: '1950',\n  value: 221\n}, {\n  country: 'Africa',\n  year: '1999',\n  value: 767\n}, {\n  country: 'Africa',\n  year: '2050',\n  value: 1766\n}, {\n  country: 'Europe',\n  year: '1750',\n  value: 163\n}, {\n  country: 'Europe',\n  year: '1800',\n  value: 203\n}, {\n  country: 'Europe',\n  year: '1850',\n  value: 276\n}, {\n  country: 'Europe',\n  year: '1900',\n  value: 408\n}, {\n  country: 'Europe',\n  year: '1950',\n  value: 547\n}, {\n  country: 'Europe',\n  year: '1999',\n  value: 729\n}, {\n  country: 'Europe',\n  year: '2050',\n  value: 628\n}, {\n  country: 'Oceania',\n  year: '1750',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1800',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1850',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1900',\n  value: 300\n}, {\n  country: 'Oceania',\n  year: '1950',\n  value: 230\n}, {\n  country: 'Oceania',\n  year: '1999',\n  value: 300\n}, {\n  country: 'Oceania',\n  year: '2050',\n  value: 460\n}];\nconst ds = new DataSet();\nconst dv = ds.createView('demo').source(data).transform({\n  type: 'percent',\n  field: 'value',\n  // 统计销量\n  dimension: 'country',\n  // 每年的占比\n  groupBy: ['year'],\n  // 以不同产品类别为分组\n  as: 'percent'\n});\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: function formatter(val) {\n    return val + '%';\n  }\n}];\n\nclass Reactjs extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 500,\n      data: dv,\n      scale: scale,\n      padding: ['auto'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      dataKey: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(StackInterval, {\n      position: \"year*percent\",\n      color: ['country', ['#FF6A84', '#30A4EB', '#45BFC0', '#FFCC55']],\n      shape: \"top-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Legend","Axis","Tooltip","StackInterval","React","DataSet","require","data","country","year","value","ds","dv","createView","source","transform","type","field","dimension","groupBy","as","scale","dataKey","min","formatter","val","Reactjs","Component","render"],"mappings":"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","sourcesContent":["import { Chart, Legend, Axis, Tooltip, StackInterval } from 'viser-react';\nimport * as React from 'react';\nconst DataSet = require('@antv/data-set');\n\nconst data = [{\n    country: 'Asia',\n    year: '1750',\n    value: 502\n}, {\n    country: 'Asia',\n    year: '1800',\n    value: 635\n}, {\n    country: 'Asia',\n    year: '1850',\n    value: 809\n}, {\n    country: 'Asia',\n    year: '1900',\n    value: 947\n}, {\n    country: 'Asia',\n    year: '1950',\n    value: 1402\n}, {\n    country: 'Asia',\n    year: '1999',\n    value: 3634\n}, {\n    country: 'Asia',\n    year: '2050',\n    value: 5268\n}, {\n    country: 'Africa',\n    year: '1750',\n    value: 106\n}, {\n    country: 'Africa',\n    year: '1800',\n    value: 107\n}, {\n    country: 'Africa',\n    year: '1850',\n    value: 111\n}, {\n    country: 'Africa',\n    year: '1900',\n    value: 133\n}, {\n    country: 'Africa',\n    year: '1950',\n    value: 221\n}, {\n    country: 'Africa',\n    year: '1999',\n    value: 767\n}, {\n    country: 'Africa',\n    year: '2050',\n    value: 1766\n}, {\n    country: 'Europe',\n    year: '1750',\n    value: 163\n}, {\n    country: 'Europe',\n    year: '1800',\n    value: 203\n}, {\n    country: 'Europe',\n    year: '1850',\n    value: 276\n}, {\n    country: 'Europe',\n    year: '1900',\n    value: 408\n}, {\n    country: 'Europe',\n    year: '1950',\n    value: 547\n}, {\n    country: 'Europe',\n    year: '1999',\n    value: 729\n}, {\n    country: 'Europe',\n    year: '2050',\n    value: 628\n}, {\n    country: 'Oceania',\n    year: '1750',\n    value: 200\n}, {\n    country: 'Oceania',\n    year: '1800',\n    value: 200\n}, {\n    country: 'Oceania',\n    year: '1850',\n    value: 200\n}, {\n    country: 'Oceania',\n    year: '1900',\n    value: 300\n}, {\n    country: 'Oceania',\n    year: '1950',\n    value: 230\n}, {\n    country: 'Oceania',\n    year: '1999',\n    value: 300\n}, {\n    country: 'Oceania',\n    year: '2050',\n    value: 460\n}];\nconst ds = new DataSet();\nconst dv = ds.createView('demo').source(data).transform({\n    type: 'percent',\n    field: 'value', // 统计销量\n    dimension: 'country', // 每年的占比\n    groupBy: ['year'], // 以不同产品类别为分组\n    as: 'percent'\n});\n\nconst scale = [\n    {\n        dataKey: 'percent',\n        min: 0,\n        formatter: function formatter(val) {\n            return val + '%';\n        }\n    }\n];\nclass Reactjs extends React.Component {\n\n    render() {\n\n        return (\n            <Chart forceFit height={500} data={dv} scale={scale} padding={['auto']}>\n                <Legend dataKey=\"country\" />\n                <Tooltip />\n                <Axis dataKey=\"year\" />\n                <StackInterval\n                    position=\"year*percent\"\n\n                    color={[\n                        'country',\n                        ['#FF6A84', '#30A4EB', '#45BFC0', '#FFCC55']\n                    ]}\n                    shape=\"top-line\"\n                />\n            </Chart>\n        );\n    }\n}\nexport default Reactjs;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [1, 1, 4]\n        },\n        title: {\n          text: 'XYZ - Stock Analysis (2009 - 2016)',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            }\n          },\n          title: {\n            text: \"Income (thousand crores)\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            }\n          },\n          title: {\n            text: \"Operating Cashflow (thousand crores)\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {}],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      series: [{\n        name: 'Income',\n        type: 'column',\n        data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n      }, {\n        name: 'Cashflow',\n        type: 'column',\n        data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"520\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","AnalyticalTest","Component","constructor","props","state","options","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","labels","formatter","val","Math","round","yaxis","axisTicks","show","axisBorder","color","style","tooltip","seriesName","opposite","fixed","position","offsetY","legend","horizontalAlign","series","name","type","data","render"],"mappings":"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","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nclass AnalyticalTest extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width: [1, 1, 4]\n            },\n            title: {\n              text: 'XYZ - Stock Analysis (2009 - 2016)',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                labels: {\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                title: {\n                  text: \"Income (thousand crores)\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                labels: {\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n                title: {\n                  text: \"Operating Cashflow (thousand crores)\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n\n\n              },\n            ],\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\n          series: [{name: 'Income',type: 'column', data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]},\n          { name: 'Cashflow', type: 'column', data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]},\n          ],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"520\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n};\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\", \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\", \"2018-09-19T06:30:00\"]\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        }\n      },\n      series: [{\n        name: 'series1',\n        data: [31, 40, 100]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"area\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","StackArea","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","AnalyticalTest","Component","constructor","props","state","options","dataLabels","enabled","stroke","curve","xaxis","type","categories","tooltip","format","name","data","render"],"mappings":"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","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point} from 'viser-react';\n\n\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n      var i = 0;\n      var series = [];\n      while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push([x, y]);\n        baseval += 86400000;\n        i++;\n      }\n      return series;\n    }\n\nclass AnalyticalTest extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n\n\n            xaxis: {\n              type: 'datetime',\n              categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\",\n                \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\",\n                \"2018-09-19T06:30:00\"\n              ],\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              },\n            }\n          },\n          series: [{\n            name: 'series1',\n            data: [31, 40, 100]\n          }, {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          },\n\n          {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          },\n          {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          },\n          {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          },\n          {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          },\n\n          ],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" width=\"600\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
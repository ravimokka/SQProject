{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress, Table } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\nimport ChartBreakdownDonut from \"./ChartBreakdownDonut\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass ManagementAllCharts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          stacked: true,\n          events: {\n            selection: function (chart, e) {\n              console.log(new Date(e.xaxis.min));\n            }\n          }\n        },\n        colors: ['#008FFB', '#00E396', '#CED4DC'],\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            opacityFrom: 0.6,\n            opacityTo: 0.8\n          }\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        data: [31, 19, 30]\n      }, {\n        name: 'series2',\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ManagementAllCharts;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","Table","ReactApexChart","ChartBreakdownDonut","LineChart","BarChart","DataSet","require","ManagementAllCharts","constructor","props","state","options","chart","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","stroke","curve","fill","type","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","area_chart_series","name","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAgDC,KAAhD,QAA6D,MAA7D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAKI,MAAMC,mBAAN,SAAkCf,KAAK,CAACC,SAAxC,CAAkD;AAEhDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,MAAM,EAAE;AACNC,YAAAA,SAAS,EAAE,UAAUH,KAAV,EAAiBI,CAAjB,EAAoB;AAC7BC,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASH,CAAC,CAACI,KAAF,CAAQC,GAAjB,CAAZ;AACD;AAHK;AAFH,SADA;AASPC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CATD;AAUPC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SAVL;AAaPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AADD,SAbD;AAgBPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,UADF;AAEJC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,WAAW,EAAE,GADL;AAERC,YAAAA,SAAS,EAAE;AAFH;AAFN,SAhBC;AAuBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,KADJ;AAENC,UAAAA,eAAe,EAAE;AAFX,SAvBD;AA2BPd,QAAAA,KAAK,EAAE;AACLQ,UAAAA,IAAI,EAAE;AADD;AA3BA,OADE;AAgCbO,MAAAA,iBAAiB,EAAC,CAAC;AACfC,QAAAA,IAAI,EAAE,SADS;AAEfC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFS,OAAD,EAGb;AACDD,QAAAA,IAAI,EAAE,SADL;AAEDC,QAAAA,IAAI,EAAE;AAFL,OAHa;AAhCL,KAAb;AAwCD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAGE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWC,OAApC;AAA6C,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWyB,iBAAhE;AAAmF,MAAA,IAAI,EAAC,MAAxF;AAAgG,MAAA,KAAK,EAAC,KAAtG;AAA4G,MAAA,MAAM,EAAC,KAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;AASD;;AAzD+C;;AA2DtD,eAAe5B,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress,Table } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\n\nimport ChartBreakdownDonut from \"./ChartBreakdownDonut\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\n\n\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n    class ManagementAllCharts extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            chart: {\n              stacked: true,\n              events: {\n                selection: function (chart, e) {\n                  console.log(new Date(e.xaxis.min))\n                }\n              },\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'top',\n              horizontalAlign: 'left'\n            },\n            xaxis: {\n              type: 'datetime'\n            }\n          },\n        area_chart_series:[{\n            name: 'series1',\n            data: [31, 19, 30]\n          }, {\n            name: 'series2',\n            data: []\n          }],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.area_chart_series} type=\"area\"  width=\"600\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\nexport default ManagementAllCharts;\n\n"]},"metadata":{},"sourceType":"module"}
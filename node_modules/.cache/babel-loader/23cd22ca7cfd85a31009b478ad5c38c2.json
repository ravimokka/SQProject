{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\"; // First way to import\n\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader } from \"react-spinners\";\nimport { SyncLoader } from \"react-spinners\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sweet-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Load Data\"), React.createElement(FadeLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AwesomeComponent;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","css","ClipLoader","FadeLoader","SyncLoader","override","AwesomeComponent","Component","constructor","props","state","loading","render","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB,C,CACA;;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA4B,gBAA5B,C,CAGA;;AACA,MAAMC,QAAQ,GAAGJ,GAAI;;;;;;;;CAArB;;AAUA,MAAMK,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAKE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAER,QADP;AAEE,MAAA,IAAI,EAAE,GAFR,CAEa;AAFb;AAGE,MAAA,KAAK,EAAE,SAHT;AAIE,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAcD;;AAvB4C;;AAyB9C,eAAeL,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\n// First way to import\nimport { ClipLoader } from \"react-spinners\";\nimport { FadeLoader\t } from \"react-spinners\";\nimport { SyncLoader\t } from \"react-spinners\";\n\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\ncolor: \"#000000\";\ncss: \"\";\n\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"sweet-loading\">\n       <button onClick={this.onClick}>\n            Load Data\n          </button>\n          \n        <FadeLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n export default AwesomeComponent;"]},"metadata":{},"sourceType":"module"}
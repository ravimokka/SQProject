{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict'; // package version injected by `npm run preprocess`\n\nexports.version = '1.51.1'; // inject promise polyfill\n\nrequire('es6-promise').polyfill(); // inject plot css\n\n\nrequire('../build/plotcss'); // inject default MathJax config\n\n\nrequire('./fonts/mathjax_config')(); // include registry module and expose register method\n\n\nvar Registry = require('./registry');\n\nvar register = exports.register = Registry.register; // expose plot api methods\n\nvar plotApi = require('./plot_api');\n\nvar methodNames = Object.keys(plotApi);\n\nfor (var i = 0; i < methodNames.length; i++) {\n  var name = methodNames[i]; // _ -> private API methods, but still registered for internal use\n\n  if (name.charAt(0) !== '_') exports[name] = plotApi[name];\n  register({\n    moduleType: 'apiMethod',\n    name: name,\n    fn: plotApi[name]\n  });\n} // scatter is the only trace included by default\n\n\nregister(require('./traces/scatter')); // register all registrable components modules\n\nregister([require('./components/fx'), require('./components/legend'), require('./components/annotations'), require('./components/annotations3d'), require('./components/shapes'), require('./components/images'), require('./components/updatemenus'), require('./components/sliders'), require('./components/rangeslider'), require('./components/rangeselector'), require('./components/grid'), require('./components/errorbars'), require('./components/colorscale'), require('./components/colorbar')]); // locales en and en-US are required for default behavior\n\nregister([require('./locale-en'), require('./locale-en-us')]); // plot icons\n\nexports.Icons = require('./fonts/ploticon'); // unofficial 'beta' plot methods, use at your own risk\n\nexports.Plots = require('./plots/plots');\nexports.Fx = require('./components/fx');\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');\nexports.Queue = require('./lib/queue'); // export d3 used in the bundle\n\nexports.d3 = require('d3');","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/core.js"],"names":["exports","version","require","polyfill","Registry","register","plotApi","methodNames","Object","keys","i","length","name","charAt","moduleType","fn","Icons","Plots","Fx","Snapshot","PlotSchema","Queue","d3"],"mappings":"AAAA;;;;;;;AAQA,a,CAEA;;AACAA,OAAO,CAACC,OAAR,GAAkB,QAAlB,C,CAEA;;AACAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB,G,CAEA;;;AACAD,OAAO,CAAC,kBAAD,CAAP,C,CAEA;;;AACAA,OAAO,CAAC,wBAAD,CAAP,G,CAEA;;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGL,OAAO,CAACK,QAAR,GAAmBD,QAAQ,CAACC,QAA3C,C,CAEA;;AACA,IAAIC,OAAO,GAAGJ,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIK,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAlB;;AACA,KAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,WAAW,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,MAAIE,IAAI,GAAGL,WAAW,CAACG,CAAD,CAAtB,CADwC,CAExC;;AACA,MAAGE,IAAI,CAACC,MAAL,CAAY,CAAZ,MAAmB,GAAtB,EAA2Bb,OAAO,CAACY,IAAD,CAAP,GAAgBN,OAAO,CAACM,IAAD,CAAvB;AAC3BP,EAAAA,QAAQ,CAAC;AACLS,IAAAA,UAAU,EAAE,WADP;AAELF,IAAAA,IAAI,EAAEA,IAFD;AAGLG,IAAAA,EAAE,EAAET,OAAO,CAACM,IAAD;AAHN,GAAD,CAAR;AAKH,C,CAED;;;AACAP,QAAQ,CAACH,OAAO,CAAC,kBAAD,CAAR,CAAR,C,CAEA;;AACAG,QAAQ,CAAC,CACLH,OAAO,CAAC,iBAAD,CADF,EAELA,OAAO,CAAC,qBAAD,CAFF,EAGLA,OAAO,CAAC,0BAAD,CAHF,EAILA,OAAO,CAAC,4BAAD,CAJF,EAKLA,OAAO,CAAC,qBAAD,CALF,EAMLA,OAAO,CAAC,qBAAD,CANF,EAOLA,OAAO,CAAC,0BAAD,CAPF,EAQLA,OAAO,CAAC,sBAAD,CARF,EASLA,OAAO,CAAC,0BAAD,CATF,EAULA,OAAO,CAAC,4BAAD,CAVF,EAWLA,OAAO,CAAC,mBAAD,CAXF,EAYLA,OAAO,CAAC,wBAAD,CAZF,EAaLA,OAAO,CAAC,yBAAD,CAbF,EAcLA,OAAO,CAAC,uBAAD,CAdF,CAAD,CAAR,C,CAiBA;;AACAG,QAAQ,CAAC,CACLH,OAAO,CAAC,aAAD,CADF,EAELA,OAAO,CAAC,gBAAD,CAFF,CAAD,CAAR,C,CAKA;;AACAF,OAAO,CAACgB,KAAR,GAAgBd,OAAO,CAAC,kBAAD,CAAvB,C,CAEA;;AACAF,OAAO,CAACiB,KAAR,GAAgBf,OAAO,CAAC,eAAD,CAAvB;AACAF,OAAO,CAACkB,EAAR,GAAahB,OAAO,CAAC,iBAAD,CAApB;AACAF,OAAO,CAACmB,QAAR,GAAmBjB,OAAO,CAAC,YAAD,CAA1B;AACAF,OAAO,CAACoB,UAAR,GAAqBlB,OAAO,CAAC,wBAAD,CAA5B;AACAF,OAAO,CAACqB,KAAR,GAAgBnB,OAAO,CAAC,aAAD,CAAvB,C,CAEA;;AACAF,OAAO,CAACsB,EAAR,GAAapB,OAAO,CAAC,IAAD,CAApB","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// package version injected by `npm run preprocess`\nexports.version = '1.51.1';\n\n// inject promise polyfill\nrequire('es6-promise').polyfill();\n\n// inject plot css\nrequire('../build/plotcss');\n\n// inject default MathJax config\nrequire('./fonts/mathjax_config')();\n\n// include registry module and expose register method\nvar Registry = require('./registry');\nvar register = exports.register = Registry.register;\n\n// expose plot api methods\nvar plotApi = require('./plot_api');\nvar methodNames = Object.keys(plotApi);\nfor(var i = 0; i < methodNames.length; i++) {\n    var name = methodNames[i];\n    // _ -> private API methods, but still registered for internal use\n    if(name.charAt(0) !== '_') exports[name] = plotApi[name];\n    register({\n        moduleType: 'apiMethod',\n        name: name,\n        fn: plotApi[name]\n    });\n}\n\n// scatter is the only trace included by default\nregister(require('./traces/scatter'));\n\n// register all registrable components modules\nregister([\n    require('./components/fx'),\n    require('./components/legend'),\n    require('./components/annotations'),\n    require('./components/annotations3d'),\n    require('./components/shapes'),\n    require('./components/images'),\n    require('./components/updatemenus'),\n    require('./components/sliders'),\n    require('./components/rangeslider'),\n    require('./components/rangeselector'),\n    require('./components/grid'),\n    require('./components/errorbars'),\n    require('./components/colorscale'),\n    require('./components/colorbar')\n]);\n\n// locales en and en-US are required for default behavior\nregister([\n    require('./locale-en'),\n    require('./locale-en-us')\n]);\n\n// plot icons\nexports.Icons = require('./fonts/ploticon');\n\n// unofficial 'beta' plot methods, use at your own risk\nexports.Plots = require('./plots/plots');\nexports.Fx = require('./components/fx');\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');\nexports.Queue = require('./lib/queue');\n\n// export d3 used in the bundle\nexports.d3 = require('d3');\n"]},"metadata":{},"sourceType":"script"}
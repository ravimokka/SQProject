{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Drawing = require('../drawing');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var imageDataAbove = [];\n  var imageDataSubplot = {};\n  var imageDataBelow = [];\n  var subplot;\n  var i; // Sort into top, subplot, and bottom layers\n\n  for (i = 0; i < fullLayout.images.length; i++) {\n    var img = fullLayout.images[i];\n\n    if (img.visible) {\n      if (img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n        subplot = img.xref + img.yref;\n        var plotinfo = fullLayout._plots[subplot];\n\n        if (!plotinfo) {\n          // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n          // This can happen if you reference the image to an x / y axis combination\n          // that doesn't have any data on it (and layer is below)\n          imageDataBelow.push(img);\n          continue;\n        }\n\n        if (plotinfo.mainplot) {\n          subplot = plotinfo.mainplot.id;\n        }\n\n        if (!imageDataSubplot[subplot]) {\n          imageDataSubplot[subplot] = [];\n        }\n\n        imageDataSubplot[subplot].push(img);\n      } else if (img.layer === 'above') {\n        imageDataAbove.push(img);\n      } else {\n        imageDataBelow.push(img);\n      }\n    }\n  }\n\n  var anchors = {\n    x: {\n      left: {\n        sizing: 'xMin',\n        offset: 0\n      },\n      center: {\n        sizing: 'xMid',\n        offset: -1 / 2\n      },\n      right: {\n        sizing: 'xMax',\n        offset: -1\n      }\n    },\n    y: {\n      top: {\n        sizing: 'YMin',\n        offset: 0\n      },\n      middle: {\n        sizing: 'YMid',\n        offset: -1 / 2\n      },\n      bottom: {\n        sizing: 'YMax',\n        offset: -1\n      }\n    }\n  }; // Images must be converted to dataURL's for exporting.\n\n  function setImage(d) {\n    var thisImage = d3.select(this);\n\n    if (this._imgSrc === d.source) {\n      return;\n    }\n\n    thisImage.attr('xmlns', xmlnsNamespaces.svg);\n\n    if (d.source && d.source.slice(0, 5) === 'data:') {\n      thisImage.attr('xlink:href', d.source);\n      this._imgSrc = d.source;\n    } else {\n      var imagePromise = new Promise(function (resolve) {\n        var img = new Image();\n        this.img = img; // If not set, a `tainted canvas` error is thrown\n\n        img.setAttribute('crossOrigin', 'anonymous');\n        img.onerror = errorHandler;\n\n        img.onload = function () {\n          var canvas = document.createElement('canvas');\n          canvas.width = this.width;\n          canvas.height = this.height;\n          var ctx = canvas.getContext('2d');\n          ctx.drawImage(this, 0, 0);\n          var dataURL = canvas.toDataURL('image/png');\n          thisImage.attr('xlink:href', dataURL); // resolve promise in onload handler instead of on 'load' to support IE11\n          // see https://github.com/plotly/plotly.js/issues/1685\n          // for more details\n\n          resolve();\n        };\n\n        thisImage.on('error', errorHandler);\n        img.src = d.source;\n        this._imgSrc = d.source;\n\n        function errorHandler() {\n          thisImage.remove();\n          resolve();\n        }\n      }.bind(this));\n\n      gd._promises.push(imagePromise);\n    }\n  }\n\n  function applyAttributes(d) {\n    var thisImage = d3.select(this); // Axes if specified\n\n    var xa = Axes.getFromId(gd, d.xref);\n    var ya = Axes.getFromId(gd, d.yref);\n    var size = fullLayout._size;\n    var width = xa ? Math.abs(xa.l2p(d.sizex) - xa.l2p(0)) : d.sizex * size.w;\n    var height = ya ? Math.abs(ya.l2p(d.sizey) - ya.l2p(0)) : d.sizey * size.h; // Offsets for anchor positioning\n\n    var xOffset = width * anchors.x[d.xanchor].offset;\n    var yOffset = height * anchors.y[d.yanchor].offset;\n    var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing; // Final positions\n\n    var xPos = (xa ? xa.r2p(d.x) + xa._offset : d.x * size.w + size.l) + xOffset;\n    var yPos = (ya ? ya.r2p(d.y) + ya._offset : size.h - d.y * size.h + size.t) + yOffset; // Construct the proper aspectRatio attribute\n\n    switch (d.sizing) {\n      case 'fill':\n        sizing += ' slice';\n        break;\n\n      case 'stretch':\n        sizing = 'none';\n        break;\n    }\n\n    thisImage.attr({\n      x: xPos,\n      y: yPos,\n      width: width,\n      height: height,\n      preserveAspectRatio: sizing,\n      opacity: d.opacity\n    }); // Set proper clipping on images\n\n    var xId = xa ? xa._id : '';\n    var yId = ya ? ya._id : '';\n    var clipAxes = xId + yId;\n    Drawing.setClipUrl(thisImage, clipAxes ? 'clip' + fullLayout._uid + clipAxes : null, gd);\n  }\n\n  var imagesBelow = fullLayout._imageLowerLayer.selectAll('image').data(imageDataBelow);\n\n  var imagesAbove = fullLayout._imageUpperLayer.selectAll('image').data(imageDataAbove);\n\n  imagesBelow.enter().append('image');\n  imagesAbove.enter().append('image');\n  imagesBelow.exit().remove();\n  imagesAbove.exit().remove();\n  imagesBelow.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  imagesAbove.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  var allSubplots = Object.keys(fullLayout._plots);\n\n  for (i = 0; i < allSubplots.length; i++) {\n    subplot = allSubplots[i];\n    var subplotObj = fullLayout._plots[subplot]; // filter out overlaid plots (which havd their images on the main plot)\n    // and gl2d plots (which don't support below images, at least not yet)\n\n    if (!subplotObj.imagelayer) continue;\n    var imagesOnSubplot = subplotObj.imagelayer.selectAll('image') // even if there are no images on this subplot, we need to run\n    // enter and exit in case there were previously\n    .data(imageDataSubplot[subplot] || []);\n    imagesOnSubplot.enter().append('image');\n    imagesOnSubplot.exit().remove();\n    imagesOnSubplot.each(function (d) {\n      setImage.bind(this)(d);\n      applyAttributes.bind(this)(d);\n    });\n  }\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/images/draw.js"],"names":["d3","require","Drawing","Axes","xmlnsNamespaces","module","exports","draw","gd","fullLayout","_fullLayout","imageDataAbove","imageDataSubplot","imageDataBelow","subplot","i","images","length","img","visible","layer","xref","yref","plotinfo","_plots","push","mainplot","id","anchors","x","left","sizing","offset","center","right","y","top","middle","bottom","setImage","d","thisImage","select","_imgSrc","source","attr","svg","slice","imagePromise","Promise","resolve","Image","setAttribute","onerror","errorHandler","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","dataURL","toDataURL","on","src","remove","bind","_promises","applyAttributes","xa","getFromId","ya","size","_size","Math","abs","l2p","sizex","w","sizey","h","xOffset","xanchor","yOffset","yanchor","xPos","r2p","_offset","l","yPos","t","preserveAspectRatio","opacity","xId","_id","yId","clipAxes","setClipUrl","_uid","imagesBelow","_imageLowerLayer","selectAll","data","imagesAbove","_imageUpperLayer","enter","append","exit","each","allSubplots","Object","keys","subplotObj","imagelayer","imagesOnSubplot"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,kCAAD,CAA7B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkB;AAC/B,MAAIC,UAAU,GAAGD,EAAE,CAACE,WAApB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,OAAJ;AACA,MAAIC,CAAJ,CAN+B,CAQ/B;;AACA,OAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGN,UAAU,CAACO,MAAX,CAAkBC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C,QAAIG,GAAG,GAAGT,UAAU,CAACO,MAAX,CAAkBD,CAAlB,CAAV;;AAEA,QAAGG,GAAG,CAACC,OAAP,EAAgB;AACZ,UAAGD,GAAG,CAACE,KAAJ,KAAc,OAAd,IAAyBF,GAAG,CAACG,IAAJ,KAAa,OAAtC,IAAiDH,GAAG,CAACI,IAAJ,KAAa,OAAjE,EAA0E;AACtER,QAAAA,OAAO,GAAGI,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACI,IAAzB;AAEA,YAAIC,QAAQ,GAAGd,UAAU,CAACe,MAAX,CAAkBV,OAAlB,CAAf;;AAEA,YAAG,CAACS,QAAJ,EAAc;AACV;AACA;AACA;AACAV,UAAAA,cAAc,CAACY,IAAf,CAAoBP,GAApB;AACA;AACH;;AAED,YAAGK,QAAQ,CAACG,QAAZ,EAAsB;AAClBZ,UAAAA,OAAO,GAAGS,QAAQ,CAACG,QAAT,CAAkBC,EAA5B;AACH;;AAED,YAAG,CAACf,gBAAgB,CAACE,OAAD,CAApB,EAA+B;AAC3BF,UAAAA,gBAAgB,CAACE,OAAD,CAAhB,GAA4B,EAA5B;AACH;;AACDF,QAAAA,gBAAgB,CAACE,OAAD,CAAhB,CAA0BW,IAA1B,CAA+BP,GAA/B;AACH,OArBD,MAqBO,IAAGA,GAAG,CAACE,KAAJ,KAAc,OAAjB,EAA0B;AAC7BT,QAAAA,cAAc,CAACc,IAAf,CAAoBP,GAApB;AACH,OAFM,MAEA;AACHL,QAAAA,cAAc,CAACY,IAAf,CAAoBP,GAApB;AACH;AACJ;AACJ;;AAGD,MAAIU,OAAO,GAAG;AACVC,IAAAA,CAAC,EAAE;AACCC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OADP;AAECC,MAAAA,MAAM,EAAE;AAAEF,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,CAAC,CAAD,GAAK;AAA/B,OAFT;AAGCE,MAAAA,KAAK,EAAE;AAAEH,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,CAAC;AAA3B;AAHR,KADO;AAMVG,IAAAA,CAAC,EAAE;AACCC,MAAAA,GAAG,EAAE;AAAEL,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OADN;AAECK,MAAAA,MAAM,EAAE;AAAEN,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,CAAC,CAAD,GAAK;AAA/B,OAFT;AAGCM,MAAAA,MAAM,EAAE;AAAEP,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,CAAC;AAA3B;AAHT;AANO,GAAd,CA3C+B,CAyD/B;;AACA,WAASO,QAAT,CAAkBC,CAAlB,EAAqB;AACjB,QAAIC,SAAS,GAAGzC,EAAE,CAAC0C,MAAH,CAAU,IAAV,CAAhB;;AAEA,QAAG,KAAKC,OAAL,KAAiBH,CAAC,CAACI,MAAtB,EAA8B;AAC1B;AACH;;AAEDH,IAAAA,SAAS,CAACI,IAAV,CAAe,OAAf,EAAwBzC,eAAe,CAAC0C,GAAxC;;AAEA,QAAGN,CAAC,CAACI,MAAF,IAAYJ,CAAC,CAACI,MAAF,CAASG,KAAT,CAAe,CAAf,EAAkB,CAAlB,MAAyB,OAAxC,EAAiD;AAC7CN,MAAAA,SAAS,CAACI,IAAV,CAAe,YAAf,EAA6BL,CAAC,CAACI,MAA/B;AACA,WAAKD,OAAL,GAAeH,CAAC,CAACI,MAAjB;AACH,KAHD,MAGO;AACH,UAAII,YAAY,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AAC7C,YAAIhC,GAAG,GAAG,IAAIiC,KAAJ,EAAV;AACA,aAAKjC,GAAL,GAAWA,GAAX,CAF6C,CAI7C;;AACAA,QAAAA,GAAG,CAACkC,YAAJ,CAAiB,aAAjB,EAAgC,WAAhC;AACAlC,QAAAA,GAAG,CAACmC,OAAJ,GAAcC,YAAd;;AACApC,QAAAA,GAAG,CAACqC,MAAJ,GAAa,YAAW;AACpB,cAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,UAAAA,MAAM,CAACG,KAAP,GAAe,KAAKA,KAApB;AACAH,UAAAA,MAAM,CAACI,MAAP,GAAgB,KAAKA,MAArB;AAEA,cAAIC,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAV;AACAD,UAAAA,GAAG,CAACE,SAAJ,CAAc,IAAd,EAAoB,CAApB,EAAuB,CAAvB;AAEA,cAAIC,OAAO,GAAGR,MAAM,CAACS,SAAP,CAAiB,WAAjB,CAAd;AAEAxB,UAAAA,SAAS,CAACI,IAAV,CAAe,YAAf,EAA6BmB,OAA7B,EAVoB,CAYpB;AACA;AACA;;AACAd,UAAAA,OAAO;AACV,SAhBD;;AAkBAT,QAAAA,SAAS,CAACyB,EAAV,CAAa,OAAb,EAAsBZ,YAAtB;AAEApC,QAAAA,GAAG,CAACiD,GAAJ,GAAU3B,CAAC,CAACI,MAAZ;AACA,aAAKD,OAAL,GAAeH,CAAC,CAACI,MAAjB;;AAEA,iBAASU,YAAT,GAAwB;AACpBb,UAAAA,SAAS,CAAC2B,MAAV;AACAlB,UAAAA,OAAO;AACV;AACJ,OAlC8B,CAkC7BmB,IAlC6B,CAkCxB,IAlCwB,CAAZ,CAAnB;;AAoCA7D,MAAAA,EAAE,CAAC8D,SAAH,CAAa7C,IAAb,CAAkBuB,YAAlB;AACH;AACJ;;AAED,WAASuB,eAAT,CAAyB/B,CAAzB,EAA4B;AACxB,QAAIC,SAAS,GAAGzC,EAAE,CAAC0C,MAAH,CAAU,IAAV,CAAhB,CADwB,CAGxB;;AACA,QAAI8B,EAAE,GAAGrE,IAAI,CAACsE,SAAL,CAAejE,EAAf,EAAmBgC,CAAC,CAACnB,IAArB,CAAT;AACA,QAAIqD,EAAE,GAAGvE,IAAI,CAACsE,SAAL,CAAejE,EAAf,EAAmBgC,CAAC,CAAClB,IAArB,CAAT;AAEA,QAAIqD,IAAI,GAAGlE,UAAU,CAACmE,KAAtB;AACA,QAAIjB,KAAK,GAAGa,EAAE,GAAGK,IAAI,CAACC,GAAL,CAASN,EAAE,CAACO,GAAH,CAAOvC,CAAC,CAACwC,KAAT,IAAkBR,EAAE,CAACO,GAAH,CAAO,CAAP,CAA3B,CAAH,GAA2CvC,CAAC,CAACwC,KAAF,GAAUL,IAAI,CAACM,CAAxE;AACA,QAAIrB,MAAM,GAAGc,EAAE,GAAGG,IAAI,CAACC,GAAL,CAASJ,EAAE,CAACK,GAAH,CAAOvC,CAAC,CAAC0C,KAAT,IAAkBR,EAAE,CAACK,GAAH,CAAO,CAAP,CAA3B,CAAH,GAA2CvC,CAAC,CAAC0C,KAAF,GAAUP,IAAI,CAACQ,CAAzE,CATwB,CAWxB;;AACA,QAAIC,OAAO,GAAGzB,KAAK,GAAG/B,OAAO,CAACC,CAAR,CAAUW,CAAC,CAAC6C,OAAZ,EAAqBrD,MAA3C;AACA,QAAIsD,OAAO,GAAG1B,MAAM,GAAGhC,OAAO,CAACO,CAAR,CAAUK,CAAC,CAAC+C,OAAZ,EAAqBvD,MAA5C;AAEA,QAAID,MAAM,GAAGH,OAAO,CAACC,CAAR,CAAUW,CAAC,CAAC6C,OAAZ,EAAqBtD,MAArB,GAA8BH,OAAO,CAACO,CAAR,CAAUK,CAAC,CAAC+C,OAAZ,EAAqBxD,MAAhE,CAfwB,CAiBxB;;AACA,QAAIyD,IAAI,GAAG,CAAChB,EAAE,GAAGA,EAAE,CAACiB,GAAH,CAAOjD,CAAC,CAACX,CAAT,IAAc2C,EAAE,CAACkB,OAApB,GAA8BlD,CAAC,CAACX,CAAF,GAAM8C,IAAI,CAACM,CAAX,GAAeN,IAAI,CAACgB,CAArD,IAA0DP,OAArE;AACA,QAAIQ,IAAI,GAAG,CAAClB,EAAE,GAAGA,EAAE,CAACe,GAAH,CAAOjD,CAAC,CAACL,CAAT,IAAcuC,EAAE,CAACgB,OAApB,GAA8Bf,IAAI,CAACQ,CAAL,GAAS3C,CAAC,CAACL,CAAF,GAAMwC,IAAI,CAACQ,CAApB,GAAwBR,IAAI,CAACkB,CAA9D,IAAmEP,OAA9E,CAnBwB,CAqBxB;;AACA,YAAO9C,CAAC,CAACT,MAAT;AACI,WAAK,MAAL;AACIA,QAAAA,MAAM,IAAI,QAAV;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,MAAM,GAAG,MAAT;AACA;AAPR;;AAUAU,IAAAA,SAAS,CAACI,IAAV,CAAe;AACXhB,MAAAA,CAAC,EAAE2D,IADQ;AAEXrD,MAAAA,CAAC,EAAEyD,IAFQ;AAGXjC,MAAAA,KAAK,EAAEA,KAHI;AAIXC,MAAAA,MAAM,EAAEA,MAJG;AAKXkC,MAAAA,mBAAmB,EAAE/D,MALV;AAMXgE,MAAAA,OAAO,EAAEvD,CAAC,CAACuD;AANA,KAAf,EAhCwB,CA0CxB;;AACA,QAAIC,GAAG,GAAGxB,EAAE,GAAGA,EAAE,CAACyB,GAAN,GAAY,EAAxB;AACA,QAAIC,GAAG,GAAGxB,EAAE,GAAGA,EAAE,CAACuB,GAAN,GAAY,EAAxB;AACA,QAAIE,QAAQ,GAAGH,GAAG,GAAGE,GAArB;AAEAhG,IAAAA,OAAO,CAACkG,UAAR,CACI3D,SADJ,EAEI0D,QAAQ,GAAI,SAAS1F,UAAU,CAAC4F,IAApB,GAA2BF,QAA/B,GAA2C,IAFvD,EAGI3F,EAHJ;AAKH;;AAED,MAAI8F,WAAW,GAAG7F,UAAU,CAAC8F,gBAAX,CAA4BC,SAA5B,CAAsC,OAAtC,EACbC,IADa,CACR5F,cADQ,CAAlB;;AAEA,MAAI6F,WAAW,GAAGjG,UAAU,CAACkG,gBAAX,CAA4BH,SAA5B,CAAsC,OAAtC,EACbC,IADa,CACR9F,cADQ,CAAlB;;AAGA2F,EAAAA,WAAW,CAACM,KAAZ,GAAoBC,MAApB,CAA2B,OAA3B;AACAH,EAAAA,WAAW,CAACE,KAAZ,GAAoBC,MAApB,CAA2B,OAA3B;AAEAP,EAAAA,WAAW,CAACQ,IAAZ,GAAmB1C,MAAnB;AACAsC,EAAAA,WAAW,CAACI,IAAZ,GAAmB1C,MAAnB;AAEAkC,EAAAA,WAAW,CAACS,IAAZ,CAAiB,UAASvE,CAAT,EAAY;AACzBD,IAAAA,QAAQ,CAAC8B,IAAT,CAAc,IAAd,EAAoB7B,CAApB;AACA+B,IAAAA,eAAe,CAACF,IAAhB,CAAqB,IAArB,EAA2B7B,CAA3B;AACH,GAHD;AAIAkE,EAAAA,WAAW,CAACK,IAAZ,CAAiB,UAASvE,CAAT,EAAY;AACzBD,IAAAA,QAAQ,CAAC8B,IAAT,CAAc,IAAd,EAAoB7B,CAApB;AACA+B,IAAAA,eAAe,CAACF,IAAhB,CAAqB,IAArB,EAA2B7B,CAA3B;AACH,GAHD;AAKA,MAAIwE,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYzG,UAAU,CAACe,MAAvB,CAAlB;;AACA,OAAIT,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGiG,WAAW,CAAC/F,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACpCD,IAAAA,OAAO,GAAGkG,WAAW,CAACjG,CAAD,CAArB;AACA,QAAIoG,UAAU,GAAG1G,UAAU,CAACe,MAAX,CAAkBV,OAAlB,CAAjB,CAFoC,CAIpC;AACA;;AACA,QAAG,CAACqG,UAAU,CAACC,UAAf,EAA2B;AAE3B,QAAIC,eAAe,GAAGF,UAAU,CAACC,UAAX,CAAsBZ,SAAtB,CAAgC,OAAhC,EAClB;AACA;AAFkB,KAGjBC,IAHiB,CAGZ7F,gBAAgB,CAACE,OAAD,CAAhB,IAA6B,EAHjB,CAAtB;AAKAuG,IAAAA,eAAe,CAACT,KAAhB,GAAwBC,MAAxB,CAA+B,OAA/B;AACAQ,IAAAA,eAAe,CAACP,IAAhB,GAAuB1C,MAAvB;AAEAiD,IAAAA,eAAe,CAACN,IAAhB,CAAqB,UAASvE,CAAT,EAAY;AAC7BD,MAAAA,QAAQ,CAAC8B,IAAT,CAAc,IAAd,EAAoB7B,CAApB;AACA+B,MAAAA,eAAe,CAACF,IAAhB,CAAqB,IAArB,EAA2B7B,CAA3B;AACH,KAHD;AAIH;AACJ,CA/MD","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var imageDataAbove = [];\n    var imageDataSubplot = {};\n    var imageDataBelow = [];\n    var subplot;\n    var i;\n\n    // Sort into top, subplot, and bottom layers\n    for(i = 0; i < fullLayout.images.length; i++) {\n        var img = fullLayout.images[i];\n\n        if(img.visible) {\n            if(img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n                subplot = img.xref + img.yref;\n\n                var plotinfo = fullLayout._plots[subplot];\n\n                if(!plotinfo) {\n                    // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n                    // This can happen if you reference the image to an x / y axis combination\n                    // that doesn't have any data on it (and layer is below)\n                    imageDataBelow.push(img);\n                    continue;\n                }\n\n                if(plotinfo.mainplot) {\n                    subplot = plotinfo.mainplot.id;\n                }\n\n                if(!imageDataSubplot[subplot]) {\n                    imageDataSubplot[subplot] = [];\n                }\n                imageDataSubplot[subplot].push(img);\n            } else if(img.layer === 'above') {\n                imageDataAbove.push(img);\n            } else {\n                imageDataBelow.push(img);\n            }\n        }\n    }\n\n\n    var anchors = {\n        x: {\n            left: { sizing: 'xMin', offset: 0 },\n            center: { sizing: 'xMid', offset: -1 / 2 },\n            right: { sizing: 'xMax', offset: -1 }\n        },\n        y: {\n            top: { sizing: 'YMin', offset: 0 },\n            middle: { sizing: 'YMid', offset: -1 / 2 },\n            bottom: { sizing: 'YMax', offset: -1 }\n        }\n    };\n\n\n    // Images must be converted to dataURL's for exporting.\n    function setImage(d) {\n        var thisImage = d3.select(this);\n\n        if(this._imgSrc === d.source) {\n            return;\n        }\n\n        thisImage.attr('xmlns', xmlnsNamespaces.svg);\n\n        if(d.source && d.source.slice(0, 5) === 'data:') {\n            thisImage.attr('xlink:href', d.source);\n            this._imgSrc = d.source;\n        } else {\n            var imagePromise = new Promise(function(resolve) {\n                var img = new Image();\n                this.img = img;\n\n                // If not set, a `tainted canvas` error is thrown\n                img.setAttribute('crossOrigin', 'anonymous');\n                img.onerror = errorHandler;\n                img.onload = function() {\n                    var canvas = document.createElement('canvas');\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n\n                    var ctx = canvas.getContext('2d');\n                    ctx.drawImage(this, 0, 0);\n\n                    var dataURL = canvas.toDataURL('image/png');\n\n                    thisImage.attr('xlink:href', dataURL);\n\n                    // resolve promise in onload handler instead of on 'load' to support IE11\n                    // see https://github.com/plotly/plotly.js/issues/1685\n                    // for more details\n                    resolve();\n                };\n\n                thisImage.on('error', errorHandler);\n\n                img.src = d.source;\n                this._imgSrc = d.source;\n\n                function errorHandler() {\n                    thisImage.remove();\n                    resolve();\n                }\n            }.bind(this));\n\n            gd._promises.push(imagePromise);\n        }\n    }\n\n    function applyAttributes(d) {\n        var thisImage = d3.select(this);\n\n        // Axes if specified\n        var xa = Axes.getFromId(gd, d.xref);\n        var ya = Axes.getFromId(gd, d.yref);\n\n        var size = fullLayout._size;\n        var width = xa ? Math.abs(xa.l2p(d.sizex) - xa.l2p(0)) : d.sizex * size.w;\n        var height = ya ? Math.abs(ya.l2p(d.sizey) - ya.l2p(0)) : d.sizey * size.h;\n\n        // Offsets for anchor positioning\n        var xOffset = width * anchors.x[d.xanchor].offset;\n        var yOffset = height * anchors.y[d.yanchor].offset;\n\n        var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n        // Final positions\n        var xPos = (xa ? xa.r2p(d.x) + xa._offset : d.x * size.w + size.l) + xOffset;\n        var yPos = (ya ? ya.r2p(d.y) + ya._offset : size.h - d.y * size.h + size.t) + yOffset;\n\n        // Construct the proper aspectRatio attribute\n        switch(d.sizing) {\n            case 'fill':\n                sizing += ' slice';\n                break;\n\n            case 'stretch':\n                sizing = 'none';\n                break;\n        }\n\n        thisImage.attr({\n            x: xPos,\n            y: yPos,\n            width: width,\n            height: height,\n            preserveAspectRatio: sizing,\n            opacity: d.opacity\n        });\n\n\n        // Set proper clipping on images\n        var xId = xa ? xa._id : '';\n        var yId = ya ? ya._id : '';\n        var clipAxes = xId + yId;\n\n        Drawing.setClipUrl(\n            thisImage,\n            clipAxes ? ('clip' + fullLayout._uid + clipAxes) : null,\n            gd\n        );\n    }\n\n    var imagesBelow = fullLayout._imageLowerLayer.selectAll('image')\n        .data(imageDataBelow);\n    var imagesAbove = fullLayout._imageUpperLayer.selectAll('image')\n        .data(imageDataAbove);\n\n    imagesBelow.enter().append('image');\n    imagesAbove.enter().append('image');\n\n    imagesBelow.exit().remove();\n    imagesAbove.exit().remove();\n\n    imagesBelow.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n    imagesAbove.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n\n    var allSubplots = Object.keys(fullLayout._plots);\n    for(i = 0; i < allSubplots.length; i++) {\n        subplot = allSubplots[i];\n        var subplotObj = fullLayout._plots[subplot];\n\n        // filter out overlaid plots (which havd their images on the main plot)\n        // and gl2d plots (which don't support below images, at least not yet)\n        if(!subplotObj.imagelayer) continue;\n\n        var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n            // even if there are no images on this subplot, we need to run\n            // enter and exit in case there were previously\n            .data(imageDataSubplot[subplot] || []);\n\n        imagesOnSubplot.enter().append('image');\n        imagesOnSubplot.exit().remove();\n\n        imagesOnSubplot.each(function(d) {\n            setImage.bind(this)(d);\n            applyAttributes.bind(this)(d);\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}
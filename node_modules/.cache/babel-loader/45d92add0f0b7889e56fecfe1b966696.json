{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\n\nfunction setGuideLine(chart, item) {\n  if (item.quickType === 'parallel') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: ['min', data],\n      end: ['max', data]\n    }, item));\n  } else if (item.quickType === 'normal') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: [data, 'min'],\n      end: [data, 'max']\n    }, item));\n  } else {\n    chart.guide().line(item);\n  }\n}\n\nfunction setGuideArc(chart, item) {\n  if (item.quickType === 'parallel') {\n    var data = item.data;\n    chart.guide().arc(__assign({\n      start: ['min', data],\n      end: ['max', data]\n    }, item));\n    chart.guide().arc(__assign({\n      start: ['max', data],\n      end: ['min', data]\n    }, item));\n  } else if (item.quickType === 'normal') {\n    var data = item.data;\n    chart.guide().line(__assign({\n      start: [data, 'min'],\n      end: [data, 'max']\n    }, item));\n  } else {\n    chart.guide().arc(item);\n  }\n}\n\nexport var process = function process(chart, config) {\n  var cGuide = _.cloneDeep(config.guide);\n\n  var isArr = Array.isArray(cGuide);\n\n  if (_.isNil(cGuide) || _.isEmpty(cGuide)) {\n    return;\n  }\n\n  var arrGuide = isArr ? cGuide : [cGuide];\n  arrGuide.forEach(function (res) {\n    EventUtils.setEvent(chart, \"guide-\" + res.type, res);\n\n    if (res.type === 'line') {\n      setGuideLine(chart, res);\n    } else if (res.type === 'region') {\n      chart.guide().region(res);\n    } else if (res.type === 'arc') {\n      setGuideArc(chart, res);\n    } else if (res.type === 'text') {\n      chart.guide().text(res);\n    } else if (res.type === 'image') {\n      chart.guide().image(res);\n    } else if (res.type === 'html') {\n      chart.guide().html(res);\n    } else if (res.type === 'dataMarker') {\n      chart.guide().dataMarker(res);\n    } else if (res.type === 'regionFilter') {\n      chart.guide().regionFilter(res);\n    } else if (res.type === 'dataRegion') {\n      chart.guide().dataRegion(res);\n    }\n  });\n  return chart;\n};","map":{"version":3,"sources":["../../src/components/setGuideConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nfunction setGuideLine(chart, item) {\n    if (item.quickType === 'parallel') {\n        var data = item.data;\n        chart.guide().line(__assign({ start: ['min', data], end: ['max', data] }, item));\n    }\n    else if (item.quickType === 'normal') {\n        var data = item.data;\n        chart.guide().line(__assign({ start: [data, 'min'], end: [data, 'max'] }, item));\n    }\n    else {\n        chart.guide().line(item);\n    }\n}\nfunction setGuideArc(chart, item) {\n    if (item.quickType === 'parallel') {\n        var data = item.data;\n        chart.guide().arc(__assign({ start: ['min', data], end: ['max', data] }, item));\n        chart.guide().arc(__assign({ start: ['max', data], end: ['min', data] }, item));\n    }\n    else if (item.quickType === 'normal') {\n        var data = item.data;\n        chart.guide().line(__assign({ start: [data, 'min'], end: [data, 'max'] }, item));\n    }\n    else {\n        chart.guide().arc(item);\n    }\n}\nexport var process = function (chart, config) {\n    var cGuide = _.cloneDeep(config.guide);\n    var isArr = Array.isArray(cGuide);\n    if (_.isNil(cGuide) || _.isEmpty(cGuide)) {\n        return;\n    }\n    var arrGuide = isArr ? cGuide : [cGuide];\n    arrGuide.forEach(function (res) {\n        EventUtils.setEvent(chart, \"guide-\" + res.type, res);\n        if (res.type === 'line') {\n            setGuideLine(chart, res);\n        }\n        else if (res.type === 'region') {\n            chart.guide().region(res);\n        }\n        else if (res.type === 'arc') {\n            setGuideArc(chart, res);\n        }\n        else if (res.type === 'text') {\n            chart.guide().text(res);\n        }\n        else if (res.type === 'image') {\n            chart.guide().image(res);\n        }\n        else if (res.type === 'html') {\n            chart.guide().html(res);\n        }\n        else if (res.type === 'dataMarker') {\n            chart.guide().dataMarker(res);\n        }\n        else if (res.type === 'regionFilter') {\n            chart.guide().regionFilter(res);\n        }\n        else if (res.type === 'dataRegion') {\n            chart.guide().dataRegion(res);\n        }\n    });\n    return chart;\n};\n//# sourceMappingURL=setGuideConfig.js.map"]},"metadata":{},"sourceType":"module"}
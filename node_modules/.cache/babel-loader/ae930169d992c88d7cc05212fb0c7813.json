{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport Parent from \"./React\";\nimport SimpleStorage from \"react-simple-storage\";\nimport { Test } from \"../Test\";\n\nconst DataSet = require(\"@antv/data-set\");\n\n{\n  /*\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:'tes1234t'\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Parent Component </h1>\n      <p>data coming from child<b>: {this.state.fromChild} </b></p>\n     <Test update={this.update}  data={this.state.x}/>\n    </div>\n  );\n  }\n  }\n  export default Child2;\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:{id: 1, name: 'Ford', color: 'mokka raveendra'}\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n   return (\n    <div className=\"App\">\n      <header>\n  <nav>\n    <ul>\n       <Button><Link to='/test-react'>Roster</Link></Button>\n      <Link to={{ pathname: '/test-react', data:this.state.x }}> Your Page </Link>\n     </ul>\n  </nav>\n  </header>\n    </div>\n  );\n  }\n  }\n  */\n}\n\nclass ParentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"// include the component somewhere in the parent to save the parent's state in web storage\", React.createElement(SimpleStorage, {\n      parent: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \"// the value of this input will be saved in web storage\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.text,\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ParentComponent;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Icon","Progress","Parent","SimpleStorage","Test","DataSet","require","ParentComponent","constructor","props","state","text","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAsD,MAAtD;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,IAAT,QAAsB,SAAtB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAMG;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEE;;AACN,MAAMC,eAAN,SAA8Bf,SAA9B,CAAwC;AACtCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAGE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,6DAME;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAFpB;AAGE,MAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAeD;;AAxBqC;;AA0BxC,eAAeT,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress} from \"antd\";\n\nimport Parent from \"./React\";\nimport SimpleStorage from \"react-simple-storage\";\nimport { Test } from  \"../Test\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n\n   {/*\n   class Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:'tes1234t'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Parent Component </h1>\n        <p>data coming from child<b>: {this.state.fromChild} </b></p>\n       <Test update={this.update}  data={this.state.x}/>\n      </div>\n    );\n  }\n}\n\nexport default Child2;\n\n\n\nclass Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:{id: 1, name: 'Ford', color: 'mokka raveendra'}\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header>\n    <nav>\n      <ul>\n\n        <Button><Link to='/test-react'>Roster</Link></Button>\n        <Link to={{ pathname: '/test-react', data:this.state.x }}> Your Page </Link>\n\n      </ul>\n    </nav>\n  </header>\n      </div>\n    );\n  }\n}\n   */}\nclass ParentComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: \"\",\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        // include the component somewhere in the parent to save the parent's state in web storage\n        <SimpleStorage parent={this} />\n\n        // the value of this input will be saved in web storage\n        <input\n          type=\"text\"\n          value={this.state.text}\n          onChange={e => this.setState({ text: e.target.value })}\n        />\n\n      </div>\n    ) \n  }\n}\nexport default ParentComponent;\n\n\n"]},"metadata":{},"sourceType":"module"}
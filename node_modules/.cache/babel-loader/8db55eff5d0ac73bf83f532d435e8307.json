{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as _ from 'lodash';\nimport { degreeToRadian } from '../utils/PolarUtils';\n\nfunction setPolarCoord(chart, coord) {\n  var newCoord = {};\n\n  if (coord.radius && (coord.radius < 0 || coord.radius > 1) || coord.innerRadius && (coord.innerRadius < 0 || coord.innerRadius > 1)) {\n    throw new Error('please set correct radius or innerRadius');\n  }\n\n  if (coord.radius) {\n    newCoord = __assign({}, newCoord, {\n      radius: coord.radius\n    });\n  }\n\n  if (coord.innerRadius) {\n    newCoord = __assign({}, newCoord, {\n      innerRadius: coord.innerRadius\n    });\n  }\n\n  if (coord.startAngle || coord.endAngle) {\n    if (coord.startAngle && (coord.startAngle < -360 || coord.startAngle > 360)) {\n      throw new Error('please set correct starAngle');\n    } else {\n      newCoord = __assign({}, newCoord, {\n        startAngle: degreeToRadian(coord.startAngle)\n      });\n    }\n\n    if (coord.endAngle && (coord.endAngle < -360 || coord.endAngle > 360)) {\n      throw new Error('please set correct endAngle');\n    } else {\n      newCoord = __assign({}, newCoord, {\n        endAngle: degreeToRadian(coord.endAngle)\n      });\n    }\n  }\n\n  var polarCoord = chart.coord(coord.type, __assign({}, newCoord));\n\n  switch (coord.direction) {\n    case 'rotate':\n      polarCoord.transpose();\n      break;\n\n    case 'xReverse':\n      polarCoord.reflect('x');\n      break;\n\n    case 'yReverse':\n      polarCoord.reflect('y');\n      break;\n\n    case 'reverse':\n      polarCoord.reflect();\n      break;\n\n    default:\n      break;\n  }\n\n  if (coord.rotate) {\n    polarCoord.rotate(coord.rotate);\n  }\n\n  return polarCoord;\n}\n\nfunction setRectCoord(chart, coord) {\n  if (!coord.direction) {\n    return chart.coord('rect');\n  }\n\n  switch (coord.direction) {\n    case 'BL':\n      chart.coord('rect');\n      break;\n\n    case 'BR':\n      chart.coord('rect').scale(-1, 1);\n      break;\n\n    case 'LT':\n      chart.coord('rect').transpose().scale(1, -1);\n      break;\n\n    case 'LB':\n      chart.coord('rect').transpose();\n      break;\n\n    case 'RB':\n      chart.coord('rect').transpose().reflect();\n      break;\n\n    case 'RT':\n      chart.coord('rect').transpose().reflect().scale(-1, 1);\n      break;\n\n    case 'TL':\n      chart.coord('rect').reflect();\n      break;\n\n    case 'TR':\n      chart.coord('rect').reflect().scale(-1, 1);\n      break;\n\n    default:\n      chart.coord('rect');\n      break;\n  }\n\n  return chart;\n}\n\nexport var process = function (chart, config) {\n  var cCoord = _.cloneDeep(config.coord);\n\n  if (!cCoord || !cCoord.type) {\n    return chart.coord('rect');\n  }\n\n  var type = cCoord.type;\n\n  if (type === 'polar' || type === 'theta' || type === 'helix') {\n    return setPolarCoord(chart, cCoord);\n  }\n\n  if (type === 'rect') {\n    return setRectCoord(chart, cCoord);\n  }\n\n  return chart.coord(type);\n};","map":{"version":3,"sources":["../../src/components/setCoordConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as _ from 'lodash';\nimport { degreeToRadian } from '../utils/PolarUtils';\nfunction setPolarCoord(chart, coord) {\n    var newCoord = {};\n    if (coord.radius && (coord.radius < 0 || coord.radius > 1) ||\n        coord.innerRadius && (coord.innerRadius < 0 || coord.innerRadius > 1)) {\n        throw new Error('please set correct radius or innerRadius');\n    }\n    if (coord.radius) {\n        newCoord = __assign({}, newCoord, { radius: coord.radius });\n    }\n    if (coord.innerRadius) {\n        newCoord = __assign({}, newCoord, { innerRadius: coord.innerRadius });\n    }\n    if (coord.startAngle || coord.endAngle) {\n        if (coord.startAngle && (coord.startAngle < -360 || coord.startAngle > 360)) {\n            throw new Error('please set correct starAngle');\n        }\n        else {\n            newCoord = __assign({}, newCoord, { startAngle: degreeToRadian(coord.startAngle) });\n        }\n        if (coord.endAngle && (coord.endAngle < -360 || coord.endAngle > 360)) {\n            throw new Error('please set correct endAngle');\n        }\n        else {\n            newCoord = __assign({}, newCoord, { endAngle: degreeToRadian(coord.endAngle) });\n        }\n    }\n    var polarCoord = chart.coord(coord.type, __assign({}, newCoord));\n    switch (coord.direction) {\n        case 'rotate':\n            polarCoord.transpose();\n            break;\n        case 'xReverse':\n            polarCoord.reflect('x');\n            break;\n        case 'yReverse':\n            polarCoord.reflect('y');\n            break;\n        case 'reverse':\n            polarCoord.reflect();\n            break;\n        default:\n            break;\n    }\n    if (coord.rotate) {\n        polarCoord.rotate(coord.rotate);\n    }\n    return polarCoord;\n}\nfunction setRectCoord(chart, coord) {\n    if (!coord.direction) {\n        return chart.coord('rect');\n    }\n    switch (coord.direction) {\n        case 'BL':\n            chart.coord('rect');\n            break;\n        case 'BR':\n            chart.coord('rect').scale(-1, 1);\n            break;\n        case 'LT':\n            chart.coord('rect').transpose().scale(1, -1);\n            break;\n        case 'LB':\n            chart.coord('rect').transpose();\n            break;\n        case 'RB':\n            chart.coord('rect').transpose().reflect();\n            break;\n        case 'RT':\n            chart.coord('rect').transpose().reflect().scale(-1, 1);\n            break;\n        case 'TL':\n            chart.coord('rect').reflect();\n            break;\n        case 'TR':\n            chart.coord('rect').reflect().scale(-1, 1);\n            break;\n        default:\n            chart.coord('rect');\n            break;\n    }\n    return chart;\n}\nexport var process = function (chart, config) {\n    var cCoord = _.cloneDeep(config.coord);\n    if (!cCoord || !cCoord.type) {\n        return chart.coord('rect');\n    }\n    var type = cCoord.type;\n    if (type === 'polar' || type === 'theta' || type === 'helix') {\n        return setPolarCoord(chart, cCoord);\n    }\n    if (type === 'rect') {\n        return setRectCoord(chart, cCoord);\n    }\n    return chart.coord(type);\n};\n//# sourceMappingURL=setCoordConfig.js.map"]},"metadata":{},"sourceType":"module"}
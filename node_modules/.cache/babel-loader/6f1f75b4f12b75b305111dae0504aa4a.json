{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar Fx = require('../../components/fx');\n\nvar Plots = require('../plots');\n\nvar Axes = require('../cartesian/axes');\n\nvar dragElement = require('../../components/dragelement');\n\nvar prepSelect = require('../cartesian/select').prepSelect;\n\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\n\nvar constants = require('./constants');\n\nvar topojsonUtils = require('../../lib/topojson_utils');\n\nvar topojsonFeature = require('topojson-client').feature;\n\nrequire('./projections')(d3);\n\nfunction Geo(opts) {\n  this.id = opts.id;\n  this.graphDiv = opts.graphDiv;\n  this.container = opts.container;\n  this.topojsonURL = opts.topojsonURL;\n  this.isStatic = opts.staticPlot;\n  this.topojsonName = null;\n  this.topojson = null;\n  this.projection = null;\n  this.scope = null;\n  this.viewInitial = null;\n  this.fitScale = null;\n  this.bounds = null;\n  this.midPt = null;\n  this.hasChoropleth = false;\n  this.traceHash = {};\n  this.layers = {};\n  this.basePaths = {};\n  this.dataPaths = {};\n  this.dataPoints = {};\n  this.clipDef = null;\n  this.clipRect = null;\n  this.bgRect = null;\n  this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n  return new Geo(opts);\n};\n\nproto.plot = function (geoCalcData, fullLayout, promises) {\n  var _this = this;\n\n  var geoLayout = fullLayout[this.id];\n  var needsTopojson = false;\n\n  for (var k in constants.layerNameToAdjective) {\n    if (k !== 'frame' && geoLayout['show' + k]) {\n      needsTopojson = true;\n      break;\n    }\n  }\n\n  for (var i = 0; i < geoCalcData.length; i++) {\n    if (geoCalcData[0][0].trace.locationmode) {\n      needsTopojson = true;\n      break;\n    }\n  }\n\n  if (!needsTopojson) {\n    return _this.update(geoCalcData, fullLayout);\n  }\n\n  var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n\n  if (_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n    _this.topojsonName = topojsonNameNew;\n\n    if (PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n      promises.push(_this.fetchTopojson().then(function (topojson) {\n        PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n        _this.topojson = topojson;\n\n        _this.update(geoCalcData, fullLayout);\n      }));\n    } else {\n      _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n\n      _this.update(geoCalcData, fullLayout);\n    }\n  } else {\n    _this.update(geoCalcData, fullLayout);\n  }\n};\n\nproto.fetchTopojson = function () {\n  var topojsonPath = topojsonUtils.getTopojsonPath(this.topojsonURL, this.topojsonName);\n  return new Promise(function (resolve, reject) {\n    d3.json(topojsonPath, function (err, topojson) {\n      if (err) {\n        if (err.status === 404) {\n          return reject(new Error(['plotly.js could not find topojson file at', topojsonPath, '.', 'Make sure the *topojsonURL* plot config option', 'is set properly.'].join(' ')));\n        } else {\n          return reject(new Error(['unexpected error while fetching topojson file at', topojsonPath].join(' ')));\n        }\n      }\n\n      resolve(topojson);\n    });\n  });\n};\n\nproto.update = function (geoCalcData, fullLayout) {\n  var geoLayout = fullLayout[this.id];\n  var hasInvalidBounds = this.updateProjection(fullLayout, geoLayout);\n  if (hasInvalidBounds) return; // important: maps with choropleth traces have a different layer order\n\n  this.hasChoropleth = false;\n\n  for (var i = 0; i < geoCalcData.length; i++) {\n    if (geoCalcData[i][0].trace.type === 'choropleth') {\n      this.hasChoropleth = true;\n      break;\n    }\n  }\n\n  if (!this.viewInitial || this.scope !== geoLayout.scope) {\n    this.saveViewInitial(geoLayout);\n  }\n\n  this.scope = geoLayout.scope;\n  this.updateBaseLayers(fullLayout, geoLayout);\n  this.updateDims(fullLayout, geoLayout);\n  this.updateFx(fullLayout, geoLayout);\n  Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n  var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n  this.dataPoints.point = scatterLayer.selectAll('.point');\n  this.dataPoints.text = scatterLayer.selectAll('text');\n  this.dataPaths.line = scatterLayer.selectAll('.js-line');\n  var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n  this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n  this.render();\n};\n\nproto.updateProjection = function (fullLayout, geoLayout) {\n  var gs = fullLayout._size;\n  var domain = geoLayout.domain;\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n  var center = geoLayout.center || {};\n  var projection = this.projection = getProjection(geoLayout); // set 'pre-fit' projection\n\n  projection.center([center.lon - rotation.lon, center.lat - rotation.lat]).rotate([-rotation.lon, -rotation.lat, rotation.roll]).parallels(projLayout.parallels); // setup subplot extent [[x0,y0], [x1,y1]]\n\n  var extent = [[gs.l + gs.w * domain.x[0], gs.t + gs.h * (1 - domain.y[1])], [gs.l + gs.w * domain.x[1], gs.t + gs.h * (1 - domain.y[0])]];\n  var lonaxis = geoLayout.lonaxis;\n  var lataxis = geoLayout.lataxis;\n  var rangeBox = makeRangeBox(lonaxis.range, lataxis.range); // fit projection 'scale' and 'translate' to set lon/lat ranges\n\n  projection.fitExtent(extent, rangeBox);\n  var b = this.bounds = projection.getBounds(rangeBox);\n  var s = this.fitScale = projection.scale();\n  var t = projection.translate();\n\n  if (!isFinite(b[0][0]) || !isFinite(b[0][1]) || !isFinite(b[1][0]) || !isFinite(b[1][1]) || isNaN(t[0]) || isNaN(t[0])) {\n    var gd = this.graphDiv;\n    var attrToUnset = ['projection.rotation', 'center', 'lonaxis.range', 'lataxis.range'];\n    var msg = 'Invalid geo settings, relayout\\'ing to default view.';\n    var updateObj = {}; // clear all attribute that could cause invalid bounds,\n    // clear viewInitial to update reset-view behavior\n\n    for (var i = 0; i < attrToUnset.length; i++) {\n      updateObj[this.id + '.' + attrToUnset[i]] = null;\n    }\n\n    this.viewInitial = null;\n    Lib.warn(msg);\n\n    gd._promises.push(Registry.call('relayout', gd, updateObj));\n\n    return msg;\n  } // px coordinates of view mid-point,\n  // useful to update `geo.center` after interactions\n\n\n  var midPt = this.midPt = [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2]; // adjust projection to user setting\n\n  projection.scale(projLayout.scale * s).translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])]).clipExtent(b); // the 'albers usa' projection does not expose a 'center' method\n  // so here's this hack to make it respond to 'geoLayout.center'\n\n  if (geoLayout._isAlbersUsa) {\n    var centerPx = projection([center.lon, center.lat]);\n    var tt = projection.translate();\n    projection.translate([tt[0] - (centerPx[0] - tt[0]), tt[1] - (centerPx[1] - tt[1])]);\n  }\n};\n\nproto.updateBaseLayers = function (fullLayout, geoLayout) {\n  var _this = this;\n\n  var topojson = _this.topojson;\n  var layers = _this.layers;\n  var basePaths = _this.basePaths;\n\n  function isAxisLayer(d) {\n    return d === 'lonaxis' || d === 'lataxis';\n  }\n\n  function isLineLayer(d) {\n    return Boolean(constants.lineLayers[d]);\n  }\n\n  function isFillLayer(d) {\n    return Boolean(constants.fillLayers[d]);\n  }\n\n  var allLayers = this.hasChoropleth ? constants.layersForChoropleth : constants.layers;\n  var layerData = allLayers.filter(function (d) {\n    return isLineLayer(d) || isFillLayer(d) ? geoLayout['show' + d] : isAxisLayer(d) ? geoLayout[d].showgrid : true;\n  });\n\n  var join = _this.framework.selectAll('.layer').data(layerData, String);\n\n  join.exit().each(function (d) {\n    delete layers[d];\n    delete basePaths[d];\n    d3.select(this).remove();\n  });\n  join.enter().append('g').attr('class', function (d) {\n    return 'layer ' + d;\n  }).each(function (d) {\n    var layer = layers[d] = d3.select(this);\n\n    if (d === 'bg') {\n      _this.bgRect = layer.append('rect').style('pointer-events', 'all');\n    } else if (isAxisLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none');\n    } else if (d === 'backplot') {\n      layer.append('g').classed('choroplethlayer', true);\n    } else if (d === 'frontplot') {\n      layer.append('g').classed('scatterlayer', true);\n    } else if (isLineLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none').style('stroke-miterlimit', 2);\n    } else if (isFillLayer(d)) {\n      basePaths[d] = layer.append('path').style('stroke', 'none');\n    }\n  });\n  join.order();\n  join.each(function (d) {\n    var path = basePaths[d];\n    var adj = constants.layerNameToAdjective[d];\n\n    if (d === 'frame') {\n      path.datum(constants.sphereSVG);\n    } else if (isLineLayer(d) || isFillLayer(d)) {\n      path.datum(topojsonFeature(topojson, topojson.objects[d]));\n    } else if (isAxisLayer(d)) {\n      path.datum(makeGraticule(d, geoLayout, fullLayout)).call(Color.stroke, geoLayout[d].gridcolor).call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n    }\n\n    if (isLineLayer(d)) {\n      path.call(Color.stroke, geoLayout[adj + 'color']).call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n    } else if (isFillLayer(d)) {\n      path.call(Color.fill, geoLayout[adj + 'color']);\n    }\n  });\n};\n\nproto.updateDims = function (fullLayout, geoLayout) {\n  var b = this.bounds;\n  var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n  var l = b[0][0] - hFrameWidth;\n  var t = b[0][1] - hFrameWidth;\n  var w = b[1][0] - l + hFrameWidth;\n  var h = b[1][1] - t + hFrameWidth;\n  Drawing.setRect(this.clipRect, l, t, w, h);\n  this.bgRect.call(Drawing.setRect, l, t, w, h).call(Color.fill, geoLayout.bgcolor);\n  this.xaxis._offset = l;\n  this.xaxis._length = w;\n  this.yaxis._offset = t;\n  this.yaxis._length = h;\n};\n\nproto.updateFx = function (fullLayout, geoLayout) {\n  var _this = this;\n\n  var gd = _this.graphDiv;\n  var bgRect = _this.bgRect;\n  var dragMode = fullLayout.dragmode;\n  var clickMode = fullLayout.clickmode;\n  if (_this.isStatic) return;\n\n  function zoomReset() {\n    var viewInitial = _this.viewInitial;\n    var updateObj = {};\n\n    for (var k in viewInitial) {\n      updateObj[_this.id + '.' + k] = viewInitial[k];\n    }\n\n    Registry.call('_guiRelayout', gd, updateObj);\n    gd.emit('plotly_doubleclick', null);\n  }\n\n  function invert(lonlat) {\n    return _this.projection.invert([lonlat[0] + _this.xaxis._offset, lonlat[1] + _this.yaxis._offset]);\n  }\n\n  var fillRangeItems;\n\n  if (dragMode === 'select') {\n    fillRangeItems = function (eventData, poly) {\n      var ranges = eventData.range = {};\n      ranges[_this.id] = [invert([poly.xmin, poly.ymin]), invert([poly.xmax, poly.ymax])];\n    };\n  } else if (dragMode === 'lasso') {\n    fillRangeItems = function (eventData, poly, pts) {\n      var dataPts = eventData.lassoPoints = {};\n      dataPts[_this.id] = pts.filtered.map(invert);\n    };\n  } // Note: dragOptions is needed to be declared for all dragmodes because\n  // it's the object that holds persistent selection state.\n\n\n  var dragOptions = {\n    element: _this.bgRect.node(),\n    gd: gd,\n    plotinfo: {\n      id: _this.id,\n      xaxis: _this.xaxis,\n      yaxis: _this.yaxis,\n      fillRangeItems: fillRangeItems\n    },\n    xaxes: [_this.xaxis],\n    yaxes: [_this.yaxis],\n    subplot: _this.id,\n    clickFn: function (numClicks) {\n      if (numClicks === 2) {\n        fullLayout._zoomlayer.selectAll('.select-outline').remove();\n      }\n    }\n  };\n\n  if (dragMode === 'pan') {\n    bgRect.node().onmousedown = null;\n    bgRect.call(createGeoZoom(_this, geoLayout));\n    bgRect.on('dblclick.zoom', zoomReset);\n\n    if (!gd._context._scrollZoom.geo) {\n      bgRect.on('wheel.zoom', null);\n    }\n  } else if (dragMode === 'select' || dragMode === 'lasso') {\n    bgRect.on('.zoom', null);\n\n    dragOptions.prepFn = function (e, startX, startY) {\n      prepSelect(e, startX, startY, dragOptions, dragMode);\n    };\n\n    dragElement.init(dragOptions);\n  }\n\n  bgRect.on('mousemove', function () {\n    var lonlat = _this.projection.invert(d3.mouse(this));\n\n    if (!lonlat || isNaN(lonlat[0]) || isNaN(lonlat[1])) {\n      return dragElement.unhover(gd, d3.event);\n    }\n\n    _this.xaxis.p2c = function () {\n      return lonlat[0];\n    };\n\n    _this.yaxis.p2c = function () {\n      return lonlat[1];\n    };\n\n    Fx.hover(gd, d3.event, _this.id);\n  });\n  bgRect.on('mouseout', function () {\n    if (gd._dragging) return;\n    dragElement.unhover(gd, d3.event);\n  });\n  bgRect.on('click', function () {\n    // For select and lasso the dragElement is handling clicks\n    if (dragMode !== 'select' && dragMode !== 'lasso') {\n      if (clickMode.indexOf('select') > -1) {\n        selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOptions);\n      }\n\n      if (clickMode.indexOf('event') > -1) {\n        // TODO: like pie and mapbox, this doesn't support right-click\n        // actually this one is worse, as right-click starts a pan, or leaves\n        // select in a weird state.\n        // Also, only tangentially related, we should cancel hover during pan\n        Fx.click(gd, d3.event);\n      }\n    }\n  });\n};\n\nproto.makeFramework = function () {\n  var _this = this;\n\n  var gd = _this.graphDiv;\n  var fullLayout = gd._fullLayout;\n  var clipId = 'clip' + fullLayout._uid + _this.id;\n  _this.clipDef = fullLayout._clips.append('clipPath').attr('id', clipId);\n  _this.clipRect = _this.clipDef.append('rect');\n  _this.framework = d3.select(_this.container).append('g').attr('class', 'geo ' + _this.id).call(Drawing.setClipUrl, clipId, gd); // sane lonlat to px\n\n  _this.project = function (v) {\n    var px = _this.projection(v);\n\n    return px ? [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] : [null, null];\n  };\n\n  _this.xaxis = {\n    _id: 'x',\n    c2p: function (v) {\n      return _this.project(v)[0];\n    }\n  };\n  _this.yaxis = {\n    _id: 'y',\n    c2p: function (v) {\n      return _this.project(v)[1];\n    }\n  }; // mock axis for hover formatting\n\n  _this.mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function (geoLayout) {\n  var center = geoLayout.center || {};\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n\n  if (geoLayout._isScoped) {\n    this.viewInitial = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.scale': projLayout.scale\n    };\n  } else if (geoLayout._isClipped) {\n    this.viewInitial = {\n      'projection.scale': projLayout.scale,\n      'projection.rotation.lon': rotation.lon,\n      'projection.rotation.lat': rotation.lat\n    };\n  } else {\n    this.viewInitial = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.scale': projLayout.scale,\n      'projection.rotation.lon': rotation.lon\n    };\n  }\n}; // [hot code path] (re)draw all paths which depend on the projection\n\n\nproto.render = function () {\n  var projection = this.projection;\n  var pathFn = projection.getPath();\n  var k;\n\n  function translatePoints(d) {\n    var lonlatPx = projection(d.lonlat);\n    return lonlatPx ? 'translate(' + lonlatPx[0] + ',' + lonlatPx[1] + ')' : null;\n  }\n\n  function hideShowPoints(d) {\n    return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n  }\n\n  for (k in this.basePaths) {\n    this.basePaths[k].attr('d', pathFn);\n  }\n\n  for (k in this.dataPaths) {\n    this.dataPaths[k].attr('d', function (d) {\n      return pathFn(d.geojson);\n    });\n  }\n\n  for (k in this.dataPoints) {\n    this.dataPoints[k].attr('display', hideShowPoints).attr('transform', translatePoints);\n  }\n}; // Helper that wraps d3.geo[/* projection name /*]() which:\n//\n// - adds 'fitExtent' (available in d3 v4)\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\n\n\nfunction getProjection(geoLayout) {\n  var projLayout = geoLayout.projection;\n  var projType = projLayout.type;\n  var projection = d3.geo[constants.projNames[projType]]();\n  var clipAngle = geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n  var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n\n  var dummyFn = function (_) {\n    return _ ? projection : [];\n  };\n\n  for (var i = 0; i < methods.length; i++) {\n    var m = methods[i];\n\n    if (typeof projection[m] !== 'function') {\n      projection[m] = dummyFn;\n    }\n  }\n\n  projection.isLonLatOverEdges = function (lonlat) {\n    if (projection(lonlat) === null) {\n      return true;\n    }\n\n    if (clipAngle) {\n      var r = projection.rotate();\n      var angle = d3.geo.distance(lonlat, [-r[0], -r[1]]);\n      var maxAngle = clipAngle * Math.PI / 180;\n      return angle > maxAngle;\n    } else {\n      return false;\n    }\n  };\n\n  projection.getPath = function () {\n    return d3.geo.path().projection(projection);\n  };\n\n  projection.getBounds = function (object) {\n    return projection.getPath().bounds(object);\n  }; // adapted from d3 v4:\n  // https://github.com/d3/d3-geo/blob/master/src/projection/fit.js\n\n\n  projection.fitExtent = function (extent, object) {\n    var w = extent[1][0] - extent[0][0];\n    var h = extent[1][1] - extent[0][1];\n    var clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip) projection.clipExtent(null);\n    var b = projection.getBounds(object);\n    var k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1]));\n    var x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2;\n    var y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    if (clip) projection.clipExtent(clip);\n    return projection.scale(k * 150).translate([x, y]);\n  };\n\n  projection.precision(constants.precision);\n\n  if (clipAngle) {\n    projection.clipAngle(clipAngle - constants.clipPad);\n  }\n\n  return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n  // equivalent to the d3 \"ε\"\n  var epsilon = 1e-6; // same as the geoGraticule default\n\n  var precision = 2.5;\n  var axLayout = geoLayout[axisName];\n  var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n  var rng;\n  var oppRng;\n  var coordFn;\n\n  if (axisName === 'lonaxis') {\n    rng = scopeDefaults.lonaxisRange;\n    oppRng = scopeDefaults.lataxisRange;\n\n    coordFn = function (v, l) {\n      return [v, l];\n    };\n  } else if (axisName === 'lataxis') {\n    rng = scopeDefaults.lataxisRange;\n    oppRng = scopeDefaults.lonaxisRange;\n\n    coordFn = function (v, l) {\n      return [l, v];\n    };\n  }\n\n  var dummyAx = {\n    type: 'linear',\n    range: [rng[0], rng[1] - epsilon],\n    tick0: axLayout.tick0,\n    dtick: axLayout.dtick\n  };\n  Axes.setConvert(dummyAx, fullLayout);\n  var vals = Axes.calcTicks(dummyAx); // remove duplicate on antimeridian\n\n  if (!geoLayout.isScoped && axisName === 'lonaxis') {\n    vals.pop();\n  }\n\n  var len = vals.length;\n  var coords = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    var v = vals[i].x;\n    var line = coords[i] = [];\n\n    for (var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n      line.push(coordFn(v, l));\n    }\n  }\n\n  return {\n    type: 'MultiLineString',\n    coordinates: coords\n  };\n} // Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\n\n\nfunction makeRangeBox(lon, lat) {\n  var clipPad = constants.clipPad;\n  var lon0 = lon[0] + clipPad;\n  var lon1 = lon[1] - clipPad;\n  var lat0 = lat[0] + clipPad;\n  var lat1 = lat[1] - clipPad; // to cross antimeridian w/o ambiguity\n\n  if (lon0 > 0 && lon1 < 0) lon1 += 360;\n  var dlon4 = (lon1 - lon0) / 4;\n  return {\n    type: 'Polygon',\n    coordinates: [[[lon0, lat0], [lon0, lat1], [lon0 + dlon4, lat1], [lon0 + 2 * dlon4, lat1], [lon0 + 3 * dlon4, lat1], [lon1, lat1], [lon1, lat0], [lon1 - dlon4, lat0], [lon1 - 2 * dlon4, lat0], [lon1 - 3 * dlon4, lat0], [lon0, lat0]]]\n  };\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/plots/geo/geo.js"],"names":["d3","require","Registry","Lib","Color","Drawing","Fx","Plots","Axes","dragElement","prepSelect","selectOnClick","createGeoZoom","constants","topojsonUtils","topojsonFeature","feature","Geo","opts","id","graphDiv","container","topojsonURL","isStatic","staticPlot","topojsonName","topojson","projection","scope","viewInitial","fitScale","bounds","midPt","hasChoropleth","traceHash","layers","basePaths","dataPaths","dataPoints","clipDef","clipRect","bgRect","makeFramework","proto","prototype","module","exports","createGeo","plot","geoCalcData","fullLayout","promises","_this","geoLayout","needsTopojson","k","layerNameToAdjective","i","length","trace","locationmode","update","topojsonNameNew","getTopojsonName","PlotlyGeoAssets","undefined","push","fetchTopojson","then","topojsonPath","getTopojsonPath","Promise","resolve","reject","json","err","status","Error","join","hasInvalidBounds","updateProjection","type","saveViewInitial","updateBaseLayers","updateDims","updateFx","generalUpdatePerTraceModule","scatterLayer","frontplot","select","point","selectAll","text","line","choroplethLayer","backplot","choropleth","render","gs","_size","domain","projLayout","rotation","center","getProjection","lon","lat","rotate","roll","parallels","extent","l","w","x","t","h","y","lonaxis","lataxis","rangeBox","makeRangeBox","range","fitExtent","b","getBounds","s","scale","translate","isFinite","isNaN","gd","attrToUnset","msg","updateObj","warn","_promises","call","clipExtent","_isAlbersUsa","centerPx","tt","isAxisLayer","d","isLineLayer","Boolean","lineLayers","isFillLayer","fillLayers","allLayers","layersForChoropleth","layerData","filter","showgrid","framework","data","String","exit","each","remove","enter","append","attr","layer","style","classed","order","path","adj","datum","sphereSVG","objects","makeGraticule","stroke","gridcolor","dashLine","gridwidth","fill","hFrameWidth","framewidth","setRect","bgcolor","xaxis","_offset","_length","yaxis","dragMode","dragmode","clickMode","clickmode","zoomReset","emit","invert","lonlat","fillRangeItems","eventData","poly","ranges","xmin","ymin","xmax","ymax","pts","dataPts","lassoPoints","filtered","map","dragOptions","element","node","plotinfo","xaxes","yaxes","subplot","clickFn","numClicks","_zoomlayer","onmousedown","on","_context","_scrollZoom","geo","prepFn","e","startX","startY","init","mouse","unhover","event","p2c","hover","_dragging","indexOf","click","_fullLayout","clipId","_uid","_clips","setClipUrl","project","v","px","_id","c2p","mockAxis","showexponent","exponentformat","setConvert","_isScoped","_isClipped","pathFn","getPath","translatePoints","lonlatPx","hideShowPoints","isLonLatOverEdges","geojson","projType","projNames","clipAngle","lonaxisSpan","methods","dummyFn","_","m","r","angle","distance","maxAngle","Math","PI","object","clip","min","precision","clipPad","axisName","epsilon","axLayout","scopeDefaults","rng","oppRng","coordFn","lonaxisRange","lataxisRange","dummyAx","tick0","dtick","vals","calcTicks","isScoped","pop","len","coords","Array","coordinates","lon0","lon1","lat0","lat1","dlon4"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../cartesian/select').prepSelect;\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\n\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\n\nrequire('./projections')(d3);\n\nfunction Geo(opts) {\n    this.id = opts.id;\n    this.graphDiv = opts.graphDiv;\n    this.container = opts.container;\n    this.topojsonURL = opts.topojsonURL;\n    this.isStatic = opts.staticPlot;\n\n    this.topojsonName = null;\n    this.topojson = null;\n\n    this.projection = null;\n    this.scope = null;\n    this.viewInitial = null;\n    this.fitScale = null;\n    this.bounds = null;\n    this.midPt = null;\n\n    this.hasChoropleth = false;\n    this.traceHash = {};\n\n    this.layers = {};\n    this.basePaths = {};\n    this.dataPaths = {};\n    this.dataPoints = {};\n\n    this.clipDef = null;\n    this.clipRect = null;\n    this.bgRect = null;\n\n    this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n    return new Geo(opts);\n};\n\nproto.plot = function(geoCalcData, fullLayout, promises) {\n    var _this = this;\n    var geoLayout = fullLayout[this.id];\n\n    var needsTopojson = false;\n    for(var k in constants.layerNameToAdjective) {\n        if(k !== 'frame' && geoLayout['show' + k]) {\n            needsTopojson = true;\n            break;\n        }\n    }\n    for(var i = 0; i < geoCalcData.length; i++) {\n        if(geoCalcData[0][0].trace.locationmode) {\n            needsTopojson = true;\n            break;\n        }\n    }\n    if(!needsTopojson) {\n        return _this.update(geoCalcData, fullLayout);\n    }\n\n    var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n\n    if(_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n        _this.topojsonName = topojsonNameNew;\n\n        if(PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n            promises.push(_this.fetchTopojson().then(function(topojson) {\n                PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n                _this.topojson = topojson;\n                _this.update(geoCalcData, fullLayout);\n            }));\n        } else {\n            _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n            _this.update(geoCalcData, fullLayout);\n        }\n    } else {\n        _this.update(geoCalcData, fullLayout);\n    }\n};\n\nproto.fetchTopojson = function() {\n    var topojsonPath = topojsonUtils.getTopojsonPath(\n        this.topojsonURL,\n        this.topojsonName\n    );\n    return new Promise(function(resolve, reject) {\n        d3.json(topojsonPath, function(err, topojson) {\n            if(err) {\n                if(err.status === 404) {\n                    return reject(new Error([\n                        'plotly.js could not find topojson file at',\n                        topojsonPath, '.',\n                        'Make sure the *topojsonURL* plot config option',\n                        'is set properly.'\n                    ].join(' ')));\n                } else {\n                    return reject(new Error([\n                        'unexpected error while fetching topojson file at',\n                        topojsonPath\n                    ].join(' ')));\n                }\n            }\n            resolve(topojson);\n        });\n    });\n};\n\nproto.update = function(geoCalcData, fullLayout) {\n    var geoLayout = fullLayout[this.id];\n\n    var hasInvalidBounds = this.updateProjection(fullLayout, geoLayout);\n    if(hasInvalidBounds) return;\n\n    // important: maps with choropleth traces have a different layer order\n    this.hasChoropleth = false;\n    for(var i = 0; i < geoCalcData.length; i++) {\n        if(geoCalcData[i][0].trace.type === 'choropleth') {\n            this.hasChoropleth = true;\n            break;\n        }\n    }\n\n    if(!this.viewInitial || this.scope !== geoLayout.scope) {\n        this.saveViewInitial(geoLayout);\n    }\n    this.scope = geoLayout.scope;\n\n    this.updateBaseLayers(fullLayout, geoLayout);\n    this.updateDims(fullLayout, geoLayout);\n    this.updateFx(fullLayout, geoLayout);\n\n    Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n\n    var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n    this.dataPoints.point = scatterLayer.selectAll('.point');\n    this.dataPoints.text = scatterLayer.selectAll('text');\n    this.dataPaths.line = scatterLayer.selectAll('.js-line');\n\n    var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n    this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n\n    this.render();\n};\n\nproto.updateProjection = function(fullLayout, geoLayout) {\n    var gs = fullLayout._size;\n    var domain = geoLayout.domain;\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n    var center = geoLayout.center || {};\n\n    var projection = this.projection = getProjection(geoLayout);\n\n    // set 'pre-fit' projection\n    projection\n        .center([center.lon - rotation.lon, center.lat - rotation.lat])\n        .rotate([-rotation.lon, -rotation.lat, rotation.roll])\n        .parallels(projLayout.parallels);\n\n    // setup subplot extent [[x0,y0], [x1,y1]]\n    var extent = [[\n        gs.l + gs.w * domain.x[0],\n        gs.t + gs.h * (1 - domain.y[1])\n    ], [\n        gs.l + gs.w * domain.x[1],\n        gs.t + gs.h * (1 - domain.y[0])\n    ]];\n\n    var lonaxis = geoLayout.lonaxis;\n    var lataxis = geoLayout.lataxis;\n    var rangeBox = makeRangeBox(lonaxis.range, lataxis.range);\n\n    // fit projection 'scale' and 'translate' to set lon/lat ranges\n    projection.fitExtent(extent, rangeBox);\n\n    var b = this.bounds = projection.getBounds(rangeBox);\n    var s = this.fitScale = projection.scale();\n    var t = projection.translate();\n\n    if(\n        !isFinite(b[0][0]) || !isFinite(b[0][1]) ||\n        !isFinite(b[1][0]) || !isFinite(b[1][1]) ||\n        isNaN(t[0]) || isNaN(t[0])\n    ) {\n        var gd = this.graphDiv;\n        var attrToUnset = ['projection.rotation', 'center', 'lonaxis.range', 'lataxis.range'];\n        var msg = 'Invalid geo settings, relayout\\'ing to default view.';\n        var updateObj = {};\n\n        // clear all attribute that could cause invalid bounds,\n        // clear viewInitial to update reset-view behavior\n\n        for(var i = 0; i < attrToUnset.length; i++) {\n            updateObj[this.id + '.' + attrToUnset[i]] = null;\n        }\n\n        this.viewInitial = null;\n\n        Lib.warn(msg);\n        gd._promises.push(Registry.call('relayout', gd, updateObj));\n        return msg;\n    }\n\n    // px coordinates of view mid-point,\n    // useful to update `geo.center` after interactions\n    var midPt = this.midPt = [\n        (b[0][0] + b[1][0]) / 2,\n        (b[0][1] + b[1][1]) / 2\n    ];\n\n    // adjust projection to user setting\n    projection\n        .scale(projLayout.scale * s)\n        .translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])])\n        .clipExtent(b);\n\n    // the 'albers usa' projection does not expose a 'center' method\n    // so here's this hack to make it respond to 'geoLayout.center'\n    if(geoLayout._isAlbersUsa) {\n        var centerPx = projection([center.lon, center.lat]);\n        var tt = projection.translate();\n\n        projection.translate([\n            tt[0] - (centerPx[0] - tt[0]),\n            tt[1] - (centerPx[1] - tt[1])\n        ]);\n    }\n};\n\nproto.updateBaseLayers = function(fullLayout, geoLayout) {\n    var _this = this;\n    var topojson = _this.topojson;\n    var layers = _this.layers;\n    var basePaths = _this.basePaths;\n\n    function isAxisLayer(d) {\n        return (d === 'lonaxis' || d === 'lataxis');\n    }\n\n    function isLineLayer(d) {\n        return Boolean(constants.lineLayers[d]);\n    }\n\n    function isFillLayer(d) {\n        return Boolean(constants.fillLayers[d]);\n    }\n\n    var allLayers = this.hasChoropleth ?\n        constants.layersForChoropleth :\n        constants.layers;\n\n    var layerData = allLayers.filter(function(d) {\n        return (isLineLayer(d) || isFillLayer(d)) ? geoLayout['show' + d] :\n            isAxisLayer(d) ? geoLayout[d].showgrid :\n            true;\n    });\n\n    var join = _this.framework.selectAll('.layer')\n        .data(layerData, String);\n\n    join.exit().each(function(d) {\n        delete layers[d];\n        delete basePaths[d];\n        d3.select(this).remove();\n    });\n\n    join.enter().append('g')\n        .attr('class', function(d) { return 'layer ' + d; })\n        .each(function(d) {\n            var layer = layers[d] = d3.select(this);\n\n            if(d === 'bg') {\n                _this.bgRect = layer.append('rect')\n                    .style('pointer-events', 'all');\n            } else if(isAxisLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none');\n            } else if(d === 'backplot') {\n                layer.append('g')\n                    .classed('choroplethlayer', true);\n            } else if(d === 'frontplot') {\n                layer.append('g')\n                    .classed('scatterlayer', true);\n            } else if(isLineLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none')\n                    .style('stroke-miterlimit', 2);\n            } else if(isFillLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('stroke', 'none');\n            }\n        });\n\n    join.order();\n\n    join.each(function(d) {\n        var path = basePaths[d];\n        var adj = constants.layerNameToAdjective[d];\n\n        if(d === 'frame') {\n            path.datum(constants.sphereSVG);\n        } else if(isLineLayer(d) || isFillLayer(d)) {\n            path.datum(topojsonFeature(topojson, topojson.objects[d]));\n        } else if(isAxisLayer(d)) {\n            path.datum(makeGraticule(d, geoLayout, fullLayout))\n                .call(Color.stroke, geoLayout[d].gridcolor)\n                .call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n        }\n\n        if(isLineLayer(d)) {\n            path.call(Color.stroke, geoLayout[adj + 'color'])\n                .call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n        } else if(isFillLayer(d)) {\n            path.call(Color.fill, geoLayout[adj + 'color']);\n        }\n    });\n};\n\nproto.updateDims = function(fullLayout, geoLayout) {\n    var b = this.bounds;\n    var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n\n    var l = b[0][0] - hFrameWidth;\n    var t = b[0][1] - hFrameWidth;\n    var w = b[1][0] - l + hFrameWidth;\n    var h = b[1][1] - t + hFrameWidth;\n\n    Drawing.setRect(this.clipRect, l, t, w, h);\n\n    this.bgRect\n        .call(Drawing.setRect, l, t, w, h)\n        .call(Color.fill, geoLayout.bgcolor);\n\n    this.xaxis._offset = l;\n    this.xaxis._length = w;\n\n    this.yaxis._offset = t;\n    this.yaxis._length = h;\n};\n\nproto.updateFx = function(fullLayout, geoLayout) {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var bgRect = _this.bgRect;\n    var dragMode = fullLayout.dragmode;\n    var clickMode = fullLayout.clickmode;\n\n    if(_this.isStatic) return;\n\n    function zoomReset() {\n        var viewInitial = _this.viewInitial;\n        var updateObj = {};\n\n        for(var k in viewInitial) {\n            updateObj[_this.id + '.' + k] = viewInitial[k];\n        }\n\n        Registry.call('_guiRelayout', gd, updateObj);\n        gd.emit('plotly_doubleclick', null);\n    }\n\n    function invert(lonlat) {\n        return _this.projection.invert([\n            lonlat[0] + _this.xaxis._offset,\n            lonlat[1] + _this.yaxis._offset\n        ]);\n    }\n\n    var fillRangeItems;\n\n    if(dragMode === 'select') {\n        fillRangeItems = function(eventData, poly) {\n            var ranges = eventData.range = {};\n            ranges[_this.id] = [\n                invert([poly.xmin, poly.ymin]),\n                invert([poly.xmax, poly.ymax])\n            ];\n        };\n    } else if(dragMode === 'lasso') {\n        fillRangeItems = function(eventData, poly, pts) {\n            var dataPts = eventData.lassoPoints = {};\n            dataPts[_this.id] = pts.filtered.map(invert);\n        };\n    }\n\n    // Note: dragOptions is needed to be declared for all dragmodes because\n    // it's the object that holds persistent selection state.\n    var dragOptions = {\n        element: _this.bgRect.node(),\n        gd: gd,\n        plotinfo: {\n            id: _this.id,\n            xaxis: _this.xaxis,\n            yaxis: _this.yaxis,\n            fillRangeItems: fillRangeItems\n        },\n        xaxes: [_this.xaxis],\n        yaxes: [_this.yaxis],\n        subplot: _this.id,\n        clickFn: function(numClicks) {\n            if(numClicks === 2) {\n                fullLayout._zoomlayer.selectAll('.select-outline').remove();\n            }\n        }\n    };\n\n    if(dragMode === 'pan') {\n        bgRect.node().onmousedown = null;\n        bgRect.call(createGeoZoom(_this, geoLayout));\n        bgRect.on('dblclick.zoom', zoomReset);\n        if(!gd._context._scrollZoom.geo) {\n            bgRect.on('wheel.zoom', null);\n        }\n    } else if(dragMode === 'select' || dragMode === 'lasso') {\n        bgRect.on('.zoom', null);\n\n        dragOptions.prepFn = function(e, startX, startY) {\n            prepSelect(e, startX, startY, dragOptions, dragMode);\n        };\n\n        dragElement.init(dragOptions);\n    }\n\n    bgRect.on('mousemove', function() {\n        var lonlat = _this.projection.invert(d3.mouse(this));\n\n        if(!lonlat || isNaN(lonlat[0]) || isNaN(lonlat[1])) {\n            return dragElement.unhover(gd, d3.event);\n        }\n\n        _this.xaxis.p2c = function() { return lonlat[0]; };\n        _this.yaxis.p2c = function() { return lonlat[1]; };\n\n        Fx.hover(gd, d3.event, _this.id);\n    });\n\n    bgRect.on('mouseout', function() {\n        if(gd._dragging) return;\n        dragElement.unhover(gd, d3.event);\n    });\n\n    bgRect.on('click', function() {\n        // For select and lasso the dragElement is handling clicks\n        if(dragMode !== 'select' && dragMode !== 'lasso') {\n            if(clickMode.indexOf('select') > -1) {\n                selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis],\n                  _this.id, dragOptions);\n            }\n\n            if(clickMode.indexOf('event') > -1) {\n                // TODO: like pie and mapbox, this doesn't support right-click\n                // actually this one is worse, as right-click starts a pan, or leaves\n                // select in a weird state.\n                // Also, only tangentially related, we should cancel hover during pan\n                Fx.click(gd, d3.event);\n            }\n        }\n    });\n};\n\nproto.makeFramework = function() {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var fullLayout = gd._fullLayout;\n    var clipId = 'clip' + fullLayout._uid + _this.id;\n\n    _this.clipDef = fullLayout._clips.append('clipPath')\n        .attr('id', clipId);\n\n    _this.clipRect = _this.clipDef.append('rect');\n\n    _this.framework = d3.select(_this.container).append('g')\n        .attr('class', 'geo ' + _this.id)\n        .call(Drawing.setClipUrl, clipId, gd);\n\n    // sane lonlat to px\n    _this.project = function(v) {\n        var px = _this.projection(v);\n        return px ?\n            [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] :\n            [null, null];\n    };\n\n    _this.xaxis = {\n        _id: 'x',\n        c2p: function(v) { return _this.project(v)[0]; }\n    };\n\n    _this.yaxis = {\n        _id: 'y',\n        c2p: function(v) { return _this.project(v)[1]; }\n    };\n\n    // mock axis for hover formatting\n    _this.mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function(geoLayout) {\n    var center = geoLayout.center || {};\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n\n    if(geoLayout._isScoped) {\n        this.viewInitial = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.scale': projLayout.scale\n        };\n    } else if(geoLayout._isClipped) {\n        this.viewInitial = {\n            'projection.scale': projLayout.scale,\n            'projection.rotation.lon': rotation.lon,\n            'projection.rotation.lat': rotation.lat\n        };\n    } else {\n        this.viewInitial = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.scale': projLayout.scale,\n            'projection.rotation.lon': rotation.lon\n        };\n    }\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto.render = function() {\n    var projection = this.projection;\n    var pathFn = projection.getPath();\n    var k;\n\n    function translatePoints(d) {\n        var lonlatPx = projection(d.lonlat);\n        return lonlatPx ?\n            'translate(' + lonlatPx[0] + ',' + lonlatPx[1] + ')' :\n             null;\n    }\n\n    function hideShowPoints(d) {\n        return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n    }\n\n    for(k in this.basePaths) {\n        this.basePaths[k].attr('d', pathFn);\n    }\n\n    for(k in this.dataPaths) {\n        this.dataPaths[k].attr('d', function(d) { return pathFn(d.geojson); });\n    }\n\n    for(k in this.dataPoints) {\n        this.dataPoints[k]\n            .attr('display', hideShowPoints)\n            .attr('transform', translatePoints);\n    }\n};\n\n// Helper that wraps d3.geo[/* projection name /*]() which:\n//\n// - adds 'fitExtent' (available in d3 v4)\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n    var projLayout = geoLayout.projection;\n    var projType = projLayout.type;\n\n    var projection = d3.geo[constants.projNames[projType]]();\n\n    var clipAngle = geoLayout._isClipped ?\n        constants.lonaxisSpan[projType] / 2 :\n        null;\n\n    var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n    var dummyFn = function(_) { return _ ? projection : []; };\n\n    for(var i = 0; i < methods.length; i++) {\n        var m = methods[i];\n        if(typeof projection[m] !== 'function') {\n            projection[m] = dummyFn;\n        }\n    }\n\n    projection.isLonLatOverEdges = function(lonlat) {\n        if(projection(lonlat) === null) {\n            return true;\n        }\n\n        if(clipAngle) {\n            var r = projection.rotate();\n            var angle = d3.geo.distance(lonlat, [-r[0], -r[1]]);\n            var maxAngle = clipAngle * Math.PI / 180;\n            return angle > maxAngle;\n        } else {\n            return false;\n        }\n    };\n\n    projection.getPath = function() {\n        return d3.geo.path().projection(projection);\n    };\n\n    projection.getBounds = function(object) {\n        return projection.getPath().bounds(object);\n    };\n\n    // adapted from d3 v4:\n    // https://github.com/d3/d3-geo/blob/master/src/projection/fit.js\n    projection.fitExtent = function(extent, object) {\n        var w = extent[1][0] - extent[0][0];\n        var h = extent[1][1] - extent[0][1];\n        var clip = projection.clipExtent && projection.clipExtent();\n\n        projection\n            .scale(150)\n            .translate([0, 0]);\n\n        if(clip) projection.clipExtent(null);\n\n        var b = projection.getBounds(object);\n        var k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1]));\n        var x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2;\n        var y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n        if(clip) projection.clipExtent(clip);\n\n        return projection\n            .scale(k * 150)\n            .translate([x, y]);\n    };\n\n    projection.precision(constants.precision);\n\n    if(clipAngle) {\n        projection.clipAngle(clipAngle - constants.clipPad);\n    }\n\n    return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n    // equivalent to the d3 \"ε\"\n    var epsilon = 1e-6;\n    // same as the geoGraticule default\n    var precision = 2.5;\n\n    var axLayout = geoLayout[axisName];\n    var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n    var rng;\n    var oppRng;\n    var coordFn;\n\n    if(axisName === 'lonaxis') {\n        rng = scopeDefaults.lonaxisRange;\n        oppRng = scopeDefaults.lataxisRange;\n        coordFn = function(v, l) { return [v, l]; };\n    } else if(axisName === 'lataxis') {\n        rng = scopeDefaults.lataxisRange;\n        oppRng = scopeDefaults.lonaxisRange;\n        coordFn = function(v, l) { return [l, v]; };\n    }\n\n    var dummyAx = {\n        type: 'linear',\n        range: [rng[0], rng[1] - epsilon],\n        tick0: axLayout.tick0,\n        dtick: axLayout.dtick\n    };\n\n    Axes.setConvert(dummyAx, fullLayout);\n    var vals = Axes.calcTicks(dummyAx);\n\n    // remove duplicate on antimeridian\n    if(!geoLayout.isScoped && axisName === 'lonaxis') {\n        vals.pop();\n    }\n\n    var len = vals.length;\n    var coords = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var v = vals[i].x;\n        var line = coords[i] = [];\n        for(var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n            line.push(coordFn(v, l));\n        }\n    }\n\n    return {\n        type: 'MultiLineString',\n        coordinates: coords\n    };\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n    var clipPad = constants.clipPad;\n    var lon0 = lon[0] + clipPad;\n    var lon1 = lon[1] - clipPad;\n    var lat0 = lat[0] + clipPad;\n    var lat1 = lat[1] - clipPad;\n\n    // to cross antimeridian w/o ambiguity\n    if(lon0 > 0 && lon1 < 0) lon1 += 360;\n\n    var dlon4 = (lon1 - lon0) / 4;\n\n    return {\n        type: 'Polygon',\n        coordinates: [[\n            [lon0, lat0],\n            [lon0, lat1],\n            [lon0 + dlon4, lat1],\n            [lon0 + 2 * dlon4, lat1],\n            [lon0 + 3 * dlon4, lat1],\n            [lon1, lat1],\n            [lon1, lat0],\n            [lon1 - dlon4, lat0],\n            [lon1 - 2 * dlon4, lat0],\n            [lon1 - 3 * dlon4, lat0],\n            [lon0, lat0]\n        ]]\n    };\n}\n"]},"metadata":{},"sourceType":"script"}
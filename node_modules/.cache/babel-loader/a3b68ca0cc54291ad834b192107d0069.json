{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nexports.formatPiePercent = function formatPiePercent(v, separators) {\n  var vRounded = (v * 100).toPrecision(3);\n\n  if (vRounded.lastIndexOf('.') !== -1) {\n    vRounded = vRounded.replace(/[.]?0+$/, '');\n  }\n\n  return Lib.numSeparate(vRounded, separators) + '%';\n};\n\nexports.formatPieValue = function formatPieValue(v, separators) {\n  var vRounded = v.toPrecision(10);\n\n  if (vRounded.lastIndexOf('.') !== -1) {\n    vRounded = vRounded.replace(/[.]?0+$/, '');\n  }\n\n  return Lib.numSeparate(vRounded, separators);\n};\n\nexports.getFirstFilled = function getFirstFilled(array, indices) {\n  if (!Array.isArray(array)) return;\n\n  for (var i = 0; i < indices.length; i++) {\n    var v = array[indices[i]];\n    if (v || v === 0 || v === '') return v;\n  }\n};\n\nexports.castOption = function castOption(item, indices) {\n  if (Array.isArray(item)) return exports.getFirstFilled(item, indices);else if (item) return item;\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/traces/pie/helpers.js"],"names":["Lib","require","exports","formatPiePercent","v","separators","vRounded","toPrecision","lastIndexOf","replace","numSeparate","formatPieValue","getFirstFilled","array","indices","Array","isArray","i","length","castOption","item"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEAC,OAAO,CAACC,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,CAA1B,EAA6BC,UAA7B,EAAyC;AAChE,MAAIC,QAAQ,GAAG,CAACF,CAAC,GAAG,GAAL,EAAUG,WAAV,CAAsB,CAAtB,CAAf;;AACA,MAAGD,QAAQ,CAACE,WAAT,CAAqB,GAArB,MAA8B,CAAC,CAAlC,EAAqC;AACjCF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,CAAX;AACH;;AACD,SAAOT,GAAG,CAACU,WAAJ,CAAgBJ,QAAhB,EAA0BD,UAA1B,IAAwC,GAA/C;AACH,CAND;;AAQAH,OAAO,CAACS,cAAR,GAAyB,SAASA,cAAT,CAAwBP,CAAxB,EAA2BC,UAA3B,EAAuC;AAC5D,MAAIC,QAAQ,GAAGF,CAAC,CAACG,WAAF,CAAc,EAAd,CAAf;;AACA,MAAGD,QAAQ,CAACE,WAAT,CAAqB,GAArB,MAA8B,CAAC,CAAlC,EAAqC;AACjCF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,CAAX;AACH;;AACD,SAAOT,GAAG,CAACU,WAAJ,CAAgBJ,QAAhB,EAA0BD,UAA1B,CAAP;AACH,CAND;;AAQAH,OAAO,CAACU,cAAR,GAAyB,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;AAC7D,MAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;;AAC1B,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAO,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,QAAIb,CAAC,GAAGS,KAAK,CAACC,OAAO,CAACG,CAAD,CAAR,CAAb;AACA,QAAGb,CAAC,IAAIA,CAAC,KAAK,CAAX,IAAgBA,CAAC,KAAK,EAAzB,EAA6B,OAAOA,CAAP;AAChC;AACJ,CAND;;AAQAF,OAAO,CAACiB,UAAR,GAAqB,SAASA,UAAT,CAAoBC,IAApB,EAA0BN,OAA1B,EAAmC;AACpD,MAAGC,KAAK,CAACC,OAAN,CAAcI,IAAd,CAAH,EAAwB,OAAOlB,OAAO,CAACU,cAAR,CAAuBQ,IAAvB,EAA6BN,OAA7B,CAAP,CAAxB,KACK,IAAGM,IAAH,EAAS,OAAOA,IAAP;AACjB,CAHD","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nexports.formatPiePercent = function formatPiePercent(v, separators) {\n    var vRounded = (v * 100).toPrecision(3);\n    if(vRounded.lastIndexOf('.') !== -1) {\n        vRounded = vRounded.replace(/[.]?0+$/, '');\n    }\n    return Lib.numSeparate(vRounded, separators) + '%';\n};\n\nexports.formatPieValue = function formatPieValue(v, separators) {\n    var vRounded = v.toPrecision(10);\n    if(vRounded.lastIndexOf('.') !== -1) {\n        vRounded = vRounded.replace(/[.]?0+$/, '');\n    }\n    return Lib.numSeparate(vRounded, separators);\n};\n\nexports.getFirstFilled = function getFirstFilled(array, indices) {\n    if(!Array.isArray(array)) return;\n    for(var i = 0; i < indices.length; i++) {\n        var v = array[indices[i]];\n        if(v || v === 0 || v === '') return v;\n    }\n};\n\nexports.castOption = function castOption(item, indices) {\n    if(Array.isArray(item)) return exports.getFirstFilled(item, indices);\n    else if(item) return item;\n};\n"]},"metadata":{},"sourceType":"script"}
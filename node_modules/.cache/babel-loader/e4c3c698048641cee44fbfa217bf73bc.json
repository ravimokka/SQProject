{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      options2: {\n        chart: {\n          height: 350,\n          type: 'bar',\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        series2: [{\n          name: 'Marine Sprite',\n          data: [44, 55, 41, 37, 22, 43, 21]\n        }, {\n          name: 'Reborn Kid',\n          data: [25, 12, 19, 32, 25, 24, 10]\n        }],\n        title: {\n          text: '100% Stacked Bar'\n        },\n        xaxis: {\n          categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n          labels: {\n            formatter: function (val) {\n              return val + \"M\";\n            }\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return val + \"K\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      l: [],\n      sourceData: [{\n        item: 'A',\n        count: 20\n      }],\n      sourceData_donut: [{\n        item: 'B',\n        count: 2\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': [100, 200]\n      }, {\n        'name': 'Budget',\n        'data': [300, 400]\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      const d = [{\n        'name': 'Actual',\n        'data': [10000000, 200000000]\n      }, {\n        'name': 'Budget',\n        'data': [1, 2, 4, 5]\n      }];\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    var data = [{\n      \"month\": \"Jan\"\n    }, {\n      \"month\": \"Feb\"\n    }];\n    var months = data.map(item => item.month).filter((item, index, array) => array.indexOf(item) == index);\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","ReactApexChart","ChartHistoryGroupColumn","DataSet","require","Reactjs","constructor","props","handleSubmit","e","setState","value_x","target","value","handleSubmit1","value_y","handleSubmit12","preventDefault","loadData","A","state","B","handleSubmitDonut","value_donut","DonutCheckbox","Column","handleSubmitPie","value_pie","PieCheckbox","options2","chart","height","type","stacked","plotOptions","bar","horizontal","stroke","width","colors","series2","name","data","title","text","xaxis","categories","labels","formatter","val","tooltip","y","fill","opacity","legend","position","horizontalAlign","offsetX","books","intHeader","filter","chart_data","donut_data","pie_data","l","sourceData","item","count","sourceData_donut","componentWillMount","loadAnalytical","loadIntHeaders","promise","axios","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","i","keys_list","value_list","chart_list","Object","keys","length","key","data_dict","push","g_data","Actual","Budget","g","ct_list1","sd","d_data","SQBL","SQCL","render","months","map","month","index","array","indexOf","series"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\nclass Reactjs extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\noptions2 : {\n            chart: {\n                height: 350,\n                type: 'bar',\n                stacked: true,\n\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: true,\n                },\n\n            },\n            stroke: {\n                width: 1,\n                colors: ['#fff']\n            },\n            series2: [{\n                name: 'Marine Sprite',\n                data: [44, 55, 41, 37, 22, 43, 21]\n            },{\n                name: 'Reborn Kid',\n                data: [25, 12, 19, 32, 25, 24, 10]\n            }],\n            title: {\n                text: '100% Stacked Bar'\n            },\n            xaxis: {\n                categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n                labels: {\n                    formatter: function(val) {\n                        return val + \"M\"\n                    }\n                }\n            },\n\n            tooltip: {\n                    y: {\n                        formatter: function(val) {\n                        return val + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n\n            },\n\n            legend: {\n                position: 'top',\n                horizontalAlign: 'left',\n                offsetX: 40\n            }\n        },\n\n\n\n\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     l:[],\n     sourceData :[\n  { item: 'A', count: 20 }\n],\n\nsourceData_donut:[{ item: 'B', count: 2 }]\n\n      }\n\n\n   }\n\n\n\n\n\n   componentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n\n\n  }\n\n   async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': [100, 200]}, {'name': 'Budget','data': [300, 400]}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n\n\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n\n     this.loadData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [10000000, 200000000]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n   handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n      render() {\n\n\nvar data = [{ \"month\" : \"Jan\", }, {\"month\" : \"Feb\", }];\n\nvar months = data.map((item) => item.month).filter((item, index, array) => array.indexOf(item) == index)\n\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
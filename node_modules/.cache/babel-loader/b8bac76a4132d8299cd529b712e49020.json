{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst sourceData12 = [{\n  item: 'A',\n  count: 40\n}, {\n  item: 'B',\n  count: 21\n}, {\n  item: 'C',\n  count: 17\n}, {\n  item: 'D',\n  count: 13\n}, {\n  item: 'E',\n  count: 9\n}];\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadGroupBarData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      line_chart_options: {\n        chart: {\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      line_chart_series: [{\n        name: \"Desktops\",\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n      }],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      series2: [],\n      bar_chart_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      bar_chart_series: [],\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      line_data: [],\n      l: [],\n      sourceData: [{\n        item: 'A',\n        count: 20\n      }],\n      sourceData_donut: [{\n        item: 'B',\n        count: 2\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const line_dict = [{\n        data: line_value_list\n      }];\n      this.setState({\n        line_data: line_dict\n      });\n      console.log(data);\n    }\n  } //================================================ Group Bar Chart ====================================================================\n\n\n  async loadGroupBarData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      const d = [{\n        'name': 'Actual',\n        'data': [1, 23]\n      }, {\n        'name': 'Budget',\n        'data': [1, 2, 4, 5]\n      }];\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const bar_dict = [{\n        data: bar_value_list\n      }];\n      this.setState({\n        bar_data: bar_dict\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Line chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_xl,\n      onChange: this.handleSubmitLineChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_yl,\n      onChange: this.handleSubmitLineChart1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitLineChartOK,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.line_chart_options,\n      series: this.state.line_data,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Group Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_bar,\n      onChange: this.handleSubmitBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(ReactApexChart, {\n      options: this.state.bar_chart_options,\n      series: this.state.bar_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Donut chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_donut,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: don_data,\n      scale: scale1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","DataSet","require","scale","dataKey","min","formatter","scale1","sourceData12","item","count","AnalyticalTest","Component","constructor","props","handleSubmitLineChart","e","setState","value_xl","target","value","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loadLineChartData","A","state","B","handleSubmit","value_x","handleSubmit1","value_y","handleSubmit12","loadGroupBarData","handleSubmitBarChart","value_bar","BarCheckbox","Column","handleSubmitDonut","value_donut","DonutCheckbox","handleSubmitPie","value_pie","PieCheckbox","line_chart_options","chart","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","line_chart_series","name","data","options2","plotOptions","bar","horizontal","position","offsetX","style","fontSize","show","width","series2","bar_chart_options","bar_chart_series","books","intHeader","filter","chart_data","donut_data","pie_data","bar_data","line_data","l","sourceData","sourceData_donut","componentWillMount","loadAnalytical","loadIntHeaders","promise","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","i","keys_list","line_value_list","chart_list","Object","keys","length","key","push","data_dict","line_dict","value_list","g_data","Actual","Budget","g","bar_value_list","ct_list1","bar_dict","sd","d_data","SQBL","SQCL","render","dv","View","source","transform","type","field","dimension","as","rows","dv1","don_data","span","order","minHeight","marginLeft","map","index","cursor","lineWidth","val","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\n\nconst sourceData12 = [\n  { item: 'A', count: 40 },\n  { item: 'B', count: 21 },\n  { item: 'C', count: 17 },\n  { item: 'D', count: 13 },\n  { item: 'E', count: 9 }\n];\n\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\nline_chart_options: {\n            chart: {\n                  zoom: {\n                      enabled: false\n                  }\n              },\n              dataLabels: {\n                  enabled: false\n              },\n              stroke: {\n                  curve: 'straight'\n              },\n              title: {\n                  text: '',\n                  align: 'left'\n              },\n              grid: {\n                  row: {\n                      colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n                      opacity: 0.5\n                  },\n              },\n              xaxis: {\n                  categories: [],\n              }\n          },\n          line_chart_series:[{\n              name: \"Desktops\",\n              data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n          }],\n\n\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n            }\n          },\n\n      series2:[],\n\n\nbar_chart_options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              }\n            },\n            dataLabels: {\n              enabled: false,\n\n            },\n\n\n            xaxis: {\n              categories: [],\n            }\n          },\nbar_chart_series: [],\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     line_data:[],\n     l:[],\n     sourceData :[\n  { item: 'A', count: 20 }\n],\n\nsourceData_donut:[{ item: 'B', count: 2 }]\n\n      }\n\n\n   }\n\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n     const line_dict = [{data:line_value_list}]\n      this.setState({line_data:line_dict})\n      console.log(data);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n     this.loadGroupBarData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadGroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [1, 23]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n        }\n      const bar_dict = [{data:bar_value_list}]\n      this.setState({bar_data:bar_dict})\n\n    }\n\n}\n\n\n\n//========================================== Donut Chart ================================================================\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\n    return (\n    <div>\n        <div id=\"content\">\n        <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Line chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmitLineChartOK} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.line_chart_options} series={this.state.line_data} type=\"line\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n\n </Row>\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Group Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                  <ReactApexChart options={this.state.bar_chart_options} series={this.state.bar_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n </Row>\n\n\n<Row type=\"flex\" gutter={24}>\n\n\n   <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Donut chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_donut} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={don_data} scale={scale1}>\n        <Tooltip showTitle={false} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n    <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={pie_data} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n                            <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
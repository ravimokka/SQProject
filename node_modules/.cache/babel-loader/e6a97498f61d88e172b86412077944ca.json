{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport { underLineTypes } from './types';\nvar styles = {\n  hr: {\n    borderBottom: '1px solid',\n    borderLeft: 'none',\n    borderRight: 'none',\n    borderTop: 'none',\n    bottom: 0,\n    boxSizing: 'content-box',\n    left: 0,\n    margin: 0,\n    position: 'absolute',\n    width: '100%'\n  },\n  underline: {\n    position: 'relative',\n    marginTop: 4\n  }\n};\nUnderLine.propTypes = process.env.NODE_ENV !== \"production\" ? underLineTypes : {};\nexport default function UnderLine(_ref) {\n  var disabled = _ref.disabled,\n      errorText = _ref.errorText,\n      isFocused = _ref.isFocused,\n      isOpen = _ref.isOpen,\n      themeBorderColor = _ref.themeBorderColor,\n      themeFocusColor = _ref.themeFocusColor,\n      underlineErrorStyle = _ref.underlineErrorStyle,\n      underlineFocusStyle = _ref.underlineFocusStyle,\n      underlineStyle = _ref.underlineStyle;\n\n  var baseHRstyle = _extends({}, styles.hr, {\n    borderColor: themeBorderColor\n  }, underlineStyle, errorText ? _extends({\n    borderColor: 'red'\n  }, underlineErrorStyle) : {});\n\n  var focusedHRstyle = errorText ? underlineStyle : _extends({\n    borderBottom: '2px solid',\n    borderColor: isFocused && !disabled || isOpen ? themeFocusColor : themeBorderColor,\n    transform: 'scaleX( ' + (isFocused && !disabled || isOpen ? 1 : 0) + ' )',\n    transition: '450ms cubic-bezier(0.23, 1, 0.32, 1)'\n  }, underlineFocusStyle);\n  return React.createElement('div', {\n    style: styles.underline\n  }, React.createElement('hr', {\n    style: baseHRstyle\n  }), React.createElement('hr', {\n    style: _extends({}, baseHRstyle, focusedHRstyle)\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}
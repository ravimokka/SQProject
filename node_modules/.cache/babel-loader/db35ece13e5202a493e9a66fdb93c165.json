{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function (traceIn, traceOut, defaultColor, opts) {\n  var objName = 'error_' + opts.axis;\n  var containerOut = Template.newContainer(traceOut, objName);\n  var containerIn = traceIn[objName] || {};\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  var hasErrorBars = containerIn.array !== undefined || containerIn.value !== undefined || containerIn.type === 'sqrt';\n  var visible = coerce('visible', hasErrorBars);\n  if (visible === false) return;\n  var type = coerce('type', 'array' in containerIn ? 'data' : 'percent');\n  var symmetric = true;\n\n  if (type !== 'sqrt') {\n    symmetric = coerce('symmetric', !((type === 'data' ? 'arrayminus' : 'valueminus') in containerIn));\n  }\n\n  if (type === 'data') {\n    coerce('array');\n    coerce('traceref');\n\n    if (!symmetric) {\n      coerce('arrayminus');\n      coerce('tracerefminus');\n    }\n  } else if (type === 'percent' || type === 'constant') {\n    coerce('value');\n    if (!symmetric) coerce('valueminus');\n  }\n\n  var copyAttr = 'copy_' + opts.inherit + 'style';\n\n  if (opts.inherit) {\n    var inheritObj = traceOut['error_' + opts.inherit];\n\n    if ((inheritObj || {}).visible) {\n      coerce(copyAttr, !(containerIn.color || isNumeric(containerIn.thickness) || isNumeric(containerIn.width)));\n    }\n  }\n\n  if (!opts.inherit || !containerOut[copyAttr]) {\n    coerce('color', defaultColor);\n    coerce('thickness');\n    coerce('width', Registry.traceIs(traceOut, 'gl3d') ? 0 : 4);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
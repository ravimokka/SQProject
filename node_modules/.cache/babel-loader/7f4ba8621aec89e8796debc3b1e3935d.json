{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/BarChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value,\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      bar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      bar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      vertical_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      vertical_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      value_bar: \"Status\",\n      value_yl: \"Amount_USD\",\n      download_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/load_count_api\", {\n      Column: 'Group',\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    this.setState({\n      bar_table_columns: []\n    });\n    this.setState({\n      bar_table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Bar_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Bar_chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: Bar_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //=================================================== Line Chart Table Data Download ===================================\n\n\n  render() {\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_bar,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_bar,\n      onChange: this.handleSubmitBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModalBar\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '21px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModalBar\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Bar Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.bar_table_columns,\n      dataSource: this.state.bar_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_barChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: basic_bar_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Coord, {\n      type: \"rect\",\n      direction: \"LB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"country\",\n      label: {\n        offset: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/BarChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","LineChart","Component","constructor","props","handleSubmitBarChart","e","preventDefault","setState","loading","value_bar","target","value","BarCheckbox","Column","Menu","state","books","intHeader","filter","select_group","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","value_yl","download_barChart_table","firstname","lastname","email","componentWillMount","loadAnalytical","loadIntHeaders","loadAll_count_view","promise","post","loginURL","status","data","console","log","d","dou","download_verticalChart_table","download_donutChart_table","download_pieChart_table","table_dict","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","Object","keys","length","push","data_dict","load_data_dict","column_dict","headers","Headers","append","options","method","body","JSON","stringify","Bar_chart_list","render","bar_dv","View","source","transform","type","callback","a","b","basic_bar_data","rows","line_chart_source_scale","dataKey","min","formatter","val","Math","round","max","override","minHeight","width","marginLeft","map","index","cursor","fontSize","overflowY","offset"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\n\n\n\n\n             books:[],\n             intHeader:[],\n             filter:[],\n             select_group:\"Group\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_bar : \"Status\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({loading:true})\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value, Menu:Menu_name}\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n       this.setState({loading:false})\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n    <Card\n        title={this.state.value_bar}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n          <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_group}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    <Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n               <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n            </div>\n       </div>\n    </Card>\n    );\n  }\n}\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}
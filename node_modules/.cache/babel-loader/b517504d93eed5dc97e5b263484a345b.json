{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/OperationalCharts/AreaChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Area_CharthandleSubmit = e => {\n      this.setState({\n        value_ax: e.target.value\n      });\n    };\n\n    this.Area_CharthandleSubmit1 = e => {\n      this.setState({\n        value_ay: e.target.value\n      });\n    };\n\n    this.area_handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.loadStackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ay\n      });\n    };\n\n    this.state = {\n      area_chart_options: {\n        chart: {\n          stacked: true\n        },\n        colors: ['#008FFB', '#00E396', '#CED4DC'],\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true\n        },\n        xaxis: {\n          categories: ['']\n        },\n        yaxis: {\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"10M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"100M\";\n              } else if (val >= 1000000000) {\n                return val = val / 1000000000 + \"1B\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            opacityFrom: 0.6,\n            opacityTo: 0.8\n          }\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'left'\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        data: [31, 40]\n      }, {\n        name: 'series1',\n        data: [35, 19]\n      }],\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      loading: true,\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      area_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      area_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      area_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_areaChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAllChartData({\n      A: \"Group\",\n      B: \"Amount\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_header_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_int_header_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_all_data_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async loadStackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_areaChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_all_data_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = value_list;\n        SArea_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_areaChart_table: [table_dict]\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ax,\n      onChange: this.Area_CharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ay,\n      onChange: this.Area_CharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, this.state.select_amount), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.area_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Stacked\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Stacked\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"Stacked Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.area_table_columns,\n      dataSource: this.state.area_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_areaChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), this.state.area_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/OperationalCharts/AreaChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","AreaChart","Component","constructor","props","Area_CharthandleSubmit","e","setState","value_ax","target","value","Area_CharthandleSubmit1","value_ay","area_handleSubmit","preventDefault","loading","loadStackedAreaChartData","A","state","B","area_chart_options","chart","stacked","colors","dataLabels","enabled","stroke","show","xaxis","categories","yaxis","labels","formatter","val","Math","round","fill","type","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","area_chart_series","name","data","books","intHeader","filter","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_xl","value_yl","area_display","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","area_table_columns","area_table_data","download_areaChart_table","firstname","lastname","email","componentWillMount","loadAnalytical","loadIntHeaders","loadAllChartData","promise","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","download_lineChart_table","download_group_barChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","line_table_columns","line_table_data","Gbar_table_columns","Gbar_table_data","mix_table_columns","mix_table_data","value_list","SArea_chart_list","render","dv","View","source","transform","field","dimension","as","align","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","dataKey","min","max","ve_bar_dv","vertical_bar_data","override","width","marginLeft","map","index","cursor","fontSize","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n              categories:[''],\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     loading:true,\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     area_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\"});\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_header_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_int_header_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_all_data_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n       this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\nArea_CharthandleSubmit = (e) => {\n     this.setState({value_ax: e.target.value});\n };\n\nArea_CharthandleSubmit1 = (e) => {\n    this.setState({value_ay: e.target.value});\n  };\n\n\narea_handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.loadStackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay}\n  );\n  };\n\n\nasync loadStackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/ope_all_data_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n      this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n        <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_ax} onChange={this.Area_CharthandleSubmit}\n            style={{ width:\"110px\", marginLeft:\"20px\" }}>\n             <option>{this.state.select_group}</option>\n             {this.state.books.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n        </select>\n        <select class=\"custom-select\"  value={this.state.value_ay} onChange={this.Area_CharthandleSubmit1}\n            style={{ width:\"110px\", marginLeft:\"20px\" }}>\n             <option>{this.state.select_amount}</option>\n             {this.state.intHeader.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n        </select>\n        <React.Fragment>\n            <button onClick={this.area_handleSubmit} className='btn btn-info' style={{marginLeft:\"10px\"}}\n              type='button'>OK</button>\n        </React.Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Stacked\" style={{marginLeft:\"3px\"}}>\n        Table View</button>\n          <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_areaChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n         <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n        />\n\n         {this.state.area_display == true?\n            <ReactApexChart options={this.state.area_chart_options}\n            series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />:null\n         }\n     </div>\n    );\n  }\n}\nexport default AreaChart;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as _ from 'lodash';\nvar regEventName = /on(.+)(MouseEnter|MouseMove|MouseLeave|Click|DdlClick|MouseDown|MouseUp|TouchStart|TouchMove|TouchEnd)/;\nexport function setSEvent(chart, itemname, keyname, content) {\n  if (_.isEmpty(keyname)) {\n    return;\n  }\n\n  var parseEventItem = regEventName.exec(keyname);\n\n  if (!parseEventItem || parseEventItem.length <= 2) {\n    return;\n  }\n\n  var lowerEventItem = parseEventItem[1].toLowerCase();\n  var lowerEventName = parseEventItem[2].toLowerCase();\n  var eventItem = itemname + \"-\" + lowerEventItem;\n  chart.on(eventItem + \":\" + lowerEventName, function (ev) {\n    if (content) {\n      content(ev, chart);\n    }\n  });\n}\nexport function setEvent(chart, name, item) {\n  if (_.isEmpty(item)) {\n    return;\n  }\n\n  var events = Object.keys(item).filter(function (entry) {\n    return /^on/.test(entry);\n  });\n\n  if (_.isEmpty(events)) {\n    return;\n  }\n\n  events.forEach(function (entry) {\n    var eventName = entry.slice(2, entry.length);\n    var eventLowerCase = eventName.toLowerCase();\n    var content = item[entry];\n\n    if (item.gemo && eventLowerCase.indexOf('label') >= 0) {\n      var eventType = eventLowerCase.replace('label', '');\n      chart.on(\"label:\" + eventType, function (ev) {\n        if (content) {\n          content(ev, chart);\n        }\n      });\n      return;\n    }\n\n    if (name) {\n      chart.on(name + \":\" + eventLowerCase, function (ev) {\n        if (content) {\n          content(ev, chart);\n        }\n      });\n    } else {\n      chart.on(eventLowerCase, function (ev) {\n        if (content) {\n          content(ev, chart);\n        }\n      });\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
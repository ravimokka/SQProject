{"ast":null,"code":"import React from 'react';\nimport FlatButton from 'material-ui/FlatButton/FlatButton';\nimport CheckedIcon from 'material-ui/svg-icons/navigation/check';\nimport UnCheckedIcon from 'material-ui/svg-icons/toggle/check-box-outline-blank';\nexport default {\n  anchorOrigin: {\n    vertical: 'top',\n    horizontal: 'left'\n  },\n  autocompleteFilter: function autocompleteFilter(searchText, text) {\n    if (!text || typeof text !== 'string' && typeof text !== 'number') return false;\n    if (typeof searchText !== 'string' && typeof searchText !== 'number') return false;\n    return (text + '').toLowerCase().includes(searchText.toLowerCase());\n  },\n  autocompleteStyle: {},\n  canAutoPosition: true,\n  checkPosition: '',\n  checkedIcon: React.createElement(CheckedIcon, {\n    style: {\n      top: 'calc(50% - 12px)'\n    }\n  }),\n  children: [],\n  disabled: false,\n  elementHeight: 36,\n  hintTextAutocomplete: 'Type something',\n  infiniteLoadBeginEdgeOffset: undefined,\n  keepSearchOnSelect: false,\n  menuCloseButton: null,\n  multiple: false,\n  nb2show: 5,\n  noMatchFound: 'No match found',\n  noMatchFoundStyle: {},\n  onAutoCompleteTyping: function onAutoCompleteTyping() {},\n  onChange: function onChange() {},\n  onInfiniteLoad: function onInfiniteLoad() {},\n  onMenuOpen: function onMenuOpen() {},\n  onSelect: function onSelect() {},\n  openImmediately: false,\n  popoverClassName: '',\n  popoverWidth: 180,\n  resetButton: React.createElement(FlatButton, {\n    label: 'reset',\n    hoverColor: 'rgba(69, 90, 100, 0.1)',\n    fullWidth: true\n  }),\n  selectAllButton: React.createElement(FlatButton, {\n    label: 'select all',\n    hoverColor: 'rgba(69, 90, 100, 0.1)',\n    labelStyle: {\n      whiteSpace: 'nowrap'\n    },\n    fullWidth: true\n  }),\n  showAutocompleteThreshold: 10,\n  unCheckedIcon: React.createElement(UnCheckedIcon, {\n    style: {\n      top: 'calc(50% - 12px)'\n    }\n  }),\n  value: null,\n  withResetSelectAllButtons: false\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/material-ui-superselectfield/es/defaultProps/selectField.defaultProps.js"],"names":["React","FlatButton","CheckedIcon","UnCheckedIcon","anchorOrigin","vertical","horizontal","autocompleteFilter","searchText","text","toLowerCase","includes","autocompleteStyle","canAutoPosition","checkPosition","checkedIcon","createElement","style","top","children","disabled","elementHeight","hintTextAutocomplete","infiniteLoadBeginEdgeOffset","undefined","keepSearchOnSelect","menuCloseButton","multiple","nb2show","noMatchFound","noMatchFoundStyle","onAutoCompleteTyping","onChange","onInfiniteLoad","onMenuOpen","onSelect","openImmediately","popoverClassName","popoverWidth","resetButton","label","hoverColor","fullWidth","selectAllButton","labelStyle","whiteSpace","showAutocompleteThreshold","unCheckedIcon","value","withResetSelectAllButtons"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FlatButton from 'material-ui/FlatButton/FlatButton';\nimport CheckedIcon from 'material-ui/svg-icons/navigation/check';\nimport UnCheckedIcon from 'material-ui/svg-icons/toggle/check-box-outline-blank';\n\nexport default {\n  anchorOrigin: { vertical: 'top', horizontal: 'left' },\n  autocompleteFilter: function autocompleteFilter(searchText, text) {\n    if (!text || typeof text !== 'string' && typeof text !== 'number') return false;\n    if (typeof searchText !== 'string' && typeof searchText !== 'number') return false;\n    return (text + '').toLowerCase().includes(searchText.toLowerCase());\n  },\n  autocompleteStyle: {},\n  canAutoPosition: true,\n  checkPosition: '',\n  checkedIcon: React.createElement(CheckedIcon, { style: { top: 'calc(50% - 12px)' } }),\n  children: [],\n  disabled: false,\n  elementHeight: 36,\n  hintTextAutocomplete: 'Type something',\n  infiniteLoadBeginEdgeOffset: undefined,\n  keepSearchOnSelect: false,\n  menuCloseButton: null,\n  multiple: false,\n  nb2show: 5,\n  noMatchFound: 'No match found',\n  noMatchFoundStyle: {},\n  onAutoCompleteTyping: function onAutoCompleteTyping() {},\n  onChange: function onChange() {},\n  onInfiniteLoad: function onInfiniteLoad() {},\n  onMenuOpen: function onMenuOpen() {},\n  onSelect: function onSelect() {},\n  openImmediately: false,\n  popoverClassName: '',\n  popoverWidth: 180,\n  resetButton: React.createElement(FlatButton, { label: 'reset', hoverColor: 'rgba(69, 90, 100, 0.1)', fullWidth: true }),\n  selectAllButton: React.createElement(FlatButton, {\n    label: 'select all',\n    hoverColor: 'rgba(69, 90, 100, 0.1)',\n    labelStyle: { whiteSpace: 'nowrap' },\n    fullWidth: true\n  }),\n  showAutocompleteThreshold: 10,\n  unCheckedIcon: React.createElement(UnCheckedIcon, { style: { top: 'calc(50% - 12px)' } }),\n  value: null,\n  withResetSelectAllButtons: false\n};"]},"metadata":{},"sourceType":"module"}
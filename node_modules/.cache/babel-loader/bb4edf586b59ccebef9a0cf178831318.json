{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\n\nconst DataSet = require('@antv/data-set');\n\nconst t = [{\n  item: 'A',\n  count: 40\n}, {\n  item: 'B',\n  count: 21\n}, {\n  item: 'C',\n  count: 17\n}, {\n  item: 'D',\n  count: 13\n}, {\n  item: 'E',\n  count: 9\n}];\nconst sourceData = t;\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  render() {\n    return React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Gradient Donut Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" \", value, \" \");\n    }))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","DataSet","require","t","item","count","sourceData","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","data","rows","Reactjs","Component","render","span","order","minHeight","state","value","handleSubmitDonut","width","marginLeft","books","map","index","cursor","fontSize","stroke","lineWidth"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,QAAyD,aAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAGA,MAAMC,CAAC,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAD,EAA0B;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAA1B,EACU;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CADV,EACmC;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CADnC,EAC4D;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAD5D,CAAV;AAEA,MAAMC,UAAU,GAAGH,CAAnB;AAEA,MAAMI,KAAK,GAAG,CAAC;AACbC,EAAAA,OAAO,EAAE,SADI;AAEbC,EAAAA,GAAG,EAAE,CAFQ;AAGbC,EAAAA,SAAS,EAAE;AAHE,CAAD,CAAd;AAMA,MAAMC,EAAE,GAAG,IAAIV,OAAO,CAACW,IAAZ,GAAmBC,MAAnB,CAA0BP,UAA1B,CAAX;AACAK,EAAE,CAACG,SAAH,CAAa;AACXC,EAAAA,IAAI,EAAE,SADK;AAEXC,EAAAA,KAAK,EAAE,OAFI;AAGXC,EAAAA,SAAS,EAAE,MAHA;AAIXC,EAAAA,EAAE,EAAE;AAJO,CAAb;AAMA,MAAMC,IAAI,GAAGR,EAAE,CAACS,IAAhB;;AAIA,MAAMC,OAAN,SAAsBrB,KAAK,CAACsB,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,WAEA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACC,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACD,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,SAAS,EAAC,qDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEhB;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKC,iBAAvE;AACoB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAC,OAAR;AAAiBC,QAAAA,UAAU,EAAC;AAA5B,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEqB;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFrB,EAGsB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,CAACL,KAAD,EAAOM,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,UAAV;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAEF,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoDN,KADpD,MAAT;AAC+E,KAFxF,CAHtB,CAFgB,CADA,EAmBhB,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAET,IAAnC;AAAyC,MAAA,KAAK,EAAEZ,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAEQ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAGQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,EAIQ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,EAKQ,oBAAC,GAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,KAAK,EAAE;AAAE8B,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,CAnBgB,CALF,CADV,CAFA;AA+CD;;AAjDmC;;AAmDtC,eAAejB,OAAf","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nconst DataSet = require('@antv/data-set');\n\n\nconst t = [{ item: 'A', count: 40 },{ item: 'B', count: 21 },\n                    { item: 'C', count: 17 },{ item: 'D', count: 13 },{ item: 'E', count: 9 }];\nconst sourceData = t\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\n\n\nclass Reactjs extends React.Component {\n  render() {\n    return (\n\n    <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Gradient Donut Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                <div>\n\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n\n\n                    </div>\n\n<Chart forceFit height={400} data={data} scale={scale}>\n        <Tooltip showTitle={false} />\n        <Coord type=\"theta\" />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n\n        />\n      </Chart>\n\n              </div>\n              </Card>\n            </Col>\n\n\n     \n    );\n  }\n}\nexport default Reactjs;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
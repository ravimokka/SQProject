{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nimport createPlotlyComponent from 'react-plotlyjs'; //See the list of possible plotly bundles at https://github.com/plotly/plotly.js/blob/master/dist/README.md#partial-bundles or roll your own\n\nimport Plotly from 'plotly.js/dist/plotly-cartesian';\nconst PlotlyComponent = createPlotlyComponent(Plotly);\nconst sourceDataDaily = [{\n  name: \"Recieved\",\n  \"1AM\": 18.9,\n  \"2AM\": 28.8,\n  \"3AM\": 39.3,\n  \"4AM\": 75.4,\n  \"5AM\": 26.4,\n  \"6AM\": 11.4,\n  \"7AM\": 35.4,\n  \"8AM\": 50.4,\n  \"9AM\": 62.4,\n  \"10AM\": 25.4,\n  \"11AM\": 67.4,\n  \"12PM\": 98.4,\n  \"1PM\": 60.9,\n  \"2PM\": 45.8,\n  \"3PM\": 33.3,\n  \"4PM\": 65.4,\n  \"5PM\": 89.4,\n  \"6PM\": 75.4,\n  \"7PM\": 19.4,\n  \"8PM\": 12.4,\n  \"9PM\": 36.4,\n  \"10PM\": 20.4,\n  \"11PM\": 19.4,\n  \"12PM\": 95.4\n}, {\n  name: \"Sent\",\n  \"1AM\": 90.9,\n  \"2AM\": 71.8,\n  \"3AM\": 99.3,\n  \"4AM\": 25.4,\n  \"5AM\": 65.4,\n  \"6AM\": 85.4,\n  \"7AM\": 47.4,\n  \"8AM\": 36.4,\n  \"9AM\": 22.4,\n  \"10AM\": 33.4,\n  \"11AM\": 88.4,\n  \"12PM\": 44.4,\n  \"1PM\": 66.9,\n  \"2PM\": 67.8,\n  \"3PM\": 20.3,\n  \"4PM\": 19.4,\n  \"5PM\": 37.4,\n  \"6PM\": 86.4,\n  \"7PM\": 54.4,\n  \"8PM\": 77.4,\n  \"9PM\": 44.4,\n  \"10PM\": 25.4,\n  \"11PM\": 37.4,\n  \"12PM\": 46.4\n}];\nconst sourceDataWeekly = [{\n  name: \"Recieved\",\n  \"Sat.\": 98.9,\n  \"Sun.\": 28.8,\n  \"Mon.\": 69.3,\n  \"Tue.\": 81.4,\n  \"Wed.\": 47,\n  \"Thu.\": 20.3,\n  \"Fri.\": 24\n}, {\n  name: \"Sent\",\n  \"Sat.\": 18.4,\n  \"Sun.\": 33.2,\n  \"Mon.\": 54.5,\n  \"Tue.\": 99.7,\n  \"Wed.\": 52.6,\n  \"Thu.\": 45.5,\n  \"Fri.\": 67.4\n}];\nconst sourceDataMonthly = [{\n  name: \"Recieved\",\n  \"Jan.\": 69.9,\n  \"Feb.\": 25.8,\n  \"Mar.\": 70.3,\n  \"Apr.\": 67.4,\n  \"May.\": 65,\n  \"Jun.\": 45.3,\n  \"Jul.\": 82,\n  \"Sep.\": 72.6,\n  \"Oct.\": 65.6,\n  \"Nov.\": 45.6,\n  \"Dec.\": 90.6\n}, {\n  name: \"Sent\",\n  \"Jan.\": 48.9,\n  \"Feb.\": 38.8,\n  \"Mar.\": 40.3,\n  \"Apr.\": 31.4,\n  \"May.\": 47,\n  \"Jun.\": 40.3,\n  \"Jul.\": 24,\n  \"Sep.\": 38.6,\n  \"Oct.\": 38.6,\n  \"Nov.\": 38.6,\n  \"Dec.\": 38.6\n}];\n\nclass Analytical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n    this.onChangeChart = this.onChangeChart.bind(this);\n  }\n\n  componentDidMount() {\n    const dv = new DataSet.View().source(sourceDataDaily);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"1AM\", \"2AM\", \"3AM\", \"4AM\", \"5AM\", \"6AM\", \"7AM\", \"8AM\", \"9AM\", \"10AM\", \"11AM\", \"12PM\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\", \"6PM\", \"7PM\", \"8PM\", \"9PM\", \"10PM\", \"11PM\", \"12PM\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({\n      chartData: data,\n      selectedKey: \"daily\"\n    });\n  }\n\n  onChangeChart(value) {\n    if (value === \"daily\") {\n      const dv = new DataSet.View().source(sourceDataDaily);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"1AM\", \"2AM\", \"3AM\", \"4AM\", \"5AM\", \"6AM\", \"7AM\", \"8AM\", \"9AM\", \"10AM\", \"11AM\", \"12PM\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\", \"6PM\", \"7PM\", \"8PM\", \"9PM\", \"10PM\", \"11PM\", \"12PM\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({\n        chartData: data,\n        selectedKey: value\n      });\n    } else if (value === \"weekly\") {\n      const dv = new DataSet.View().source(sourceDataWeekly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Sat.\", \"Sun.\", \"Mon.\", \"Tue.\", \"Wed.\", \"Thu.\", \"Fri.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({\n        chartData: data,\n        selectedKey: value\n      });\n    } else if (value === \"monthly\") {\n      const dv = new DataSet.View().source(sourceDataMonthly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May.\", \"Jun.\", \"Jul.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({\n        chartData: data,\n        selectedKey: value\n      });\n    }\n\n    console.log(\"Selected :\" + value);\n    console.log(this.state.chartData);\n  }\n\n  render() {\n    let data = [{\n      type: 'scatter',\n      // all \"scatter\" attributes: https://plot.ly/javascript/reference/#scatter\n      x: [1, 2, 3],\n      // more about \"x\": #scatter-x\n      y: [6, 2, 3],\n      // #scatter-y\n      marker: {\n        // marker is an object, valid marker keys: #scatter-marker\n        color: 'rgb(16, 32, 77)' // more about \"marker.color\": #scatter-marker-color\n\n      }\n    }, {\n      type: 'bar',\n      // all \"bar\" chart attributes: #bar\n      x: [1, 2, 3],\n      // more about \"x\": #bar-x\n      y: [6, 2, 3],\n      // #bar-y\n      name: 'bar chart example' // #bar-name\n\n    }];\n    let layout = {\n      // all \"layout\" attributes: #layout\n      title: 'simple example',\n      // more about \"layout.title\": #layout-title\n      xaxis: {\n        // all \"layout.xaxis\" attributes: #layout-xaxis\n        title: 'time' // more about \"layout.xaxis.title\": #layout-xaxis-title\n\n      },\n      annotations: [// all \"annotation\" attributes: #layout-annotations\n      {\n        text: 'simple annotation',\n        // #layout-annotations-text\n        x: 0,\n        // #layout-annotations-x\n        xref: 'paper',\n        // #layout-annotations-xref\n        y: 0,\n        // #layout-annotations-y\n        yref: 'paper' // #layout-annotations-yref\n\n      }]\n    };\n    let config = {\n      showLink: false,\n      displayModeBar: true\n    };\n    return React.createElement(PlotlyComponent, {\n      className: \"whatever\",\n      data: data,\n      layout: layout,\n      config: config,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","ChartHistoryGroupColumn","ChartBreakdownDonut","DataSet","require","createPlotlyComponent","Plotly","PlotlyComponent","sourceDataDaily","name","sourceDataWeekly","sourceDataMonthly","Analytical","constructor","props","state","chartData","selectedKey","onChangeChart","bind","componentDidMount","dv","View","source","transform","type","fields","key","value","data","rows","setState","console","log","render","x","y","marker","color","layout","title","xaxis","annotations","text","xref","yref","config","showLink","displayModeBar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\n\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nconst DataSet = require(\"@antv/data-set\");\nimport createPlotlyComponent from 'react-plotlyjs';\n//See the list of possible plotly bundles at https://github.com/plotly/plotly.js/blob/master/dist/README.md#partial-bundles or roll your own\nimport Plotly from 'plotly.js/dist/plotly-cartesian';\nconst PlotlyComponent = createPlotlyComponent(Plotly);\nconst sourceDataDaily = [\n  {\n    name: \"Recieved\",\n    \"1AM\": 18.9,\n    \"2AM\": 28.8,\n    \"3AM\": 39.3,\n    \"4AM\": 75.4,\n    \"5AM\": 26.4,\n    \"6AM\": 11.4,\n    \"7AM\": 35.4,\n    \"8AM\": 50.4,\n    \"9AM\": 62.4,\n    \"10AM\": 25.4,\n    \"11AM\": 67.4,\n    \"12PM\": 98.4,\n    \"1PM\": 60.9,\n    \"2PM\": 45.8,\n    \"3PM\": 33.3,\n    \"4PM\": 65.4,\n    \"5PM\": 89.4,\n    \"6PM\": 75.4,\n    \"7PM\": 19.4,\n    \"8PM\": 12.4,\n    \"9PM\": 36.4,\n    \"10PM\": 20.4,\n    \"11PM\": 19.4,\n    \"12PM\": 95.4,\n  },\n  {\n    name: \"Sent\",\n    \"1AM\": 90.9,\n    \"2AM\": 71.8,\n    \"3AM\": 99.3,\n    \"4AM\": 25.4,\n    \"5AM\": 65.4,\n    \"6AM\": 85.4,\n    \"7AM\": 47.4,\n    \"8AM\": 36.4,\n    \"9AM\": 22.4,\n    \"10AM\": 33.4,\n    \"11AM\": 88.4,\n    \"12PM\": 44.4,\n    \"1PM\": 66.9,\n    \"2PM\": 67.8,\n    \"3PM\": 20.3,\n    \"4PM\": 19.4,\n    \"5PM\": 37.4,\n    \"6PM\": 86.4,\n    \"7PM\": 54.4,\n    \"8PM\": 77.4,\n    \"9PM\": 44.4,\n    \"10PM\": 25.4,\n    \"11PM\": 37.4,\n    \"12PM\": 46.4,\n  }\n];\nconst sourceDataWeekly = [\n  {\n    name: \"Recieved\",\n    \"Sat.\": 98.9,\n    \"Sun.\": 28.8,\n    \"Mon.\": 69.3,\n    \"Tue.\": 81.4,\n    \"Wed.\": 47,\n    \"Thu.\": 20.3,\n    \"Fri.\": 24\n  },\n  {\n    name: \"Sent\",\n    \"Sat.\": 18.4,\n    \"Sun.\": 33.2,\n    \"Mon.\": 54.5,\n    \"Tue.\": 99.7,\n    \"Wed.\": 52.6,\n    \"Thu.\": 45.5,\n    \"Fri.\": 67.4\n  }\n];\nconst sourceDataMonthly = [\n  {\n    name: \"Recieved\",\n    \"Jan.\": 69.9,\n    \"Feb.\": 25.8,\n    \"Mar.\": 70.3,\n    \"Apr.\": 67.4,\n    \"May.\": 65,\n    \"Jun.\": 45.3,\n    \"Jul.\": 82,\n    \"Sep.\": 72.6,\n    \"Oct.\": 65.6,\n    \"Nov.\": 45.6,\n    \"Dec.\": 90.6\n  },\n  {\n    name: \"Sent\",\n    \"Jan.\": 48.9,\n    \"Feb.\": 38.8,\n    \"Mar.\": 40.3,\n    \"Apr.\": 31.4,\n    \"May.\": 47,\n    \"Jun.\": 40.3,\n    \"Jul.\": 24,\n    \"Sep.\": 38.6,\n    \"Oct.\": 38.6,\n    \"Nov.\": 38.6,\n    \"Dec.\": 38.6\n  }\n];\nclass Analytical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n    this.onChangeChart = this.onChangeChart.bind(this);\n  }\n  componentDidMount() {\n    const dv = new DataSet.View().source(sourceDataDaily);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"1AM\",\"2AM\",\"3AM\",\"4AM\",\"5AM\",\"6AM\",\"7AM\",\"8AM\",\"9AM\",\"10AM\",\"11AM\",\"12PM\",\"1PM\",\"2PM\",\"3PM\",\"4PM\",\"5PM\",\"6PM\",\"7PM\",\"8PM\",\"9PM\",\"10PM\",\"11PM\",\"12PM\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({ chartData: data, selectedKey: \"daily\" });\n  }\n\n  onChangeChart(value) {\n    if (value === \"daily\") {\n      const dv = new DataSet.View().source(sourceDataDaily);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"1AM\",\"2AM\",\"3AM\",\"4AM\",\"5AM\",\"6AM\",\"7AM\",\"8AM\",\"9AM\",\"10AM\",\"11AM\",\"12PM\",\"1PM\",\"2PM\",\"3PM\",\"4PM\",\"5PM\",\"6PM\",\"7PM\",\"8PM\",\"9PM\",\"10PM\",\"11PM\",\"12PM\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    } else if (value === \"weekly\") {\n      const dv = new DataSet.View().source(sourceDataWeekly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Sat.\",\"Sun.\",\"Mon.\",\"Tue.\",\"Wed.\",\"Thu.\",\"Fri.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    } else if (value === \"monthly\") {\n\n\n      const dv = new DataSet.View().source(sourceDataMonthly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Jan.\",\"Feb.\",\"Mar.\",\"Apr.\",\"May.\",\"Jun.\",\"Jul.\",\"Sep.\",\"Oct.\",\"Nov.\",\"Dec.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    }\n    console.log(\"Selected :\" + value);\n    console.log(this.state.chartData);\n  }\nrender() {\n    let data = [\n      {\n        type: 'scatter',  // all \"scatter\" attributes: https://plot.ly/javascript/reference/#scatter\n        x: [1, 2, 3],     // more about \"x\": #scatter-x\n        y: [6, 2, 3],     // #scatter-y\n        marker: {         // marker is an object, valid marker keys: #scatter-marker\n          color: 'rgb(16, 32, 77)' // more about \"marker.color\": #scatter-marker-color\n        }\n      },\n      {\n        type: 'bar',      // all \"bar\" chart attributes: #bar\n        x: [1, 2, 3],     // more about \"x\": #bar-x\n        y: [6, 2, 3],     // #bar-y\n        name: 'bar chart example' // #bar-name\n      }\n    ];\n    let layout = {                     // all \"layout\" attributes: #layout\n      title: 'simple example',  // more about \"layout.title\": #layout-title\n      xaxis: {                  // all \"layout.xaxis\" attributes: #layout-xaxis\n        title: 'time'         // more about \"layout.xaxis.title\": #layout-xaxis-title\n      },\n      annotations: [            // all \"annotation\" attributes: #layout-annotations\n        {\n          text: 'simple annotation',    // #layout-annotations-text\n          x: 0,                         // #layout-annotations-x\n          xref: 'paper',                // #layout-annotations-xref\n          y: 0,                         // #layout-annotations-y\n          yref: 'paper'                 // #layout-annotations-yref\n        }\n      ]\n    };\n    let config = {\n      showLink: false,\n      displayModeBar: true\n    };\n    return (\n      <PlotlyComponent className=\"whatever\" data={data} layout={layout} config={config}/>\n    );\n  }\n\n}\nexport default Analytical;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nconst sourceDataWeekly = [{\n  name: \"Recieved\",\n  \"Mooka.\": 98.9,\n  \"Sun.\": 28.8,\n  \"Mon.\": 69.3,\n  \"Tue.\": 81.4,\n  \"Wed.\": 47,\n  \"Thu.\": 20.3,\n  \"Fri.\": 24\n}, {\n  name: \"Sent\",\n  \"Mooka.\": 18.4,\n  \"Sun.\": 33.2,\n  \"Mon.\": 54.5,\n  \"Tue.\": 99.7,\n  \"Wed.\": 52.6,\n  \"Thu.\": 45.5,\n  \"Fri.\": 67.4\n}];\n\nclass Reactjs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n    this.onChangeChart = this.onChangeChart.bind(this);\n  }\n\n  componentDidMount() {\n    const dv = new DataSet.View().source(sourceDataWeekly);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"Mooka.\", \"Sun.\", \"Mon.\", \"Tue.\", \"Wed.\", \"Thu.\", \"Fri.\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({\n      chartData: data,\n      selectedKey: value\n    });\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: this.props.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"keySelect*average\",\n      color: \"name\",\n      adjust: [{\n        type: \"dodge\",\n        marginRatio: 1 / 32\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","ChartHistoryGroupColumn","ChartBreakdownDonut","DataSet","require","sourceDataWeekly","name","Reactjs","constructor","props","state","chartData","selectedKey","onChangeChart","bind","componentDidMount","dv","View","source","transform","type","fields","key","value","data","rows","setState","render","marginRatio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AAEA,OAAOC,uBAAP,MAAoC,8CAApC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,MAAMC,gBAAgB,GAAG,CACvB;AACEC,EAAAA,IAAI,EAAE,UADR;AAEE,YAAU,IAFZ;AAGE,UAAQ,IAHV;AAIE,UAAQ,IAJV;AAKE,UAAQ,IALV;AAME,UAAQ,EANV;AAOE,UAAQ,IAPV;AAQE,UAAQ;AARV,CADuB,EAWvB;AACEA,EAAAA,IAAI,EAAE,MADR;AAEE,YAAU,IAFZ;AAGE,UAAQ,IAHV;AAIE,UAAQ,IAJV;AAKE,UAAQ,IALV;AAME,UAAQ,IANV;AAOE,UAAQ,IAPV;AAQE,UAAQ;AARV,CAXuB,CAAzB;;AAuBA,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAC9Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,IAAIb,OAAO,CAACc,IAAZ,GAAmBC,MAAnB,CAA0Bb,gBAA1B,CAAX;AACEW,IAAAA,EAAE,CAACG,SAAH,CAAa;AACXC,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAU,MAAV,EAAiB,MAAjB,EAAwB,MAAxB,EAA+B,MAA/B,EAAsC,MAAtC,EAA6C,MAA7C,CAFG;AAGXC,MAAAA,GAAG,EAAE,WAHM;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,UAAMC,IAAI,GAAGR,EAAE,CAACS,IAAhB;AACA,SAAKC,QAAL,CAAc;AAAEf,MAAAA,SAAS,EAAEa,IAAb;AAAmBZ,MAAAA,WAAW,EAAEW;AAAhC,KAAd;AACH;;AAIDI,EAAAA,MAAM,GAAG;AACN,WACC,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,MAAM,EAAE,GAAxB;AAA6B,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWE,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAC,mBADX;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAE,CAAC;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBQ,QAAAA,WAAW,EAAE,IAAI;AAAlC,OAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADD;AAYF;;AAvC6B;;AAyChC,eAAerB,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\n\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nconst DataSet = require(\"@antv/data-set\");\n\nconst sourceDataWeekly = [\n  {\n    name: \"Recieved\",\n    \"Mooka.\": 98.9,\n    \"Sun.\": 28.8,\n    \"Mon.\": 69.3,\n    \"Tue.\": 81.4,\n    \"Wed.\": 47,\n    \"Thu.\": 20.3,\n    \"Fri.\": 24\n  },\n  {\n    name: \"Sent\",\n    \"Mooka.\": 18.4,\n    \"Sun.\": 33.2,\n    \"Mon.\": 54.5,\n    \"Tue.\": 99.7,\n    \"Wed.\": 52.6,\n    \"Thu.\": 45.5,\n    \"Fri.\": 67.4\n  }\n];\n\nclass Reactjs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n    this.onChangeChart = this.onChangeChart.bind(this);\n  }\n\n\n\n  componentDidMount() {\n    const dv = new DataSet.View().source(sourceDataWeekly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Mooka.\",\"Sun.\",\"Mon.\",\"Tue.\",\"Wed.\",\"Thu.\",\"Fri.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n  }\n\n\n\n  render() {\n     return (\n      <Chart forceFit height={400} data={this.props.chartData}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Line\n          position=\"keySelect*average\"\n          color=\"name\"\n          adjust={[{ type: \"dodge\", marginRatio: 1 / 32 }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default Reactjs;\n\n"]},"metadata":{},"sourceType":"module"}
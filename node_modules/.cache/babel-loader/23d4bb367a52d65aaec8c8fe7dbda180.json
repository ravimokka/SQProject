{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Drawing = require('../../components/drawing');\n\nvar Registry = require('../../registry');\n\nfunction style(gd) {\n  var s = d3.select(gd).selectAll('g.trace.scatter');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.selectAll('g.points').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d.trace || d[0].trace;\n    stylePoints(sel, trace, gd);\n  });\n  s.selectAll('g.text').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d.trace || d[0].trace;\n    styleText(sel, trace, gd);\n  });\n  s.selectAll('g.trace path.js-line').call(Drawing.lineGroupStyle);\n  s.selectAll('g.trace path.js-fill').call(Drawing.fillGroupStyle);\n  Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n  Drawing.pointStyle(sel.selectAll('path.point'), trace, gd);\n}\n\nfunction styleText(sel, trace, gd) {\n  Drawing.textPointStyle(sel.selectAll('text'), trace, gd);\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n\n  if (trace.selectedpoints) {\n    Drawing.selectedPointStyle(sel.selectAll('path.point'), trace);\n    Drawing.selectedTextStyle(sel.selectAll('text'), trace);\n  } else {\n    stylePoints(sel, trace, gd);\n    styleText(sel, trace, gd);\n  }\n}\n\nmodule.exports = {\n  style: style,\n  stylePoints: stylePoints,\n  styleText: styleText,\n  styleOnSelect: styleOnSelect\n};","map":null,"metadata":{},"sourceType":"script"}
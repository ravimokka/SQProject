{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../lib');\n\nvar toImage = require('../plot_api/to_image');\n\nvar fileSaver = require('./filesaver');\n\nvar helpers = require('./helpers');\n/**\n * Plotly.downloadImage\n *\n * @param {object | string | HTML div} gd\n *   can either be a data/layout/config object\n *   or an existing graph <div>\n *   or an id to an existing graph <div>\n * @param {object} opts (see Plotly.toImage in ../plot_api/to_image)\n * @return {promise}\n */\n\n\nfunction downloadImage(gd, opts) {\n  var _gd;\n\n  if (!Lib.isPlainObject(gd)) _gd = Lib.getGraphDiv(gd);\n  opts = opts || {};\n  opts.format = opts.format || 'png';\n  opts.imageDataOnly = true;\n  return new Promise(function (resolve, reject) {\n    if (_gd && _gd._snapshotInProgress) {\n      reject(new Error('Snapshotting already in progress.'));\n    } // see comments within svgtoimg for additional\n    //   discussion of problems with IE\n    //   can now draw to canvas, but CORS tainted canvas\n    //   does not allow toDataURL\n    //   svg format will work though\n\n\n    if (Lib.isIE() && opts.format !== 'svg') {\n      reject(new Error(helpers.MSG_IE_BAD_FORMAT));\n    }\n\n    if (_gd) _gd._snapshotInProgress = true;\n    var promise = toImage(gd, opts);\n    var filename = opts.filename || gd.fn || 'newplot';\n    filename += '.' + opts.format;\n    promise.then(function (result) {\n      if (_gd) _gd._snapshotInProgress = false;\n      return fileSaver(result, filename, opts.format);\n    }).then(function (name) {\n      resolve(name);\n    }).catch(function (err) {\n      if (_gd) _gd._snapshotInProgress = false;\n      reject(err);\n    });\n  });\n}\n\nmodule.exports = downloadImage;","map":null,"metadata":{},"sourceType":"script"}
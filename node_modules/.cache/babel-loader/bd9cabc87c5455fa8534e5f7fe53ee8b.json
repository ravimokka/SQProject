{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar drawRaw = require('../annotations/draw').drawRaw;\n\nvar project = require('../../plots/gl3d/project');\n\nvar axLetters = ['x', 'y', 'z'];\n\nmodule.exports = function draw(scene) {\n  var fullSceneLayout = scene.fullSceneLayout;\n  var dataScale = scene.dataScale;\n  var anns = fullSceneLayout.annotations;\n\n  for (var i = 0; i < anns.length; i++) {\n    var ann = anns[i];\n    var annotationIsOffscreen = false;\n\n    for (var j = 0; j < 3; j++) {\n      var axLetter = axLetters[j];\n      var pos = ann[axLetter];\n      var ax = fullSceneLayout[axLetter + 'axis'];\n      var posFraction = ax.r2fraction(pos);\n\n      if (posFraction < 0 || posFraction > 1) {\n        annotationIsOffscreen = true;\n        break;\n      }\n    }\n\n    if (annotationIsOffscreen) {\n      scene.fullLayout._infolayer.select('.annotation-' + scene.id + '[data-index=\"' + i + '\"]').remove();\n    } else {\n      ann._pdata = project(scene.glplot.cameraParams, [fullSceneLayout.xaxis.r2l(ann.x) * dataScale[0], fullSceneLayout.yaxis.r2l(ann.y) * dataScale[1], fullSceneLayout.zaxis.r2l(ann.z) * dataScale[2]]);\n      drawRaw(scene.graphDiv, ann, i, scene.id, ann._xa, ann._ya);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
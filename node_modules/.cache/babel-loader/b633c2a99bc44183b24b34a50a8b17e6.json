{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst CollectionCreateForm = Form.create({\n  name: \"form_in_modal\"\n})( // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 240\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const columns = [{\n      title: 'Order Number',\n      dataIndex: 'oNumber',\n      key: 'oNumber'\n    }, {\n      title: 'Confirmation Date',\n      dataIndex: 'confDate',\n      key: 'confDate'\n    }, {\n      title: 'Con',\n      dataIndex: 'customer',\n      key: 'customer'\n    }, {\n      title: 'Date',\n      dataIndex: 'salePer',\n      key: 'salePer'\n    }, {\n      title: 'Conf',\n      dataIndex: 'total',\n      key: 'total'\n    }, {\n      title: 'Conf',\n      dataIndex: 'total',\n      key: 'total'\n    }];\n    const data = [{\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success']\n    }, {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success']\n    }];\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n});\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst sourceData = [{\n  name: 'A',\n  value: 131744\n}, {\n  name: 'B',\n  value: 104970\n}, {\n  name: 'C',\n  value: 29034\n}, {\n  name: 'D',\n  value: 23489\n}, {\n  name: 'E',\n  value: 18203\n}];\nconst vertical_data = [{\n  name: 'A',\n  value: 30000000\n}, {\n  name: 'B',\n  value: 40000000\n}, {\n  name: 'C',\n  value: 530000000\n}];\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n    if (val < 100000) {\n      return Math.round(val / 1000 * 10) / 10 + 'k';\n    } else if (val >= 1000000) {\n      return val = val / 1000000 + \"M\";\n    } else {\n      return val;\n    }\n  }\n}, {\n  dataKey: 'year',\n  min: 0,\n  max: 1\n}];\nvar categories_data = [];\nvar months = categories_data.map(item => item.month).filter((item, index, array) => array.indexOf(item) == index);\nconst productTotals = categories_data.reduce((obj, curr) => {\n  if (!obj[curr.name]) {\n    obj[curr.name] = [];\n  }\n\n  obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records);\n  return obj;\n}, {});\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n  return {\n    name: name,\n    data: months.map((month, monthIndex) => {\n      if (!prodArr[monthIndex]) {\n        return 0;\n      } else {\n        return prodArr[monthIndex];\n      }\n    })\n  };\n});\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadGroupBarData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitVerticalBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_v_bar: e.target.value\n      });\n      this.VerticalBarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit = e => {\n      this.setState({\n        value_mx: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit1 = e => {\n      this.setState({\n        value_my: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit2 = e => {\n      this.setState({\n        value_mz: e.target.value\n      });\n    };\n\n    this.mixed_handleSubmit = e => {\n      e.preventDefault();\n      this.loadMixedChartData({\n        A: this.state.value_mx,\n        B: this.state.value_my,\n        C: this.state.value_mz\n      });\n    };\n\n    this.Area_CharthandleSubmit = e => {\n      this.setState({\n        value_ax: e.target.value\n      });\n    };\n\n    this.Area_CharthandleSubmit1 = e => {\n      this.setState({\n        value_ay: e.target.value\n      });\n    };\n\n    this.area_handleSubmit = e => {\n      e.preventDefault();\n      this.loadStackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ay\n      });\n    };\n\n    this.state = {\n      line_chart_options: {\n        chart: {\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: [...months]\n        }\n      },\n      line_chart_series: [],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        }\n      },\n      series2: [],\n      bar_chart_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      bar_chart_series: [],\n      mixed_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 4\n        },\n        title: {\n          text: '',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      mixed_chart_series: [{\n        name: 'Status',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'A',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'B',\n        type: 'column',\n        data: [30]\n      }, {\n        name: 'C',\n        type: 'column',\n        data: [150]\n      }, {\n        name: 'LINE',\n        type: 'line',\n        data: [40, 20]\n      }],\n      area_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          categories: [\"\"]\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        name: 'series3',\n        data: [31, 40, 28, 51, 42, 109, 100]\n      }, {\n        name: 'series2',\n        data: [11, 32, 45, 32, 34, 52, 41]\n      }],\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_status: \"Status\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: []\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n        } else {}\n      }\n\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n      }\n\n      const sd = [{\n        name: 'B',\n        value: 13000\n      }];\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      console.log(data);\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n      }\n\n      const sd = [{\n        name: 'B',\n        value: 13000\n      }];\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      console.log(data);\n    }\n  } //================================================ Group Bar Chart ====================================================================\n\n\n  async loadGroupBarData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      const d = [{\n        'name': 'Actual',\n        'data': [1, 23]\n      }, {\n        'name': 'Budget',\n        'data': [1, 2, 4, 5]\n      }];\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Bar_chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Bar_chart_list.push(data_dict);\n        } else {}\n      }\n\n      const x = [{\n        name: 'A',\n        value: 131744\n      }];\n      this.setState({\n        bar_data: Bar_chart_list\n      });\n    }\n  } //========================================== Vertical bar Chart ================================================================\n\n\n  async VerticalBarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      ve_bar_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Ve_Bar_chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Ve_Bar_chart_list.push(data_dict);\n        } else {}\n      }\n\n      const x = [{\n        name: 'A',\n        value: 131744\n      }];\n      this.setState({\n        ve_bar_data: Ve_Bar_chart_list\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n      }\n\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      console.log(data);\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async loadStackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        SArea_chart_list.push(data_dict);\n      }\n\n      const m = \"test\";\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  componentDidMount() {//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n    //  this.setState({line_data:sourceDataDaily})\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1424\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Line chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1425\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1430\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_xl,\n      onChange: this.handleSubmitLineChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1433\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1435\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_yl,\n      onChange: this.handleSubmitLineChart1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1441\n      },\n      __self: this\n    }, this.state.select_amount_USD), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitLineChartOK,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1448\n      },\n      __self: this\n    }, \"OK\")), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: this.state.line_chart_source_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1453\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"name*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1456\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1469\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_bar,\n      onChange: this.handleSubmitBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1472\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1474\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: basic_bar_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1478\n      },\n      __self: this\n    }, React.createElement(Coord, {\n      type: \"rect\",\n      direction: \"LB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"country\",\n      label: {\n        offset: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Vertical Bar Chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_v_bar,\n      onChange: this.handleSubmitVerticalBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: vertical_bar_data,\n      scale: vertical_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1506\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1515\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Group Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1521\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1524\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1530\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1532\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Donut chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1558\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_donut,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1563\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: don_data,\n      scale: scale1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1570\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1571\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1572\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1573\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1574\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1575\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1593\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1598\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1601\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1610\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1611\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1612\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1613\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1615\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1642\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Mixed chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1648\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mx,\n      onChange: this.mixedCharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1649\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1651\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1653\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_my,\n      onChange: this.mixedCharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1657\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1659\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1661\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mz,\n      onChange: this.mixedCharthandleSubmit2,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667\n      },\n      __self: this\n    }, \"Zaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1669\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1673\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.mixed_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1674\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.mixed_chart_options,\n      series: this.state.mixed_chart_series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1677\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1683\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Stacked Area Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1684\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ax,\n      onChange: this.Area_CharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1690\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1694\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ay,\n      onChange: this.Area_CharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1698\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1700\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1706\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.area_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707\n      },\n      __self: this\n    }, \"OK\")), React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1718\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","CollectionCreateForm","create","name","Component","constructor","props","state","render","visible","onCancel","onCreate","form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","title","dataIndex","key","data","oNumber","confDate","customer","salePer","total","tags","DataSet","require","scale","dataKey","min","formatter","scale1","sourceData","value","vertical_data","vertical_scale","val","Math","round","max","categories_data","months","map","item","month","filter","index","array","indexOf","productTotals","reduce","obj","curr","parseInt","records","series","Object","entries","prodArr","monthIndex","AnalyticalTest","handleSubmitLineChart","e","setState","value_xl","target","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loadLineChartData","A","B","handleSubmit","value_x","handleSubmit1","value_y","handleSubmit12","loadGroupBarData","handleSubmitBarChart","value_bar","BarCheckbox","Column","handleSubmitVerticalBarChart","value_v_bar","VerticalBarCheckbox","handleSubmitDonut","value_donut","DonutCheckbox","handleSubmitPie","value_pie","PieCheckbox","mixedCharthandleSubmit","value_mx","mixedCharthandleSubmit1","value_my","mixedCharthandleSubmit2","value_mz","mixed_handleSubmit","loadMixedChartData","C","Area_CharthandleSubmit","value_ax","Area_CharthandleSubmit1","value_ay","area_handleSubmit","loadStackedAreaChartData","line_chart_options","chart","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","categories","line_chart_series","options2","plotOptions","bar","horizontal","position","offsetX","style","fontSize","show","width","labels","yaxis","series2","bar_chart_options","bar_chart_series","mixed_chart_options","axisTicks","axisBorder","color","tooltip","seriesName","opposite","fixed","offsetY","legend","horizontalAlign","mixed_chart_series","type","area_chart_options","x","format","area_chart_series","books","intHeader","select_status","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","line_chart_source_data","sourceData_donut","componentWillMount","loadAnalytical","loadIntHeaders","loadAll_count_view","loadAllChartData","promise","post","firstName","lastName","status","console","log","d","dou","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","keys","length","push","data_dict","load_data_dict","headers","Headers","append","options","method","body","JSON","stringify","l_data","line_value_list","line_chart_list","load_bar_chart_list","sd","value_list","chart_list","g_data","Actual","Budget","g","Bar_chart_list","Ve_Bar_chart_list","count","d_data","SQBL","SQCL","sum_data","count_data","max_chart_list","j","c_keys_list","c_value_list","max_chart_count_list","m","SArea_chart_list","componentDidMount","dv","View","source","transform","field","dimension","as","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","ve_bar_dv","vertical_bar_data","order","minHeight","marginLeft","cursor","offset","lineWidth","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 240 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n\nconst columns = [\n  {\n    title: 'Order Number',\n    dataIndex: 'oNumber',\n    key: 'oNumber',\n  },\n  {\n    title: 'Confirmation Date',\n    dataIndex: 'confDate',\n    key: 'confDate',\n  },\n  {\n    title: 'Con',\n    dataIndex: 'customer',\n    key: 'customer',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'salePer',\n    key: 'salePer',\n  },\n  {\n    title: 'Conf',\n    dataIndex: 'total',\n    key: 'total',\n  },\n  {\n    title: 'Conf',\n    dataIndex: 'total',\n    key: 'total',\n  }\n\n\n\n\n  ]\n\n  const data = [\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  }]\n\n\n\n\n      return (\n        <Modal visible={visible}\n          title=\"Create a new collection\"\n          okText=\"\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n         <Table columns={columns} dataSource={data} />\n        </Modal>\n      );\n    }\n  }\n);\n\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\nconst sourceData = [\n  { name: 'A', value: 131744 },\n  { name: 'B', value: 104970 },\n  { name: 'C', value: 29034 },\n  { name: 'D', value: 23489 },\n  { name: 'E', value: 18203 },\n];\n\n\n\n\nconst vertical_data = [\n  { name: 'A', value: 30000000 },\n  { name: 'B', value: 40000000 },\n  { name: 'C', value: 530000000 },\n\n];\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar categories_data = [];\n\nvar months = categories_data.map((item) => item.month).filter((item, index, array) => array.indexOf(item) == index)\n\n\nconst productTotals = categories_data.reduce((obj, curr) => {\n    if(!obj[curr.name]){\n        obj[curr.name] = []\n    }\n\n    obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records)\n    return obj\n}, {})\n\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n    return {\n        name: name,\n        data: months.map((month, monthIndex) => {\n            if(!prodArr[monthIndex]){\n                return 0\n            } else {\n                return prodArr[monthIndex]\n            }\n\n        })\n    }\n\n})\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\nline_chart_options: {\n            chart: {\n                  zoom: {\n                      enabled: false\n                  }\n              },\n              dataLabels: {\n                  enabled: false\n              },\n              stroke: {\n                  curve: 'straight'\n              },\n              title: {\n                  text: '',\n                  align: 'left'\n              },\n              grid: {\n                  row: {\n                      colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n                      opacity: 0.5\n                  },\n              },\n              xaxis: {\n                  categories: [...months],\n              }\n          },\n          line_chart_series:[],\n\n\n\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: {\n              categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            }\n          },\n\n      series2:[],\n\n\nbar_chart_options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              }\n            },\n            dataLabels: {\n              enabled: false,\n\n            },\n\n\n            xaxis: {\n              categories: [],\n            }\n          },\nbar_chart_series: [],\n\n\n\n\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n\n\n\n\narea_chart_options: {\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n\n\n            xaxis: {\n\n              categories: [\"\"],\n\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              },\n            }\n          },\n\n\narea_chart_series:[{\n            name: 'series1',\n            name: 'series3',\n            data: [31, 40, 28, 51, 42, 109, 100]\n          }, {\n            name: 'series2',\n            data: [11, 32, 45, 32, 34, 52, 41]\n          }],\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_status:\"Status\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[]\n\n      }\n\n\n   }\n\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n  async loadAll_count_view()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = []\n      var load_donut_chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n\n            }\n            else{}\n        }\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n\n    }\n  }\n\n\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n        }\n\n\n     const sd = [{name: 'B', value: 13000}]\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      console.log(data);\n    }\n\n\n\n}\n\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n        }\n\n\n     const sd = [{name: 'B', value: 13000}]\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      console.log(data);\n    }\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n     this.loadGroupBarData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadGroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [1, 23]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            }\n            else{}\n        }\n     const x = [{ name: 'A', value: 131744 }]\n\n      this.setState({bar_data:Bar_chart_list})\n\n    }\n\n}\n\n\n//========================================== Vertical bar Chart ================================================================\nhandleSubmitVerticalBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_v_bar: e.target.value});\n         this.VerticalBarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync VerticalBarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            }\n            else{}\n        }\n     const x = [{ name: 'A', value: 131744 }]\n\n      this.setState({ve_bar_data:Ve_Bar_chart_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n//========================================== Donut Chart ================================================================\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nmixedCharthandleSubmit = (e) => {\n     this.setState({value_mx: e.target.value});\n };\n\nmixedCharthandleSubmit1 = (e) => {\n    this.setState({value_my: e.target.value});\n  };\n\n\n mixedCharthandleSubmit2 = (e) => {\n    this.setState({value_mz: e.target.value});\n  };\n\n\nmixed_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadMixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my, C:this.state.value_mz}\n  );\n  };\n\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n        }\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n        max_chart_list.push(max_chart_count_list)\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      console.log(data);\n    }\n\n}\n\n//==========================================================Stacked Area chart==========================================\n\nArea_CharthandleSubmit = (e) => {\n     this.setState({value_ax: e.target.value});\n };\n\nArea_CharthandleSubmit1 = (e) => {\n    this.setState({value_ay: e.target.value});\n  };\n\n\narea_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadStackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay}\n  );\n  };\n\n\nasync loadStackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            SArea_chart_list.push(data_dict)\n\n        }\n        const m =\"test\"\n      this.setState({area_chart_series:SArea_chart_list})\n      console.log(data);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomponentDidMount() {\n//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n//  this.setState({line_data:sourceDataDaily})\n\n\n  }\n\n\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\n\n    return (\n    <div>\n        <div id=\"content\">\n        <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Line chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_amount_USD}</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmitLineChartOK} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n      <Chart forceFit height={400} data={this.state.line_chart_source_data} scale={line_chart_source_scale}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Line position=\"name*value\"/>\n        <Point position=\"name*value\" shape=\"circle\"/>\n      </Chart>\n\n\n             </div>\n         </Card>\n      </Col>\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n        <Coord type=\"rect\" direction=\"LB\" />\n        <Tooltip />\n        <Axis dataKey=\"country\" label={{ offset: 12 }} />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n\n </Row>\n <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Vertical Bar Chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_v_bar} onChange={this.handleSubmitVerticalBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n      <Chart forceFit height={400} data={vertical_bar_data} scale={vertical_scale}>\n        <Tooltip />\n        <Axis />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Group Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n </Row>\n\n\n <Row type=\"flex\" gutter={24}>\n\n <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Donut chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_donut} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={don_data} scale={scale1}>\n        <Tooltip showTitle={false} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={pie_data} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n                            <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n\n\n<Row type=\"flex\" gutter={24}>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Mixed chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_mx} onChange={this.mixedCharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_my} onChange={this.mixedCharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_mz} onChange={this.mixedCharthandleSubmit2}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Zaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.mixed_handleSubmit} className='btn btn-info' style={{marginLeft:\"15px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.mixed_chart_options}\n                  series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Stacked Area Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_ax} onChange={this.Area_CharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_ay} onChange={this.Area_CharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.area_handleSubmit} className='btn btn-info' style={{marginLeft:\"20px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                  <ReactApexChart options={this.state.area_chart_options}\n                  series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n</Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
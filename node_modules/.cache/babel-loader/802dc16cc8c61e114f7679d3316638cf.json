{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar axisIDs = require('../../plots/cartesian/axis_ids');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar constants = require('./constants');\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar name = constants.name;\n\nfunction isVisible(ax) {\n  var rangeSlider = ax && ax[name];\n  return rangeSlider && rangeSlider.visible;\n}\n\nexports.isVisible = isVisible;\n\nexports.makeData = function (fullLayout) {\n  var axes = axisIDs.list({\n    _fullLayout: fullLayout\n  }, 'x', true);\n  var margin = fullLayout.margin;\n  var rangeSliderData = [];\n\n  if (!fullLayout._has('gl2d')) {\n    for (var i = 0; i < axes.length; i++) {\n      var ax = axes[i];\n\n      if (isVisible(ax)) {\n        rangeSliderData.push(ax);\n        var opts = ax[name];\n        opts._id = name + ax._id;\n        opts._height = (fullLayout.height - margin.b - margin.t) * opts.thickness;\n        opts._offsetShift = Math.floor(opts.borderwidth / 2);\n      }\n    }\n  }\n\n  fullLayout._rangeSliderData = rangeSliderData;\n};\n\nexports.autoMarginOpts = function (gd, ax) {\n  var fullLayout = gd._fullLayout;\n  var opts = ax[name];\n\n  var axLetter = ax._id.charAt(0);\n\n  var bottomDepth = 0;\n  var titleHeight = 0;\n\n  if (ax.side === 'bottom') {\n    bottomDepth = ax._depth;\n\n    if (ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n      // as in rangeslider/draw.js\n      titleHeight = 1.5 * ax.title.font.size + 10 + opts._offsetShift; // multi-line extra bump\n\n      var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n      titleHeight += extraLines * ax.title.font.size * LINE_SPACING;\n    }\n  }\n\n  return {\n    x: 0,\n    y: ax._counterDomainMin,\n    l: 0,\n    r: 0,\n    t: 0,\n    b: opts._height + bottomDepth + Math.max(fullLayout.margin.b, titleHeight),\n    pad: constants.extraPad + opts._offsetShift * 2\n  };\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [1, 1, 4]\n        },\n        title: {\n          text: 'XYZ - Stock Analysis (2009 - 2016)',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            }\n          },\n          title: {\n            text: \"Income (thousand crores)\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            }\n          },\n          title: {\n            text: \"Operating Cashflow (thousand crores)\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            }\n          },\n          title: {\n            text: \"Revenue (thousand crores)\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      series: [{\n        name: 'Income',\n        type: 'column',\n        data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n      }, {\n        name: 'Cashflow',\n        type: 'column',\n        data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n      }, {\n        name: 'Revenue',\n        type: 'line',\n        data: [20, 29, 37, 36, 44, 45, 50, 58]\n      }, {\n        name: 'Income1',\n        type: 'column',\n        data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n      }, {\n        name: 'Cashflow1',\n        type: 'column',\n        data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","AnalyticalTest","Component","constructor","props","state","options","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","width","title","text","align","offsetX","xaxis","categories","yaxis","axisTicks","show","axisBorder","color","labels","style","tooltip","opposite","fixed","position","offsetY","legend","horizontalAlign","series","name","type","data","render"],"mappings":";AAEA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyDC,GAAzD,EAA8DC,KAA9D,QAA0E,aAA1E;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEC,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AAETC,QAAAA,WAAW,EAAE;AACTC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,KADT;AAEHC,YAAAA,WAAW,EAAE,KAFV;AAGHC,YAAAA,WAAW,EAAE;AAHV;AADI,SAFJ;AAUPC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SAVL;AAcPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADD,SAdD;AAiBPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,oCADD;AAELC,UAAAA,KAAK,EAAE,MAFF;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAjBA;AAsBPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C;AADP,SAtBA;AAyBPC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,IAAI,EAAE;AADG,WADb;AAIEC,UAAAA,UAAU,EAAE;AACVD,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,KAAK,EAAE;AAFG,WAJd;AAQEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AADD,WARV;AAaEV,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,0BADD;AAELW,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AAFF,WAbT;AAmBEG,UAAAA,OAAO,EAAE;AACPhB,YAAAA,OAAO,EAAE;AADF;AAnBX,SADK,EAyBL;AAEEiB,UAAAA,QAAQ,EAAE,IAFZ;AAGEP,UAAAA,SAAS,EAAE;AACTC,YAAAA,IAAI,EAAE;AADG,WAHb;AAMEC,UAAAA,UAAU,EAAE;AACVD,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,KAAK,EAAE;AAFG,WANd;AAUEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AADD,WAVV;AAeEV,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,sCADD;AAELW,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AAFF;AAfT,SAzBK,EA+CL;AAEEI,UAAAA,QAAQ,EAAE,IAFZ;AAGEP,UAAAA,SAAS,EAAE;AACTC,YAAAA,IAAI,EAAE;AADG,WAHb;AAMEC,UAAAA,UAAU,EAAE;AACVD,YAAAA,IAAI,EAAE,IADI;AAEVE,YAAAA,KAAK,EAAE;AAFG,WANd;AAUEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AADD,WAVV;AAeEV,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,2BADD;AAELW,YAAAA,KAAK,EAAE;AACLF,cAAAA,KAAK,EAAE;AADF;AAFF;AAfT,SA/CK,CAzBA;AA+FPG,QAAAA,OAAO,EAAE;AACPE,UAAAA,KAAK,EAAE;AACLlB,YAAAA,OAAO,EAAE,IADJ;AAELmB,YAAAA,QAAQ,EAAE,SAFL;AAEgB;AACrBC,YAAAA,OAAO,EAAE,EAHJ;AAILd,YAAAA,OAAO,EAAE;AAJJ;AADA,SA/FF;AAuGPe,QAAAA,MAAM,EAAE;AACNC,UAAAA,eAAe,EAAE,MADX;AAENhB,UAAAA,OAAO,EAAE;AAFH;AAvGD,OADE;AA6GXiB,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,QADC;AAEPC,QAAAA,IAAI,EAAE,QAFC;AAGPC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC;AAHC,OAAD,EAIL;AACDF,QAAAA,IAAI,EAAE,UADL;AAEDC,QAAAA,IAAI,EAAE,QAFL;AAGDC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;AAHL,OAJK,EAQL;AACDF,QAAAA,IAAI,EAAE,SADL;AAEDC,QAAAA,IAAI,EAAE,MAFL;AAGDC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAHL,OARK,EAaR;AACEF,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE,QAFR;AAGEC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC;AAHR,OAbQ,EAiBL;AACDF,QAAAA,IAAI,EAAE,WADL;AAEDC,QAAAA,IAAI,EAAE,QAFL;AAGDC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;AAHL,OAjBK;AA7GG,KAAb;AAuID;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAGE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWC,OAApC;AAA6C,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAW+B,MAAhE;AAAwE,MAAA,IAAI,EAAC,MAA7E;AAAoF,MAAA,KAAK,EAAC,KAA1F;AAAgG,MAAA,MAAM,EAAC,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;AASD;;AAxJuC;;AA0J9C,eAAenC,cAAf","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n class AnalyticalTest extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n\n          plotOptions: {\n              bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n              },\n            },\n\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width: [1, 1, 4]\n            },\n            title: {\n              text: 'XYZ - Stock Analysis (2009 - 2016)',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                labels: {\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                title: {\n                  text: \"Income (thousand crores)\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                labels: {\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n                title: {\n                  text: \"Operating Cashflow (thousand crores)\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                labels: {\n                  style: {\n                    color: '#FEB019',\n                  },\n                },\n                title: {\n                  text: \"Revenue (thousand crores)\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\n          series: [{\n            name: 'Income',\n            type: 'column',\n            data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n          }, {\n            name: 'Cashflow',\n            type: 'column',\n            data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n          }, {\n            name: 'Revenue',\n            type: 'line',\n            data: [20, 29, 37, 36, 44, 45, 50, 58]\n          },\n          {\n            name: 'Income1',\n            type: 'column',\n            data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n          }, {\n            name: 'Cashflow1',\n            type: 'column',\n            data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n          }\n\n\n          ],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"600\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
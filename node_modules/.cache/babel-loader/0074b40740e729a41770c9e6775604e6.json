{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport Multiselect from 'react-bootstrap-multiselect';\nimport Parent from \"./React\";\nimport { Test } from \"../Test\";\nimport Select from \"react-dropdown-select\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nconst DataSet = require(\"@antv/data-set\");\n\nvar BS = require('react-bootstrap');\n\nconst options = [{\n  label: \"Apple\",\n  value: 1\n}, {\n  label: \"Facebook\",\n  value: 2\n}, {\n  label: \"Netflix\",\n  value: 3\n}, {\n  label: \"Tesla\",\n  value: 4\n}, {\n  label: \"Amazon\",\n  value: 5\n}, {\n  label: \"Alphabet\",\n  value: 6\n}];\n{\n  /*\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:'tes1234t'\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Parent Component </h1>\n      <p>data coming from child<b>: {this.state.fromChild} </b></p>\n     <Test update={this.update}  data={this.state.x}/>\n    </div>\n  );\n  }\n  }\n  export default Child2;\n  */\n}\n\nclass Child2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOptions: []\n    };\n\n    this.handleChange = selectedOptions => {\n      this.setState({\n        selectedOptions\n      });\n    };\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Select, {\n      isMulti: true,\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), this.state.selectedOptions.map(o => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, o.value)));\n  }\n\n}\n\nexport default Child2;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Icon","Progress","Multiselect","Parent","Test","Select","SendOutlinedIcon","DataSet","require","BS","options","label","value","Child2","state","selectedOptions","handleChange","setState","render","selectedOption","map","o"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAsD,MAAtD;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,SAASC,IAAT,QAAsB,SAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAO,sCAAP;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,iBAAD,CAAhB;;AAEA,MAAME,OAAO,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADgB,EAEd;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CANc,CAAhB;AAcG;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BD;;AAIH,MAAMC,MAAN,SAAqBtB,KAAK,CAACC,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCsB,KADiC,GACzB;AACRC,MAAAA,eAAe,EAAE;AADT,KADyB;;AAAA,SAKnCC,YALmC,GAKnBD,eAAD,IAAqB;AAClC,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAPkC;AAAA;;AASnCG,EAAAA,MAAM,GAAG;AAAA,UACCC,cADD,GACoB,KAAKL,KADzB,CACCK,cADD;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,KAAK,EAAEA,cAFT;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAIE,MAAA,OAAO,EAAEN,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOC,KAAKI,KAAL,CAAWC,eAAX,CAA2BK,GAA3B,CAA+BC,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,CAAC,CAACT,KAAN,CAApC,CAPD,CADF;AAWD;;AAvBkC;;AA0BrC,eAAeC,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress} from \"antd\";\nimport Multiselect from 'react-bootstrap-multiselect'\nimport Parent from \"./React\";\n\nimport { Test } from  \"../Test\";\nimport Select from \"react-dropdown-select\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nconst DataSet = require(\"@antv/data-set\");\nvar BS = require('react-bootstrap');\n\nconst options = [\n{ label: \"Apple\", value: 1 },\n  { label: \"Facebook\", value: 2 },\n  { label: \"Netflix\", value: 3 },\n  { label: \"Tesla\", value: 4 },\n  { label: \"Amazon\", value: 5 },\n  { label: \"Alphabet\", value: 6 },\n];\n\n\n\n\n\n\n   {/*\n   class Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:'tes1234t'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Parent Component </h1>\n        <p>data coming from child<b>: {this.state.fromChild} </b></p>\n       <Test update={this.update}  data={this.state.x}/>\n      </div>\n    );\n  }\n}\n\nexport default Child2;\n*/}\n\n\n\nclass Child2 extends React.Component {\n    state = {\n    selectedOptions: [],\n  }\n\n  handleChange = (selectedOptions) => {\n    this.setState({ selectedOptions });\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n      <React.Fragment>\n        <Select\n          isMulti\n          value={selectedOption}\n          onChange={this.handleChange}\n          options={options}\n        />\n      {this.state.selectedOptions.map(o => <p>{o.value}</p>)}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Child2;\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst sourceData = [{\n  name: 'A',\n  value: 131744\n}, {\n  name: 'B',\n  value: 104970\n}, {\n  name: 'C',\n  value: 29034\n}, {\n  name: 'D',\n  value: 23489\n}, {\n  name: 'E',\n  value: 18203\n}];\nconst vertical_data = [{\n  name: 'A',\n  value: 30000000\n}, {\n  name: 'B',\n  value: 40000000\n}, {\n  name: 'C',\n  value: 530000000\n}];\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n    if (val < 100000) {\n      return Math.round(val / 1000 * 10) / 10 + 'k';\n    } else if (val >= 1000000) {\n      return val = val / 1000000 + \"M\";\n    } else {\n      return val;\n    }\n  }\n}, {\n  dataKey: 'year',\n  min: 0,\n  max: 1\n}];\nvar categories_data = [];\nvar months = categories_data.map(item => item.month).filter((item, index, array) => array.indexOf(item) == index);\nconst productTotals = categories_data.reduce((obj, curr) => {\n  if (!obj[curr.name]) {\n    obj[curr.name] = [];\n  }\n\n  obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records);\n  return obj;\n}, {});\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n  return {\n    name: name,\n    data: months.map((month, monthIndex) => {\n      if (!prodArr[monthIndex]) {\n        return 0;\n      } else {\n        return prodArr[monthIndex];\n      }\n    })\n  };\n});\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadGroupBarData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_bar: e.target.value\n      });\n      this.BarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitVerticalBarChart = e => {\n      e.preventDefault();\n      this.setState({\n        value_v_bar: e.target.value\n      });\n      this.VerticalBarCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit = e => {\n      this.setState({\n        value_mx: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit1 = e => {\n      this.setState({\n        value_my: e.target.value\n      });\n    };\n\n    this.mixedCharthandleSubmit2 = e => {\n      this.setState({\n        value_mz: e.target.value\n      });\n    };\n\n    this.mixed_handleSubmit = e => {\n      e.preventDefault();\n      this.loadMixedChartData({\n        A: this.state.value_mx,\n        B: this.state.value_my,\n        C: this.state.value_mz\n      });\n    };\n\n    this.Area_CharthandleSubmit = e => {\n      this.setState({\n        value_ax: e.target.value\n      });\n    };\n\n    this.Area_CharthandleSubmit1 = e => {\n      this.setState({\n        value_ay: e.target.value\n      });\n    };\n\n    this.area_handleSubmit = e => {\n      e.preventDefault();\n      this.loadStackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ay\n      });\n    };\n\n    this.state = {\n      line_chart_options: {\n        chart: {\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: [...months]\n        }\n      },\n      line_chart_series: [],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        }\n      },\n      series2: [],\n      bar_chart_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      bar_chart_series: [],\n      mixed_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 4\n        },\n        title: {\n          text: '',\n          align: 'left',\n          offsetX: 110\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: [{\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#008FFB'\n          },\n          labels: {\n            style: {\n              color: '#008FFB'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#008FFB'\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        }, {\n          seriesName: 'Income',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              color: '#00E396'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Revenue',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              color: '#FEB019'\n            },\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          },\n          title: {\n            text: \"\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }],\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      mixed_chart_series: [{\n        name: 'Status',\n        type: 'column',\n        data: [10]\n      }, {\n        name: 'A',\n        type: 'column',\n        data: [20]\n      }, {\n        name: 'B',\n        type: 'column',\n        data: [30]\n      }, {\n        name: 'C',\n        type: 'column',\n        data: [150]\n      }, {\n        name: 'LINE',\n        type: 'line',\n        data: [40, 20]\n      }],\n      area_chart_options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          categories: [\"\"]\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        data: [31, 19]\n      }, {\n        name: 'series2',\n        data: []\n      }],\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_status: \"Status\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      bar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      bar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      vertical_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      vertical_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      download_lineChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_verticalChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_group_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_donutChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_pieChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_mixedChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  }\n\n  // ============================= Loading all charts ====================================================================\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n    this.loadAllChartData({\n      A: \"Status\",\n      B: \"Amount_USD\"\n    });\n    this.loadMixedChartData({\n      A: \"Status\",\n      B: \"Amount_USD\",\n      C: \"Status\"\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n    }\n  }\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      const table_dict = data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        download_lineChart_table: [table_dict]\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n    }\n  } //=================================================== Line Chart Table Data Download ===================================\n  //================================================ Group Bar Chart ====================================================================\n\n\n  async loadGroupBarData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      Gbar_table_columns: []\n    });\n    this.setState({\n      Gbar_table_data: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        chart_data: chart_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        download_group_barChart_table: [table_dict]\n      });\n    }\n  } //========================================== Bar Chart ================================================================\n\n\n  async BarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      bar_data: []\n    });\n    this.setState({\n      bar_table_columns: []\n    });\n    this.setState({\n      bar_table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Bar_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Bar_chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: Bar_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n    }\n  } //========================================== Vertical bar Chart ================================================================\n\n\n  async VerticalBarCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      ve_bar_data: []\n    });\n    this.setState({\n      vertical_table_columns: []\n    });\n    this.setState({\n      vertical_table_data: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var Ve_Bar_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          data_dict['value'] = value;\n          Ve_Bar_chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        ve_bar_data: Ve_Bar_chart_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    this.setState({\n      donut_table_columns: []\n    });\n    this.setState({\n      donut_table_data: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    this.setState({\n      pie_table_columns: []\n    });\n    this.setState({\n      pie_table_data: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n    }\n  } //=================================================Mixed chart==========================================================\n\n\n  async loadMixedChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      mixed_chart_series: []\n    });\n    this.setState({\n      mix_table_columns: []\n    });\n    this.setState({\n      mix_table_data: []\n    });\n    this.setState({\n      download_mixedChart_table: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var max_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(sum_data)[i]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['type'] = 'column';\n        data_dict['data'] = [value];\n        max_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      var j;\n      var c_keys_list = [];\n      var c_value_list = [];\n      var max_chart_count_list = {};\n\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n        console.log(data[j]);\n        var key = Object.keys(sum_data)[j]; //            keys_list.push(key)\n\n        var value = sum_data[key];\n        c_value_list.push(value);\n        var data_dict = {};\n        max_chart_count_list['name'] = count_data[\"label\"];\n        max_chart_count_list['type'] = 'line';\n        max_chart_count_list['data'] = c_value_list;\n      }\n\n      max_chart_list.push(max_chart_count_list);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      const m = [{\n        name: \"SQBL\",\n        data: [1000000],\n        type: \"column\"\n      }];\n      this.setState({\n        mixed_chart_series: max_chart_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        download_mixedChart_table: [table_dict]\n      });\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async loadStackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        SArea_chart_list.push(data_dict);\n      }\n\n      const m = \"test\";\n      this.setState({\n        area_chart_series: value_list\n      });\n      console.log(data);\n    }\n  }\n\n  componentDidMount() {//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n    //  this.setState({line_data:sourceDataDaily})\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1683\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1684\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1685\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1686\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1687\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_xl,\n      onChange: this.handleSubmitLineChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1693\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1697\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_yl,\n      onChange: this.handleSubmitLineChart1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1701\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703\n      },\n      __self: this\n    }, this.state.select_amount_USD), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1705\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1709\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmitLineChartOK,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_line\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1713\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_line\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1717\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1718\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1720\n      },\n      __self: this\n    }, \"Line Chart TableData\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"modal-title\",\n      style: {\n        marginLeft: \"160px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1724\n      },\n      __self: this\n    }, this.state.value_xl, \", \", this.state.value_yl)), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.line_table_columns,\n      dataSource: this.state.line_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1728\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1731\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1732\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_lineChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1734\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: this.state.line_chart_source_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1745\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"name*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1754\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_bar,\n      onChange: this.handleSubmitBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1761\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1763\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1765\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModalBar\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1769\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModalBar\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1772\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1773\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1776\n      },\n      __self: this\n    }, \"Bar Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1778\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.bar_table_columns,\n      dataSource: this.state.bar_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1782\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_barChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1784\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1785\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: basic_bar_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1793\n      },\n      __self: this\n    }, React.createElement(Coord, {\n      type: \"rect\",\n      direction: \"LB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1794\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1795\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"country\",\n      label: {\n        offset: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1797\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1805\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1806\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1807\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1812\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_v_bar,\n      onChange: this.handleSubmitVerticalBarChart,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1815\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1817\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Vertical\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1821\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Vertical\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1823\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1824\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1825\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1828\n      },\n      __self: this\n    }, \"Vertical Bar Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1830\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.vertical_table_columns,\n      dataSource: this.state.vertical_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_verticalChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: vertical_bar_data,\n      scale: vertical_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1845\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1847\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1854\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1860\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1861\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1863\n      },\n      __self: this\n    }, \"Status\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1871\n      },\n      __self: this\n    }, \"Amount_USD\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1873\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1877\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1878\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_GroupBar\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1881\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_GroupBar\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1884\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1885\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1886\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1888\n      },\n      __self: this\n    }, \"Group Bar TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1890\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.Gbar_table_columns,\n      dataSource: this.state.Gbar_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1891\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1894\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1895\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_group_barChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1896\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1897\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1905\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1912\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_donut,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1924\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1926\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Donut\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1932\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Donut\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1934\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1935\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1936\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1937\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1939\n      },\n      __self: this\n    }, \"Donut Chart TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1941\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.donut_table_columns,\n      dataSource: this.state.donut_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1942\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1946\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1947\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_donutChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1948\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1949\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: don_data,\n      scale: scale1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1958\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1959\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1960\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1961\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1962\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1963\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1979\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1981\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1986\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1987\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989\n      },\n      __self: this\n    }, this.state.select_status), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1991\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Pie\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1998\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Pie\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2000\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2001\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2002\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2003\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005\n      },\n      __self: this\n    }, \"Pie Chart TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2007\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.pie_table_columns,\n      dataSource: this.state.pie_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2008\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2011\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2012\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_pieChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2013\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2023\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2024\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2025\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2026\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2027\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2028\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2053\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2055\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2056\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2061\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mx,\n      onChange: this.mixedCharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2062\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2064\n      },\n      __self: this\n    }, \"Status\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2066\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_my,\n      onChange: this.mixedCharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2070\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2072\n      },\n      __self: this\n    }, \"Amount_USD\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2074\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_mz,\n      onChange: this.mixedCharthandleSubmit2,\n      style: {\n        width: \"110px\",\n        marginLeft: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2078\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2080\n      },\n      __self: this\n    }, \"Status\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2082\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2086\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.mixed_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2087\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Mixed\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2090\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Mixed\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2093\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2094\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2095\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2097\n      },\n      __self: this\n    }, \"Mixed Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.mix_table_columns,\n      dataSource: this.state.mix_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_mixedChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2106\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(ReactApexChart, {\n      options: this.state.mixed_chart_options,\n      series: this.state.mixed_chart_series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2114\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2120\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2126\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ax,\n      onChange: this.Area_CharthandleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2127\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2129\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2131\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_ay,\n      onChange: this.Area_CharthandleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2135\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2137\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2139\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.area_handleSubmit,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2144\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Stacked\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2147\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Stacked\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2152\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2154\n      },\n      __self: this\n    }, \"Stacked Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2156\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.mix_table_columns,\n      dataSource: this.state.mix_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_mixedChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2162\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2163\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2171\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2177\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ManagementCharts/ManagementCharts.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","axios","ReactApexChart","$","Popper","CSVLink","DataSet","require","scale","dataKey","min","formatter","scale1","sourceData","name","value","vertical_data","vertical_scale","val","Math","round","max","categories_data","months","map","item","month","filter","index","array","indexOf","productTotals","reduce","obj","curr","parseInt","records","series","Object","entries","prodArr","data","monthIndex","AnalyticalTest","Component","constructor","props","showModal","setState","modalVisible","handleCancel","saveFormRef","formRef","showDrawer","drawerVisible","onClose","handleSubmitLineChart","e","value_xl","target","handleSubmitLineChart1","value_yl","handleSubmitLineChartOK","preventDefault","loadLineChartData","A","state","B","handleSubmit","value_x","handleSubmit1","value_y","handleSubmit12","loadGroupBarData","handleSubmitBarChart","value_bar","BarCheckbox","Column","handleSubmitVerticalBarChart","value_v_bar","VerticalBarCheckbox","handleSubmitDonut","value_donut","DonutCheckbox","handleSubmitPie","value_pie","PieCheckbox","mixedCharthandleSubmit","value_mx","mixedCharthandleSubmit1","value_my","mixedCharthandleSubmit2","value_mz","mixed_handleSubmit","loadMixedChartData","C","Area_CharthandleSubmit","value_ax","Area_CharthandleSubmit1","value_ay","area_handleSubmit","loadStackedAreaChartData","line_chart_options","chart","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","line_chart_series","options2","plotOptions","bar","horizontal","position","offsetX","style","fontSize","show","width","labels","yaxis","series2","bar_chart_options","bar_chart_series","mixed_chart_options","axisTicks","axisBorder","color","tooltip","seriesName","opposite","fixed","offsetY","legend","horizontalAlign","mixed_chart_series","type","area_chart_options","x","format","area_chart_series","books","intHeader","select_status","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","line_chart_source_data","sourceData_donut","table_columns","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","download_lineChart_table","firstname","lastname","email","download_barChart_table","download_verticalChart_table","download_group_barChart_table","download_donutChart_table","download_pieChart_table","download_mixedChart_table","componentWillMount","loadAnalytical","loadIntHeaders","loadAll_count_view","loadAllChartData","promise","post","firstName","lastName","status","console","log","d","dou","table_dict","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","keys","length","push","data_dict","load_data_dict","column_dict","headers","Headers","append","options","method","body","JSON","stringify","l_data","line_value_list","line_chart_list","load_bar_chart_list","sum_data","count_data","value_list","max_chart_list","j","c_keys_list","c_value_list","max_chart_count_list","g_data","Actual","Budget","g","chart_list","Bar_chart_list","Ve_Bar_chart_list","m","SArea_chart_list","componentDidMount","render","dv","View","source","transform","field","dimension","as","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","ve_bar_dv","vertical_bar_data","span","order","minHeight","marginLeft","cursor","overflowY","offset","lineWidth","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\n\nconst DataSet = require('@antv/data-set');\n\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\nconst sourceData = [\n  { name: 'A', value: 131744 },\n  { name: 'B', value: 104970 },\n  { name: 'C', value: 29034 },\n  { name: 'D', value: 23489 },\n  { name: 'E', value: 18203 },\n];\n\n\n\n\nconst vertical_data = [\n  { name: 'A', value: 30000000 },\n  { name: 'B', value: 40000000 },\n  { name: 'C', value: 530000000 },\n\n];\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar categories_data = [];\n\nvar months = categories_data.map((item) => item.month).filter((item, index, array) => array.indexOf(item) == index)\n\n\nconst productTotals = categories_data.reduce((obj, curr) => {\n    if(!obj[curr.name]){\n        obj[curr.name] = []\n    }\n\n    obj[curr.name][months.indexOf(curr.month)] = parseInt(curr.records)\n    return obj\n}, {})\n\nconst series = Object.entries(productTotals).map(([name, prodArr]) => {\n    return {\n        name: name,\n        data: months.map((month, monthIndex) => {\n            if(!prodArr[monthIndex]){\n                return 0\n            } else {\n                return prodArr[monthIndex]\n            }\n\n        })\n    }\n\n})\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\nline_chart_options: {\n            chart: {\n                  zoom: {\n                      enabled: false\n                  }\n              },\n              dataLabels: {\n                  enabled: false\n              },\n              stroke: {\n                  curve: 'straight'\n              },\n              title: {\n                  text: '',\n                  align: 'left'\n              },\n              grid: {\n                  row: {\n                      colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n                      opacity: 0.5\n                  },\n              },\n              xaxis: {\n                  categories: [...months],\n              }\n          },\n          line_chart_series:[],\n\n\n\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: {\n              categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            }\n          },\n\n      series2:[],\n\n\nbar_chart_options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              }\n            },\n            dataLabels: {\n              enabled: false,\n\n            },\n\n\n            xaxis: {\n              categories: [],\n            }\n          },\nbar_chart_series: [],\n\n\n\n\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n\n\n\n\narea_chart_options: {\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n            xaxis: {\n\n              categories: [\"\"],\n\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              },\n            }\n          },\n\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 19]\n          }, {\n            name: 'series2',\n            data: []\n          }],\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_status:\"Status\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n\n       download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n       download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n\n\n\n\n\n\n      }\n\n\n   }\n\n\n showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\"});\n     this.loadMixedChartData({A:\"Status\", B:\"Amount_USD\", C:\"Status\"})\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n  async loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/load_count_api\");\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n\n\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n\n\n\n\n\n\n    }\n  }\n\n\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n }\n}\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n\n// =================================================== Line Chart ======================================================\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl:\"\"})\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl:\"\"})\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n    }\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\n\n\n\n\n\n\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n     this.loadGroupBarData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadGroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n    }\n\n}\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n         this.BarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n\n      this.setState({download_barChart_table:[table_dict]})\n\n    }\n\n}\n\n\n//========================================== Vertical bar Chart ================================================================\nhandleSubmitVerticalBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_v_bar: e.target.value});\n         this.VerticalBarCheckbox(\n             {Column:e.target.value }\n      );\n };\n\n\nasync VerticalBarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n//========================================== Donut Chart ================================================================\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n\n    }\n\n}\n\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nmixedCharthandleSubmit = (e) => {\n     this.setState({value_mx: e.target.value});\n };\n\nmixedCharthandleSubmit1 = (e) => {\n    this.setState({value_my: e.target.value});\n  };\n\n\n mixedCharthandleSubmit2 = (e) => {\n    this.setState({value_mz: e.target.value});\n  };\n\n\nmixed_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadMixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my, C:this.state.value_mz}\n  );\n  };\n\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n    }\n\n}\n\n//==========================================================Stacked Area chart==========================================\n\nArea_CharthandleSubmit = (e) => {\n     this.setState({value_ax: e.target.value});\n };\n\nArea_CharthandleSubmit1 = (e) => {\n    this.setState({value_ay: e.target.value});\n  };\n\n\narea_handleSubmit = (e) => {\n    e.preventDefault();\n     this.loadStackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay}\n  );\n  };\n\n\nasync loadStackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            SArea_chart_list.push(data_dict)\n\n        }\n        const m =\"test\"\n      this.setState({area_chart_series:value_list})\n      console.log(data);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomponentDidMount() {\n//  const sourceDataDaily = {\"Actual\": 1800000, \"Budget\": 18000};\n//  this.setState({line_data:sourceDataDaily})\n\n\n  }\n\n\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\n\n    return (\n    <div>\n        <div id=\"content\">\n        <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_amount_USD}</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmitLineChartOK} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_line\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                            </div>\n                            <div>\n                            <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}>\n                            {this.state.value_xl}, {this.state.value_yl}</h5>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_lineChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n      <Chart forceFit height={400} data={this.state.line_chart_source_data} scale={line_chart_source_scale}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Line position=\"name*value\"/>\n        <Point position=\"name*value\" shape=\"circle\"/>\n      </Chart>\n\n\n             </div>\n         </Card>\n      </Col>\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n        <Coord type=\"rect\" direction=\"LB\" />\n        <Tooltip />\n        <Axis dataKey=\"country\" label={{ offset: 12 }} />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n\n </Row>\n <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_v_bar} onChange={this.handleSubmitVerticalBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >{this.state.select_status}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Vertical\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_Vertical\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Vertical Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.vertical_table_columns} dataSource={this.state.vertical_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_verticalChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n      <Chart forceFit height={400} data={vertical_bar_data} scale={vertical_scale}>\n        <Tooltip />\n        <Axis />\n        <Bar position=\"name*value\" />\n      </Chart>\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Status</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Amount_USD</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n                    style={{marginLeft:\"3px\"}}>Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Group Bar TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_group_barChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n                  <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n </Row>\n\n\n <Row type=\"flex\" gutter={24}>\n\n <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_donut} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n                             <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_donutChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n\n        <Chart forceFit height={400} data={don_data} scale={scale1}>\n        <Tooltip showTitle={false} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_status}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n                             <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_pieChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n\n        <Chart forceFit height={400} data={pie_data} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n                            <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n\n\n<Row type=\"flex\" gutter={24}>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_mx} onChange={this.mixedCharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Status</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_my} onChange={this.mixedCharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Amount_USD</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_mz} onChange={this.mixedCharthandleSubmit2}\n                        style={{ width:\"110px\", marginLeft:\"8px\" }}>\n                         <option>Status</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.mixed_handleSubmit} className='btn btn-info' style={{marginLeft:\"15px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Mixed Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_mixedChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n                  <ReactApexChart options={this.state.mixed_chart_options}\n                  series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n<Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_ax} onChange={this.Area_CharthandleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <select class=\"custom-select\"  value={this.state.value_ay} onChange={this.Area_CharthandleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                   <React.Fragment>\n                        <button onClick={this.area_handleSubmit} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                          type='button'>OK</button>\n                    </React.Fragment>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Stacked\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_mixedChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n                  <ReactApexChart options={this.state.area_chart_options}\n                  series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n</Row>\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n        </div>\n      </div>\n\n    );\n  }\n}\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
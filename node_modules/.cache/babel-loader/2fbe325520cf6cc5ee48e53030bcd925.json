{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = global.React || require('react');\n\nvar PropTypes = global.PropTypes || require('prop-types');\n\nvar window = require('./utils/window');\n\nrequire('./utils/establish-polyfills');\n\nvar scaleEnum = require('./utils/scaleEnum');\n\nvar infiniteHelpers = require('./utils/infiniteHelpers');\n\nvar _isFinite = require('lodash.isfinite');\n\nvar checkProps = require('./utils/checkProps');\n\nvar Infinite = function (_React$Component) {\n  _inherits(Infinite, _React$Component);\n\n  _createClass(Infinite, null, [{\n    key: 'containerHeightScaleFactor',\n    value: function containerHeightScaleFactor(factor) {\n      if (!_isFinite(factor)) {\n        throw new Error('The scale factor must be a number.');\n      }\n\n      return {\n        type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n        amount: factor\n      };\n    }\n  }]);\n\n  function Infinite(props) {\n    _classCallCheck(this, Infinite);\n\n    var _this = _possibleConstructorReturn(this, (Infinite.__proto__ || Object.getPrototypeOf(Infinite)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var nextInternalState = _this.recomputeInternalStateFromProps(props);\n\n    _this.computedProps = nextInternalState.computedProps;\n    _this.utils = nextInternalState.utils;\n    _this.shouldAttachToBottom = props.displayBottomUpwards;\n    var state = nextInternalState.newState;\n    state.scrollTimeout = undefined;\n    state.isScrolling = false;\n    _this.state = state;\n    return _this;\n  } // Properties currently used but which may be\n  // refactored away in the future.\n  // Refs\n\n\n  _createClass(Infinite, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var nextInternalState = this.recomputeInternalStateFromProps(nextProps);\n      this.computedProps = nextInternalState.computedProps;\n      this.utils = nextInternalState.utils;\n      this.setState(nextInternalState.newState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate() {\n      if (this.props.displayBottomUpwards) {\n        this.preservedScrollState = this.utils.getScrollTop() - this.loadingSpinnerHeight;\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.loadingSpinnerHeight = this.utils.getLoadingSpinnerHeight();\n\n      if (!prevProps.useWindowAsScrollContainer && this.props.useWindowAsScrollContainer) {\n        this.utils.subscribeToScrollListener();\n      }\n\n      if (this.props.displayBottomUpwards) {\n        var lowestScrollTop = this.getLowestPossibleScrollTop();\n\n        if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n          this.utils.setScrollTop(lowestScrollTop);\n        } else if (prevProps.isInfiniteLoading && !this.props.isInfiniteLoading) {\n          this.utils.setScrollTop(this.state.infiniteComputer.getTotalScrollableHeight() - prevState.infiniteComputer.getTotalScrollableHeight() + this.preservedScrollState);\n        }\n      }\n\n      var hasLoadedMoreChildren = this.state.numberOfChildren !== prevState.numberOfChildren;\n\n      if (hasLoadedMoreChildren) {\n        var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, this.utils.getScrollTop());\n        this.setState(newApertureState);\n      }\n\n      var isMissingVisibleRows = hasLoadedMoreChildren && !this.hasAllVisibleItems() && !this.state.isInfiniteLoading;\n\n      if (isMissingVisibleRows) {\n        this.onInfiniteLoad();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.utils.subscribeToScrollListener();\n\n      if (!this.hasAllVisibleItems()) {\n        this.onInfiniteLoad();\n      }\n\n      if (this.props.displayBottomUpwards) {\n        var lowestScrollTop = this.getLowestPossibleScrollTop();\n\n        if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n          this.utils.setScrollTop(lowestScrollTop);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.utils.unsubscribeFromScrollListener();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var displayables;\n\n      if (this.state.numberOfChildren > 1) {\n        displayables = this.computedProps.children.slice(this.state.displayIndexStart, this.state.displayIndexEnd + 1);\n      } else {\n        displayables = this.computedProps.children;\n      }\n\n      var infiniteScrollStyles = {};\n\n      if (this.state.isScrolling) {\n        infiniteScrollStyles.pointerEvents = 'none';\n      }\n\n      var topSpacerHeight = this.state.infiniteComputer.getTopSpacerHeight(this.state.displayIndexStart),\n          bottomSpacerHeight = this.state.infiniteComputer.getBottomSpacerHeight(this.state.displayIndexEnd); // This asymmetry is due to a reluctance to use CSS to control\n      // the bottom alignment\n\n      if (this.computedProps.displayBottomUpwards) {\n        var heightDifference = this.computedProps.containerHeight - this.state.infiniteComputer.getTotalScrollableHeight();\n\n        if (heightDifference > 0) {\n          topSpacerHeight = heightDifference - this.loadingSpinnerHeight;\n        }\n      }\n\n      var loadingSpinner = this.computedProps.infiniteLoadBeginEdgeOffset === undefined ? null : React.createElement('div', {\n        ref: function ref(c) {\n          _this2.loadingSpinner = c;\n        }\n      }, this.state.isInfiniteLoading ? this.computedProps.loadingSpinnerDelegate : null); // topSpacer and bottomSpacer take up the amount of space that the\n      // rendered elements would have taken up otherwise\n\n      return React.createElement('div', {\n        className: this.computedProps.className,\n        ref: function ref(c) {\n          _this2.scrollable = c;\n        },\n        style: this.utils.buildScrollableStyle(),\n        onScroll: this.utils.nodeScrollListener\n      }, React.createElement('div', {\n        ref: function ref(c) {\n          _this2.smoothScrollingWrapper = c;\n        },\n        style: infiniteScrollStyles\n      }, React.createElement('div', {\n        ref: function ref(c) {\n          _this2.topSpacer = c;\n        },\n        style: infiniteHelpers.buildHeightStyle(topSpacerHeight)\n      }), this.computedProps.displayBottomUpwards && loadingSpinner, displayables, !this.computedProps.displayBottomUpwards && loadingSpinner, React.createElement('div', {\n        ref: function ref(c) {\n          _this2.bottomSpacer = c;\n        },\n        style: infiniteHelpers.buildHeightStyle(bottomSpacerHeight)\n      })));\n    }\n  }]);\n\n  return Infinite;\n}(React.Component);\n\nInfinite.propTypes = {\n  children: PropTypes.any,\n  handleScroll: PropTypes.func,\n  // preloadBatchSize causes updates only to\n  // happen each preloadBatchSize pixels of scrolling.\n  // Set a larger number to cause fewer updates to the\n  // element list.\n  preloadBatchSize: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    type: PropTypes.oneOf(['containerHeightScaleFactor']).isRequired,\n    amount: PropTypes.number.isRequired\n  })]),\n  // preloadAdditionalHeight determines how much of the\n  // list above and below the container is preloaded even\n  // when it is not currently visible to the user. In the\n  // regular scroll implementation, preloadAdditionalHeight\n  // is equal to the entire height of the list.\n  preloadAdditionalHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    type: PropTypes.oneOf(['containerHeightScaleFactor']).isRequired,\n    amount: PropTypes.number.isRequired\n  })]),\n  // page to screen ratio\n  // The provided elementHeight can be either\n  //  1. a constant: all elements are the same height\n  //  2. an array containing the height of each element\n  elementHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  // This is the total height of the visible window. One\n  // of\n  containerHeight: PropTypes.number,\n  useWindowAsScrollContainer: PropTypes.bool,\n  displayBottomUpwards: PropTypes.bool.isRequired,\n  infiniteLoadBeginEdgeOffset: PropTypes.number,\n  onInfiniteLoad: PropTypes.func,\n  loadingSpinnerDelegate: PropTypes.node,\n  isInfiniteLoading: PropTypes.bool,\n  timeScrollStateLastsForAfterUserScrolls: PropTypes.number,\n  className: PropTypes.string,\n  styles: PropTypes.shape({\n    scrollableStyle: PropTypes.object\n  }).isRequired\n};\nInfinite.defaultProps = {\n  handleScroll: function handleScroll() {},\n  useWindowAsScrollContainer: false,\n  onInfiniteLoad: function onInfiniteLoad() {},\n  loadingSpinnerDelegate: React.createElement('div', null),\n  displayBottomUpwards: false,\n  isInfiniteLoading: false,\n  timeScrollStateLastsForAfterUserScrolls: 150,\n  className: '',\n  styles: {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.shouldAttachToBottom = false;\n  this.preservedScrollState = 0;\n  this.loadingSpinnerHeight = 0;\n\n  this.generateComputedUtilityFunctions = function (props) {\n    var utilities = {};\n\n    utilities.getLoadingSpinnerHeight = function () {\n      var loadingSpinnerHeight = 0;\n\n      if (_this3.loadingSpinner) {\n        loadingSpinnerHeight = _this3.loadingSpinner.offsetHeight || 0;\n      }\n\n      return loadingSpinnerHeight;\n    };\n\n    if (props.useWindowAsScrollContainer) {\n      utilities.subscribeToScrollListener = function () {\n        window.addEventListener('scroll', _this3.infiniteHandleScroll);\n      };\n\n      utilities.unsubscribeFromScrollListener = function () {\n        window.removeEventListener('scroll', _this3.infiniteHandleScroll);\n      };\n\n      utilities.nodeScrollListener = function () {};\n\n      utilities.getScrollTop = function () {\n        return window.pageYOffset;\n      };\n\n      utilities.setScrollTop = function (top) {\n        window.scroll(window.pageXOffset, top);\n      };\n\n      utilities.scrollShouldBeIgnored = function () {\n        return false;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return {};\n      };\n    } else {\n      utilities.subscribeToScrollListener = function () {};\n\n      utilities.unsubscribeFromScrollListener = function () {};\n\n      utilities.nodeScrollListener = _this3.infiniteHandleScroll;\n\n      utilities.getScrollTop = function () {\n        return _this3.scrollable ? _this3.scrollable.scrollTop : 0;\n      };\n\n      utilities.setScrollTop = function (top) {\n        if (_this3.scrollable) {\n          _this3.scrollable.scrollTop = top;\n        }\n      };\n\n      utilities.scrollShouldBeIgnored = function (event) {\n        return event.target !== _this3.scrollable;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return Object.assign({}, {\n          height: _this3.computedProps.containerHeight,\n          overflowX: 'hidden',\n          overflowY: 'scroll',\n          WebkitOverflowScrolling: 'touch'\n        }, _this3.computedProps.styles.scrollableStyle || {});\n      };\n    }\n\n    return utilities;\n  };\n\n  this.recomputeInternalStateFromProps = function (props) {\n    checkProps(props);\n    var computedProps = infiniteHelpers.generateComputedProps(props);\n\n    var utils = _this3.generateComputedUtilityFunctions(props);\n\n    var newState = {};\n    newState.numberOfChildren = React.Children.count(computedProps.children);\n    newState.infiniteComputer = infiniteHelpers.createInfiniteComputer(computedProps.elementHeight, computedProps.children);\n\n    if (computedProps.isInfiniteLoading !== undefined) {\n      newState.isInfiniteLoading = computedProps.isInfiniteLoading;\n    }\n\n    newState.preloadBatchSize = computedProps.preloadBatchSize;\n    newState.preloadAdditionalHeight = computedProps.preloadAdditionalHeight;\n    newState = Object.assign(newState, infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(newState, utils.getScrollTop()));\n    return {\n      computedProps: computedProps,\n      utils: utils,\n      newState: newState\n    };\n  };\n\n  this.infiniteHandleScroll = function (e) {\n    if (_this3.utils.scrollShouldBeIgnored(e)) {\n      return;\n    }\n\n    _this3.computedProps.handleScroll(_this3.scrollable);\n\n    _this3.handleScroll(_this3.utils.getScrollTop());\n  };\n\n  this.manageScrollTimeouts = function () {\n    // Maintains a series of timeouts to set this.state.isScrolling\n    // to be true when the element is scrolling.\n    if (_this3.state.scrollTimeout) {\n      clearTimeout(_this3.state.scrollTimeout);\n    }\n\n    var that = _this3,\n        scrollTimeout = setTimeout(function () {\n      that.setState({\n        isScrolling: false,\n        scrollTimeout: undefined\n      });\n    }, _this3.computedProps.timeScrollStateLastsForAfterUserScrolls);\n\n    _this3.setState({\n      isScrolling: true,\n      scrollTimeout: scrollTimeout\n    });\n  };\n\n  this.getLowestPossibleScrollTop = function () {\n    return _this3.state.infiniteComputer.getTotalScrollableHeight() - _this3.computedProps.containerHeight;\n  };\n\n  this.hasAllVisibleItems = function () {\n    return !(_isFinite(_this3.computedProps.infiniteLoadBeginEdgeOffset) && _this3.state.infiniteComputer.getTotalScrollableHeight() < _this3.computedProps.containerHeight);\n  };\n\n  this.passedEdgeForInfiniteScroll = function (scrollTop) {\n    var edgeOffset = _this3.computedProps.infiniteLoadBeginEdgeOffset;\n\n    if (typeof edgeOffset !== 'number') {\n      return false;\n    }\n\n    if (_this3.computedProps.displayBottomUpwards) {\n      return !_this3.shouldAttachToBottom && scrollTop < edgeOffset;\n    } else {\n      return scrollTop > _this3.state.infiniteComputer.getTotalScrollableHeight() - _this3.computedProps.containerHeight - edgeOffset;\n    }\n  };\n\n  this.onInfiniteLoad = function () {\n    _this3.setState({\n      isInfiniteLoading: true\n    });\n\n    _this3.computedProps.onInfiniteLoad();\n  };\n\n  this.handleScroll = function (scrollTop) {\n    _this3.shouldAttachToBottom = _this3.computedProps.displayBottomUpwards && scrollTop >= _this3.getLowestPossibleScrollTop();\n\n    _this3.manageScrollTimeouts();\n\n    var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(_this3.state, scrollTop);\n\n    if (_this3.passedEdgeForInfiniteScroll(scrollTop) && !_this3.state.isInfiniteLoading) {\n      _this3.setState(Object.assign({}, newApertureState));\n\n      _this3.onInfiniteLoad();\n    } else {\n      _this3.setState(newApertureState);\n    }\n  };\n};\n\nmodule.exports = Infinite;\nglobal.Infinite = Infinite;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/react-infinite/build/react-infinite.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","global","require","PropTypes","window","scaleEnum","infiniteHelpers","_isFinite","checkProps","Infinite","_React$Component","containerHeightScaleFactor","factor","Error","type","CONTAINER_HEIGHT_SCALE_FACTOR","amount","_this","getPrototypeOf","_initialiseProps","nextInternalState","recomputeInternalStateFromProps","computedProps","utils","shouldAttachToBottom","displayBottomUpwards","state","newState","scrollTimeout","undefined","isScrolling","componentWillReceiveProps","nextProps","setState","componentWillUpdate","preservedScrollState","getScrollTop","loadingSpinnerHeight","componentDidUpdate","prevProps","prevState","getLoadingSpinnerHeight","useWindowAsScrollContainer","subscribeToScrollListener","lowestScrollTop","getLowestPossibleScrollTop","setScrollTop","isInfiniteLoading","infiniteComputer","getTotalScrollableHeight","hasLoadedMoreChildren","numberOfChildren","newApertureState","recomputeApertureStateFromOptionsAndScrollTop","isMissingVisibleRows","hasAllVisibleItems","onInfiniteLoad","componentDidMount","componentWillUnmount","unsubscribeFromScrollListener","render","_this2","displayables","children","slice","displayIndexStart","displayIndexEnd","infiniteScrollStyles","pointerEvents","topSpacerHeight","getTopSpacerHeight","bottomSpacerHeight","getBottomSpacerHeight","heightDifference","containerHeight","loadingSpinner","infiniteLoadBeginEdgeOffset","createElement","ref","c","loadingSpinnerDelegate","className","scrollable","style","buildScrollableStyle","onScroll","nodeScrollListener","smoothScrollingWrapper","topSpacer","buildHeightStyle","bottomSpacer","Component","propTypes","any","handleScroll","func","preloadBatchSize","oneOfType","number","shape","oneOf","isRequired","preloadAdditionalHeight","elementHeight","arrayOf","bool","node","timeScrollStateLastsForAfterUserScrolls","string","styles","scrollableStyle","object","defaultProps","_this3","generateComputedUtilityFunctions","utilities","offsetHeight","addEventListener","infiniteHandleScroll","removeEventListener","pageYOffset","top","scroll","pageXOffset","scrollShouldBeIgnored","scrollTop","event","assign","height","overflowX","overflowY","WebkitOverflowScrolling","generateComputedProps","Children","count","createInfiniteComputer","e","manageScrollTimeouts","clearTimeout","that","setTimeout","passedEdgeForInfiniteScroll","edgeOffset","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = global.React || require('react');\nvar PropTypes = global.PropTypes || require('prop-types');\n\nvar window = require('./utils/window');\n\nrequire('./utils/establish-polyfills');\nvar scaleEnum = require('./utils/scaleEnum');\nvar infiniteHelpers = require('./utils/infiniteHelpers');\nvar _isFinite = require('lodash.isfinite');\n\nvar checkProps = require('./utils/checkProps');\n\nvar Infinite = function (_React$Component) {\n  _inherits(Infinite, _React$Component);\n\n  _createClass(Infinite, null, [{\n    key: 'containerHeightScaleFactor',\n    value: function containerHeightScaleFactor(factor) {\n      if (!_isFinite(factor)) {\n        throw new Error('The scale factor must be a number.');\n      }\n      return {\n        type: scaleEnum.CONTAINER_HEIGHT_SCALE_FACTOR,\n        amount: factor\n      };\n    }\n  }]);\n\n  function Infinite(props) {\n    _classCallCheck(this, Infinite);\n\n    var _this = _possibleConstructorReturn(this, (Infinite.__proto__ || Object.getPrototypeOf(Infinite)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var nextInternalState = _this.recomputeInternalStateFromProps(props);\n\n    _this.computedProps = nextInternalState.computedProps;\n    _this.utils = nextInternalState.utils;\n    _this.shouldAttachToBottom = props.displayBottomUpwards;\n\n    var state = nextInternalState.newState;\n    state.scrollTimeout = undefined;\n    state.isScrolling = false;\n\n    _this.state = state;\n    return _this;\n  }\n\n  // Properties currently used but which may be\n  // refactored away in the future.\n\n\n  // Refs\n\n\n  _createClass(Infinite, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var nextInternalState = this.recomputeInternalStateFromProps(nextProps);\n\n      this.computedProps = nextInternalState.computedProps;\n      this.utils = nextInternalState.utils;\n\n      this.setState(nextInternalState.newState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate() {\n      if (this.props.displayBottomUpwards) {\n        this.preservedScrollState = this.utils.getScrollTop() - this.loadingSpinnerHeight;\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.loadingSpinnerHeight = this.utils.getLoadingSpinnerHeight();\n\n      if (!prevProps.useWindowAsScrollContainer && this.props.useWindowAsScrollContainer) {\n        this.utils.subscribeToScrollListener();\n      }\n\n      if (this.props.displayBottomUpwards) {\n        var lowestScrollTop = this.getLowestPossibleScrollTop();\n        if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n          this.utils.setScrollTop(lowestScrollTop);\n        } else if (prevProps.isInfiniteLoading && !this.props.isInfiniteLoading) {\n          this.utils.setScrollTop(this.state.infiniteComputer.getTotalScrollableHeight() - prevState.infiniteComputer.getTotalScrollableHeight() + this.preservedScrollState);\n        }\n      }\n\n      var hasLoadedMoreChildren = this.state.numberOfChildren !== prevState.numberOfChildren;\n      if (hasLoadedMoreChildren) {\n        var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(this.state, this.utils.getScrollTop());\n        this.setState(newApertureState);\n      }\n\n      var isMissingVisibleRows = hasLoadedMoreChildren && !this.hasAllVisibleItems() && !this.state.isInfiniteLoading;\n      if (isMissingVisibleRows) {\n        this.onInfiniteLoad();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.utils.subscribeToScrollListener();\n\n      if (!this.hasAllVisibleItems()) {\n        this.onInfiniteLoad();\n      }\n\n      if (this.props.displayBottomUpwards) {\n        var lowestScrollTop = this.getLowestPossibleScrollTop();\n        if (this.shouldAttachToBottom && this.utils.getScrollTop() < lowestScrollTop) {\n          this.utils.setScrollTop(lowestScrollTop);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.utils.unsubscribeFromScrollListener();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var displayables;\n      if (this.state.numberOfChildren > 1) {\n        displayables = this.computedProps.children.slice(this.state.displayIndexStart, this.state.displayIndexEnd + 1);\n      } else {\n        displayables = this.computedProps.children;\n      }\n\n      var infiniteScrollStyles = {};\n      if (this.state.isScrolling) {\n        infiniteScrollStyles.pointerEvents = 'none';\n      }\n\n      var topSpacerHeight = this.state.infiniteComputer.getTopSpacerHeight(this.state.displayIndexStart),\n          bottomSpacerHeight = this.state.infiniteComputer.getBottomSpacerHeight(this.state.displayIndexEnd);\n\n      // This asymmetry is due to a reluctance to use CSS to control\n      // the bottom alignment\n      if (this.computedProps.displayBottomUpwards) {\n        var heightDifference = this.computedProps.containerHeight - this.state.infiniteComputer.getTotalScrollableHeight();\n        if (heightDifference > 0) {\n          topSpacerHeight = heightDifference - this.loadingSpinnerHeight;\n        }\n      }\n\n      var loadingSpinner = this.computedProps.infiniteLoadBeginEdgeOffset === undefined ? null : React.createElement(\n        'div',\n        {\n          ref: function ref(c) {\n            _this2.loadingSpinner = c;\n          }\n        },\n        this.state.isInfiniteLoading ? this.computedProps.loadingSpinnerDelegate : null\n      );\n\n      // topSpacer and bottomSpacer take up the amount of space that the\n      // rendered elements would have taken up otherwise\n      return React.createElement(\n        'div',\n        {\n          className: this.computedProps.className,\n          ref: function ref(c) {\n            _this2.scrollable = c;\n          },\n          style: this.utils.buildScrollableStyle(),\n          onScroll: this.utils.nodeScrollListener\n        },\n        React.createElement(\n          'div',\n          {\n            ref: function ref(c) {\n              _this2.smoothScrollingWrapper = c;\n            },\n            style: infiniteScrollStyles\n          },\n          React.createElement('div', {\n            ref: function ref(c) {\n              _this2.topSpacer = c;\n            },\n            style: infiniteHelpers.buildHeightStyle(topSpacerHeight)\n          }),\n          this.computedProps.displayBottomUpwards && loadingSpinner,\n          displayables,\n          !this.computedProps.displayBottomUpwards && loadingSpinner,\n          React.createElement('div', {\n            ref: function ref(c) {\n              _this2.bottomSpacer = c;\n            },\n            style: infiniteHelpers.buildHeightStyle(bottomSpacerHeight)\n          })\n        )\n      );\n    }\n  }]);\n\n  return Infinite;\n}(React.Component);\n\nInfinite.propTypes = {\n  children: PropTypes.any,\n\n  handleScroll: PropTypes.func,\n\n  // preloadBatchSize causes updates only to\n  // happen each preloadBatchSize pixels of scrolling.\n  // Set a larger number to cause fewer updates to the\n  // element list.\n  preloadBatchSize: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    type: PropTypes.oneOf(['containerHeightScaleFactor']).isRequired,\n    amount: PropTypes.number.isRequired\n  })]),\n  // preloadAdditionalHeight determines how much of the\n  // list above and below the container is preloaded even\n  // when it is not currently visible to the user. In the\n  // regular scroll implementation, preloadAdditionalHeight\n  // is equal to the entire height of the list.\n  preloadAdditionalHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    type: PropTypes.oneOf(['containerHeightScaleFactor']).isRequired,\n    amount: PropTypes.number.isRequired\n  })]), // page to screen ratio\n\n  // The provided elementHeight can be either\n  //  1. a constant: all elements are the same height\n  //  2. an array containing the height of each element\n  elementHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  // This is the total height of the visible window. One\n  // of\n  containerHeight: PropTypes.number,\n  useWindowAsScrollContainer: PropTypes.bool,\n\n  displayBottomUpwards: PropTypes.bool.isRequired,\n\n  infiniteLoadBeginEdgeOffset: PropTypes.number,\n  onInfiniteLoad: PropTypes.func,\n  loadingSpinnerDelegate: PropTypes.node,\n\n  isInfiniteLoading: PropTypes.bool,\n  timeScrollStateLastsForAfterUserScrolls: PropTypes.number,\n\n  className: PropTypes.string,\n\n  styles: PropTypes.shape({\n    scrollableStyle: PropTypes.object\n  }).isRequired\n};\nInfinite.defaultProps = {\n  handleScroll: function handleScroll() {},\n\n  useWindowAsScrollContainer: false,\n\n  onInfiniteLoad: function onInfiniteLoad() {},\n  loadingSpinnerDelegate: React.createElement('div', null),\n\n  displayBottomUpwards: false,\n\n  isInfiniteLoading: false,\n  timeScrollStateLastsForAfterUserScrolls: 150,\n\n  className: '',\n\n  styles: {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.shouldAttachToBottom = false;\n  this.preservedScrollState = 0;\n  this.loadingSpinnerHeight = 0;\n\n  this.generateComputedUtilityFunctions = function (props) {\n    var utilities = {};\n    utilities.getLoadingSpinnerHeight = function () {\n      var loadingSpinnerHeight = 0;\n      if (_this3.loadingSpinner) {\n        loadingSpinnerHeight = _this3.loadingSpinner.offsetHeight || 0;\n      }\n      return loadingSpinnerHeight;\n    };\n    if (props.useWindowAsScrollContainer) {\n      utilities.subscribeToScrollListener = function () {\n        window.addEventListener('scroll', _this3.infiniteHandleScroll);\n      };\n      utilities.unsubscribeFromScrollListener = function () {\n        window.removeEventListener('scroll', _this3.infiniteHandleScroll);\n      };\n      utilities.nodeScrollListener = function () {};\n      utilities.getScrollTop = function () {\n        return window.pageYOffset;\n      };\n      utilities.setScrollTop = function (top) {\n        window.scroll(window.pageXOffset, top);\n      };\n      utilities.scrollShouldBeIgnored = function () {\n        return false;\n      };\n      utilities.buildScrollableStyle = function () {\n        return {};\n      };\n    } else {\n      utilities.subscribeToScrollListener = function () {};\n      utilities.unsubscribeFromScrollListener = function () {};\n      utilities.nodeScrollListener = _this3.infiniteHandleScroll;\n      utilities.getScrollTop = function () {\n        return _this3.scrollable ? _this3.scrollable.scrollTop : 0;\n      };\n\n      utilities.setScrollTop = function (top) {\n        if (_this3.scrollable) {\n          _this3.scrollable.scrollTop = top;\n        }\n      };\n      utilities.scrollShouldBeIgnored = function (event) {\n        return event.target !== _this3.scrollable;\n      };\n\n      utilities.buildScrollableStyle = function () {\n        return Object.assign({}, {\n          height: _this3.computedProps.containerHeight,\n          overflowX: 'hidden',\n          overflowY: 'scroll',\n          WebkitOverflowScrolling: 'touch'\n        }, _this3.computedProps.styles.scrollableStyle || {});\n      };\n    }\n    return utilities;\n  };\n\n  this.recomputeInternalStateFromProps = function (props) {\n    checkProps(props);\n    var computedProps = infiniteHelpers.generateComputedProps(props);\n    var utils = _this3.generateComputedUtilityFunctions(props);\n\n    var newState = {};\n\n    newState.numberOfChildren = React.Children.count(computedProps.children);\n    newState.infiniteComputer = infiniteHelpers.createInfiniteComputer(computedProps.elementHeight, computedProps.children);\n\n    if (computedProps.isInfiniteLoading !== undefined) {\n      newState.isInfiniteLoading = computedProps.isInfiniteLoading;\n    }\n\n    newState.preloadBatchSize = computedProps.preloadBatchSize;\n    newState.preloadAdditionalHeight = computedProps.preloadAdditionalHeight;\n\n    newState = Object.assign(newState, infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(newState, utils.getScrollTop()));\n\n    return {\n      computedProps: computedProps,\n      utils: utils,\n      newState: newState\n    };\n  };\n\n  this.infiniteHandleScroll = function (e) {\n    if (_this3.utils.scrollShouldBeIgnored(e)) {\n      return;\n    }\n    _this3.computedProps.handleScroll(_this3.scrollable);\n    _this3.handleScroll(_this3.utils.getScrollTop());\n  };\n\n  this.manageScrollTimeouts = function () {\n    // Maintains a series of timeouts to set this.state.isScrolling\n    // to be true when the element is scrolling.\n\n    if (_this3.state.scrollTimeout) {\n      clearTimeout(_this3.state.scrollTimeout);\n    }\n\n    var that = _this3,\n        scrollTimeout = setTimeout(function () {\n      that.setState({\n        isScrolling: false,\n        scrollTimeout: undefined\n      });\n    }, _this3.computedProps.timeScrollStateLastsForAfterUserScrolls);\n\n    _this3.setState({\n      isScrolling: true,\n      scrollTimeout: scrollTimeout\n    });\n  };\n\n  this.getLowestPossibleScrollTop = function () {\n    return _this3.state.infiniteComputer.getTotalScrollableHeight() - _this3.computedProps.containerHeight;\n  };\n\n  this.hasAllVisibleItems = function () {\n    return !(_isFinite(_this3.computedProps.infiniteLoadBeginEdgeOffset) && _this3.state.infiniteComputer.getTotalScrollableHeight() < _this3.computedProps.containerHeight);\n  };\n\n  this.passedEdgeForInfiniteScroll = function (scrollTop) {\n    var edgeOffset = _this3.computedProps.infiniteLoadBeginEdgeOffset;\n    if (typeof edgeOffset !== 'number') {\n      return false;\n    }\n\n    if (_this3.computedProps.displayBottomUpwards) {\n      return !_this3.shouldAttachToBottom && scrollTop < edgeOffset;\n    } else {\n      return scrollTop > _this3.state.infiniteComputer.getTotalScrollableHeight() - _this3.computedProps.containerHeight - edgeOffset;\n    }\n  };\n\n  this.onInfiniteLoad = function () {\n    _this3.setState({ isInfiniteLoading: true });\n    _this3.computedProps.onInfiniteLoad();\n  };\n\n  this.handleScroll = function (scrollTop) {\n    _this3.shouldAttachToBottom = _this3.computedProps.displayBottomUpwards && scrollTop >= _this3.getLowestPossibleScrollTop();\n\n    _this3.manageScrollTimeouts();\n\n    var newApertureState = infiniteHelpers.recomputeApertureStateFromOptionsAndScrollTop(_this3.state, scrollTop);\n\n    if (_this3.passedEdgeForInfiniteScroll(scrollTop) && !_this3.state.isInfiniteLoading) {\n      _this3.setState(Object.assign({}, newApertureState));\n      _this3.onInfiniteLoad();\n    } else {\n      _this3.setState(newApertureState);\n    }\n  };\n};\n\nmodule.exports = Infinite;\nglobal.Infinite = Infinite;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar counterRegex = require('../../lib/regex').counter;\n\nmodule.exports = {\n  idRegex: {\n    x: counterRegex('x'),\n    y: counterRegex('y')\n  },\n  attrRegex: counterRegex('[xy]axis'),\n  // axis match regular expression\n  xAxisMatch: counterRegex('xaxis'),\n  yAxisMatch: counterRegex('yaxis'),\n  // pattern matching axis ids and names\n  // note that this is more permissive than counterRegex, as\n  // id2name, name2id, and cleanId accept \"x1\" etc\n  AX_ID_PATTERN: /^[xyz][0-9]*$/,\n  AX_NAME_PATTERN: /^[xyz]axis[0-9]*$/,\n  // and for 2D subplots\n  SUBPLOT_PATTERN: /^x([0-9]*)y([0-9]*)$/,\n  // pixels to move mouse before you stop clamping to starting point\n  MINDRAG: 8,\n  // smallest dimension allowed for a select box\n  MINSELECT: 12,\n  // smallest dimension allowed for a zoombox\n  MINZOOM: 20,\n  // width of axis drag regions\n  DRAGGERSIZE: 20,\n  // max pixels off straight before a lasso select line counts as bent\n  BENDPX: 1.5,\n  // delay before a redraw (relayout) after smooth panning and zooming\n  REDRAWDELAY: 50,\n  // throttling limit (ms) for selectPoints calls\n  SELECTDELAY: 100,\n  // cache ID suffix for throttle\n  SELECTID: '-select',\n  // last resort axis ranges for x and y axes if we have no data\n  DFLTRANGEX: [-1, 6],\n  DFLTRANGEY: [-1, 4],\n  // Layers to keep trace types in the right order\n  // N.B. each  'unique' plot method must have its own layer\n  traceLayerClasses: ['imagelayer', 'heatmaplayer', 'contourcarpetlayer', 'contourlayer', 'funnellayer', 'waterfalllayer', 'barlayer', 'carpetlayer', 'violinlayer', 'boxlayer', 'ohlclayer', 'scattercarpetlayer', 'scatterlayer'],\n  clipOnAxisFalseQuery: ['.scatterlayer', '.barlayer', '.funnellayer', '.waterfalllayer'],\n  layerValue2layerClass: {\n    'above traces': 'above',\n    'below traces': 'below'\n  }\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/plots/cartesian/constants.js"],"names":["counterRegex","require","counter","module","exports","idRegex","x","y","attrRegex","xAxisMatch","yAxisMatch","AX_ID_PATTERN","AX_NAME_PATTERN","SUBPLOT_PATTERN","MINDRAG","MINSELECT","MINZOOM","DRAGGERSIZE","BENDPX","REDRAWDELAY","SELECTDELAY","SELECTID","DFLTRANGEX","DFLTRANGEY","traceLayerClasses","clipOnAxisFalseQuery","layerValue2layerClass"],"mappings":"AAAA;;;;;;;AAQA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OAA9C;;AAGAC,MAAM,CAACC,OAAP,GAAiB;AAEbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,CAAC,EAAEN,YAAY,CAAC,GAAD,CADV;AAELO,IAAAA,CAAC,EAAEP,YAAY,CAAC,GAAD;AAFV,GAFI;AAObQ,EAAAA,SAAS,EAAER,YAAY,CAAC,UAAD,CAPV;AASb;AACAS,EAAAA,UAAU,EAAET,YAAY,CAAC,OAAD,CAVX;AAWbU,EAAAA,UAAU,EAAEV,YAAY,CAAC,OAAD,CAXX;AAab;AACA;AACA;AACAW,EAAAA,aAAa,EAAE,eAhBF;AAiBbC,EAAAA,eAAe,EAAE,mBAjBJ;AAmBb;AACAC,EAAAA,eAAe,EAAE,sBApBJ;AAsBb;AACAC,EAAAA,OAAO,EAAE,CAvBI;AAyBb;AACAC,EAAAA,SAAS,EAAE,EA1BE;AA4Bb;AACAC,EAAAA,OAAO,EAAE,EA7BI;AA+Bb;AACAC,EAAAA,WAAW,EAAE,EAhCA;AAkCb;AACAC,EAAAA,MAAM,EAAE,GAnCK;AAqCb;AACAC,EAAAA,WAAW,EAAE,EAtCA;AAwCb;AACAC,EAAAA,WAAW,EAAE,GAzCA;AA2Cb;AACAC,EAAAA,QAAQ,EAAE,SA5CG;AA8Cb;AACAC,EAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CA/CC;AAgDbC,EAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAhDC;AAkDb;AACA;AACAC,EAAAA,iBAAiB,EAAE,CACf,YADe,EAEf,cAFe,EAGf,oBAHe,EAGO,cAHP,EAIf,aAJe,EAIA,gBAJA,EAIkB,UAJlB,EAKf,aALe,EAMf,aANe,EAOf,UAPe,EAQf,WARe,EASf,oBATe,EASO,cATP,CApDN;AAgEbC,EAAAA,oBAAoB,EAAE,CAClB,eADkB,EAElB,WAFkB,EAGlB,cAHkB,EAIlB,iBAJkB,CAhET;AAuEbC,EAAAA,qBAAqB,EAAE;AACnB,oBAAgB,OADG;AAEnB,oBAAgB;AAFG;AAvEV,CAAjB","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\nvar counterRegex = require('../../lib/regex').counter;\n\n\nmodule.exports = {\n\n    idRegex: {\n        x: counterRegex('x'),\n        y: counterRegex('y')\n    },\n\n    attrRegex: counterRegex('[xy]axis'),\n\n    // axis match regular expression\n    xAxisMatch: counterRegex('xaxis'),\n    yAxisMatch: counterRegex('yaxis'),\n\n    // pattern matching axis ids and names\n    // note that this is more permissive than counterRegex, as\n    // id2name, name2id, and cleanId accept \"x1\" etc\n    AX_ID_PATTERN: /^[xyz][0-9]*$/,\n    AX_NAME_PATTERN: /^[xyz]axis[0-9]*$/,\n\n    // and for 2D subplots\n    SUBPLOT_PATTERN: /^x([0-9]*)y([0-9]*)$/,\n\n    // pixels to move mouse before you stop clamping to starting point\n    MINDRAG: 8,\n\n    // smallest dimension allowed for a select box\n    MINSELECT: 12,\n\n    // smallest dimension allowed for a zoombox\n    MINZOOM: 20,\n\n    // width of axis drag regions\n    DRAGGERSIZE: 20,\n\n    // max pixels off straight before a lasso select line counts as bent\n    BENDPX: 1.5,\n\n    // delay before a redraw (relayout) after smooth panning and zooming\n    REDRAWDELAY: 50,\n\n    // throttling limit (ms) for selectPoints calls\n    SELECTDELAY: 100,\n\n    // cache ID suffix for throttle\n    SELECTID: '-select',\n\n    // last resort axis ranges for x and y axes if we have no data\n    DFLTRANGEX: [-1, 6],\n    DFLTRANGEY: [-1, 4],\n\n    // Layers to keep trace types in the right order\n    // N.B. each  'unique' plot method must have its own layer\n    traceLayerClasses: [\n        'imagelayer',\n        'heatmaplayer',\n        'contourcarpetlayer', 'contourlayer',\n        'funnellayer', 'waterfalllayer', 'barlayer',\n        'carpetlayer',\n        'violinlayer',\n        'boxlayer',\n        'ohlclayer',\n        'scattercarpetlayer', 'scatterlayer'\n    ],\n\n    clipOnAxisFalseQuery: [\n        '.scatterlayer',\n        '.barlayer',\n        '.funnellayer',\n        '.waterfalllayer'\n    ],\n\n    layerValue2layerClass: {\n        'above traces': 'above',\n        'below traces': 'below'\n    }\n};\n"]},"metadata":{},"sourceType":"script"}
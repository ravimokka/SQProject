{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport Parent from \"./React\";\nimport { Test } from \"../Test\";\n\nconst DataSet = require(\"@antv/data-set\");\n\n{\n  /*\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:'tes1234t'\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Parent Component </h1>\n      <p>data coming from child<b>: {this.state.fromChild} </b></p>\n     <Test update={this.update}  data={this.state.x}/>\n    </div>\n  );\n  }\n  }\n  export default Child2;\n  */\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update = data => {\n      this.setState({\n        fromChild: data\n      });\n      this.props.history.push(\"/test-react\");\n    };\n\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x: {\n        id: 1,\n        name: 'Ford',\n        color: 'mokka raveendra'\n      },\n      arr: [\"one\", \"two\", \"three\", \"four\"]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Card, {\n      arr: this.arr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Child2;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Icon","Progress","Parent","Test","DataSet","require","Child2","constructor","props","update","data","setState","fromChild","history","push","state","sistemas","x","id","name","color","arr","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAsD,MAAtD;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,SAASC,IAAT,QAAsB,SAAtB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAMG;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BD;;AAIH,MAAMC,MAAN,SAAqBf,KAAK,CAACC,SAA3B,CAAqC;AACpCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAWlBC,MAXkB,GAWRC,IAAD,IAAU;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd;AACA,WAAKF,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AAGD,KAhBiB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXJ,MAAAA,SAAS,EAAE,OAFA;AAGXK,MAAAA,CAAC,EAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAHS;AAIXC,MAAAA,GAAG,EAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,MAAxB;AAJO,KAAb;AAOD;;AASDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKD,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA1BkC;;AA4BrC,eAAef,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress} from \"antd\";\n\nimport Parent from \"./React\";\n\nimport { Test } from  \"../Test\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n\n   {/*\n   class Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:'tes1234t'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Parent Component </h1>\n        <p>data coming from child<b>: {this.state.fromChild} </b></p>\n       <Test update={this.update}  data={this.state.x}/>\n      </div>\n    );\n  }\n}\n\nexport default Child2;\n*/}\n\n\n\nclass Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:{id: 1, name: 'Ford', color: 'mokka raveendra'},\n      arr:[\"one\", \"two\", \"three\", \"four\"]\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Card arr={this.arr}/>\n      </div>\n    );\n  }\n}\nexport default Child2;\n\n\n"]},"metadata":{},"sourceType":"module"}
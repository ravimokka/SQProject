{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n  }\n\n  var clickmode = coerce('clickmode');\n  var dragMode = coerce('dragmode');\n  if (dragMode === 'select') coerce('selectdirection');\n  var hovermodeDflt;\n\n  if (layoutOut._has('cartesian')) {\n    if (clickmode.indexOf('select') > -1) {\n      hovermodeDflt = 'closest';\n    } else {\n      // flag for 'horizontal' plots:\n      // determines the state of the mode bar 'compare' hovermode button\n      layoutOut._isHoriz = isHoriz(fullData, layoutOut);\n      hovermodeDflt = layoutOut._isHoriz ? 'y' : 'x';\n    }\n  } else hovermodeDflt = 'closest';\n\n  var hoverMode = coerce('hovermode', hovermodeDflt);\n\n  if (hoverMode) {\n    coerce('hoverdistance');\n    coerce('spikedistance');\n  } // if only mapbox or geo subplots is present on graph,\n  // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n  // so that the correct modebar button is active\n\n\n  var hasMapbox = layoutOut._has('mapbox');\n\n  var hasGeo = layoutOut._has('geo');\n\n  var len = layoutOut._basePlotModules.length;\n\n  if (layoutOut.dragmode === 'zoom' && ((hasMapbox || hasGeo) && len === 1 || hasMapbox && hasGeo && len === 2)) {\n    layoutOut.dragmode = 'pan';\n  }\n};\n\nfunction isHoriz(fullData, fullLayout) {\n  var stackOpts = fullLayout._scatterStackOpts || {};\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    var subplot = trace.xaxis + trace.yaxis;\n    var subplotStackOpts = stackOpts[subplot] || {};\n    var groupOpts = subplotStackOpts[trace.stackgroup] || {};\n\n    if (trace.orientation !== 'h' && groupOpts.orientation !== 'h') {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/plotly.js/src/components/fx/layout_defaults.js"],"names":["Lib","require","layoutAttributes","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","fullData","coerce","attr","dflt","clickmode","dragMode","hovermodeDflt","_has","indexOf","_isHoriz","isHoriz","hoverMode","hasMapbox","hasGeo","len","_basePlotModules","length","dragmode","fullLayout","stackOpts","_scatterStackOpts","i","trace","subplot","xaxis","yaxis","subplotStackOpts","groupOpts","stackgroup","orientation"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,QAAnD,EAA6D;AAC1E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOX,GAAG,CAACS,MAAJ,CAAWH,QAAX,EAAqBC,SAArB,EAAgCL,gBAAhC,EAAkDQ,IAAlD,EAAwDC,IAAxD,CAAP;AACH;;AAED,MAAIC,SAAS,GAAGH,MAAM,CAAC,WAAD,CAAtB;AAEA,MAAII,QAAQ,GAAGJ,MAAM,CAAC,UAAD,CAArB;AACA,MAAGI,QAAQ,KAAK,QAAhB,EAA0BJ,MAAM,CAAC,iBAAD,CAAN;AAE1B,MAAIK,aAAJ;;AACA,MAAGP,SAAS,CAACQ,IAAV,CAAe,WAAf,CAAH,EAAgC;AAC5B,QAAGH,SAAS,CAACI,OAAV,CAAkB,QAAlB,IAA8B,CAAC,CAAlC,EAAqC;AACjCF,MAAAA,aAAa,GAAG,SAAhB;AACH,KAFD,MAEO;AACH;AACA;AACAP,MAAAA,SAAS,CAACU,QAAV,GAAqBC,OAAO,CAACV,QAAD,EAAWD,SAAX,CAA5B;AACAO,MAAAA,aAAa,GAAGP,SAAS,CAACU,QAAV,GAAqB,GAArB,GAA2B,GAA3C;AACH;AACJ,GATD,MASOH,aAAa,GAAG,SAAhB;;AAEP,MAAIK,SAAS,GAAGV,MAAM,CAAC,WAAD,EAAcK,aAAd,CAAtB;;AACA,MAAGK,SAAH,EAAc;AACVV,IAAAA,MAAM,CAAC,eAAD,CAAN;AACAA,IAAAA,MAAM,CAAC,eAAD,CAAN;AACH,GA1ByE,CA4B1E;AACA;AACA;;;AACA,MAAIW,SAAS,GAAGb,SAAS,CAACQ,IAAV,CAAe,QAAf,CAAhB;;AACA,MAAIM,MAAM,GAAGd,SAAS,CAACQ,IAAV,CAAe,KAAf,CAAb;;AACA,MAAIO,GAAG,GAAGf,SAAS,CAACgB,gBAAV,CAA2BC,MAArC;;AAEA,MAAGjB,SAAS,CAACkB,QAAV,KAAuB,MAAvB,KACE,CAACL,SAAS,IAAIC,MAAd,KAAyBC,GAAG,KAAK,CAAlC,IACCF,SAAS,IAAIC,MAAb,IAAuBC,GAAG,KAAK,CAFjC,CAAH,EAGG;AACCf,IAAAA,SAAS,CAACkB,QAAV,GAAqB,KAArB;AACH;AACJ,CAzCD;;AA2CA,SAASP,OAAT,CAAiBV,QAAjB,EAA2BkB,UAA3B,EAAuC;AACnC,MAAIC,SAAS,GAAGD,UAAU,CAACE,iBAAX,IAAgC,EAAhD;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGrB,QAAQ,CAACgB,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,QAAIC,KAAK,GAAGtB,QAAQ,CAACqB,CAAD,CAApB;AACA,QAAIE,OAAO,GAAGD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACG,KAAlC;AACA,QAAIC,gBAAgB,GAAGP,SAAS,CAACI,OAAD,CAAT,IAAsB,EAA7C;AACA,QAAII,SAAS,GAAGD,gBAAgB,CAACJ,KAAK,CAACM,UAAP,CAAhB,IAAsC,EAAtD;;AAEA,QAAGN,KAAK,CAACO,WAAN,KAAsB,GAAtB,IAA6BF,SAAS,CAACE,WAAV,KAA0B,GAA1D,EAA+D;AAC3D,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH","sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n\n    var clickmode = coerce('clickmode');\n\n    var dragMode = coerce('dragmode');\n    if(dragMode === 'select') coerce('selectdirection');\n\n    var hovermodeDflt;\n    if(layoutOut._has('cartesian')) {\n        if(clickmode.indexOf('select') > -1) {\n            hovermodeDflt = 'closest';\n        } else {\n            // flag for 'horizontal' plots:\n            // determines the state of the mode bar 'compare' hovermode button\n            layoutOut._isHoriz = isHoriz(fullData, layoutOut);\n            hovermodeDflt = layoutOut._isHoriz ? 'y' : 'x';\n        }\n    } else hovermodeDflt = 'closest';\n\n    var hoverMode = coerce('hovermode', hovermodeDflt);\n    if(hoverMode) {\n        coerce('hoverdistance');\n        coerce('spikedistance');\n    }\n\n    // if only mapbox or geo subplots is present on graph,\n    // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n    // so that the correct modebar button is active\n    var hasMapbox = layoutOut._has('mapbox');\n    var hasGeo = layoutOut._has('geo');\n    var len = layoutOut._basePlotModules.length;\n\n    if(layoutOut.dragmode === 'zoom' && (\n        ((hasMapbox || hasGeo) && len === 1) ||\n        (hasMapbox && hasGeo && len === 2)\n    )) {\n        layoutOut.dragmode = 'pan';\n    }\n};\n\nfunction isHoriz(fullData, fullLayout) {\n    var stackOpts = fullLayout._scatterStackOpts || {};\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        var subplot = trace.xaxis + trace.yaxis;\n        var subplotStackOpts = stackOpts[subplot] || {};\n        var groupOpts = subplotStackOpts[trace.stackgroup] || {};\n\n        if(trace.orientation !== 'h' && groupOpts.orientation !== 'h') {\n            return false;\n        }\n    }\n\n    return true;\n}\n"]},"metadata":{},"sourceType":"script"}
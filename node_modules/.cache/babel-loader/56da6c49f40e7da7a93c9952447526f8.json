{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../color');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar constants = require('./constants');\n\nmodule.exports = function handleDefaults(containerIn, containerOut, layout, counterAxes, calendar) {\n  var selectorIn = containerIn.rangeselector || {};\n  var selectorOut = Template.newContainer(containerOut, 'rangeselector');\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(selectorIn, selectorOut, attributes, attr, dflt);\n  }\n\n  var buttons = handleArrayContainerDefaults(selectorIn, selectorOut, {\n    name: 'buttons',\n    handleItemDefaults: buttonDefaults,\n    calendar: calendar\n  });\n  var visible = coerce('visible', buttons.length > 0);\n\n  if (visible) {\n    var posDflt = getPosDflt(containerOut, layout, counterAxes);\n    coerce('x', posDflt[0]);\n    coerce('y', posDflt[1]);\n    Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n    coerce('xanchor');\n    coerce('yanchor');\n    Lib.coerceFont(coerce, 'font', layout.font);\n    var bgColor = coerce('bgcolor');\n    coerce('activecolor', Color.contrast(bgColor, constants.lightAmount, constants.darkAmount));\n    coerce('bordercolor');\n    coerce('borderwidth');\n  }\n};\n\nfunction buttonDefaults(buttonIn, buttonOut, selectorOut, opts) {\n  var calendar = opts.calendar;\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(buttonIn, buttonOut, attributes.buttons, attr, dflt);\n  }\n\n  var visible = coerce('visible');\n\n  if (visible) {\n    var step = coerce('step');\n\n    if (step !== 'all') {\n      if (calendar && calendar !== 'gregorian' && (step === 'month' || step === 'year')) {\n        buttonOut.stepmode = 'backward';\n      } else {\n        coerce('stepmode');\n      }\n\n      coerce('count');\n    }\n\n    coerce('label');\n  }\n}\n\nfunction getPosDflt(containerOut, layout, counterAxes) {\n  var anchoredList = counterAxes.filter(function (ax) {\n    return layout[ax].anchor === containerOut._id;\n  });\n  var posY = 0;\n\n  for (var i = 0; i < anchoredList.length; i++) {\n    var domain = layout[anchoredList[i]].domain;\n    if (domain) posY = Math.max(domain[1], posY);\n  }\n\n  return [containerOut.domain[0], posY + constants.yPad];\n}","map":null,"metadata":{},"sourceType":"script"}
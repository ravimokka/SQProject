{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} // An infinite computer must be able to do the following things:\n//  1. getTotalScrollableHeight()\n//  2. getDisplayIndexStart()\n//  3. getDisplayIndexEnd()\n\n\nvar InfiniteComputer = function () {\n  function InfiniteComputer(heightData, numberOfChildren) {\n    _classCallCheck(this, InfiniteComputer);\n\n    this.heightData = heightData;\n    this.numberOfChildren = numberOfChildren;\n  }\n\n  _createClass(InfiniteComputer, [{\n    key: 'getTotalScrollableHeight',\n    value: function getTotalScrollableHeight() {\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getTotalScrollableHeight not implemented.');\n      }\n    }\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getDisplayIndexStart',\n    value: function getDisplayIndexStart(windowTop) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getDisplayIndexStart not implemented.');\n      }\n    }\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getDisplayIndexEnd',\n    value: function getDisplayIndexEnd(windowBottom) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getDisplayIndexEnd not implemented.');\n      }\n    } // These are helper methods, and can be calculated from\n    // the above details.\n\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getTopSpacerHeight',\n    value: function getTopSpacerHeight(displayIndexStart) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getTopSpacerHeight not implemented.');\n      }\n    }\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getBottomSpacerHeight',\n    value: function getBottomSpacerHeight(displayIndexEnd) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getBottomSpacerHeight not implemented.');\n      }\n    }\n  }]);\n\n  return InfiniteComputer;\n}();\n\nmodule.exports = InfiniteComputer;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/react-infinite/build/computers/infiniteComputer.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","InfiniteComputer","heightData","numberOfChildren","value","getTotalScrollableHeight","process","env","NODE_ENV","Error","getDisplayIndexStart","windowTop","getDisplayIndexEnd","windowBottom","getTopSpacerHeight","displayIndexStart","getBottomSpacerHeight","displayIndexEnd","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// An infinite computer must be able to do the following things:\n//  1. getTotalScrollableHeight()\n//  2. getDisplayIndexStart()\n//  3. getDisplayIndexEnd()\n\nvar InfiniteComputer = function () {\n  function InfiniteComputer(heightData, numberOfChildren) {\n    _classCallCheck(this, InfiniteComputer);\n\n    this.heightData = heightData;\n    this.numberOfChildren = numberOfChildren;\n  }\n\n  _createClass(InfiniteComputer, [{\n    key: 'getTotalScrollableHeight',\n    value: function getTotalScrollableHeight() {\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getTotalScrollableHeight not implemented.');\n      }\n    }\n\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getDisplayIndexStart',\n    value: function getDisplayIndexStart(windowTop) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getDisplayIndexStart not implemented.');\n      }\n    }\n\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getDisplayIndexEnd',\n    value: function getDisplayIndexEnd(windowBottom) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getDisplayIndexEnd not implemented.');\n      }\n    }\n\n    // These are helper methods, and can be calculated from\n    // the above details.\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getTopSpacerHeight',\n    value: function getTopSpacerHeight(displayIndexStart) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getTopSpacerHeight not implemented.');\n      }\n    }\n\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'getBottomSpacerHeight',\n    value: function getBottomSpacerHeight(displayIndexEnd) {\n      /* eslint-enable no-unused-vars */\n      if (process.env.NODE_ENV === 'development') {\n        throw new Error('getBottomSpacerHeight not implemented.');\n      }\n    }\n  }]);\n\n  return InfiniteComputer;\n}();\n\nmodule.exports = InfiniteComputer;"]},"metadata":{},"sourceType":"script"}
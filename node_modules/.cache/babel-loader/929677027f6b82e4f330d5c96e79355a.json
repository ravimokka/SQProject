{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar hasColorscale = require('./helpers').hasColorscale;\n\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function crossTraceDefaults(fullData, fullLayout) {\n  function replace(cont, k) {\n    var val = cont['_' + k];\n\n    if (val !== undefined) {\n      cont[k] = val;\n    }\n  }\n\n  function relinkColorAttrs(outerCont, cbOpt) {\n    var cont = cbOpt.container ? Lib.nestedProperty(outerCont, cbOpt.container).get() : outerCont;\n\n    if (cont) {\n      if (cont.coloraxis) {\n        // stash ref to color axis\n        cont._colorAx = fullLayout[cont.coloraxis];\n      } else {\n        var cOpts = extractOpts(cont);\n        var isAuto = cOpts.auto;\n\n        if (isAuto || cOpts.min === undefined) {\n          replace(cont, cbOpt.min);\n        }\n\n        if (isAuto || cOpts.max === undefined) {\n          replace(cont, cbOpt.max);\n        }\n\n        if (cOpts.autocolorscale) {\n          replace(cont, 'colorscale');\n        }\n      }\n    }\n  }\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    var cbOpts = trace._module.colorbar;\n\n    if (cbOpts) {\n      if (Array.isArray(cbOpts)) {\n        for (var j = 0; j < cbOpts.length; j++) {\n          relinkColorAttrs(trace, cbOpts[j]);\n        }\n      } else {\n        relinkColorAttrs(trace, cbOpts);\n      }\n    }\n\n    if (hasColorscale(trace, 'marker.line')) {\n      relinkColorAttrs(trace, {\n        container: 'marker.line',\n        min: 'cmin',\n        max: 'cmax'\n      });\n    }\n  }\n\n  for (var k in fullLayout._colorAxes) {\n    relinkColorAttrs(fullLayout[k], {\n      min: 'cmin',\n      max: 'cmax'\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, Button, Modal, Popover, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport style from './style';\nimport FallibleOperationResult from './FallibleOperationResult';\nimport ModalMessageBox from './ModalMessageBox';\nimport ReactDOM from 'react-dom';\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: ''\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleEmailChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    var email = this.state.email;\n    var userCreationResult = this.createUser(email);\n\n    if (!userCreationResult.success) {\n      displayUserCreationError(userCreationResult);\n      console.log(\"Error detected\");\n      return;\n    }\n\n    console.log(\"Submit button pressed, e-mail: \" + this.state.email);\n  }\n\n  displayUserCreationError(userCreationResult) {\n    // Display of the moal dialog should be implemented here\n    // var dialog = new ModalMessageBox();\n    // ReactDOM.render(dialog, document.getElementById('root'));\n    console.log(\"User cannot be created ('\" + userCreationResult + \"'\");\n    return;\n  }\n\n  createUser(email) {\n    return new FallibleOperationResult(false, 'User ' + email + ' cannot be created', undefined);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: style.signUpForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(FormControl, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Your password will be sent to your e-mail address.\"))));\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","FormGroup","ControlLabel","FormControl","HelpBlock","Button","Modal","Popover","Tooltip","OverlayTrigger","style","FallibleOperationResult","ModalMessageBox","ReactDOM","SignUpForm","constructor","props","state","email","handleEmailChange","bind","handleSubmit","evt","setState","target","value","preventDefault","userCreationResult","createUser","success","displayUserCreationError","console","log","undefined","render","signUpForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,OARF,EASEC,cATF,QAUO,iBAVP;AAWA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAN,SAAyBd,SAAzB,CAAmC;AACjCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,iBAAiB,CAACG,GAAD,EAAM;AACrB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEI,GAAG,CAACE,MAAJ,CAAWC;AAApB,KAAd;AACD;;AACDJ,EAAAA,YAAY,CAACC,GAAD,EAAM;AAChBA,IAAAA,GAAG,CAACI,cAAJ;AACA,QAAIR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIS,kBAAkB,GAAG,KAAKC,UAAL,CAAgBV,KAAhB,CAAzB;;AACA,QAAI,CAACS,kBAAkB,CAACE,OAAxB,EAAiC;AAC/BC,MAAAA,wBAAwB,CAACH,kBAAD,CAAxB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACD;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoC,KAAKf,KAAL,CAAWC,KAA3D;AACD;;AACDY,EAAAA,wBAAwB,CAACH,kBAAD,EAAqB;AAC3C;AACA;AACA;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BL,kBAA9B,GAAmD,GAA/D;AAEA;AACD;;AACDC,EAAAA,UAAU,CAACV,KAAD,EAAQ;AAChB,WAAO,IAAIP,uBAAJ,CACL,KADK,EAEL,UAAUO,KAAV,GAAkB,oBAFb,EAGLe,SAHK,CAAP;AAKD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAExB,KAAK,CAACyB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAG,KAAKd,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,QAAQ,EAAG,KAAKF,iBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHA,EAWA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAZA,CADF,CADF,CADF;AAoBD;;AA1DgC;;AA6DnC,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  HelpBlock,\n  Button,\n  Modal,\n  Popover,\n  Tooltip,\n  OverlayTrigger\n} from 'react-bootstrap';\nimport style from './style';\nimport FallibleOperationResult from './FallibleOperationResult';\nimport ModalMessageBox from './ModalMessageBox';\nimport ReactDOM from 'react-dom';\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {email: ''};\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleEmailChange(evt) {\n    this.setState({ email: evt.target.value });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault()\n    var email = this.state.email\n    var userCreationResult = this.createUser(email)\n    if (!userCreationResult.success) {\n      displayUserCreationError(userCreationResult)\n      console.log(\"Error detected\")\n      return\n    }\n\n    console.log(\"Submit button pressed, e-mail: \" + this.state.email)\n  }\n  displayUserCreationError(userCreationResult) {\n    // Display of the moal dialog should be implemented here\n    // var dialog = new ModalMessageBox();\n    // ReactDOM.render(dialog, document.getElementById('root'));\n    console.log(\"User cannot be created ('\" + userCreationResult + \"'\");\n\n    return;\n  }\n  createUser(email) {\n    return new FallibleOperationResult(\n      false,\n      'User ' + email + ' cannot be created',\n      undefined\n    );\n  }\n  render() {\n    return (\n      <div style={style.signUpForm}>\n        <form onSubmit={ this.handleSubmit }>\n          <FormGroup\n            controlId=\"formBasicText\"\n          >\n          <FormGroup>\n            <ControlLabel>Email address</ControlLabel>\n            <FormControl\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={ this.handleEmailChange }\n            />\n          </FormGroup>\n          <Button type=\"submit\">Sign Up</Button>\n          <p>Your password will be sent to your e-mail address.</p>\n          </FormGroup>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}
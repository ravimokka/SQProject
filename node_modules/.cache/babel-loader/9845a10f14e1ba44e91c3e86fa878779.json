{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst data = [{\n  country: 'Asia',\n  year: '1750',\n  value: 502\n}, {\n  country: 'Asia',\n  year: '1800',\n  value: 635\n}, {\n  country: 'Asia',\n  year: '1850',\n  value: 809\n}, {\n  country: 'Asia',\n  year: '1900',\n  value: 5268\n}, {\n  country: 'Asia',\n  year: '1950',\n  value: 4400\n}, {\n  country: 'Asia',\n  year: '1999',\n  value: 3634\n}, {\n  country: 'Asia',\n  year: '2050',\n  value: 947\n}, {\n  country: 'Africa',\n  year: '1750',\n  value: 106\n}, {\n  country: 'Africa',\n  year: '1800',\n  value: 107\n}, {\n  country: 'Africa',\n  year: '1850',\n  value: 111\n}, {\n  country: 'Africa',\n  year: '1900',\n  value: 1766\n}, {\n  country: 'Africa',\n  year: '1950',\n  value: 221\n}, {\n  country: 'Africa',\n  year: '1999',\n  value: 767\n}, {\n  country: 'Africa',\n  year: '2050',\n  value: 133\n}, {\n  country: 'Europe',\n  year: '1750',\n  value: 163\n}, {\n  country: 'Europe',\n  year: '1800',\n  value: 203\n}, {\n  country: 'Europe',\n  year: '1850',\n  value: 276\n}, {\n  country: 'Europe',\n  year: '1900',\n  value: 628\n}, {\n  country: 'Europe',\n  year: '1950',\n  value: 547\n}, {\n  country: 'Europe',\n  year: '1999',\n  value: 729\n}, {\n  country: 'Europe',\n  year: '2050',\n  value: 408\n}, {\n  country: 'Oceania',\n  year: '1750',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1800',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1850',\n  value: 200\n}, {\n  country: 'Oceania',\n  year: '1900',\n  value: 460\n}, {\n  country: 'Oceania',\n  year: '1950',\n  value: 230\n}, {\n  country: 'Oceania',\n  year: '1999',\n  value: 300\n}, {\n  country: 'Oceania',\n  year: '2050',\n  value: 300\n}];\nconst scale = [{\n  dataKey: 'year',\n  type: 'linear',\n  tickInterval: 50\n}];\n\nclass AnalyticalTest extends React.Component {\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      dataKey: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"year*value\",\n      size: 2,\n      color: \"country\",\n      adjust: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(StackArea, {\n      position: \"year*value\",\n      color: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","StackArea","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","data","country","year","value","scale","dataKey","type","tickInterval","AnalyticalTest","Component","render"],"mappings":"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","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point} from 'viser-react';\n\n\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n\nconst data = [\n  {country: 'Asia', year: '1750', value: 502},\n  {country: 'Asia', year: '1800', value: 635},\n  {country: 'Asia', year: '1850', value: 809},\n  {country: 'Asia', year: '1900', value: 5268},\n  {country: 'Asia', year: '1950', value: 4400},\n  {country: 'Asia', year: '1999', value: 3634},\n  {country: 'Asia', year: '2050', value: 947},\n  {country: 'Africa', year: '1750', value: 106},\n  {country: 'Africa', year: '1800', value: 107},\n  {country: 'Africa', year: '1850', value: 111},\n  {country: 'Africa', year: '1900', value: 1766},\n  {country: 'Africa', year: '1950', value: 221},\n  {country: 'Africa', year: '1999', value: 767},\n  {country: 'Africa', year: '2050', value: 133},\n  {country: 'Europe', year: '1750', value: 163},\n  {country: 'Europe', year: '1800', value: 203},\n  {country: 'Europe', year: '1850', value: 276},\n  {country: 'Europe', year: '1900', value: 628},\n  {country: 'Europe', year: '1950', value: 547},\n  {country: 'Europe', year: '1999', value: 729},\n  {country: 'Europe', year: '2050', value: 408},\n  {country: 'Oceania', year: '1750', value: 200},\n  {country: 'Oceania', year: '1800', value: 200},\n  {country: 'Oceania', year: '1850', value: 200},\n  {country: 'Oceania', year: '1900', value: 460},\n  {country: 'Oceania', year: '1950', value: 230},\n  {country: 'Oceania', year: '1999', value: 300},\n  {country: 'Oceania', year: '2050', value: 300},\n];\n\nconst scale = [{\n  dataKey: 'year',\n  type: 'linear',\n  tickInterval: 50,\n}];\n\nclass AnalyticalTest extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400} data={data} scale={scale}>\n        <Tooltip />\n        <Axis dataKey=\"value\" />\n        <Legend />\n        <Line position=\"year*value\" size={2} color=\"country\" adjust=\"stack\" />\n        <StackArea position=\"year*value\" color=\"country\" />\n      </Chart>\n    );\n  }\n}\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
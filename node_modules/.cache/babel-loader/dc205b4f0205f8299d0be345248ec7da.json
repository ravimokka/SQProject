{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp2;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport { floatingLabelTypes } from './types';\nimport { floatingLabelDefaultProps } from './defaultProps';\nvar FloatingLabel = (_temp2 = _class = function (_Component) {\n  _inherits(FloatingLabel, _Component);\n\n  function FloatingLabel() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FloatingLabel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      flabelHeight: 0\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  FloatingLabel.prototype.componentDidMount = function componentDidMount() {\n    this.setState({\n      flabelHeight: this.flabel.offsetHeight\n    });\n  };\n\n  FloatingLabel.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        _props$defaultColors = _props.defaultColors,\n        floatingLabelColor = _props$defaultColors.floatingLabelColor,\n        focusColor = _props$defaultColors.focusColor,\n        disabled = _props.disabled,\n        floatingLabelFocusStyle = _props.floatingLabelFocusStyle,\n        floatingLabelStyle = _props.floatingLabelStyle,\n        isFocused = _props.isFocused,\n        shrink = _props.shrink;\n\n    var defaultStyles = _extends({\n      color: floatingLabelColor,\n      cursor: 'pointer',\n      lineHeight: '22px',\n      pointerEvents: 'none',\n      position: 'static',\n      top: 0,\n      transform: 'scale(1) translateY(0)',\n      transformOrigin: 'left top',\n      transition: '450ms cubic-bezier(0.23, 1, 0.32, 1)',\n      // transitions.easeOut(),\n      userSelect: 'none',\n      zIndex: 1\n    }, floatingLabelStyle);\n\n    var focusStyles = isFocused && !disabled && shrink && _extends({\n      color: focusColor\n    }, floatingLabelFocusStyle);\n\n    var shrinkStyles = shrink && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      position: 'absolute',\n      transform: 'scale(0.75) translateY(-' + this.state.flabelHeight + 'px)'\n    };\n    return React.createElement('label', {\n      ref: function ref(_ref) {\n        return _this2.flabel = _ref;\n      },\n      style: _extends({}, defaultStyles, shrinkStyles, focusStyles)\n    }, children);\n  };\n\n  return FloatingLabel;\n}(Component), _class.defaultProps = floatingLabelDefaultProps, _temp2);\nexport { FloatingLabel as default };\nFloatingLabel.propTypes = process.env.NODE_ENV !== \"production\" ? floatingLabelTypes : {};","map":null,"metadata":{},"sourceType":"module"}
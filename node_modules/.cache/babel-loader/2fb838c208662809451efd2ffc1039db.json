{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/LineChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table, Select, DatePicker } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nconst Option = Select.Option;\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      console.log(date, dateString);\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n    };\n\n    this.onChange_Xaxis = value => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.onChange_Yaxis = value => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.handleSubmitLineChart = e => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChart1 = e => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: e.target.value\n      });\n    };\n\n    this.handleSubmitLineChartOK = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.loadLineChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl,\n        Menu: Menu_name\n      });\n    };\n\n    this.handleDownload = e => {\n      e.preventDefault();\n      this.lineChart_TableDownload({\n        A: this.state.value_xl,\n        B: this.state.value_yl\n      });\n    };\n\n    this.state = {\n      Headers: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_headers_list: '',\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      loading: true,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      line_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      line_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      bar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      bar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      vertical_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      vertical_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      mix_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      mix_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      value_xl: \"Group\",\n      value_yl: \"Amount\",\n      download_lineChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }],\n      download_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAllChartData({\n      A: \"Group\",\n      B: \"Amount\",\n      Menu: Menu_name\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        Headers: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        chart_headers_list: keys_list\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } // =================================================== Line Chart ======================================================\n\n\n  async loadLineChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      line_table_columns: []\n    });\n    this.setState({\n      line_table_data: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      const table_dict = data;\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        download_lineChart_table: [table_dict]\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //=================================================== Line Chart Table Data Download ===================================\n\n\n  async lineChart_TableDownload(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(Host.loginURL + \"/download_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n    }\n  }\n\n  render() {\n    const children = [];\n\n    for (let i = 0; i < 10; i++) {\n      children.push(React.createElement(Option, {\n        key: i.toString(36) + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, i.toString(36) + i));\n    }\n\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_xl,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100\n      },\n      defaultValue: \"Group\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Xaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, this.state.Headers.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, value))), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100,\n        marginLeft: '5px'\n      },\n      defaultValue: \"Amount\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Yaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, this.state.intHeader.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, value))), React.createElement(RangePicker, {\n      style: {\n        marginLeft: '5px'\n      },\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), React.createElement(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '12%',\n        marginLeft: '5px'\n      },\n      placeholder: \"Please select\",\n      defaultValue: [],\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, children), \",\", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleSubmitLineChartOK,\n      style: {\n        marginLeft: \"10px\"\n      },\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(Button, {\n      type: \"primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_line\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_line\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Line Chart TableData\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"modal-title\",\n      style: {\n        marginLeft: \"160px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.line_table_columns,\n      dataSource: this.state.line_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_lineChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      forceFit: true,\n      width: 800,\n      height: 400,\n      data: this.state.line_chart_source_data,\n      scale: line_chart_source_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }), React.createElement(Line, {\n      position: \"name*value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }), React.createElement(Point, {\n      position: \"name*value\",\n      shape: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/LineChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Select","DatePicker","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","MonthPicker","RangePicker","WeekPicker","Option","LineChart","Component","constructor","props","onBlur","console","log","onFocus","onSearch","val","onChangeDate","date","dateString","handleChange","value","onChange_Xaxis","setState","value_xl","onChange_Yaxis","value_yl","handleSubmitLineChart","e","target","handleSubmitLineChart1","handleSubmitLineChartOK","preventDefault","loading","loadLineChartData","A","state","B","Menu","handleDownload","lineChart_TableDownload","Headers","intHeader","filter","select_group","select_amount","chart_headers_list","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","download_lineChart_table","firstname","lastname","email","download_barChart_table","componentWillMount","loadAnalytical","loadIntHeaders","loadAllChartData","promise","post","loginURL","status","data","d","dou","headers","append","options","method","body","JSON","stringify","area_chart_series","download_group_barChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","area_table_columns","area_table_data","download_areaChart_table","render","children","toString","line_chart_source_scale","dataKey","min","formatter","Math","round","max","override","minHeight","width","input","option","toLowerCase","indexOf","map","index","marginLeft","fontSize","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             chart_headers_list:'',\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\", Menu:Menu_name});\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({chart_headers_list:keys_list})\n\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\n\nhandleChange = (value) => {\n  console.log(`selected ${value}`);\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_xl:\"\"})\n    this.setState({value_xl:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_yl:\"\"})\n  this.setState({value_yl:value});\n  console.log(`selected ${value}`);\n}\n\n\n\nhandleSubmitLineChart = (e) => {\n     this.setState({value_xl:\"\"})\n     this.setState({value_xl: e.target.value});\n };\n\nhandleSubmitLineChart1 = (e) => {\n    this.setState({value_yl:\"\"})\n    this.setState({value_yl: e.target.value});\n  };\n\n\nhandleSubmitLineChartOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.loadLineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl, Menu:Menu_name}\n  );\n  };\n\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n//=================================================== Line Chart Table Data Download ===================================\n\nhandleDownload = (e) => {\n    e.preventDefault();\n     this.lineChart_TableDownload(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync lineChart_TableDownload(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n const promise = await axios.post(Host.loginURL +\"/download_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n    }\n}\n\n\n\n\n\n\n\n\nrender() {\n\nconst children = [];\nfor (let i = 0; i < 10; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n          formatter: function formatter(val) {\n                     if (val < 100000) {\n                         return Math.round((val/1000) * 10)/10+'k';\n                     }\n                    else if (val >= 1000000){\n                        return val=(val/1000000)+\"M\";\n                    }\n                     else{\n                         return val;\n                     }\n          }\n},\n{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <Card\n            title={this.state.value_xl}\n            style={{ minHeight: \"100%\" }}\n            bordered={false}\n            className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n       <div id=\"chart\">\n           {/* <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>Group</option>\n                 {this.state.books.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>{this.state.select_amount}</option>\n                 {this.state.intHeader.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select> */}\n           <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Please select\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n           {/*<React.Fragment>\n                <button  className='btn btn-info'style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment> */}\n\n            <Button type=\"primary\" onClick={this.handleSubmitLineChartOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n         <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_line\"\n                style={{marginLeft:\"10px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n              <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                     {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                      <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                    </div>\n                    <div>\n                    <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n\n                    </div>\n                    <div class=\"modal-body\">\n                     <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                      <CSVLink data={this.state.download_lineChart_table}>\n                      <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                      </CSVLink>;\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n              <Chart forceFit width={800} height={400} data={this.state.line_chart_source_data}\n                                                       scale={line_chart_source_scale}>\n                <Tooltip />\n                <Axis />\n                <Legend />\n                <Line position=\"name*value\"/>\n                <Point position=\"name*value\" shape=\"circle\"/>\n              </Chart>\n          </div>\n        </div>\n     </Card>\n    );\n  }\n}\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}
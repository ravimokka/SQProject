{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      options7: {\n        labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      },\n      series7: [1, 2, 3, 5],\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      l: [],\n      sourceData: [{\n        item: 'A',\n        count: 20\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const data123 = dv.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value4,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(ReactApexChart, {\n      options: this.state.options7,\n      series: this.state.series7,\n      type: \"pie\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value4,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(ReactApexChart, {\n      options: this.state.options7,\n      series: this.state.series7,\n      type: \"pie\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Pie chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data123,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 3\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","DataSet","require","scale","dataKey","min","formatter","Reactjs","Component","constructor","props","handleSubmitDonut","e","preventDefault","setState","value","target","DonutCheckbox","Column","state","options7","labels","responsive","breakpoint","options","chart","width","legend","position","series7","books","intHeader","filter","chart_data","donut_data","pie_data","l","sourceData","item","count","componentWillMount","loadAnalytical","promise","post","firstName","lastName","status","data","console","log","d","headers","Headers","append","method","body","JSON","stringify","i","keys_list","value_list","chart_list","ct_list1","Object","keys","length","key","push","data_dict","sd","d_data","SQBL","SQCL","render","dv","View","source","transform","type","field","dimension","as","align","data123","rows","span","order","minHeight","value4","handleSubmitPie","marginLeft","map","index","cursor","fontSize","stroke","lineWidth","val","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\nclass Reactjs extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\noptions7: {\n            labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          },\n          series7: [1, 2, 3, 5],\n\n\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     l:[],\n     sourceData :[\n  { item: 'A', count: 20 }\n],\n\n      }\n\n\n   }\n\n\n\n\n\n   componentWillMount() {\n    this.loadAnalytical();\n\n\n  }\n\n   async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n   handleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst data123 = dv.rows;\n\n\n    return (\n\n    <div>\n        <div id=\"content\">\n           <Row type=\"flex\" gutter={24}>\n\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value4} onChange={this.handleSubmitPie}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                  <ReactApexChart options={this.state.options7} series={this.state.series7} type=\"pie\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n\n   \n </Row>\n\n\n<Row type=\"flex\" gutter={24}>\n\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value4} onChange={this.handleSubmitPie}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                  <ReactApexChart options={this.state.options7} series={this.state.series7} type=\"pie\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n\n    <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={data123} scale={scale} >\n            <Tooltip showTitle={false} />\n            <Coord type=\"theta\" />\n            <Axis />\n            <Legend dataKey=\"item\" />\n                            <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 3 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n       </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
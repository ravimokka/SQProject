{"ast":null,"code":"import * as _ from 'lodash';\nimport * as setCustomFormatter from './setCustomFormatter';\nexport var process = function (chart, config) {\n  var cScale = _.cloneDeep(config.scale);\n\n  var isArr = _.isArray(cScale);\n\n  if (_.isEmpty(cScale)) {\n    return;\n  }\n\n  var arrScale = isArr ? cScale : [cScale];\n  var options = {};\n\n  for (var _i = 0, arrScale_1 = arrScale; _i < arrScale_1.length; _i++) {\n    var res = arrScale_1[_i];\n\n    if (res.dataKey) {\n      var currOption = _.omit(res, 'dataKey');\n\n      options[res.dataKey] = currOption;\n    }\n  }\n\n  options = setCustomFormatter.supportD3Formatter(options);\n  return chart.scale(options);\n};","map":{"version":3,"sources":["../../src/components/setScaleConfig.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAZ,MAAmB,QAAnB;AACA,OAAO,KAAK,kBAAZ,MAAoC,sBAApC;AAEA,OAAO,IAAM,OAAO,GAAG,UAAC,KAAD,EAAa,MAAb,EAAwB;AAC7C,MAAM,MAAM,GAAG,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,KAAnB,CAAf;;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,OAAF,CAAU,MAAV,CAAd;;AAEA,MAAI,CAAC,CAAC,OAAF,CAAU,MAAV,CAAJ,EAAuB;AAAE;AAAS;;AAElC,MAAM,QAAQ,GAAG,KAAK,GAAG,MAAH,GAAY,CAAC,MAAD,CAAlC;AACA,MAAI,OAAO,GAAQ,EAAnB;;AAEA,OAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,UAAA,GAAA,QAAlB,EAAkB,EAAA,GAAA,UAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAA4B;AAAvB,QAAM,GAAG,GAAA,UAAA,CAAA,EAAA,CAAT;;AACH,QAAI,GAAG,CAAC,OAAR,EAAiB;AACf,UAAM,UAAU,GAAG,CAAC,CAAC,IAAF,CAAO,GAAP,EAAY,SAAZ,CAAnB;;AACA,MAAA,OAAO,CAAC,GAAG,CAAC,OAAL,CAAP,GAAuB,UAAvB;AACD;AACF;;AAED,EAAA,OAAO,GAAG,kBAAkB,CAAC,kBAAnB,CAAsC,OAAtC,CAAV;AACA,SAAO,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAP;AACD,CAlBM","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport * as setCustomFormatter from './setCustomFormatter';\nexport var process = function (chart, config) {\n    var cScale = _.cloneDeep(config.scale);\n    var isArr = _.isArray(cScale);\n    if (_.isEmpty(cScale)) {\n        return;\n    }\n    var arrScale = isArr ? cScale : [cScale];\n    var options = {};\n    for (var _i = 0, arrScale_1 = arrScale; _i < arrScale_1.length; _i++) {\n        var res = arrScale_1[_i];\n        if (res.dataKey) {\n            var currOption = _.omit(res, 'dataKey');\n            options[res.dataKey] = currOption;\n        }\n    }\n    options = setCustomFormatter.supportD3Formatter(options);\n    return chart.scale(options);\n};\n//# sourceMappingURL=setScaleConfig.js.map"]},"metadata":{},"sourceType":"module"}
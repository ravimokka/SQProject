{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar constants = require('./constants');\n\nvar name = constants.name;\nvar stepAttrs = attributes.steps;\n\nmodule.exports = function slidersDefaults(layoutIn, layoutOut) {\n  handleArrayContainerDefaults(layoutIn, layoutOut, {\n    name: name,\n    handleItemDefaults: sliderDefaults\n  });\n};\n\nfunction sliderDefaults(sliderIn, sliderOut, layoutOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(sliderIn, sliderOut, attributes, attr, dflt);\n  }\n\n  var steps = handleArrayContainerDefaults(sliderIn, sliderOut, {\n    name: 'steps',\n    handleItemDefaults: stepDefaults\n  });\n  var stepCount = 0;\n\n  for (var i = 0; i < steps.length; i++) {\n    if (steps[i].visible) stepCount++;\n  }\n\n  var visible; // If it has fewer than two options, it's not really a slider\n\n  if (stepCount < 2) visible = sliderOut.visible = false;else visible = coerce('visible');\n  if (!visible) return;\n  sliderOut._stepCount = stepCount;\n  var visSteps = sliderOut._visibleSteps = Lib.filterVisible(steps);\n  var active = coerce('active');\n  if (!(steps[active] || {}).visible) sliderOut.active = visSteps[0]._index;\n  coerce('x');\n  coerce('y');\n  Lib.noneOrAll(sliderIn, sliderOut, ['x', 'y']);\n  coerce('xanchor');\n  coerce('yanchor');\n  coerce('len');\n  coerce('lenmode');\n  coerce('pad.t');\n  coerce('pad.r');\n  coerce('pad.b');\n  coerce('pad.l');\n  Lib.coerceFont(coerce, 'font', layoutOut.font);\n  var currentValueIsVisible = coerce('currentvalue.visible');\n\n  if (currentValueIsVisible) {\n    coerce('currentvalue.xanchor');\n    coerce('currentvalue.prefix');\n    coerce('currentvalue.suffix');\n    coerce('currentvalue.offset');\n    Lib.coerceFont(coerce, 'currentvalue.font', sliderOut.font);\n  }\n\n  coerce('transition.duration');\n  coerce('transition.easing');\n  coerce('bgcolor');\n  coerce('activebgcolor');\n  coerce('bordercolor');\n  coerce('borderwidth');\n  coerce('ticklen');\n  coerce('tickwidth');\n  coerce('tickcolor');\n  coerce('minorticklen');\n}\n\nfunction stepDefaults(valueIn, valueOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(valueIn, valueOut, stepAttrs, attr, dflt);\n  }\n\n  var visible;\n\n  if (valueIn.method !== 'skip' && !Array.isArray(valueIn.args)) {\n    visible = valueOut.visible = false;\n  } else visible = coerce('visible');\n\n  if (visible) {\n    coerce('method');\n    coerce('args');\n    var label = coerce('label', 'step-' + valueOut._index);\n    coerce('value', label);\n    coerce('execute');\n  }\n}","map":null,"metadata":{},"sourceType":"script"}
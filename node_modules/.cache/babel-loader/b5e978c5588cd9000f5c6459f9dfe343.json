{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n};\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          categories: [\"\"]\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        }\n      },\n      series: [{\n        name: 'A',\n        data: [3, 1, 2, 3, 4, 5, 6, 7, 8, 9,, 9, 9, 8, 7, 6, 5, 4, 3, 13, 5, 6, 7, 88, 6, 77, 77, 8, 87, 31, 2, 3, 4, 5, 6, 7]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"area\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","StackArea","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","axios","ReactApexChart","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","AnalyticalTest","Component","constructor","props","state","options","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","format","name","data","render"],"mappings":"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","sourcesContent":["\n\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, StackArea, Line, Bar, Point} from 'viser-react';\n\n\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\n\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n      var i = 0;\n      var series = [];\n      while (i < count) {\n        var x = baseval;\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push([x, y]);\n        baseval += 86400000;\n        i++;\n      }\n      return series;\n    }\n\nclass AnalyticalTest extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n\n\n            xaxis: {\n\n              categories: [\"\"],\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              },\n            }\n          },\n          series: [{\n            name: 'A',\n            data: [3,1,2,3,4,5,6,7,8,9,,9,9,8,7,6,5,4,3,13,5,6,7,88,6,77,77,8,87,31,2,3,4,5,6,7]\n          },\n          \n          ],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" width=\"600\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
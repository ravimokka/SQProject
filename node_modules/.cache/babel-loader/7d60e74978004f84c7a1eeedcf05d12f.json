{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/GroupBarChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table, Select, DatePicker } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\nconst Menu_name = \"Financial\";\n\nconst DataSet = require('@antv/data-set');\n\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nconst Option = Select.Option;\n\nclass GroupBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      console.log(date, dateString);\n      this.setState({\n        start_date: dateString[0]\n      });\n      this.setState({\n        end_date: dateString[1]\n      });\n    };\n\n    this.handleChange = value => {\n      console.log(value);\n      this.setState({\n        select_unit: value\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.onChange_Xaxis = value => {\n      this.setState({\n        value_xl: \"\"\n      });\n      this.setState({\n        value_xl: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.onChange_Yaxis = value => {\n      this.setState({\n        value_yl: \"\"\n      });\n      this.setState({\n        value_yl: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.handleSubmitOK = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.GroupBarChartData({\n        A: this.state.value_xl,\n        B: this.state.value_yl,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        unit_value: this.state.select_unit,\n        Menu: Menu_name\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.GroupBarChartData({\n        A: this.state.value_x,\n        B: this.state.value_y,\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      group_bar_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        }\n      },\n      Headers: [],\n      intHeader: [],\n      filter: [],\n      start_date: '',\n      end_date: '',\n      select_unit: [],\n      select_unit_list: '',\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_x: \"Group\",\n      value_yl: \"Amount_USD\",\n      loading: true,\n      group_bar_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_group_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadHeaders();\n    this.loadIntHeaders();\n    this.loadChartData({\n      A: \"Group\",\n      B: \"Amount\",\n      Menu: Menu_name\n    });\n  }\n\n  async loadHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        Headers: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        select_unit_list: keys_list\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        group_bar_display: true\n      });\n    }\n  } //================================================ Group Bar Chart ====================================================================\n\n\n  async GroupBarChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      Gbar_table_columns: []\n    });\n    this.setState({\n      Gbar_table_data: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        chart_data: chart_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        download_group_barChart_table: [table_dict]\n      });\n      this.setState({\n        group_bar_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_x,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100\n      },\n      defaultValue: \"Group\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Xaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, this.state.Headers.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, value))), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100,\n        marginLeft: '5px'\n      },\n      defaultValue: \"Amount\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Yaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, this.state.intHeader.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, value))), React.createElement(RangePicker, {\n      style: {\n        marginLeft: '5px'\n      },\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '12%',\n        marginLeft: '5px'\n      },\n      placeholder: \"Select Unit\",\n      defaultValue: [],\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, children), \",\", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleSubmitOK,\n      style: {\n        marginLeft: \"10px\"\n      },\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_GroupBar\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '21px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_GroupBar\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \"Group Bar TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.Gbar_table_columns,\n      dataSource: this.state.Gbar_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_group_barChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), this.state.group_bar_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.group_bar_options,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"940\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default GroupBarChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/GroupBarChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Select","DatePicker","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","Menu_name","DataSet","require","MonthPicker","RangePicker","WeekPicker","Option","GroupBarChart","Component","constructor","props","onBlur","console","log","onFocus","onSearch","val","onChangeDate","date","dateString","setState","start_date","end_date","handleChange","value","select_unit","onChange_Xaxis","value_xl","onChange_Yaxis","value_yl","handleSubmitOK","e","preventDefault","loading","GroupBarChartData","A","state","B","unit_value","Menu","handleSubmit","value_x","target","handleSubmit1","value_y","handleSubmit12","group_bar_options","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","xaxis","categories","labels","formatter","Math","round","yaxis","Headers","intHeader","filter","select_unit_list","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","group_bar_display","table_columns","title","dataIndex","key","table_data","oNumber","Gbar_table_columns","Gbar_table_data","download_group_barChart_table","firstname","lastname","email","componentWillMount","loadHeaders","loadIntHeaders","loadChartData","promise","post","loginURL","status","data","d","dou","headers","append","options","method","body","JSON","stringify","load_table_columns","load_table_data","area_chart_series","download_lineChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","line_table_columns","line_table_data","mix_table_columns","mix_table_data","area_table_columns","area_table_data","download_areaChart_table","value_list","chart_list","g_data","Actual","Budget","g","render","override","minHeight","input","option","children","toLowerCase","indexOf","map","index","marginLeft","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table,Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Financial\"\nconst DataSet = require('@antv/data-set');\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_x : \"Group\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadChartData({A:\"Group\", B:\"Amount\", Menu:Menu_name});\n\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_xl:\"\"})\n    this.setState({value_xl:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_yl:\"\"})\n  this.setState({value_yl:value});\n  console.log(`selected ${value}`);\n}\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_xl, B:this.state.value_yl,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\n\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_x, B:this.state.value_y, Menu:Menu_name}\n  );\n  };\n\n\nasync GroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n  <Card\n    title={this.state.value_x}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n      <div id=\"chart\">\n        <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n           {/*<React.Fragment>\n                <button  className='btn btn-info'style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment> */}\n\n            <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n        style={{marginLeft:\"3px\"}}><Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button>\n          <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Group Bar TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_group_barChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n      {this.state.group_bar_display == true?\n      <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                      type=\"bar\" width=\"940\" height=\"350\" />:null\n       }\n   </div>\n\n </div>\n </Card>\n    );\n  }\n}\nexport default GroupBarChart;"]},"metadata":{},"sourceType":"module"}
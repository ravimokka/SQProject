{"ast":null,"code":"import _classCallCheck from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import{Chart,Tooltip,Axis,Legend,Coord,Guide,Pie}from'viser-react';import*as React from'react';var DataSet=require('@antv/data-set');var sourceData=[{item:'Groceries',count:40},{item:'Shopping',count:21},{item:'Utility Bill',count:17},{item:'Food',count:13},{item:'Mokka',count:9}];var scale=[{dataKey:'percent',min:0,formatter:'.0%'}];var dv=new DataSet.View().source(sourceData);dv.transform({type:'percent',field:'count',dimension:'item',as:'percent'});var data=dv.rows;var ChartBreakdownDonut=/*#__PURE__*/function(_React$Component){_inherits(ChartBreakdownDonut,_React$Component);function ChartBreakdownDonut(){_classCallCheck(this,ChartBreakdownDonut);return _possibleConstructorReturn(this,_getPrototypeOf(ChartBreakdownDonut).apply(this,arguments));}_createClass(ChartBreakdownDonut,[{key:\"render\",value:function render(){return React.createElement(Chart,{width:400,height:400,data:data,scale:scale},React.createElement(Tooltip,{showTitle:true}),React.createElement(Axis,null),React.createElement(Legend,{dataKey:\"item\"}),React.createElement(Coord,{type:\"theta\",radius:0.75,innerRadius:0.6}),React.createElement(Pie,{position:\"percent\",color:\"item\",style:{stroke:'#fff',lineWidth:1},label:['percent',{formatter:function formatter(val,item){return item.point.item+': '+val;}}]}));}}]);return ChartBreakdownDonut;}(React.Component);export default ChartBreakdownDonut;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/components/charts/ChartBreakdownDonut.js"],"names":["Chart","Tooltip","Axis","Legend","Coord","Guide","Pie","React","DataSet","require","sourceData","item","count","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","data","rows","ChartBreakdownDonut","stroke","lineWidth","val","point","Component"],"mappings":"q2BAAA,OAASA,KAAT,CAAgBC,OAAhB,CAAyBC,IAAzB,CAA+BC,MAA/B,CAAuCC,KAAvC,CAA8CC,KAA9C,CAAqDC,GAArD,KAAgE,aAAhE,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,GAAMC,CAAAA,OAAO,CAAGC,OAAO,CAAC,gBAAD,CAAvB,CAEA,GAAMC,CAAAA,UAAU,CAAG,CACjB,CAAEC,IAAI,CAAE,WAAR,CAAqBC,KAAK,CAAE,EAA5B,CADiB,CAEjB,CAAED,IAAI,CAAE,UAAR,CAAoBC,KAAK,CAAE,EAA3B,CAFiB,CAGjB,CAAED,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,EAA/B,CAHiB,CAIjB,CAAED,IAAI,CAAE,MAAR,CAAgBC,KAAK,CAAE,EAAvB,CAJiB,CAKjB,CAAED,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAE,CAAxB,CALiB,CAAnB,CAQA,GAAMC,CAAAA,KAAK,CAAG,CAAC,CACbC,OAAO,CAAE,SADI,CAEbC,GAAG,CAAE,CAFQ,CAGbC,SAAS,CAAE,KAHE,CAAD,CAAd,CAMA,GAAMC,CAAAA,EAAE,CAAG,GAAIT,CAAAA,OAAO,CAACU,IAAZ,GAAmBC,MAAnB,CAA0BT,UAA1B,CAAX,CACAO,EAAE,CAACG,SAAH,CAAa,CACXC,IAAI,CAAE,SADK,CAEXC,KAAK,CAAE,OAFI,CAGXC,SAAS,CAAE,MAHA,CAIXC,EAAE,CAAE,SAJO,CAAb,EAMA,GAAMC,CAAAA,IAAI,CAAGR,EAAE,CAACS,IAAhB,C,GAEMC,CAAAA,mB,6UACK,CACP,MACE,qBAAC,KAAD,EAAO,KAAK,CAAE,GAAd,CAAmB,MAAM,CAAE,GAA3B,CAAgC,IAAI,CAAEF,IAAtC,CAA4C,KAAK,CAAEZ,KAAnD,EACE,oBAAC,OAAD,EAAS,SAAS,CAAE,IAApB,EADF,CAEE,oBAAC,IAAD,MAFF,CAGE,oBAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,EAHF,CAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,MAAM,CAAE,IAA5B,CAAkC,WAAW,CAAE,GAA/C,EAJF,CAKE,oBAAC,GAAD,EAAK,QAAQ,CAAC,SAAd,CAAwB,KAAK,CAAC,MAA9B,CAAqC,KAAK,CAAE,CAAEe,MAAM,CAAE,MAAV,CAAkBC,SAAS,CAAE,CAA7B,CAA5C,CACE,KAAK,CAAE,CAAC,SAAD,CAAY,CACjBb,SAAS,CAAE,mBAACc,GAAD,CAAMnB,IAAN,CAAe,CACxB,MAAOA,CAAAA,IAAI,CAACoB,KAAL,CAAWpB,IAAX,CAAkB,IAAlB,CAAyBmB,GAAhC,CACD,CAHgB,CAAZ,CADT,EALF,CADF,CAeD,C,iCAjB+BvB,KAAK,CAACyB,S,EAmBxC,cAAeL,CAAAA,mBAAf","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Coord, Guide, Pie } from 'viser-react';\nimport * as React from 'react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { item: 'Groceries', count: 40 },\n  { item: 'Shopping', count: 21 },\n  { item: 'Utility Bill', count: 17 },\n  { item: 'Food', count: 13 },\n  { item: 'Mokka', count: 9 }\n];\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass ChartBreakdownDonut extends React.Component {\n  render() {\n    return (\n      <Chart width={400} height={400} data={data} scale={scale}>\n        <Tooltip showTitle={true} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default ChartBreakdownDonut;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
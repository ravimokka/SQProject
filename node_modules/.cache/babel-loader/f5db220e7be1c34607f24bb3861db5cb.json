{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/GroupBarChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\nconst Menu_name = \"Financial\";\n\nconst DataSet = require('@antv/data-set');\n\nclass GroupBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.GroupBarChartData({\n        A: this.state.value_x,\n        B: this.state.value_y,\n        start_date: \"2020-02-05\",\n        end_date: \"2020-03-10\",\n        unit_value: [\"Celsius\"],\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      group_bar_options: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        }\n      },\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_x: \"Group\",\n      value_yl: \"Amount_USD\",\n      loading: true,\n      group_bar_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      Gbar_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      Gbar_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_group_barChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAllChartData({\n      A: \"Group\",\n      B: \"Amount\",\n      Menu: Menu_name\n    });\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAllChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        group_bar_display: true\n      });\n    }\n  } //================================================ Group Bar Chart ====================================================================\n\n\n  async GroupBarChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      Gbar_table_columns: []\n    });\n    this.setState({\n      Gbar_table_data: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      });\n      this.setState({\n        chart_data: chart_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        download_group_barChart_table: [table_dict]\n      });\n      this.setState({\n        group_bar_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_x,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, this.state.select_amount), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"OK\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_GroupBar\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '21px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_GroupBar\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Group Bar TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.Gbar_table_columns,\n      dataSource: this.state.Gbar_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_group_barChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), this.state.group_bar_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.group_bar_options,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"940\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default GroupBarChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/GroupBarChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","Menu_name","DataSet","require","GroupBarChart","Component","constructor","props","handleSubmit","e","setState","value_x","target","value","handleSubmit1","value_y","handleSubmit12","preventDefault","loading","GroupBarChartData","A","state","B","start_date","end_date","unit_value","Menu","group_bar_options","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","xaxis","categories","labels","formatter","val","Math","round","yaxis","books","intHeader","filter","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_yl","group_bar_display","table_columns","title","dataIndex","key","table_data","oNumber","Gbar_table_columns","Gbar_table_data","download_group_barChart_table","firstname","lastname","email","componentWillMount","loadAnalytical","loadIntHeaders","loadAllChartData","promise","post","loginURL","status","data","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","load_table_columns","load_table_data","area_chart_series","download_lineChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","line_table_columns","line_table_data","mix_table_columns","mix_table_data","area_table_columns","area_table_data","download_areaChart_table","value_list","chart_list","g_data","Actual","Budget","g","render","override","minHeight","marginLeft","map","index","cursor","overflowY"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Financial\"\nconst DataSet = require('@antv/data-set');\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_x : \"Group\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\", Menu:Menu_name});\n\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_x, B:this.state.value_y, start_date: \"2020-02-05\", end_date: \"2020-03-10\",\n             unit_value: [\"Celsius\"] , Menu:Menu_name}\n  );\n  };\n\nasync GroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n  <Card\n    title={this.state.value_x}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n      <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n            style={{ width:\"110px\", marginLeft:\"20px\" }}>\n             <option>{this.state.select_group}</option>\n             {this.state.books.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n       </select>\n       <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n            style={{ width:\"110px\", marginLeft:\"20px\" }}>\n             <option>{this.state.select_amount}</option>\n             {this.state.intHeader.map((value,index)=>\n                      {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                      style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                      )}\n       </select>\n       <React.Fragment>\n            <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"10px\"}}\n              type='button'>OK</button>\n        </React.Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n        style={{marginLeft:\"3px\"}}><Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button>\n          <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Group Bar TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_group_barChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n      {this.state.group_bar_display == true?\n      <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                      type=\"bar\" width=\"940\" height=\"350\" />:null\n       }\n   </div>\n\n </div>\n </Card>\n    );\n  }\n}\nexport default GroupBarChart;"]},"metadata":{},"sourceType":"module"}
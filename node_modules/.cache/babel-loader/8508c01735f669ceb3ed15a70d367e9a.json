{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/PieChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Financial\";\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.setState({\n        loading: true\n      });\n      this.PieCheckbox({\n        Column: e.target.value,\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      books: [],\n      intHeader: [],\n      filter: [],\n      select_group: \"Group\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_xl: \"Status\",\n      value_yl: \"Amount_USD\",\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      pie_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      pie_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_pieChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/load_count_api\", {\n      Column: 'Group',\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //===============================================Pie Chart ==============================================================\n\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    this.setState({\n      pie_table_columns: []\n    });\n    this.setState({\n      pie_table_data: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%'\n    }];\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_pie,\n      onChange: this.handleSubmitPie,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, this.state.select_group), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Pie\",\n      style: {\n        marginLeft: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '21px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Pie\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Pie Chart TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.pie_table_columns,\n      dataSource: this.state.pie_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_pieChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: pie_data,\n      scale: pie_scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/PieChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","AnalyticalTest","Component","constructor","props","handleSubmitPie","e","preventDefault","setState","value_pie","target","value","loading","PieCheckbox","Column","Menu","state","books","intHeader","filter","select_group","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_xl","value_yl","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","pie_table_columns","pie_table_data","download_pieChart_table","firstname","lastname","email","componentWillMount","loadAnalytical","loadIntHeaders","loadAll_count_view","promise","post","loginURL","status","data","console","log","d","dou","download_barChart_table","download_verticalChart_table","download_donutChart_table","table_dict","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","Object","keys","length","push","value_bar","data_dict","load_data_dict","column_dict","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","donut_table_columns","donut_table_data","headers","Headers","append","options","method","body","JSON","stringify","value_list","chart_list","render","dv","View","source","transform","type","field","dimension","as","align","rows","pie_scale","dataKey","min","formatter","override","width","marginLeft","map","index","cursor","fontSize","overflowY","stroke","lineWidth","val","item","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\";\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n      books:[],\n     intHeader:[],\n     filter:[],\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name} );\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict);\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n//===============================================Pie Chart ==============================================================\n handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n    this.setState({loading:true});\n     this.PieCheckbox(\n         {Column:e.target.value, Menu:Menu_name}\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n     this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n\n\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%',\n    }];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n     <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >{this.state.select_group}</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n         </select>\n\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\" style={{marginLeft:\"3px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'21px'}}/> </button>\n          <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                  <CSVLink data={this.state.download_pieChart_table}>\n                  <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit height={400} data={pie_data} scale={pie_scale} >\n                <Tooltip showTitle={false} />\n                <Coord type=\"theta\" />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                                <Pie\n              position=\"percent\"\n              color=\"item\"\n              style={{ stroke: '#fff', lineWidth: 1 }}\n              label={['percent', {\n                formatter: (val, item) => {\n                  return item.point.item + ': ' + val;\n                }\n              }]}\n            />\n           </Chart>\n      </div>\n\n\n\n    );\n  }\n}\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
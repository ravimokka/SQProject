{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { spinnerService, SpinnerComponent as Spinner } from '@chevtek/react-spinners';\n{\n  /* import { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\n  const DataSet = require('@antv/data-set');\n  const sourceData = [\n  { label: 'Amount_USD.', Actual: 2800, Budget: 2260 },\n  ];\n  const dv = new DataSet.View().source(sourceData);\n  dv.transform({\n  type: 'fold',\n  fields: ['Actual', 'Budget'],\n  key: 'type',\n  value: 'value',\n  });\n  const data = dv.rows;\n  class Reactjs extends React.Component {\n  render() {\n   return (\n     <Chart forceFit height={400} data={data}>\n       <Coord type=\"rect\" direction=\"LT\" />\n       <Tooltip />\n       <Legend />\n       <Axis dataKey=\"value\" position=\"right\" />\n       <Axis dataKey=\"label\" label={{ offset: 12 }} />\n       <Bar position=\"label*value\" color=\"type\" adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n     </Chart>\n   );\n  }\n  }  */\n}\n\nclass Reactjs extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.toggleLoader = this.toggleLoader.bind(this);\n  }\n\n  toggleLoader() {\n    if (spinnerService.isShowing('mySpinner')) {\n      spinnerService.hide('mySpinner');\n    } else {\n      spinnerService.show('mySpinner');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"START LOADING\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      name: \"mySpinner\",\n      group: \"foo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","ReactApexChart","spinnerService","SpinnerComponent","Spinner","Reactjs","constructor","props","context","toggleLoader","bind","isShowing","hide","show","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,gBAAgB,IAAIC,OAA7C,QAA4D,yBAA5D;AAEE;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;;AAKN,MAAMC,OAAN,SAAsBN,KAAK,CAACC,SAA5B,CAAsC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,QAAIP,cAAc,CAACS,SAAf,CAAyB,WAAzB,CAAJ,EAA2C;AACzCT,MAAAA,cAAc,CAACU,IAAf,CAAoB,WAApB;AACD,KAFD,MAEO;AACLV,MAAAA,cAAc,CAACW,IAAf,CAAoB,WAApB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKL,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAHF,CADF;AASD;;AAxBmC;;AA8BtC,eAAeJ,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts'\nimport { spinnerService, SpinnerComponent as Spinner } from '@chevtek/react-spinners';\n\n  {/* import { Chart, Tooltip, Axis, Bar, Coord, Legend } from 'viser-react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { label: 'Amount_USD.', Actual: 2800, Budget: 2260 },\n\n];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'fold',\n  fields: ['Actual', 'Budget'],\n  key: 'type',\n  value: 'value',\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  render() {\n    return (\n      <Chart forceFit height={400} data={data}>\n        <Coord type=\"rect\" direction=\"LT\" />\n        <Tooltip />\n        <Legend />\n        <Axis dataKey=\"value\" position=\"right\" />\n        <Axis dataKey=\"label\" label={{ offset: 12 }} />\n        <Bar position=\"label*value\" color=\"type\" adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n    );\n  }\n}  */}\n\n\n\n\nclass Reactjs extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.toggleLoader = this.toggleLoader.bind(this);\n  }\n\n  toggleLoader() {\n    if (spinnerService.isShowing('mySpinner')) {\n      spinnerService.hide('mySpinner');\n    } else {\n      spinnerService.show('mySpinner');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleLoader}>START LOADING</button>\n        <br />\n        <Spinner name=\"mySpinner\" group=\"foo\">\n          <h1>Loading...</h1>\n        </Spinner>\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
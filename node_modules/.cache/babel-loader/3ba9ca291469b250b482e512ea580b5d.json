{"ast":null,"code":"import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nexport var process = function (chart, config) {\n  var cTooltip = _.cloneDeep(config.tooltip);\n\n  if (_.isNil(cTooltip) || cTooltip === false || cTooltip.show === false) {\n    return chart.tooltip(false);\n  }\n\n  for (var item in cTooltip) {\n    if (cTooltip.hasOwnProperty(item)) {\n      if (item === 'g2Tooltip') {\n        cTooltip['g2-tooltip'] = cTooltip[item];\n        cTooltip = _.omit(cTooltip, 'g2Tooltip');\n      }\n\n      if (item === 'g2TooltipTitle') {\n        cTooltip['g2-tooltip-title'] = cTooltip[item];\n        cTooltip = _.omit(cTooltip, 'g2TooltipTitle');\n      }\n\n      if (item === 'g2TooltipList') {\n        cTooltip['g2-tooltip-list'] = cTooltip[item];\n        cTooltip = _.omit(cTooltip, 'g2TooltipList');\n      }\n\n      if (item === 'g2TooltipListItem') {\n        cTooltip['g2-tooltip-list-item'] = cTooltip[item];\n        cTooltip = _.omit(cTooltip, 'g2TooltipListItem');\n      }\n\n      if (item === 'g2TooltipMaker') {\n        cTooltip['g2-tooltip-maker'] = cTooltip[item];\n        cTooltip = _.omit(cTooltip, 'g2TooltipMaker');\n      }\n    }\n  }\n\n  EventUtils.setEvent(chart, 'tooltip', cTooltip);\n  return chart.tooltip(cTooltip);\n};\nexport var setDefaultPoint = function (chart, config) {\n  var cTooltip = _.cloneDeep(config.tooltip);\n\n  if (!_.isNil(cTooltip) && cTooltip !== false && cTooltip.show !== false && cTooltip.defaultPoint) {\n    var defaultPoint = cTooltip.defaultPoint;\n    var xyPoint = chart.getXY(defaultPoint);\n\n    if (!!xyPoint) {\n      chart.showTooltip(xyPoint);\n    }\n  }\n};","map":{"version":3,"sources":["../../src/components/setTooltipConfig.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAZ,MAAmB,QAAnB;AACA,OAAO,KAAK,UAAZ,MAA4B,qBAA5B;AAEA,OAAO,IAAM,OAAO,GAAG,UAAC,KAAD,EAAa,MAAb,EAAwB;AAC7C,MAAI,QAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,OAAnB,CAAf;;AAEA,MAAI,CAAC,CAAC,KAAF,CAAQ,QAAR,KAAqB,QAAQ,KAAK,KAAlC,IAA2C,QAAQ,CAAC,IAAT,KAAkB,KAAjE,EAAwE;AACtE,WAAO,KAAK,CAAC,OAAN,CAAc,KAAd,CAAP;AACD;;AAED,OAAK,IAAM,IAAX,IAAmB,QAAnB,EAA6B;AAC3B,QAAI,QAAQ,CAAC,cAAT,CAAwB,IAAxB,CAAJ,EAAmC;AACjC,UAAI,IAAI,KAAK,WAAb,EAA0B;AACxB,QAAA,QAAQ,CAAC,YAAD,CAAR,GAAyB,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAA,QAAQ,GAAG,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,WAAjB,CAAX;AACD;;AAED,UAAI,IAAI,KAAK,gBAAb,EAA+B;AAC7B,QAAA,QAAQ,CAAC,kBAAD,CAAR,GAA+B,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAA,QAAQ,GAAG,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,gBAAjB,CAAX;AACD;;AAED,UAAI,IAAI,KAAK,eAAb,EAA8B;AAC5B,QAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAA,QAAQ,GAAG,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,eAAjB,CAAX;AACD;;AAED,UAAI,IAAI,KAAK,mBAAb,EAAkC;AAChC,QAAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAA,QAAQ,GAAG,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,mBAAjB,CAAX;AACD;;AAED,UAAI,IAAI,KAAK,gBAAb,EAA+B;AAC7B,QAAA,QAAQ,CAAC,kBAAD,CAAR,GAA+B,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAA,QAAQ,GAAG,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,gBAAjB,CAAX;AACD;AACF;AACF;;AAED,EAAA,UAAU,CAAC,QAAX,CAAoB,KAApB,EAA2B,SAA3B,EAAsC,QAAtC;AAEA,SAAO,KAAK,CAAC,OAAN,CAAc,QAAd,CAAP;AACD,CAvCM;AAyCP,OAAO,IAAM,eAAe,GAAG,UAAC,KAAD,EAAa,MAAb,EAAwB;AACrD,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,OAAnB,CAAjB;;AAEA,MACE,CAAC,CAAC,CAAC,KAAF,CAAQ,QAAR,CAAD,IAAsB,QAAQ,KAAK,KAAnC,IAA4C,QAAQ,CAAC,IAAT,KAAkB,KAA9D,IACG,QAAQ,CAAC,YAFd,EAGE;AACA,QAAM,YAAY,GAAG,QAAQ,CAAC,YAA9B;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,YAAZ,CAAhB;;AACA,QAAI,CAAC,CAAC,OAAN,EAAe;AACb,MAAA,KAAK,CAAC,WAAN,CAAkB,OAAlB;AACD;AACF;AACF,CAbM","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nexport var process = function (chart, config) {\n    var cTooltip = _.cloneDeep(config.tooltip);\n    if (_.isNil(cTooltip) || cTooltip === false || cTooltip.show === false) {\n        return chart.tooltip(false);\n    }\n    for (var item in cTooltip) {\n        if (cTooltip.hasOwnProperty(item)) {\n            if (item === 'g2Tooltip') {\n                cTooltip['g2-tooltip'] = cTooltip[item];\n                cTooltip = _.omit(cTooltip, 'g2Tooltip');\n            }\n            if (item === 'g2TooltipTitle') {\n                cTooltip['g2-tooltip-title'] = cTooltip[item];\n                cTooltip = _.omit(cTooltip, 'g2TooltipTitle');\n            }\n            if (item === 'g2TooltipList') {\n                cTooltip['g2-tooltip-list'] = cTooltip[item];\n                cTooltip = _.omit(cTooltip, 'g2TooltipList');\n            }\n            if (item === 'g2TooltipListItem') {\n                cTooltip['g2-tooltip-list-item'] = cTooltip[item];\n                cTooltip = _.omit(cTooltip, 'g2TooltipListItem');\n            }\n            if (item === 'g2TooltipMaker') {\n                cTooltip['g2-tooltip-maker'] = cTooltip[item];\n                cTooltip = _.omit(cTooltip, 'g2TooltipMaker');\n            }\n        }\n    }\n    EventUtils.setEvent(chart, 'tooltip', cTooltip);\n    return chart.tooltip(cTooltip);\n};\nexport var setDefaultPoint = function (chart, config) {\n    var cTooltip = _.cloneDeep(config.tooltip);\n    if (!_.isNil(cTooltip) && cTooltip !== false && cTooltip.show !== false\n        && cTooltip.defaultPoint) {\n        var defaultPoint = cTooltip.defaultPoint;\n        var xyPoint = chart.getXY(defaultPoint);\n        if (!!xyPoint) {\n            chart.showTooltip(xyPoint);\n        }\n    }\n};\n//# sourceMappingURL=setTooltipConfig.js.map"]},"metadata":{},"sourceType":"module"}
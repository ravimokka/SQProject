{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict'; // Modified from https://github.com/ArthurClemens/Javascript-Undo-Manager\n// Copyright (c) 2010-2013 Arthur Clemens, arthur@visiblearea.com\n\nmodule.exports = function UndoManager() {\n  var undoCommands = [];\n  var index = -1;\n  var isExecuting = false;\n  var callback;\n\n  function execute(command, action) {\n    if (!command) return this;\n    isExecuting = true;\n    command[action]();\n    isExecuting = false;\n    return this;\n  }\n\n  return {\n    add: function (command) {\n      if (isExecuting) return this;\n      undoCommands.splice(index + 1, undoCommands.length - index);\n      undoCommands.push(command);\n      index = undoCommands.length - 1;\n      return this;\n    },\n    setCallback: function (callbackFunc) {\n      callback = callbackFunc;\n    },\n    undo: function () {\n      var command = undoCommands[index];\n      if (!command) return this;\n      execute(command, 'undo');\n      index -= 1;\n      if (callback) callback(command.undo);\n      return this;\n    },\n    redo: function () {\n      var command = undoCommands[index + 1];\n      if (!command) return this;\n      execute(command, 'redo');\n      index += 1;\n      if (callback) callback(command.redo);\n      return this;\n    },\n    clear: function () {\n      undoCommands = [];\n      index = -1;\n    },\n    hasUndo: function () {\n      return index !== -1;\n    },\n    hasRedo: function () {\n      return index < undoCommands.length - 1;\n    },\n    getCommands: function () {\n      return undoCommands;\n    },\n    getPreviousCommand: function () {\n      return undoCommands[index - 1];\n    },\n    getIndex: function () {\n      return index;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\n\nconst DataSet = require('@antv/data-set');\n\nvar x = [];\nconst sourceData = x;\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      l: []\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const y = [{\n        item: 'A',\n        count: 40\n      }, {\n        item: 'B',\n        count: 21\n      }, {\n        item: 'C',\n        count: 17\n      }, {\n        item: 'D',\n        count: 13\n      }, {\n        item: 'E',\n        count: 9\n      }];\n      x.push(y);\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      } //          label={['percent', {\n      //            formatter: (val, item) => {\n      //              return item.point.item + ': ' + val;\n      //            }\n      //          }]}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","Row","Col","Card","Button","Icon","Progress","axios","DataSet","require","x","sourceData","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","data","rows","Reactjs","Component","constructor","props","handleSubmitDonut","e","preventDefault","setState","value","target","DonutCheckbox","Column","state","books","intHeader","filter","chart_data","donut_data","pie_data","l","componentWillMount","loadAnalytical","promise","post","firstName","lastName","status","console","log","d","headers","Headers","append","options","method","body","JSON","stringify","i","keys_list","value_list","chart_list","ct_list1","Object","keys","length","key","push","data_dict","y","item","count","d_data","SQBL","SQCL","render","width","marginLeft","map","index","cursor","fontSize","stroke","lineWidth"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport axios from \"axios\";\n\nconst DataSet = require('@antv/data-set');\n\nvar x = [];\n\nconst sourceData = x;\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     l:[]\n\n      }\n   }\n   componentWillMount() {\n    this.loadAnalytical();\n\n\n  }\n\n   async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n   handleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n   const y = [\n  { item: 'A', count: 40 },\n  { item: 'B', count: 21 },\n  { item: 'C', count: 17 },\n  { item: 'D', count: 13 },\n  { item: 'E', count: 9 }\n];\n\nx.push(y)\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n  render() {\n    return (\n\n      <Chart forceFit height={400} data={data} scale={scale}>\n        <Tooltip showTitle={false} />\n        <Coord type=\"theta\" />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n//          label={['percent', {\n//            formatter: (val, item) => {\n//              return item.point.item + ': ' + val;\n//            }\n//          }]}\n        />\n      </Chart>\n\n    );\n  }\n}\n\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
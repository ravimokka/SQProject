{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress, Table } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\nimport ChartBreakdownDonut from \"./ChartBreakdownDonut\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass ManagementAllCharts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cat: [['Feb'], ['test']],\n      area_chart_series: [{\n        name: 'series1',\n        data: [31456456455.196860945876, 19456456.196860945876]\n      }, {\n        name: 'series1',\n        data: [31645645645, 196860945876]\n      }]\n    };\n  }\n\n  render() {\n    const area_chart_options = {\n      chart: {\n        stacked: true\n      },\n      colors: ['#008FFB', '#00E396', '#CED4DC'],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true\n      },\n      xaxis: {\n        categories: ['']\n      },\n      yaxis: {\n        labels: {\n          formatter: function (val) {\n            if (val < 100000) {\n              return Math.round(val / 1000 * 10) / 10 + 'k';\n            } else if (val >= 1000000) {\n              return val = val / 1000000 + \"M\";\n            } else {\n              return val;\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          opacityFrom: 0.6,\n          opacityTo: 0.8\n        }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'left'\n      }\n    };\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"600\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ManagementAllCharts;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","Table","ReactApexChart","ChartBreakdownDonut","LineChart","BarChart","DataSet","require","ManagementAllCharts","constructor","props","state","cat","area_chart_series","name","data","render","area_chart_options","chart","stacked","colors","dataLabels","enabled","stroke","show","xaxis","categories","yaxis","labels","formatter","val","Math","round","fill","type","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAgDC,KAAhD,QAA6D,MAA7D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAKI,MAAMC,mBAAN,SAAkCf,KAAK,CAACC,SAAxC,CAAkD;AAEhDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,GAAG,EAAC,CAAC,CAAC,KAAD,CAAD,EAAS,CAAC,MAAD,CAAT,CADQ;AAGbC,MAAAA,iBAAiB,EAAC,CAAC;AACfC,QAAAA,IAAI,EAAE,SADS;AAEfC,QAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2B,qBAA3B;AAFS,OAAD,EAIhB;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE,CAAC,WAAD,EAAc,YAAd;AAFR,OAJgB;AAHL,KAAb;AAYD;;AAIDC,EAAAA,MAAM,GAAG;AAET,UAAMC,kBAAkB,GAAG;AACrBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OADc;AAKrBC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CALa;AAMrBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OANS;AASrBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OATa;AAarBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAC,CAAC,EAAD;AADN,OAbc;AAgBpBC,MAAAA,KAAK,EAAE;AAENC,QAAAA,MAAM,EAAE;AACFC,UAAAA,SAAS,EAAE,UAASC,GAAT,EAAc;AACtB,gBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,qBAAOC,IAAI,CAACC,KAAL,CAAYF,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,aAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,qBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,aAJI,MAKC;AACM,qBAAOA,GAAP;AACH;AAEZ;AAdC;AAFF,OAhBa;AAmCrBG,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,UADF;AAEJC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,WAAW,EAAE,GADL;AAERC,UAAAA,SAAS,EAAE;AAFH;AAFN,OAnCe;AA0CrBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,KADJ;AAENC,QAAAA,eAAe,EAAE;AAFX;AA1Ca,KAA3B;AAmDE,WAGE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEvB,kBAAzB;AAA6C,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWE,iBAAhE;AAAmF,MAAA,IAAI,EAAC,MAAxF;AAAgG,MAAA,KAAK,EAAC,KAAtG;AAA4G,MAAA,MAAM,EAAC,KAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;AASD;;AAnF+C;;AAqFtD,eAAeL,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress,Table } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\n\nimport ChartBreakdownDonut from \"./ChartBreakdownDonut\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\n\n\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n    class ManagementAllCharts extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n         cat:[['Feb'],['test']],\n\n        area_chart_series:[{\n            name: 'series1',\n            data: [31456456455.196860945876, 19456456.196860945876]\n          },\n          {\n            name: 'series1',\n            data: [31645645645, 196860945876]\n          }],\n        }\n      }\n\n\n\n      render() {\n\n      const area_chart_options = {\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n              categories:[''],\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'top',\n              horizontalAlign: 'left'\n            },\n\n          }\n\n\n\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={area_chart_options} series={this.state.area_chart_series} type=\"area\"  width=\"600\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\nexport default ManagementAllCharts;\n\n"]},"metadata":{},"sourceType":"module"}
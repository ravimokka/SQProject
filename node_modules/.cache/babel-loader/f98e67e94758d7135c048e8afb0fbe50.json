{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\n\nconst DataSet = require(\"@antv/data-set\");\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          textAnchor: 'start',\n          formatter: function (val, opt) {\n            return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n          },\n          offsetX: 0\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          categories: [],\n          labels: {\n            formatter: function (val) {\n              return val;\n            }\n          }\n        }\n      },\n      series: [{\n        data: ['r', 't', 'y']\n      }, {\n        data: [53, 32, 33, 52, 13, 44, 32]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","ReactApexChart","ChartHistoryGroupColumn","DataSet","require","Reactjs","constructor","props","state","options","plotOptions","bar","horizontal","dataLabels","position","enabled","textAnchor","formatter","val","opt","w","globals","labels","dataPointIndex","offsetX","stroke","show","width","colors","xaxis","categories","Math","round","yaxis","series","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,8CAApC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAIA,MAAMC,OAAN,SAAsBZ,KAAK,CAACC,SAA5B,CAAsC;AAEhCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,IADT;AAEHC,YAAAA,UAAU,EAAE;AACVC,cAAAA,QAAQ,EAAE;AADA;AAFT;AADM,SADN;AASPD,QAAAA,UAAU,EAAE;AACtBE,UAAAA,OAAO,EAAE,IADa;AAEtBC,UAAAA,UAAU,EAAE,OAFU;AAGtBC,UAAAA,SAAS,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC1B,mBAAOA,GAAG,CAACC,CAAJ,CAAMC,OAAN,CAAcC,MAAd,CAAqBH,GAAG,CAACI,cAAzB,IAA2C,KAA3C,GAAmDL,GAA1D;AACH,WALqB;AAMtBM,UAAAA,OAAO,EAAE;AANa,SATL;AAiBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,KAAK,EAAE,CAFD;AAGNC,UAAAA,MAAM,EAAE,CAAC,MAAD;AAHF,SAjBD;AAuBPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,EADP;AAECR,UAAAA,MAAM,EAAE;AACRL,YAAAA,SAAS,EAAE,UAASC,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOa,IAAI,CAACC,KAAL,CAAYd,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AAdO;AAFT,SAvBA;AA4CPe,QAAAA,KAAK,EAAE;AACLH,UAAAA,UAAU,EAAE,EADP;AAELR,UAAAA,MAAM,EAAE;AACFL,YAAAA,SAAS,EAAE,UAASC,GAAT,EAAc;AACtB,qBAAOA,GAAP;AACF;AAHC;AAFH;AA5CA,OADE;AAsDXgB,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT;AADC,OAAD,EAEL;AACDA,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AADL,OAFK;AAtDG,KAAb;AA4DD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAGE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWC,OAApC;AAA6C,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAW0B,MAAhE;AAAwE,MAAA,IAAI,EAAC,KAA7E;AAAmF,MAAA,MAAM,EAAC,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;AASD;;AA7E+B;;AAgFtC,eAAe7B,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\nclass Reactjs extends React.Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n  enabled: true,\n  textAnchor: 'start',\n  formatter: function(val, opt) {\n      return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val\n  },\n  offsetX: 0,\n},\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [],\n                    labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n\n            },\n\n            yaxis: {\n              categories: [],\n              labels: {\n                    formatter: function(val) {\n                       return val;\n                    }\n                }\n            }\n          },\n          series: [{\n            data: ['r','t','y']\n          }, {\n            data: [53, 32, 33, 52, 13, 44, 32]\n          }],\n        }\n      }\n\n      render() {\n        return (\n\n\n          <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height=\"350\" />\n          </div>\n\n\n        );\n      }\n    }\n\nexport default Reactjs;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar handleAnnotationCommonDefaults = require('../annotations/common_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function handleDefaults(sceneLayoutIn, sceneLayoutOut, opts) {\n  handleArrayContainerDefaults(sceneLayoutIn, sceneLayoutOut, {\n    name: 'annotations',\n    handleItemDefaults: handleAnnotationDefaults,\n    fullLayout: opts.fullLayout\n  });\n};\n\nfunction handleAnnotationDefaults(annIn, annOut, sceneLayout, opts) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n  }\n\n  function coercePosition(axLetter) {\n    var axName = axLetter + 'axis'; // mock in such way that getFromId grabs correct 3D axis\n\n    var gdMock = {\n      _fullLayout: {}\n    };\n    gdMock._fullLayout[axName] = sceneLayout[axName];\n    return Axes.coercePosition(annOut, gdMock, coerce, axLetter, axLetter, 0.5);\n  }\n\n  var visible = coerce('visible');\n  if (!visible) return;\n  handleAnnotationCommonDefaults(annIn, annOut, opts.fullLayout, coerce);\n  coercePosition('x');\n  coercePosition('y');\n  coercePosition('z'); // if you have one coordinate you should all three\n\n  Lib.noneOrAll(annIn, annOut, ['x', 'y', 'z']); // hard-set here for completeness\n\n  annOut.xref = 'x';\n  annOut.yref = 'y';\n  annOut.zref = 'z';\n  coerce('xanchor');\n  coerce('yanchor');\n  coerce('xshift');\n  coerce('yshift');\n\n  if (annOut.showarrow) {\n    annOut.axref = 'pixel';\n    annOut.ayref = 'pixel'; // TODO maybe default values should be bigger than the 2D case?\n\n    coerce('ax', -10);\n    coerce('ay', -30); // if you have one part of arrow length you should have both\n\n    Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}
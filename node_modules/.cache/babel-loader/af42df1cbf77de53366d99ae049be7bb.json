{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport axios from \"axios\";\nconst t = [10, 20, 32, 34, 5, 63, 6, 75, 7];\nconst x = data[\"Actual\"];\nconst y = data[\"Budget\"];\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadData({\n        A: this.state.value,\n        B: this.state.value1\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      options: {\n        chart: {\n          shadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 1\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        colors: ['#77B6EA', '#545454'],\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 't',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        markers: {\n          size: 6\n        },\n        xaxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n          title: {\n            text: 'Month'\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Temperature'\n          },\n          min: 5,\n          max: 40\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true,\n          offsetY: -25,\n          offsetX: -5\n        }\n      },\n      series: [{\n        name: \"High - 2013\",\n        data: t\n      }, {\n        name: \"Low - 2013\",\n        data: [12, 11, 14, 18, 17, 13, 13]\n      }],\n      options1: {\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      },\n      series1: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007]\n        }\n      },\n      series2: [{\n        data: [44, 55, 41, 64, 22, 43, 21]\n      }, {\n        data: [53, 32, 33, 52, 13, 44, 32]\n      }],\n      options3: {\n        chart: {\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        title: {\n          text: 'Fiction Books Sales'\n        },\n        xaxis: {\n          categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n          labels: {\n            formatter: function (val) {\n              return val + \"K\";\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return val + \"K\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      },\n      series3: [{\n        name: 'Marine Sprite',\n        data: [44, 55, 41, 37, 22, 43, 21]\n      }, {\n        name: 'Striking Calf',\n        data: [53, 32, 33, 52, 13, 43, 32]\n      }, {\n        name: 'Tank Picture',\n        data: [12, 17, 11, 9, 15, 11, 20]\n      }, {\n        name: 'Bucket Slope',\n        data: [9, 7, 5, 8, 6, 9, 4]\n      }, {\n        name: 'Reborn Kid',\n        data: [25, 12, 19, 32, 25, 24, 10]\n      }],\n      options4: {\n        stroke: {\n          width: [0, 4]\n        },\n        title: {\n          text: 'Traffic Sources'\n        },\n        labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: [{\n          title: {\n            text: 'Website Blog'\n          }\n        }, {\n          opposite: true,\n          title: {\n            text: 'Social Media'\n          }\n        }]\n      },\n      series4: [{\n        name: 'Website Blog',\n        type: 'column',\n        data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\n      }, {\n        name: 'Social Media',\n        type: 'line',\n        data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n      }],\n      options5: {\n        chart: {\n          stacked: false\n        },\n        stroke: {\n          width: [0, 2, 5],\n          curve: 'smooth'\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '50%'\n          }\n        },\n        fill: {\n          opacity: [0.85, 0.25, 1],\n          gradient: {\n            inverseColors: false,\n            shade: 'light',\n            type: \"vertical\",\n            opacityFrom: 0.85,\n            opacityTo: 0.55,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'],\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          title: {\n            text: 'Points'\n          },\n          min: 0\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (y) {\n              if (typeof y !== \"undefined\") {\n                return y.toFixed(0) + \" points\";\n              }\n\n              return y;\n            }\n          }\n        }\n      },\n      series5: [{\n        name: 'TEAM A',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'TEAM B',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'TEAM C',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n      books: [],\n      filter: []\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n    }\n  }\n\n  async loadCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState({\n        filter: data\n      });\n      console.log(data);\n    }\n  }\n\n  async loadData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, this.state.value), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value1,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"nextBtn\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Column Charts\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options1,\n      series: this.state.series1,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Grouped Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, this.state.value), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value1,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"nextBtn\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.series2,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Stacked Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options3,\n      series: this.state.series3,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Line & Column\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options4,\n      series: this.state.series4,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Line Column Area\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options5,\n      series: this.state.series5,\n      type: \"line\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Analytical;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Analytical/Analytical.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","ReactMultiSelectCheckboxes","axios","t","x","data","y","Analytical","constructor","props","handleSubmit","e","setState","value","target","preventDefault","loadCheckbox","Column","handleSubmit12","loadData","A","state","B","value1","handleSubmit1","options","chart","shadow","enabled","color","top","left","blur","opacity","toolbar","show","colors","dataLabels","stroke","curve","title","text","align","grid","borderColor","row","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","series","name","options1","plotOptions","bar","horizontal","columnWidth","endingShape","width","fill","tooltip","formatter","val","series1","options2","style","fontSize","series2","options3","stacked","labels","undefined","series3","options4","type","opposite","series4","options5","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","shared","intersect","toFixed","series5","books","filter","componentWillMount","loadAnalytical","promise","post","firstName","lastName","status","console","log","headers","Headers","append","method","body","JSON","stringify","render","span","order","minHeight","marginLeft","map","index","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\nimport axios from \"axios\";\n\n\nconst t = [10, 20, 32, 34,5,63,6,75,7]\nconst x = data[\"Actual\"]\nconst y = data[\"Budget\"]\n\n\nclass Analytical extends React.Component {\n  constructor(props) {\n    super(props);\n   this.state = {\n        options: {\n          chart: {\n            shadow: {\n              enabled: true,\n              color: '#000',\n              top: 18,\n              left: 7,\n              blur: 10,\n              opacity: 1\n            },\n            toolbar: {\n              show: false\n            }\n          },\n          colors: ['#77B6EA', '#545454'],\n          dataLabels: {\n            enabled: true,\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          title: {\n            text: 't',\n            align: 'left'\n          },\n          grid: {\n            borderColor: '#e7e7e7',\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n          },\n          markers: {\n\n            size: 6\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n              text: 'Month'\n            }\n          },\n          yaxis: {\n            title: {\n              text: 'Temperature'\n            },\n            min: 5,\n            max: 40\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5\n          }\n        },\n        series: [\n          {\n            name: \"High - 2013\",\n            data: t\n          },\n          {\n            name: \"Low - 2013\",\n            data: [12, 11, 14, 18, 17, 13, 13]\n          }\n        ],\n\n\n        options1: {\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n              width: 2,\n              colors: ['transparent']\n            },\n            xaxis: {\n              categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n            },\n            yaxis: {\n              title: {\n                text: '$ (thousands)'\n              }\n            },\n            fill: {\n              opacity: 1\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return \"$ \" + val + \" thousands\"\n                }\n              }\n            }\n          },\n          series1: [{\n            name: 'Net Profit',\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n          }, {\n            name: 'Revenue',\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n          }],\n\n\n   options2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: true,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n            }\n          },\n          series2: [{\n            data: [44, 55, 41, 64, 22, 43, 21]\n          }, {\n            data: [53, 32, 33, 52, 13, 44, 32]\n          }],\n\n\n options3: {\n            chart: {\n              stacked: true,\n            },\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              },\n\n            },\n            stroke: {\n              width: 1,\n              colors: ['#fff']\n            },\n\n            title: {\n              text: 'Fiction Books Sales'\n            },\n            xaxis: {\n              categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n              labels: {\n                formatter: function (val) {\n                  return val + \"K\"\n                }\n              }\n            },\n            yaxis: {\n              title: {\n                text: undefined\n              },\n\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return val + \"K\"\n                }\n              }\n            },\n            fill: {\n              opacity: 1\n\n            },\n\n            legend: {\n              position: 'top',\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\n          series3: [{\n            name: 'Marine Sprite',\n            data: [44, 55, 41, 37, 22, 43, 21]\n          }, {\n            name: 'Striking Calf',\n            data: [53, 32, 33, 52, 13, 43, 32]\n          }, {\n            name: 'Tank Picture',\n            data: [12, 17, 11, 9, 15, 11, 20]\n          }, {\n            name: 'Bucket Slope',\n            data: [9, 7, 5, 8, 6, 9, 4]\n          }, {\n            name: 'Reborn Kid',\n            data: [25, 12, 19, 32, 25, 24, 10]\n          }],\n options4: {\n            stroke: {\n              width: [0, 4]\n            },\n            title: {\n              text: 'Traffic Sources'\n            },\n            labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'\n            ],\n            xaxis: {\n              type: 'datetime'\n            },\n            yaxis: [{\n              title: {\n                text: 'Website Blog',\n              },\n\n            }, {\n              opposite: true,\n              title: {\n                text: 'Social Media'\n              }\n            }]\n          },\n          series4: [{\n            name: 'Website Blog',\n            type: 'column',\n            data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\n          }, {\n            name: 'Social Media',\n            type: 'line',\n            data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n          }],\n\n       options5: {\n        chart: {\n          stacked: false,\n        },\n        stroke: {\n          width: [0, 2, 5],\n          curve: 'smooth'\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '50%'\n          }\n        },\n\n        fill: {\n          opacity: [0.85, 0.25, 1],\n          gradient: {\n            inverseColors: false,\n            shade: 'light',\n            type: \"vertical\",\n            opacityFrom: 0.85,\n            opacityTo: 0.55,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'\n        ],\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          title: {\n            text: 'Points',\n          },\n          min: 0\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (y) {\n              if (typeof y !== \"undefined\") {\n                return y.toFixed(0) + \" points\";\n              }\n              return y;\n            }\n          }\n        }\n      },\n      series5: [{\n        name: 'TEAM A',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'TEAM B',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'TEAM C',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n\n    books:[],\n    filter:[],\n\n\n      }\n\n\n\n  }\n\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n\n\n  }\n\n  handleSubmit = (e) => {\n     this.setState({value: e.target.value});\n };\n\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n\n     this.loadData(\n         {A:this.state.value, B:this.state.value1}\n  );\n  };\n\n\n\n\nhandleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  handleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\n  async loadCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({filter:data});\n      console.log(data);\n    }\n\n}\n\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n    }\n\n}\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <div id=\"content\">\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                     {/* <div class=\"dropdown\">\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Column\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\" style={{ marginTop : \"10.6rem\", fontSize: \"5px\"}}>\n                            {this.state.books.map((value,index)=>\n                              {return   <a class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>\n\n                    <div class=\"dropdown\" style={{ marginLeft : \"5.5rem\", marginTop : \"-2.4rem\"}}>\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Filter\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\" style={{ marginTop : \"10.6rem\", fontSize: \"5px\"}}>\n                              {this.state.books.map((value,index)=>\n                              {return   <a  class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>\n\n                    <div class=\"dropdown\" style={{ marginLeft : \"10rem\", marginTop : \"-2.4rem\"}}>\n                            <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            Value\n                           <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu\">\n                               {this.state.filter.map((value,index)=>\n                              {return   <a  class=\"btn btn-custom btn-block btn-detail\" onClick={this.handleSubmit}\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </a> }\n                              )}\n                            </ul>\n\n                    </div>  */}\n                    <div>\n\n\n\n\n           {/*  <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\"}}>\n                     <option  value=\"\" >Column</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\" type=\"checkbox\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n                     </select>\n\n<div className=\"dropdown\" id=\"valueItemDrop\" style={{ width:\"110px\"}}>\n    <button className=\"custom-select\" id=\"dLabel\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        Xaxis\n    </button>\n    <ul className=\"dropdown-menu\" aria-labelledby=\"dLabel\">\n\n        <li className=\"checkbox form-group\" size=\"4\">\n\n            {this.state.books.map((value,index)=>\n                              {return   <label class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"11px\", marginTop:\"-40px\"}} key={index}>\n                              <div style={{ marginTop:\"32px;\" }}>\n                              <input type=\"checkbox\" id=\"valuePot\" value=\"Value Pot\" name=\"Value Pot\" style={{ marginLeft:\"-135px\" }}/>\n                              </div>\n                              {value} </label> }\n                              )}\n\n        </li>\n\n\n\n    </ul>\n</div>\n\n<div className=\"dropdown\" id=\"valueItemDrop\" style={{ width:\"110px\", marginLeft:\"150px\", marginTop:\"-40px\"}}>\n    <button className=\"custom-select\" id=\"dLabel\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        Yaxis\n    </button>\n    <ul className=\"dropdown-menu\" aria-labelledby=\"dLabel\">\n\n        <li className=\"checkbox form-group\" size=\"4\">\n\n            {this.state.books.map((value,index)=>\n                              {return   <label class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"11px\", marginTop:\"-40px\"}} key={index}>\n                              <div style={{ marginTop:\"32px;\" }}>\n                              <input type=\"checkbox\" id=\"valuePot\" value=\"Value Pot\" name=\"Value Pot\" style={{ marginLeft:\"-135px\" }}/>\n                              </div>\n                              {value} </label> }\n                              )}\n\n        </li>\n\n\n\n    </ul>\n</div>  */}\n\n\n\n\n<h3>{this.state.value}</h3>\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n<select class=\"custom-select\"  value={this.state.value1} onChange={this.handleSubmit1}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Yaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n<React.Fragment>\n    <button onClick={this.handleSubmit12} className='nextBtn'\n      type='button'>OK</button>\n    </React.Fragment>\n                    {/* <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Filter</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n                     </select>\n\n                     <select class=\"custom-select\" value={this.state.value} onChange={this.handleSubmit}\n                     style={{ width:\"110px\" , marginLeft:\"20px\"}} >\n                     <option  value=\"\" >Value</option>\n                      {this.state.filter.map((value,index)=>\n                              {return   <option class=\"custom-select\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select> */}\n\n                  {/*   <select class=\"btn btn-default\" value={this.state.value} onChange={this.handleSubmit}\n                       style={{ width:\"110px\" }}>\n                      {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select>\n                     <select class=\"btn btn-default\" value={this.state.value} onChange={this.handleSubmit}\n                     style={{ width:\"110px\" }} >\n                      {this.state.filter.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"12px\"}} key={index}> {value} </option> }\n                              )}\n\n                    </select> */}\n\n                    </div>\n\n\n\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n\n              </Card>\n\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Column Charts\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options1} series={this.state.series1} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n\n           <Row type=\"flex\" gutter={24}>\n\n\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Grouped Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                <div>\n\n                <h3>{this.state.value}</h3>\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n<select class=\"custom-select\"  value={this.state.value1} onChange={this.handleSubmit1}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Yaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n<React.Fragment>\n    <button onClick={this.handleSubmit12} className='nextBtn'\n      type='button'>OK</button>\n    </React.Fragment>\n                </div>\n            <ReactApexChart options={this.state.options2} series={this.state.series2} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Stacked Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options3} series={this.state.series3} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n           <Row type=\"flex\" gutter={24}>\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Line & Column\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options4} series={this.state.series4} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Line Column Area\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n            <ReactApexChart options={this.state.options5} series={this.state.series5} type=\"line\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n          </Row>\n\n\n\n\n          <Row type=\"flex\" gutter={24}>\n\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Analytical;"]},"metadata":{},"sourceType":"module"}
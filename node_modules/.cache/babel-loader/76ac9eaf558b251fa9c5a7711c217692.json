{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Calendar/CalendarPage.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Calendar, Badge } from \"antd\";\n\nfunction getListData(value) {\n  let listData;\n\n  switch (value.date()) {\n    case 8:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }];\n      break;\n\n    case 10:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }, {\n        type: 'error',\n        content: 'This is error event.'\n      }];\n      break;\n\n    case 15:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event'\n      }, {\n        type: 'success',\n        content: 'This is very long usual event。。....'\n      }, {\n        type: 'error',\n        content: 'This is error event 1.'\n      }, {\n        type: 'error',\n        content: 'This is error event 2.'\n      }, {\n        type: 'error',\n        content: 'This is error event 3.'\n      }, {\n        type: 'error',\n        content: 'This is error event 4.'\n      }];\n      break;\n\n    default:\n  }\n\n  return listData || [];\n}\n\nfunction dateCellRender(value) {\n  const listData = getListData(value);\n  return React.createElement(\"ul\", {\n    className: \"events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, listData.map(item => React.createElement(\"li\", {\n    key: item.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    status: item.type,\n    text: item.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n}\n\nfunction getMonthData(value) {\n  if (value.month() === 8) {\n    return 1394;\n  }\n}\n\nfunction monthCellRender(value) {\n  const num = getMonthData(value);\n  return num ? React.createElement(\"div\", {\n    className: \"notes-month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, num), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Backlog number\")) : null;\n}\n\nclass CalendarPage extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Calendar\")))), React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        minHeight: '100%'\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      dateCellRender: dateCellRender,\n      monthCellRender: monthCellRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default CalendarPage;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Calendar/CalendarPage.js"],"names":["React","Component","Row","Col","Card","Calendar","Badge","getListData","value","listData","date","type","content","dateCellRender","map","item","getMonthData","month","monthCellRender","num","CalendarPage","render","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport {\n    Row,\n    Col,\n    Card,\n    Calendar, Badge\n} from \"antd\";\n\n\nfunction getListData(value) {\n    let listData;\n    switch (value.date()) {\n      case 8:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'success', content: 'This is usual event.' },\n        ];\n        break;\n      case 10:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'success', content: 'This is usual event.' },\n          { type: 'error', content: 'This is error event.' },\n        ];\n        break;\n      case 15:\n        listData = [\n          { type: 'warning', content: 'This is warning event' },\n          { type: 'success', content: 'This is very long usual event。。....' },\n          { type: 'error', content: 'This is error event 1.' },\n          { type: 'error', content: 'This is error event 2.' },\n          { type: 'error', content: 'This is error event 3.' },\n          { type: 'error', content: 'This is error event 4.' },\n        ];\n        break;\n      default:\n    }\n    return listData || [];\n  }\n  \n  function dateCellRender(value) {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events\">\n        {listData.map(item => (\n          <li key={item.content}>\n            <Badge status={item.type} text={item.content} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  \n  function getMonthData(value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n  \n  function monthCellRender(value) {\n    const num = getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>Backlog number</span>\n      </div>\n    ) : null;\n  }\n\nclass CalendarPage extends Component {\n    render () {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Calendar</h1>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Row type=\"flex\" gutter={24}>\n                        <Col md={24}>\n                            <Card \n                              style={{minHeight: '100%'}}\n                              bordered={false}\n                              className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                            >\n                                <div>\n                                    <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\nexport default CalendarPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport Parent from \"./React\";\nimport { Test } from \"../Test\";\n\nconst DataSet = require(\"@antv/data-set\");\n\n{\n  /*\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:'tes1234t'\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Parent Component </h1>\n      <p>data coming from child<b>: {this.state.fromChild} </b></p>\n     <Test update={this.update}  data={this.state.x}/>\n    </div>\n  );\n  }\n  }\n  export default Child2;\n  */\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update = data => {\n      this.setState({\n        fromChild: data\n      });\n      this.props.history.push(\"/test-react\");\n    };\n\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x: {\n        id: 1,\n        name: 'Ford',\n        color: 'mokka raveendra'\n      },\n      arr: [[\"one\", \"two\", \"three\", \"four\", 'x', 'r'], [1, 2]]\n    };\n  }\n\n  componentWillMount() {\n    setInterval(function () {\n      this.setState({\n        curTime: new Date().toLocaleString()\n      });\n    }.bind(this), 1000);\n  }\n\n  render() {\n    const membersToRender = this.state.arr.filter(member => member.display);\n    const numRows = membersToRender.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Number of rows = \", numRows), membersToRender.map((member, index) => {\n      return React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, member.name);\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.curTime));\n  }\n\n}\n\nexport default Child2;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Icon","Progress","Parent","Test","DataSet","require","Child2","constructor","props","update","data","setState","fromChild","history","push","state","sistemas","x","id","name","color","arr","componentWillMount","setInterval","curTime","Date","toLocaleString","bind","render","membersToRender","filter","member","display","numRows","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAsD,MAAtD;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,SAASC,IAAT,QAAsB,SAAtB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAMG;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BD;;AAIH,MAAMC,MAAN,SAAqBf,KAAK,CAACC,SAA3B,CAAqC;AACpCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAkBlBC,MAlBkB,GAkBRC,IAAD,IAAU;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd;AACA,WAAKF,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AAGD,KAvBiB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXJ,MAAAA,SAAS,EAAE,OAFA;AAGXK,MAAAA,CAAC,EAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAHS;AAIXC,MAAAA,GAAG,EAAC,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,MAAxB,EAAgC,GAAhC,EAAqC,GAArC,CAAD,EAA2C,CAAC,CAAD,EAAG,CAAH,CAA3C;AAJO,KAAb;AAOD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,WAAW,CAAC,YAAU;AAClB,WAAKZ,QAAL,CAAc;AACVa,QAAAA,OAAO,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADC,OAAd;AAGH,KAJW,CAIVC,IAJU,CAIL,IAJK,CAAD,EAIG,IAJH,CAAX;AAKH;;AAQDC,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,KAAKd,KAAL,CAAWM,GAAX,CAAeS,MAAf,CAAsBC,MAAM,IAAIA,MAAM,CAACC,OAAvC,CAAxB;AACA,UAAMC,OAAO,GAAGJ,eAAe,CAACK,MAAhC;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBD,OAArB,CADF,EAGIJ,eAAe,CAACM,GAAhB,CAAoB,CAACJ,MAAD,EAASK,KAAT,KAAmB;AACrC,aAAO;AAAG,QAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBL,MAAM,CAACZ,IAAxB,CAAP;AACD,KAFD,CAHJ,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWS,OADd,CATF,CADF;AAeD;;AA7CkC;;AA+CrC,eAAelB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress} from \"antd\";\n\nimport Parent from \"./React\";\n\nimport { Test } from  \"../Test\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n\n   {/*\n   class Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:'tes1234t'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Parent Component </h1>\n        <p>data coming from child<b>: {this.state.fromChild} </b></p>\n       <Test update={this.update}  data={this.state.x}/>\n      </div>\n    );\n  }\n}\n\nexport default Child2;\n*/}\n\n\n\nclass Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:{id: 1, name: 'Ford', color: 'mokka raveendra'},\n      arr:[[\"one\", \"two\", \"three\", \"four\", 'x', 'r'],[1,2]]\n    };\n\n  }\n\n  componentWillMount(){\n    setInterval(function(){\n        this.setState({\n            curTime: new Date().toLocaleString()\n        })\n    }.bind(this), 1000);\n}\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n\n  }\n\nrender() {\n    const membersToRender = this.state.arr.filter(member => member.display)\n    const numRows = membersToRender.length\n\n    return (\n      <div>\n        <p>Number of rows = {numRows}</p>\n        {\n          membersToRender.map((member, index) => {\n            return <p key={index}>{ member.name }</p>\n          })\n        }\n\n\n        <div>\n          {this.state.curTime}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Child2;\n\n\n"]},"metadata":{},"sourceType":"module"}
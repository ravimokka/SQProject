{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport * as styles from \"./chat.scss\";\nimport axios from \"axios\";\nimport { Host } from \"../../Host\";\nimport firebase from 'firebase';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\nimport { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\nimport { FirebaseConfig } from \"../../FirebaseConfig\";\nconst stylesIcons = {\n  largeIcon: {\n    width: 500,\n    height: 60\n  }\n};\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectUser = (username, id) => {\n      this.setState({\n        msg_list: []\n      });\n      this.setState({\n        massage_box: true\n      });\n      this.setState({\n        select_username: username\n      });\n      this.setState({\n        received_id: id\n      });\n      this.setState({\n        sel_u_id: id\n      });\n      this.allMassageList(id);\n    };\n\n    this.handleSendMassage = e => {\n      this.setState({\n        massage: this.refs.msg.value\n      });\n      var today = new Date();\n      var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n      if (this.state.message != '') {\n        var newItem = {\n          user_Id: this.state.user_id,\n          sender_name: this.state.user_Name,\n          receive_name: this.state.select_username,\n          send_Id: this.state.user_id,\n          received_Id: this.state.received_id,\n          message: this.state.message,\n          time: time,\n          msg_Status: false,\n          count: 0,\n          timestamp: firebase.database.ServerValue.TIMESTAMP\n        };\n        this.messageSend.push(newItem);\n        this.setState({\n          message: ''\n        });\n      }\n    };\n\n    this.myFunction = e => {\n      var input, filter, ul, p, a, i, txtValue, li, li1;\n      input = e.target.value;\n      filter = input.value.toUpperCase();\n      ul = document.getElementById(\"my_search\");\n      li = ul.getElementsByTagName(\"div\");\n\n      for (i = 0; i < li.length; i++) {\n        a = li[i].getElementsByTagName(\"h5\")[0];\n        txtValue = a.textContent || a.innerText;\n\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          li[i].style.display = \"\";\n        } else {\n          li[i].style.display = \"none\";\n        }\n      }\n    };\n\n    this.state = {\n      online: false,\n      massage_box: false,\n      select_username: '',\n      user_list: [],\n      userName: 'Vamsi',\n      user_id: '',\n      sel_u_id: '',\n      send_msg_list: [],\n      received_list: [],\n      send_id: '',\n      received_id: '',\n      text: 'sqd_massages',\n      user_text: 'users',\n      user_status: [],\n      msg: '',\n      message: '',\n      user_Name: '',\n      user_Email: '',\n      massage_List: '',\n      msg_list: [{\n        'massage': 'hi'\n      }],\n      x: 1,\n      u: []\n    };\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n    this.allUserStatus();\n  }\n\n  componentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({\n      user_Name: profile_data['username']\n    });\n    this.setState({\n      user_Email: profile_data['email']\n    });\n    this.loadAllUserList();\n    this.allMassageList(1);\n    this.massageCount();\n    this.setState({\n      user_id: profile_data['user_id']\n    });\n  }\n\n  async massageCount() {\n    this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n      if (message.val() != null) {\n        var count_list = [];\n        var c_list = Object.values(message.val());\n        var cou = 0;\n        var msg_Status = '';\n        var send_Id = '';\n        var received_Id = '';\n\n        for (var i = 0; i < Object.keys(c_list).length; i++) {\n          if (this.state.user_id == c_list[i]['received_Id']) {\n            if (c_list[i]['msg_Status'] == false && 2 == c_list[i]['send_Id']) {\n              cou += 1;\n              c_list[i]['count'] = cou;\n              msg_Status = c_list[i]['msg_Status'];\n              send_Id = c_list[i]['send_Id'];\n              received_Id = c_list[i]['received_Id'];\n            }\n          }\n        }\n      }\n    });\n  }\n\n  async loadAllUserList() {\n    this.setState({\n      user_list: []\n    });\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL + \"/chat_user_api\", {\n      username: profile_data['username'],\n      email: profile_data['email']\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const users_list = promise.data.users;\n      this.setState({\n        user_list: users_list\n      });\n    }\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  async allMassageList(id) {\n    const s_id = id;\n    this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n      if (message.val() != null) {\n        var i;\n        var m_list = [];\n        var rsm_list = Object.values(message.val());\n\n        for (i = 0; i < Object.keys(rsm_list).length; i++) {\n          if (this.state.user_id == rsm_list[i]['received_Id'] || this.state.user_id == rsm_list[i]['send_Id']) {\n            var re_data = rsm_list[i];\n            m_list.push(re_data);\n          }\n\n          this.setState({\n            msg_list: m_list\n          });\n        }\n      } else {\n        this.setState({\n          msg_list: []\n        });\n      }\n    });\n  }\n\n  async allUserStatus() {\n    this.msg = this.userStatus = firebase.database().ref().child('messages/' + this.state.user_text).on('value', message => {\n      if (message.val() != null) {\n        var u_list = Object.values(message.val());\n        this.setState({\n          user_status: u_list\n        });\n        var i;\n        var ulist = this.state.user_list;\n\n        for (i = 0; i < Object.keys(ulist).length; i++) {\n          var j;\n\n          for (j = 0; j < Object.keys(u_list).length; j++) {\n            if (ulist[i]['id'] == u_list[j]['user_Id']) {\n              if (u_list[i]['user_status'] == 'online') {\n                ulist[i]['user_status'] = 'online';\n              } else {\n                ulist[i]['user_status'] = 'offline';\n              }\n            } else {}\n          }\n        }\n\n        this.setState({\n          u: ulist\n        });\n      } else {\n        this.setState({\n          user_status: []\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messaging\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headind_srch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recent_heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"srch_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stylish-input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search\",\n      id: \"Input\",\n      onChange: this.myFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"my_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, this.state.u.map((value, index) => React.createElement(\"div\", {\n      className: \"chat_list active_chat\",\n      id: \"myUL\",\n      key: index,\n      onClick: () => this.selectUser(value.username, value.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_people\",\n      value: this.state.select_username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      className: \"chat_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, value.user_status == 'online' ? React.createElement(\"div\", {\n      className: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      value: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, value.username, \" \", value.id, React.createElement(\"span\", {\n      className: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"new user for sq dashboard\")) : React.createElement(\"div\", {\n      className: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      value: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, value.username, \" \", value.id, React.createElement(\"span\", {\n      className: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"new user for sq dashboard\")))))))), React.createElement(\"div\", {\n      className: \"mesgs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-success  select_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        marginLeft: \"19px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, this.state.select_username), React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      className: \"hear_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), this.state.massage_box == true ? React.createElement(\"div\", {\n      className: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"incoming_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, this.state.msg_list.map((value, index) => React.createElement(\"div\", {\n      className: \"received_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.sel_u_id == value.send_Id ? React.createElement(\"div\", {\n      className: \"received_withd_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, value.message, \" \"), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, value.sender_name, \" \", value.time)) : null, this.state.sel_u_id == value.received_Id ? React.createElement(\"div\", {\n      className: \"outgoing_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sent_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, value.message, \" \"), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, value.sender_name, \"   \", value.time))) : null)))) : React.createElement(\"div\", {\n      style: {\n        marginTop: '132px',\n        color: '#bfd0d6'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(TextsmsOutlinedIcon, {\n      style: {\n        fontSize: '100px',\n        marginLeft: '144px',\n        color: '#bfd0d6'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"msg_history\",\n      style: {\n        color: '#bfd0d6'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \" Welcome Message Chatting\")), React.createElement(\"div\", {\n      className: \"type_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_msg_write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"msg\",\n      className: \"write_msg\",\n      placeholder: \"Type a message\",\n      value: this.state.message,\n      onKeyPress: this.handleKeyPress.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"msg_send_btn\",\n      type: \"button\",\n      onClick: this.handleSendMassage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(SendOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default ChartRoom;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js"],"names":["React","Component","useState","useEffect","Layout","Menu","Dropdown","Icon","Button","Avatar","Drawer","Input","AppRouter","NotificationTab","ReactApexChart","$","Popper","isAbsolute","styles","axios","Host","firebase","SendOutlinedIcon","TextsmsOutlinedIcon","AccessAlarm","ThreeDRotation","FirebaseConfig","stylesIcons","largeIcon","width","height","ChartRoom","constructor","props","selectUser","username","id","setState","msg_list","massage_box","select_username","received_id","sel_u_id","allMassageList","handleSendMassage","e","massage","refs","msg","value","today","Date","time","getHours","getMinutes","getSeconds","date","getFullYear","getMonth","getDate","state","message","newItem","user_Id","user_id","sender_name","user_Name","receive_name","send_Id","received_Id","msg_Status","count","timestamp","database","ServerValue","TIMESTAMP","messageSend","push","myFunction","input","filter","ul","p","a","i","txtValue","li","li1","target","toUpperCase","document","getElementById","getElementsByTagName","length","textContent","innerText","indexOf","style","display","online","user_list","userName","send_msg_list","received_list","send_id","text","user_text","user_status","user_Email","massage_List","x","u","ref","child","allUserStatus","componentWillMount","profile_data","JSON","parse","sessionStorage","getItem","loadAllUserList","massageCount","on","val","count_list","c_list","Object","values","cou","keys","promise","post","loginURL","email","status","users_list","data","users","handleKeyPress","event","key","handleChange","s_id","m_list","rsm_list","re_data","userStatus","u_list","ulist","j","render","map","index","marginLeft","marginTop","color","fontSize","bind"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport * as styles  from \"./chat.scss\"\nimport axios from \"axios\";\nimport { Host } from  \"../../Host\";\nimport firebase from 'firebase';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\n\nimport { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\nimport { FirebaseConfig } from  \"../../FirebaseConfig\";\n\n\nconst stylesIcons = {\n\n  largeIcon: {\n    width: 500,\n    height: 60,\n  },\n\n};\n\n\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        online:false,\n        massage_box:false,\n        select_username:'',\n        user_list:[],\n        userName:'Vamsi',\n        user_id:'',\n        sel_u_id:'',\n        send_msg_list:[],\n        received_list:[],\n        send_id:'',\n        received_id:'',\n        text:'sqd_massages',\n        user_text:'users',\n        user_status:[],\n        msg:'',\n        message:'',\n        user_Name:'',\n        user_Email:'',\n        massage_List:'',\n        msg_list:[{'massage':'hi'}],\n        x:1,\n        u:[],\n    }\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n\n    this.allUserStatus();\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({user_Name:profile_data['username']});\n    this.setState({user_Email:profile_data['email']});\n    this.loadAllUserList()\n    this.allMassageList(1);\n    this.massageCount()\n    this.setState({user_id:profile_data['user_id']});\n}\n\n\nasync massageCount(){\nthis.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n       if ( message.val() != null){\n        var count_list = []\n         var c_list = Object.values(message.val());\n         var cou = 0;\n         var msg_Status='';\n         var send_Id = '';\n         var received_Id = '';\n         for (var i = 0; i < Object.keys(c_list).length; i++) {\n              if(this.state.user_id == c_list[i]['received_Id']){\n                 if( (c_list[i]['msg_Status'] == false) &&  (2 == c_list[i]['send_Id'])){\n                        cou +=1;\n                        c_list[i]['count'] = cou;\n                        msg_Status = c_list[i]['msg_Status'];\n                        send_Id = c_list[i]['send_Id'];\n                        received_Id = c_list[i]['received_Id'];\n\n\n\n                 }\n              }\n\n         }\n\n\n  }\n\n\n   });\n}\n\n\n\n\n\n\n\n\n\n\nasync loadAllUserList()\n  {\n    this.setState({user_list:[]});\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL +\"/chat_user_api\", {username:profile_data['username'],\n                                                                    email:profile_data['email']});\n    const status = promise.status;\n    if(status===200)\n    {\n      const users_list= promise.data.users;\n      this.setState({user_list:users_list});\n    }\n  }\n\n\nselectUser = (username, id) => {\n    this.setState({msg_list:[]});\n    this.setState({massage_box:true});\n    this.setState({select_username:username});\n    this.setState({received_id:id});\n    this.setState({sel_u_id:id});\n    this.allMassageList(id);\n\n\n  };\n\n\n  handleSendMassage = (e) => {\n     this.setState({massage:this.refs.msg.value})\n      var today = new Date();\n      var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      if(this.state.message != ''){\n        var newItem = {\n        user_Id:this.state.user_id,\n        sender_name:this.state.user_Name,\n        receive_name:this.state.select_username,\n        send_Id:this.state.user_id,\n        received_Id:this.state.received_id,\n        message:this.state.message,\n        time:time,\n        msg_Status:false,\n        count:0,\n        timestamp : firebase.database.ServerValue.TIMESTAMP\n      }\n      this.messageSend.push(newItem);\n      this.setState({ message: '' });\n\n      }\n\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\n\nasync allMassageList(id){\n       const s_id = id;\n       this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n            if ( message.val() != null){\n              var i;\n              var m_list = []\n              var rsm_list = Object.values(message.val());\n              for (i = 0; i < Object.keys(rsm_list).length; i++) {\n                if((this.state.user_id == rsm_list[i]['received_Id']) || (this.state.user_id == rsm_list[i]['send_Id'])){\n                      var re_data = rsm_list[i]\n                      m_list.push(re_data)\n                }\n               this.setState({msg_list:m_list});\n              }\n            }\n            else{\n                this.setState({ msg_list:[]});\n            }\n\n       });\n\n}\n\n\nasync allUserStatus(){\n\n       this.msg = this.userStatus = firebase.database().ref().child('messages/' + this.state.user_text)\n       .on('value', message => {\n            if ( message.val() != null){\n              var u_list = Object.values(message.val());\n              this.setState({user_status:u_list})\n\n              var i;\n              var ulist = this.state.user_list;\n                for (i = 0; i < Object.keys(ulist).length; i++) {\n                 var j;\n                 for (j = 0; j< Object.keys(u_list).length; j++) {\n                     if(ulist[i]['id'] == u_list[j]['user_Id']){\n                        if(u_list[i]['user_status'] == 'online'){\n                           ulist[i]['user_status'] = 'online';\n                        }\n                        else{\n                          ulist[i]['user_status'] = 'offline';\n                        }\n\n                     }\n                     else{\n                     }\n                 }\n              }\n           this.setState({u:ulist})\n\n\n            }\n            else{\n                this.setState({ user_status:[]});\n            }\n       });\n}\n\n\n myFunction = (e) => {\n    var input, filter, ul, p, a, i, txtValue, li, li1;\n    input = e.target.value\n    filter = input.value.toUpperCase();\n    ul = document.getElementById(\"my_search\");\n    li = ul.getElementsByTagName(\"div\");\n    for (i = 0; i < li.length; i++) {\n        a = li[i].getElementsByTagName(\"h5\")[0];\n        txtValue = a.textContent || a.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n            li[i].style.display = \"\";\n        } else {\n            li[i].style.display = \"none\";\n        }\n    }\n}\n\n\n\n\n\n  render() {\n\n\n    return (\n    <div className=\"messaging\">\n      <div className=\"inbox_msg\">\n        <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                    <div className=\"recent_heading\">\n                      <h4>Users</h4>\n                    </div>\n                    <div className=\"srch_bar\">\n                      <div className=\"stylish-input-group\">\n                        <input type=\"text\" className=\"search-bar\"  placeholder=\"Search\" id = \"Input\"\n                         onChange={this.myFunction}/ >\n                        </div>\n                    </div>\n              </div>\n\n\n          <div id=\"my_search\" >\n              {this.state.u.map((value, index) =>\n\n                <div  className=\"chat_list active_chat\" id=\"myUL\"  key={index} onClick={()=>this.selectUser(value.username, value.id)}>\n                  <div className=\"chat_people\" value={this.state.select_username}>\n                        <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"chat_img\" />\n\n                         <div>\n                             {value.user_status == 'online'?\n                                 <div className=\"chat_ib\">\n                                  <h5 value={value.id} >{value.username} {value.id}\n                                   <span className=\"online\"></span>\n                                   </h5>\n                                  <p>new user for sq dashboard</p>\n                                </div>:\n\n                                <div className=\"chat_ib\">\n                                  <h5 value={value.id}>{value.username} {value.id}\n                                   <span className=\"offline\"></span>\n                                   </h5>\n                                  <p>new user for sq dashboard</p>\n                                </div>\n                             }\n                       </div>\n\n                  </div>\n\n                </div>\n                )}\n            </div>\n\t  </div>\n\n\n\n        <div className=\"mesgs\">\n        <div className=\"alert alert-success  select_user\">\n          <strong style={{marginLeft:\"19px\"}}>{this.state.select_username}</strong >\n         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"hear_user\" />\n          </div>\n\n        {this.state.massage_box == true?\n          <div className=\"msg_history\">\n                  <div className=\"incoming_msg\">\n                         { this.state.msg_list.map((value, index) =>\n                              <div className=\"received_msg\">\n                              {this.state.sel_u_id == value.send_Id?\n                                <div className=\"received_withd_msg\">\n                                    <p key={index}>{value.message} </p>\n                                  <span className=\"time_date\">{value.sender_name} {value.time}</span>\n                                  </div>:null\n                                  }\n                                  {this.state.sel_u_id == value.received_Id?\n                                  <div className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                        <p key={index}>{value.message} </p>\n                                        <span className=\"time_date\">{value.sender_name}   {value.time}</span>\n                                        </div>\n                                  </div>:null\n                               }\n                              </div>\n                          )}\n                        </div>\n\n            </div>: <div style={{marginTop:'132px', color:'#bfd0d6'}}>\n                       <TextsmsOutlinedIcon style={{fontSize:'100px', marginLeft:'144px',color:'#bfd0d6'}}/>\n                       <h2 className=\"msg_history\" style={{color:'#bfd0d6'}}> Welcome Message Chatting</h2>\n                     </div>\n          }\n\n          <div className=\"type_msg\">\n            <div className=\"input_msg_write\">\n              <input type=\"text\"  ref='msg' className=\"write_msg\" placeholder=\"Type a message\"\n                                              value={this.state.message}\n                                              onKeyPress={this.handleKeyPress.bind(this)}\n                                              onChange={this.handleChange.bind(this)}/>\n                  <button className=\"msg_send_btn\" type=\"button\" onClick={this.handleSendMassage}>\n                   <SendOutlinedIcon />\n                   </button>\n            </div>\n          </div>\n\n        </div>\n  </div>\n</div>\n\n    );\n  }\n}\n\nexport default ChartRoom;\n"]},"metadata":{},"sourceType":"module"}
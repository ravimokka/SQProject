{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar NOTEDATA = [];\n/**\n * notifier\n * @param {String} text The person's user name\n * @param {Number} [delay=1000] The delay time in milliseconds\n *          or 'long' which provides 2000 ms delay time.\n * @return {undefined} this function does not return a value\n */\n\nmodule.exports = function (text, displayLength) {\n  if (NOTEDATA.indexOf(text) !== -1) return;\n  NOTEDATA.push(text);\n  var ts = 1000;\n  if (isNumeric(displayLength)) ts = displayLength;else if (displayLength === 'long') ts = 3000;\n  var notifierContainer = d3.select('body').selectAll('.plotly-notifier').data([0]);\n  notifierContainer.enter().append('div').classed('plotly-notifier', true);\n  var notes = notifierContainer.selectAll('.notifier-note').data(NOTEDATA);\n\n  function killNote(transition) {\n    transition.duration(700).style('opacity', 0).each('end', function (thisText) {\n      var thisIndex = NOTEDATA.indexOf(thisText);\n      if (thisIndex !== -1) NOTEDATA.splice(thisIndex, 1);\n      d3.select(this).remove();\n    });\n  }\n\n  notes.enter().append('div').classed('notifier-note', true).style('opacity', 0).each(function (thisText) {\n    var note = d3.select(this);\n    note.append('button').classed('notifier-close', true).html('&times;').on('click', function () {\n      note.transition().call(killNote);\n    });\n    var p = note.append('p');\n    var lines = thisText.split(/<br\\s*\\/?>/g);\n\n    for (var i = 0; i < lines.length; i++) {\n      if (i) p.append('br');\n      p.append('span').text(lines[i]);\n    }\n\n    note.transition().duration(700).style('opacity', 1).transition().delay(ts).call(killNote);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}
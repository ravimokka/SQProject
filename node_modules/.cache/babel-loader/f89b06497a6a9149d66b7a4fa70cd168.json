{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/OperationalCharts/DonutChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table, Select, DatePicker } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_name = \"Operational\";\nconst Option = Select.Option;\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n    if (val < 100000) {\n      return Math.round(val / 1000 * 10) / 10 + 'k';\n    } else if (val >= 1000000) {\n      return val = val / 1000000 + \"M\";\n    } else {\n      return val;\n    }\n  }\n}, {\n  dataKey: 'year',\n  min: 0,\n  max: 1\n}];\n\nclass DonutChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      console.log(date, dateString);\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      console.log(date, dateString);\n      this.setState({\n        start_date: dateString[0]\n      });\n      this.setState({\n        end_date: dateString[1]\n      });\n    };\n\n    this.handleChange = value => {\n      console.log(value);\n      this.setState({\n        select_unit: value\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.onChange_Xaxis = value => {\n      this.setState({\n        value_donut: \"\"\n      });\n      this.setState({\n        value_donut: value\n      });\n      this.DonutChartData({\n        Column: value,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        unit_value: this.state.select_unit,\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      Headers: [],\n      intHeader: [],\n      filter: [],\n      start_date: '',\n      end_date: '',\n      select_unit: [],\n      select_unit_list: '',\n      select_group: \"Group\",\n      select_amount_USD: \"Amount_USD\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_donut: \"Group\",\n      value_yl: \"Amount_USD\",\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      donut_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      donut_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_donutChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadAllHeaders();\n    this.loadIntHeaders();\n    this.loadAll_count_view();\n  }\n\n  async loadAllHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        Headers: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAll_count_view() {\n    this.setState({\n      table_columns: []\n    });\n    this.setState({\n      table_data: []\n    });\n    this.setState({\n      download_barChart_table: []\n    });\n    this.setState({\n      download_verticalChart_table: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    this.setState({\n      download_pieChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/load_count_api\", {\n      Column: 'Group',\n      Menu: Menu_name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      var i;\n      var keys_list = [];\n      var bar_value_list = [];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n          keys_list.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value_bar != value) {\n          bar_value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        var load_data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['name'] = key;\n          load_data_dict['item'] = key;\n          data_dict['value'] = value;\n          load_data_dict['count'] = value;\n          load_chart_list.push(data_dict);\n          load_donut_chart_list.push(load_data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        select_unit_list: keys_list\n      });\n      this.setState({\n        bar_data: load_chart_list\n      });\n      this.setState({\n        ve_bar_data: load_chart_list\n      });\n      this.setState({\n        sourceData: load_donut_chart_list\n      });\n      this.setState({\n        sourceData_donut: load_donut_chart_list\n      });\n      this.setState({\n        bar_table_columns: table_column_list\n      });\n      this.setState({\n        bar_table_data: table_data_list\n      });\n      this.setState({\n        vertical_table_columns: table_column_list\n      });\n      this.setState({\n        vertical_table_data: table_data_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        pie_table_columns: table_column_list\n      });\n      this.setState({\n        pie_table_data: table_data_list\n      });\n      this.setState({\n        download_barChart_table: [table_dict]\n      });\n      this.setState({\n        download_verticalChart_table: [table_dict]\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        download_pieChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //========================================== Donut Chart ================================================================\n\n\n  async DonutChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    this.setState({\n      donut_table_columns: []\n    });\n    this.setState({\n      donut_table_data: []\n    });\n    this.setState({\n      download_donutChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n          var column_dict = {};\n          column_dict['title'] = key;\n          column_dict['dataIndex'] = key;\n          column_dict['key'] = key;\n          table_data_dict[key] = value;\n          table_column_list.push(column_dict);\n        } else {}\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      this.setState({\n        donut_data: value_list\n      });\n      this.setState({\n        donut_table_columns: table_column_list\n      });\n      this.setState({\n        donut_table_data: table_data_list\n      });\n      this.setState({\n        download_donutChart_table: [table_dict]\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const children = [];\n    var x = this.state.select_unit_list;\n\n    for (let i = 0; i < x.length; i++) {\n      children.push(React.createElement(Option, {\n        key: x[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, x[i]));\n    }\n\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const donut_data = dv1.rows;\n    const scale_donut = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%'\n    }];\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_donut,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100\n      },\n      defaultValue: \"Group\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Xaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, this.state.Headers.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, value))), React.createElement(RangePicker, {\n      style: {\n        marginLeft: '5px'\n      },\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '12%',\n        marginLeft: '5px'\n      },\n      placeholder: \"Select Unit\",\n      defaultValue: [],\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, children), \",\", React.createElement(Button, {\n      type: \"primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Donut\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Donut\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Donut Chart TableData\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.donut_table_columns,\n      dataSource: this.state.donut_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_donutChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: donut_data,\n      scale: scale_donut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      innerRadius: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DonutChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/OperationalCharts/DonutChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Select","DatePicker","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","DataSet","require","Menu_name","Option","MonthPicker","RangePicker","WeekPicker","vertical_scale","dataKey","min","formatter","val","Math","round","max","DonutChart","Component","constructor","props","onBlur","console","log","onFocus","onSearch","onChangeDate","date","dateString","setState","start_date","end_date","handleChange","value","select_unit","onChange_Xaxis","value_donut","DonutChartData","Column","state","unit_value","Menu","Headers","intHeader","filter","select_unit_list","select_group","select_amount_USD","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","name","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","value_yl","table_columns","title","dataIndex","key","table_data","oNumber","donut_table_columns","donut_table_data","download_donutChart_table","firstname","lastname","email","componentWillMount","loadAllHeaders","loadIntHeaders","loadAll_count_view","promise","post","loginURL","status","data","d","dou","download_barChart_table","download_verticalChart_table","download_pieChart_table","table_dict","i","keys_list","bar_value_list","load_chart_list","load_donut_chart_list","ct_list1","table_column_list","table_data_list","table_data_dict","Object","keys","length","push","value_bar","data_dict","load_data_dict","column_dict","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","pie_table_columns","pie_table_data","loading","headers","append","options","method","body","JSON","stringify","value_list","chart_list","render","children","x","dv1","View","source","transform","type","field","dimension","as","rows","scale_donut","override","minHeight","width","input","option","toLowerCase","indexOf","map","index","marginLeft","fontSize","overflowY","stroke","lineWidth","item","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass DonutChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_donut : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\" , {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n\n//========================================== Donut Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_donut:\"\"})\n  this.setState({value_donut:value});\n  this.DonutChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync DonutChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n     this.setState({loading:false})\n    }\n\n}\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst donut_data = dv1.rows;\n\nconst scale_donut = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_donut}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n      <div id=\"chart\">\n        <Select\n               showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                   <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" style={{marginLeft:\"10px\"}}>\n                     <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_donutChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                 <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n\n                <Chart forceFit height={400} data={donut_data} scale={scale_donut}>\n                <Tooltip showTitle={false} />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n     </div>\n\n   </div>\n</Card>\n\n    );\n  }\n}\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}
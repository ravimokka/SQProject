{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\n\nconst DataSet = require(\"@antv/data-set\");\n\n{\n  /*\n  class Child2 extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    sistemas: [],\n    fromChild: 'empty',\n    x:'tes1234t'\n  };\n  }\n  update = (data) => {\n  this.setState({fromChild: data})\n  this.props.history.push(\"/test-react\");\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <h1>Parent Component </h1>\n      <p>data coming from child<b>: {this.state.fromChild} </b></p>\n     <Test update={this.update}  data={this.state.x}/>\n    </div>\n  );\n  }\n  }\n  export default Child2;\n  */\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update = data => {\n      this.setState({\n        fromChild: data\n      });\n      this.props.history.push(\"/test-react\");\n    };\n\n    this.Change = e => {\n      alert('hi');\n    };\n\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x: [{\n        id: 1,\n        name: 'Ford',\n        color: 'mokka raveendra'\n      }, {\n        id: 1,\n        name: 'Ford1',\n        color: 'mokka raveendra'\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"filter: \", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), this.state.x.map((val, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onChange: this.Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, val.name))));\n  }\n\n}\n\nexport default Child2;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/Test.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Icon","Progress","DataSet","require","Child2","constructor","props","update","data","setState","fromChild","history","push","Change","e","alert","state","sistemas","x","id","name","color","render","map","val","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAsD,MAAtD;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAMG;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BD;;AAIH,MAAMC,MAAN,SAAqBb,KAAK,CAACC,SAA3B,CAAqC;AACpCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAUlBC,MAVkB,GAURC,IAAD,IAAU;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd;AACA,WAAKF,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AAGD,KAfiB;;AAAA,SAiBlBC,MAjBkB,GAiBRC,CAAD,IAAO;AACdC,MAAAA,KAAK,CAAC,IAAD,CAAL;AAGD,KArBiB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXP,MAAAA,SAAS,EAAE,OAFA;AAGXQ,MAAAA,CAAC,EAAC,CAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAD,EAAiD;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,OAAd;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAAjD;AAHS,KAAb;AAMD;;AAeDC,EAAAA,MAAM,GAAG;AAEP,WAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,EAEQ,KAAKN,KAAL,CAAWE,CAAX,CAAaK,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAG,MAAA,QAAQ,EAAE,KAAKZ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BW,GAAG,CAACJ,IAA/B,CAFD,CADL,CAFR,CAFE;AAcD;;AAxCkC;;AA0CrC,eAAehB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Icon, Progress} from \"antd\";\n\nconst DataSet = require(\"@antv/data-set\");\n\n\n\n\n\n   {/*\n   class Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:'tes1234t'\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Parent Component </h1>\n        <p>data coming from child<b>: {this.state.fromChild} </b></p>\n       <Test update={this.update}  data={this.state.x}/>\n      </div>\n    );\n  }\n}\n\nexport default Child2;\n*/}\n\n\n\nclass Child2 extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n      sistemas: [],\n      fromChild: 'empty',\n      x:[{id: 1, name: 'Ford', color: 'mokka raveendra'},{id: 1, name: 'Ford1', color: 'mokka raveendra'}]\n    };\n\n  }\n\n  update = (data) => {\n    this.setState({fromChild: data})\n    this.props.history.push(\"/test-react\");\n\n\n  }\n\n  Change = (e) => {\n    alert('hi')\n\n\n  }\n\n  render() {\n\n    return (\n\n  <div>\n       filter: <input type='text' />\n        { this.state.x.map((val, index) =>\n               <div>\n\n                <p onChange={this.Change}>{val.name}</p>\n\n                    </div>\n                )}\n\n                  </div>\n    );\n  }\n}\nexport default Child2;\n\n\n"]},"metadata":{},"sourceType":"module"}
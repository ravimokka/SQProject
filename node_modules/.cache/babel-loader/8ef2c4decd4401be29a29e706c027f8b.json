{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Registry = require('../registry');\n\nvar Lib = require('../lib');\n\nvar helpers = require('./helpers');\n\nvar clonePlot = require('./cloneplot');\n\nvar toSVG = require('./tosvg');\n\nvar svgToImg = require('./svgtoimg');\n/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n */\n\n\nfunction toImage(gd, opts) {\n  // first clone the GD so we can operate in a clean environment\n  var ev = new EventEmitter();\n  var clone = clonePlot(gd, {\n    format: 'png'\n  });\n  var clonedGd = clone.gd; // put the cloned div somewhere off screen before attaching to DOM\n\n  clonedGd.style.position = 'absolute';\n  clonedGd.style.left = '-5000px';\n  document.body.appendChild(clonedGd);\n\n  function wait() {\n    var delay = helpers.getDelay(clonedGd._fullLayout);\n    setTimeout(function () {\n      var svg = toSVG(clonedGd);\n      var canvas = document.createElement('canvas');\n      canvas.id = Lib.randstr();\n      ev = svgToImg({\n        format: opts.format,\n        width: clonedGd._fullLayout.width,\n        height: clonedGd._fullLayout.height,\n        canvas: canvas,\n        emitter: ev,\n        svg: svg\n      });\n\n      ev.clean = function () {\n        if (clonedGd) document.body.removeChild(clonedGd);\n      };\n    }, delay);\n  }\n\n  var redrawFunc = helpers.getRedrawFunc(clonedGd);\n  Registry.call('plot', clonedGd, clone.data, clone.layout, clone.config).then(redrawFunc).then(wait).catch(function (err) {\n    ev.emit('error', err);\n  });\n  return ev;\n}\n\nmodule.exports = toImage;","map":null,"metadata":{},"sourceType":"script"}
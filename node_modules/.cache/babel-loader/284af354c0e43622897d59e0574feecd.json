{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/AreaChart.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table, Select, DatePicker } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader } from \"react-spinners\";\nimport FinancialCharts from \"./FinancialCharts\";\nconst MonthPicker = DatePicker.MonthPicker,\n      RangePicker = DatePicker.RangePicker,\n      WeekPicker = DatePicker.WeekPicker;\nconst Option = Select.Option;\n\nconst DataSet = require('@antv/data-set');\n\nconst Menu_Name = \"Financial\";\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      console.log(date, dateString);\n      this.setState({\n        start_date: dateString[0]\n      });\n      this.setState({\n        end_date: dateString[1]\n      });\n    };\n\n    this.handleChange = value => {\n      console.log(value);\n      this.setState({\n        select_unit: value\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.onChange_Xaxis = value => {\n      this.setState({\n        value_ax: \"\"\n      });\n      this.setState({\n        value_ax: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.onChange_Yaxis = value => {\n      this.setState({\n        value_ay: \"\"\n      });\n      this.setState({\n        value_ay: value\n      });\n      console.log(`selected ${value}`);\n    };\n\n    this.handleSubmitOK = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.StackedAreaChartData({\n        A: this.state.value_ax,\n        B: this.state.value_ax,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        unit_value: this.state.select_unit,\n        Menu: Menu_name\n      });\n    };\n\n    this.state = {\n      area_chart_options: {\n        chart: {\n          stacked: true\n        },\n        colors: ['#008FFB', '#00E396', '#CED4DC'],\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true\n        },\n        xaxis: {\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"10M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"100M\";\n              } else if (val >= 1000000000) {\n                return val = val / 1000000000 + \"1B\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        yaxis: {\n          labels: {\n            formatter: function (val) {\n              if (val < 100000) {\n                return Math.round(val / 1000 * 10) / 10 + 'k';\n              } else if (val >= 1000000) {\n                return val = val / 1000000 + \"M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"10M\";\n              } else if (val >= 10000000) {\n                return val = val / 10000000 + \"100M\";\n              } else if (val >= 1000000000) {\n                return val = val / 1000000000 + \"1B\";\n              } else {\n                return val;\n              }\n            }\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            opacityFrom: 0.6,\n            opacityTo: 0.8\n          }\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'left'\n        }\n      },\n      area_chart_series: [{\n        name: 'series1',\n        data: [31, 40]\n      }, {\n        name: 'series1',\n        data: [35, 19]\n      }],\n      Headers: [],\n      intHeader: [],\n      filter: [],\n      start_date: '',\n      end_date: '',\n      select_unit: [],\n      select_unit_list: '',\n      select_group: \"Group\",\n      select_amount: \"Amount\",\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      bar_data: [],\n      ve_bar_data: [],\n      line_data: [{\n        name: \"\",\n        'A': 1,\n        'B': 12\n      }],\n      field_list: [\"A\", \"B\"],\n      chartData: [],\n      sourceData: [],\n      line_chart_source_data: [{\n        name: 'A',\n        value: 13000000\n      }],\n      sourceData_donut: [],\n      value_ax: \"Group\",\n      value_ay: \"Amount\",\n      loading: true,\n      area_display: false,\n      table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      load_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      load_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      area_table_columns: [{\n        title: 'Order Number',\n        dataIndex: 'oNumber',\n        key: 'oNumber'\n      }],\n      area_table_data: [{\n        key: '1',\n        oNumber: 'DVO524'\n      }],\n      download_areaChart_table: [{\n        firstname: \"Ravi\",\n        lastname: \"Tomi\",\n        email: \"ah@smthing.co.com\"\n      }]\n    };\n  } // ============================= Loading all charts ====================================================================\n\n\n  componentWillMount() {\n    this.loadHeaders();\n    this.loadIntHeaders();\n    this.loadAreaChartData({\n      A: \"Group\",\n      B: \"Amount\",\n      Menu: Menu_Name\n    });\n  }\n\n  async loadHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/header_api\", {\n      Menu: Menu_Name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        Headers: data\n      });\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {\n      Menu: Menu_Name\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      load_table_columns: []\n    });\n    this.setState({\n      load_table_data: []\n    });\n    this.setState({\n      line_data: []\n    });\n    this.setState({\n      field_list: []\n    });\n    this.setState({\n      line_chart_source_data: []\n    });\n    this.setState({\n      chart_data: []\n    });\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_lineChart_table: []\n    });\n    this.setState({\n      download_group_barChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data];\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var line_value_list = [];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var area_list = [];\n      var area_chart_data = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        line_value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['value'] = value;\n        line_chart_list.push(data_dict);\n        var load_data_dict = {};\n        load_data_dict['name'] = key;\n        load_data_dict['data'] = [value];\n        load_bar_chart_list.push(load_data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n        var area_dict = {};\n        area_list.push(value);\n        area_dict['name'] = key;\n        area_dict['data'] = area_list;\n        area_chart_data.push(area_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        select_unit_list: keys_list\n      });\n      this.setState({\n        line_chart_source_data: line_chart_list\n      });\n      this.setState({\n        field_list: keys_list\n      });\n      this.setState({\n        chart_data: load_bar_chart_list\n      });\n      this.setState({\n        area_chart_series: area_chart_data\n      });\n      this.setState({\n        line_table_columns: table_column_list\n      });\n      this.setState({\n        line_table_data: table_data_list\n      });\n      this.setState({\n        Gbar_table_columns: table_column_list\n      });\n      this.setState({\n        Gbar_table_data: table_data_list\n      });\n      this.setState({\n        mix_table_columns: table_column_list\n      });\n      this.setState({\n        mix_table_data: table_data_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_lineChart_table: table_dict\n      });\n      this.setState({\n        download_group_barChart_table: table_dict\n      });\n      this.setState({\n        download_areaChart_table: table_dict\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  } //==========================================================Stacked Area chart==========================================\n\n\n  async StackedAreaChartData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      area_chart_series: []\n    });\n    this.setState({\n      download_areaChart_table: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/dataView_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n      var SArea_chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n        value_list.push(value);\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = value_list;\n        SArea_chart_list.push(data_dict);\n        var column_dict = {};\n        column_dict['title'] = key;\n        column_dict['dataIndex'] = key;\n        column_dict['key'] = key;\n        table_data_dict[key] = value;\n        table_column_list.push(column_dict);\n      }\n\n      table_data_list.push(table_data_dict);\n      this.setState({\n        select_unit_list: keys_list\n      });\n      this.setState({\n        area_chart_series: SArea_chart_list\n      });\n      this.setState({\n        area_table_columns: table_column_list\n      });\n      this.setState({\n        area_table_data: table_data_list\n      });\n      this.setState({\n        download_areaChart_table: [table_dict]\n      });\n      this.setState({\n        area_display: true\n      });\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const children = [];\n    var x = this.state.select_unit_list;\n\n    for (let i = 0; i < x.length; i++) {\n      children.push(React.createElement(Option, {\n        key: x[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, x[i]));\n    }\n\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    const dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields: this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n    const bar_dv = new DataSet.View().source(this.state.bar_data);\n    bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const basic_bar_data = bar_dv.rows;\n    const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n      formatter: function formatter(val) {\n        if (val < 100000) {\n          return Math.round(val / 1000 * 10) / 10 + 'k';\n        } else if (val >= 1000000) {\n          return val = val / 1000000 + \"M\";\n        } else {\n          return val;\n        }\n      }\n    }, {\n      dataKey: 'year',\n      min: 0,\n      max: 1\n    }];\n    const ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\n    ve_bar_dv.transform({\n      type: 'sort',\n\n      callback(a, b) {\n        return a.value - b.value > 0;\n      }\n\n    });\n    const vertical_bar_data = ve_bar_dv.rows;\n    const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return React.createElement(Card, {\n      title: this.state.value_ax,\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100\n      },\n      defaultValue: \"Group\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Xaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, this.state.Headers.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, value))), React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 100,\n        marginLeft: '5px'\n      },\n      defaultValue: \"Amount\",\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange_Yaxis,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, this.state.intHeader.map((value, index) => React.createElement(Option, {\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, value))), React.createElement(RangePicker, {\n      style: {\n        marginLeft: '5px'\n      },\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }), React.createElement(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '12%',\n        marginLeft: '5px'\n      },\n      placeholder: \"Select Unit\",\n      defaultValue: [],\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, children), \",\", React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleSubmitOK,\n      style: {\n        marginLeft: \"10px\"\n      },\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(Button, {\n      type: \"primary\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal_Stacked\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"table\",\n      style: {\n        fontSize: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"myModal_Stacked\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, \"Stacked Chart Table Data\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: this.state.area_table_columns,\n      dataSource: this.state.area_table_data,\n      style: {\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      \"data-dismiss\": \"modal\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, \"Close\"), React.createElement(CSVLink, {\n      data: this.state.download_areaChart_table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      type: \"download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }), \" Download \")), \";\")))), React.createElement(RingLoader, {\n      css: override,\n      size: 150 // or 150px\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }), this.state.area_display == true ? React.createElement(ReactApexChart, {\n      options: this.state.area_chart_options,\n      series: this.state.area_chart_series,\n      type: \"area\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/FinancialCharts/AreaChart.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","Line","Bar","Point","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Select","DatePicker","Host","axios","ReactApexChart","$","Popper","CSVLink","css","RingLoader","FinancialCharts","MonthPicker","RangePicker","WeekPicker","Option","DataSet","require","Menu_Name","AreaChart","Component","constructor","props","onBlur","console","log","onFocus","onSearch","val","onChangeDate","date","dateString","setState","start_date","end_date","handleChange","value","select_unit","onChange_Xaxis","value_ax","onChange_Yaxis","value_ay","handleSubmitOK","e","preventDefault","loading","StackedAreaChartData","A","state","B","unit_value","Menu","Menu_name","area_chart_options","chart","stacked","colors","dataLabels","enabled","stroke","show","xaxis","labels","formatter","Math","round","yaxis","fill","type","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","area_chart_series","name","data","Headers","intHeader","filter","select_unit_list","select_group","select_amount","chart_data","donut_data","pie_data","bar_data","ve_bar_data","line_data","field_list","chartData","sourceData","line_chart_source_data","sourceData_donut","area_display","table_columns","title","dataIndex","key","table_data","oNumber","load_table_columns","load_table_data","area_table_columns","area_table_data","download_areaChart_table","firstname","lastname","email","componentWillMount","loadHeaders","loadIntHeaders","loadAreaChartData","promise","post","loginURL","status","d","dou","headers","append","options","method","body","JSON","stringify","download_lineChart_table","download_group_barChart_table","l_data","table_dict","i","keys_list","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","Object","keys","length","push","data_dict","load_data_dict","column_dict","area_dict","line_table_columns","line_table_data","Gbar_table_columns","Gbar_table_data","mix_table_columns","mix_table_data","value_list","SArea_chart_list","render","children","x","dv","View","source","transform","field","dimension","as","align","rows","dv1","don_data","dv12","fields","data1233","bar_dv","callback","a","b","basic_bar_data","line_chart_source_scale","dataKey","min","max","ve_bar_dv","vertical_bar_data","override","minHeight","width","input","option","toLowerCase","indexOf","map","index","marginLeft","fontSize","overflowY"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyDC,GAAzD,EAA8DC,KAA9D,QAA0E,aAA1E;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,IAAjD,EAAwDC,KAAxD,EAA+DC,KAA/D,EAAsEC,MAAtE,EAA8EC,UAA9E,QAA+F,MAA/F;AACA,SAASC,IAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,sCAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,wCAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,UAAT,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;MACQC,W,GAAyCV,U,CAAzCU,W;MAAaC,W,GAA4BX,U,CAA5BW,W;MAAaC,U,GAAeZ,U,CAAfY,U;MAC1BC,M,GAAWd,M,CAAXc,M;;AAER,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAG,WAAlB;;AAGA,MAAMC,SAAN,SAAwB5B,KAAK,CAAC6B,SAA9B,CAAwC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAiSpBC,MAjSoB,GAiSX,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAnSmB;;AAAA,SAsSpBC,OAtSoB,GAsSV,MAAM;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAxSmB;;AAAA,SA0SpBE,QA1SoB,GA0SRC,GAAD,IAAS;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,GAAvB;AACJ,KA5SmB;;AAAA,SA+SpBC,YA/SoB,GA+SL,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACnCP,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAAkBC,UAAlB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAACF,UAAU,CAAC,CAAD;AAAtB,OAAd;AACA,WAAKC,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAACH,UAAU,CAAC,CAAD;AAApB,OAAd;AACD,KAnTmB;;AAAA,SAuTpBI,YAvToB,GAuTJC,KAAD,IAAW;AAC1BZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACC,WAAKJ,QAAL,CAAc;AAACK,QAAAA,WAAW,EAACD;AAAb,OAAd;AACC,WAAKJ,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KA3TmB;;AAAA,SA8TpBE,cA9ToB,GA8THF,KAAD,IAAW;AACzB,WAAKJ,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAC;AAAV,OAAd;AACE,WAAKP,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAACH;AAAV,OAAd;AACFZ,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWW,KAAM,EAA9B;AACD,KAlUmB;;AAAA,SAoUpBI,cApUoB,GAoUHJ,KAAD,IAAW;AACzB,WAAKJ,QAAL,CAAc;AAACS,QAAAA,QAAQ,EAAC;AAAV,OAAd;AACA,WAAKT,QAAL,CAAc;AAACS,QAAAA,QAAQ,EAACL;AAAV,OAAd;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWW,KAAM,EAA9B;AACD,KAxUmB;;AAAA,SA6UpBM,cA7UoB,GA6UFC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKZ,QAAL,CAAc;AAACa,QAAAA,OAAO,EAAC;AAAT,OAAd;AACC,WAAKC,oBAAL,CACI;AAACC,QAAAA,CAAC,EAAC,KAAKC,KAAL,CAAWT,QAAd;AAAwBU,QAAAA,CAAC,EAAC,KAAKD,KAAL,CAAWT,QAArC;AACGN,QAAAA,UAAU,EAAC,KAAKe,KAAL,CAAWf,UADzB;AACqCC,QAAAA,QAAQ,EAAC,KAAKc,KAAL,CAAWd,QADzD;AAEGgB,QAAAA,UAAU,EAAC,KAAKF,KAAL,CAAWX,WAFzB;AAEuCc,QAAAA,IAAI,EAACC;AAF5C,OADJ;AAKF,KArViB;;AAEjB,SAAKJ,KAAL,GAAa;AAEhBK,MAAAA,kBAAkB,EAAE;AACRC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SADC;AAKRC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CALA;AAMRC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SANJ;AASRC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA,SATA;AAaRC,QAAAA,KAAK,EAAE;AAEHC,UAAAA,MAAM,EAAE;AACJC,YAAAA,SAAS,EAAE,UAASnC,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOoC,IAAI,CAACC,KAAL,CAAYrC,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKA,IAAIA,GAAG,IAAI,QAAX,EAAoB;AAEzB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,QAAL,GAAe,KAA1B;AAEC,eAJI,MAKA,IAAIA,GAAG,IAAI,QAAX,EAAoB;AAEzB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,QAAL,GAAe,MAA1B;AAEC,eAJI,MAMA,IAAIA,GAAG,IAAI,UAAX,EAAsB;AAE3B,uBAAOA,GAAG,GAAEA,GAAG,GAAC,UAAL,GAAiB,IAA5B;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AA9BG;AAFL,SAbC;AAgDPsC,QAAAA,KAAK,EAAE;AAENJ,UAAAA,MAAM,EAAE;AACFC,YAAAA,SAAS,EAAE,UAASnC,GAAT,EAAc;AACtB,kBAAIA,GAAG,GAAG,MAAV,EAAkB;AACL,uBAAOoC,IAAI,CAACC,KAAL,CAAYrC,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,eAFV,MAGM,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,eAJI,MAKA,IAAIA,GAAG,IAAI,QAAX,EAAoB;AAEzB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,QAAL,GAAe,KAA1B;AAEC,eAJI,MAKA,IAAIA,GAAG,IAAI,QAAX,EAAoB;AAEzB,uBAAOA,GAAG,GAAEA,GAAG,GAAC,QAAL,GAAe,MAA1B;AAEC,eAJI,MAMA,IAAIA,GAAG,IAAI,UAAX,EAAsB;AAE3B,uBAAOA,GAAG,GAAEA,GAAG,GAAC,UAAL,GAAiB,IAA5B;AAEC,eAJI,MAKC;AACM,uBAAOA,GAAP;AACH;AAEZ;AA9BC;AAFF,SAhDA;AAmFRuC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,UADF;AAEJC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,WAAW,EAAE,GADL;AAERC,YAAAA,SAAS,EAAE;AAFH;AAFN,SAnFE;AA0FRC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE,QADJ;AAENC,UAAAA,eAAe,EAAE;AAFX;AA1FA,OAFJ;AAmGhBC,MAAAA,iBAAiB,EAAC,CAAC;AACPC,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAFC,OAAD,EAIR;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAFR,OAJQ,CAnGF;AA4GXC,MAAAA,OAAO,EAAC,EA5GG;AA6GXC,MAAAA,SAAS,EAAC,EA7GC;AA8GXC,MAAAA,MAAM,EAAC,EA9GI;AA+GX/C,MAAAA,UAAU,EAAC,EA/GA;AAgHXC,MAAAA,QAAQ,EAAC,EAhHE;AAiHXG,MAAAA,WAAW,EAAC,EAjHD;AAkHX4C,MAAAA,gBAAgB,EAAC,EAlHN;AAmHXC,MAAAA,YAAY,EAAC,OAnHF;AAoHXC,MAAAA,aAAa,EAAC,QApHH;AAqHXC,MAAAA,UAAU,EAAC,EArHA;AAsHXC,MAAAA,UAAU,EAAC,EAtHA;AAuHXC,MAAAA,QAAQ,EAAC,EAvHE;AAwHXC,MAAAA,QAAQ,EAAC,EAxHE;AAyHXC,MAAAA,WAAW,EAAC,EAzHD;AA0HXC,MAAAA,SAAS,EAAC,CAAC;AAACb,QAAAA,IAAI,EAAC,EAAN;AAAU,aAAI,CAAd;AAAiB,aAAI;AAArB,OAAD,CA1HC;AA2HXc,MAAAA,UAAU,EAAC,CAAC,GAAD,EAAK,GAAL,CA3HA;AA4HXC,MAAAA,SAAS,EAAE,EA5HA;AA6HXC,MAAAA,UAAU,EAAE,EA7HD;AA8HXC,MAAAA,sBAAsB,EAAC,CAAC;AAACjB,QAAAA,IAAI,EAAE,GAAP;AAAYxC,QAAAA,KAAK,EAAE;AAAnB,OAAD,CA9HZ;AA+HX0D,MAAAA,gBAAgB,EAAC,EA/HN;AAiIXvD,MAAAA,QAAQ,EAAG,OAjIA;AAkIXE,MAAAA,QAAQ,EAAG,QAlIA;AAmIXI,MAAAA,OAAO,EAAC,IAnIG;AAoIXkD,MAAAA,YAAY,EAAC,KApIF;AAqIXC,MAAAA,aAAa,EAAG,CAAC;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAwBC,QAAAA,SAAS,EAAE,SAAnC;AAA8CC,QAAAA,GAAG,EAAE;AAAnD,OAAD,CArIL;AAsIXC,MAAAA,UAAU,EAAG,CAAC;AAAED,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAD,CAtIF;AAyIXC,MAAAA,kBAAkB,EAAG,CAAC;AAAEL,QAAAA,KAAK,EAAE,cAAT;AAAwBC,QAAAA,SAAS,EAAE,SAAnC;AAA8CC,QAAAA,GAAG,EAAE;AAAnD,OAAD,CAzIV;AA0IXI,MAAAA,eAAe,EAAG,CAAC;AAAEJ,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAD,CA1IP;AA6IXG,MAAAA,kBAAkB,EAAG,CAAC;AAAEP,QAAAA,KAAK,EAAE,cAAT;AAAwBC,QAAAA,SAAS,EAAE,SAAnC;AAA8CC,QAAAA,GAAG,EAAE;AAAnD,OAAD,CA7IV;AA8IXM,MAAAA,eAAe,EAAG,CAAC;AAAEN,QAAAA,GAAG,EAAE,GAAP;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAD,CA9IP;AAgJXK,MAAAA,wBAAwB,EAAE,CAAC;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,QAAQ,EAAE,MAA/B;AAAuCC,QAAAA,KAAK,EAAE;AAA9C,OAAD;AAhJf,KAAb;AAmJD,GAvJsC,CA0JxC;;;AAEAC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,WAAL;AACC,SAAKC,cAAL;AACA,SAAKC,iBAAL,CAAuB;AAAClE,MAAAA,CAAC,EAAC,OAAH;AAAYE,MAAAA,CAAC,EAAC,QAAd;AAAwBE,MAAAA,IAAI,EAACjC;AAA7B,KAAvB;AACF;;AAEF,QAAM6F,WAAN,GACC;AACE,UAAMG,OAAO,GAAG,MAAM9G,KAAK,CAAC+G,IAAN,CAAWhH,IAAI,CAACiH,QAAL,GAAe,aAA1B,EAAyC;AAACjE,MAAAA,IAAI,EAACjC;AAAN,KAAzC,CAAtB;AACA,UAAMmG,MAAM,GAAGH,OAAO,CAACG,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMxC,IAAI,GAAGqC,OAAO,CAACrC,IAAR,CAAaA,IAA1B;AACArD,MAAAA,OAAO,CAACC,GAAR,CAAYoD,IAAZ;AACA,WAAK7C,QAAL,CAAc;AAAC8C,QAAAA,OAAO,EAACD;AAAT,OAAd;AACD;AACF;;AAEH,QAAMmC,cAAN,GACE;AACE,UAAME,OAAO,GAAG,MAAM9G,KAAK,CAAC+G,IAAN,CAAWhH,IAAI,CAACiH,QAAL,GAAe,iBAA1B,EAA4C;AAACjE,MAAAA,IAAI,EAACjC;AAAN,KAA5C,CAAtB;AACA,UAAMmG,MAAM,GAAGH,OAAO,CAACG,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMxC,IAAI,GAAGqC,OAAO,CAACrC,IAAR,CAAaA,IAA1B;AACArD,MAAAA,OAAO,CAACC,GAAR,CAAYoD,IAAZ;AACA,WAAK7C,QAAL,CAAc;AAAC+C,QAAAA,SAAS,EAACF;AAAX,OAAd;AACA,YAAMyC,CAAC,GAAG,CAAC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAD,EAAgC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAhC,CAAV;AACA,YAAMC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAZ;AACA,WAAKvF,QAAL,CAAc;AAACqD,QAAAA,UAAU,EAACkC;AAAZ,OAAd;AACA,WAAKvF,QAAL,CAAc;AAACoD,QAAAA,UAAU,EAACkC;AAAZ,OAAd;AACC9F,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKuB,KAAL,CAAWoC,UAAvB;AAEF;AACF;;AAEH,QAAM6B,iBAAN,CAAwBpC,IAAxB,EAA6B;AAEzB,UAAM2C,OAAO,GAAI,IAAI1C,OAAJ,EAAjB;AACA0C,IAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBH,MAAAA,OAFgB;AAGhBI,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAejD,IAAf;AAHW,KAAhB;AAKA,SAAK7C,QAAL,CAAc;AAACsE,MAAAA,kBAAkB,EAAG;AAAtB,KAAd;AACA,SAAKtE,QAAL,CAAc;AAACuE,MAAAA,eAAe,EAAG;AAAnB,KAAd;AACA,SAAKvE,QAAL,CAAc;AAACyD,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAKzD,QAAL,CAAc;AAAC0D,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,SAAK1D,QAAL,CAAc;AAAC6D,MAAAA,sBAAsB,EAAG;AAA1B,KAAd;AACA,SAAK7D,QAAL,CAAc;AAACoD,MAAAA,UAAU,EAAC;AAAZ,KAAd;AACA,SAAKpD,QAAL,CAAc;AAAC2C,MAAAA,iBAAiB,EAAC;AAAnB,KAAd;AAEC,SAAK3C,QAAL,CAAc;AAAC+F,MAAAA,wBAAwB,EAAC;AAA1B,KAAd;AACA,SAAK/F,QAAL,CAAc;AAACgG,MAAAA,6BAA6B,EAAC;AAA/B,KAAd;AACJ,UAAMd,OAAO,GAAG,MAAM9G,KAAK,CAAC+G,IAAN,CAAWhH,IAAI,CAACiH,QAAL,GAAe,eAA1B,EAA2CM,OAA3C,CAAtB;AACG,UAAML,MAAM,GAAGH,OAAO,CAACG,MAAvB;;AAEA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMxC,IAAI,GAAGqC,OAAO,CAACrC,IAAR,CAAaA,IAA1B;AACA,UAAIoD,MAAM,GAAG,CAACpD,IAAD,CAAb;AACA,UAAIqD,UAAU,GAAG,CAACrD,IAAD,CAAjB;AACA,WAAK7C,QAAL,CAAc6C,IAAd;AACA,UAAIsD,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,eAAe,GAAE,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACC,UAAIC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACD,WAAKT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,MAAM,CAACC,IAAP,CAAYjE,IAAZ,EAAkBkE,MAAlC,EAA0CZ,CAAC,EAA3C,EAA+C;AACzC3G,QAAAA,OAAO,CAACC,GAAR,CAAYoD,IAAI,CAACsD,CAAD,CAAhB;AACA,YAAIhC,GAAG,GAAG0C,MAAM,CAACC,IAAP,CAAYjE,IAAZ,EAAkBsD,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACY,IAAV,CAAe7C,GAAf;AACA,YAAI/D,KAAK,GAAGyC,IAAI,CAACsB,GAAD,CAAhB;AACAkC,QAAAA,eAAe,CAACW,IAAhB,CAAqB5G,KAArB;AACA,YAAI6G,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB9C,GAAlB;AACA8C,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAmB7G,KAAnB;AACAkG,QAAAA,eAAe,CAACU,IAAhB,CAAqBC,SAArB;AACA,YAAIC,cAAc,GAAG,EAArB;AACAA,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB/C,GAAvB;AACA+C,QAAAA,cAAc,CAAC,MAAD,CAAd,GAAuB,CAAC9G,KAAD,CAAvB;AACAmG,QAAAA,mBAAmB,CAACS,IAApB,CAAyBE,cAAzB;AACA,YAAIC,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAAC,OAAD,CAAX,GAAsBhD,GAAtB;AACAgD,QAAAA,WAAW,CAAC,WAAD,CAAX,GAA0BhD,GAA1B;AACAgD,QAAAA,WAAW,CAAC,KAAD,CAAX,GAAoBhD,GAApB;AACAuC,QAAAA,eAAe,CAACvC,GAAD,CAAf,GAAuB/D,KAAvB;AACAoG,QAAAA,iBAAiB,CAACQ,IAAlB,CAAuBG,WAAvB;AAEA,YAAIC,SAAS,GAAG,EAAhB;AACAT,QAAAA,SAAS,CAACK,IAAV,CAAe5G,KAAf;AACAgH,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkBjD,GAAlB;AACAiD,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBT,SAApB;AACAC,QAAAA,eAAe,CAACI,IAAhB,CAAqBI,SAArB;AAGH;;AACFX,MAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AAED,WAAK1G,QAAL,CAAc;AAACiD,QAAAA,gBAAgB,EAACmD;AAAlB,OAAd;AACA,WAAKpG,QAAL,CAAc;AAAC6D,QAAAA,sBAAsB,EAACyC;AAAxB,OAAd;AACA,WAAKtG,QAAL,CAAc;AAAC0D,QAAAA,UAAU,EAAC0C;AAAZ,OAAd;AACA,WAAKpG,QAAL,CAAc;AAACoD,QAAAA,UAAU,EAACmD;AAAZ,OAAd;AACA,WAAKvG,QAAL,CAAc;AAAC2C,QAAAA,iBAAiB,EAACiE;AAAnB,OAAd;AAGA,WAAK5G,QAAL,CAAc;AAACqH,QAAAA,kBAAkB,EAACb;AAApB,OAAd;AACA,WAAKxG,QAAL,CAAc;AAACsH,QAAAA,eAAe,EAACb;AAAjB,OAAd;AAEC,WAAKzG,QAAL,CAAc;AAACuH,QAAAA,kBAAkB,EAACf;AAApB,OAAd;AACD,WAAKxG,QAAL,CAAc;AAACwH,QAAAA,eAAe,EAACf;AAAjB,OAAd;AAEC,WAAKzG,QAAL,CAAc;AAACyH,QAAAA,iBAAiB,EAACjB;AAAnB,OAAd;AACD,WAAKxG,QAAL,CAAc;AAAC0H,QAAAA,cAAc,EAACjB;AAAhB,OAAd;AAEC,WAAKzG,QAAL,CAAc;AAACwE,QAAAA,kBAAkB,EAACgC;AAApB,OAAd;AACD,WAAKxG,QAAL,CAAc;AAACyE,QAAAA,eAAe,EAACgC;AAAjB,OAAd;AAGC,WAAKzG,QAAL,CAAc;AAAC+F,QAAAA,wBAAwB,EAACG;AAA1B,OAAd;AACA,WAAKlG,QAAL,CAAc;AAACgG,QAAAA,6BAA6B,EAACE;AAA/B,OAAd;AACA,WAAKlG,QAAL,CAAc;AAAC0E,QAAAA,wBAAwB,EAACwB;AAA1B,OAAd;AACA,WAAKlG,QAAL,CAAc;AAAC+D,QAAAA,YAAY,EAAC;AAAd,OAAd;AACC,WAAK/D,QAAL,CAAc;AAACa,QAAAA,OAAO,EAAC;AAAT,OAAd;AACN;AACD,GA/RuC,CAiSxC;;;AAwDA,QAAMC,oBAAN,CAA2B+B,IAA3B,EAAgC;AAE5B,UAAM2C,OAAO,GAAI,IAAI1C,OAAJ,EAAjB;AACA0C,IAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMC,OAAO,GAAG;AAChBC,MAAAA,MAAM,EAAG,MADO;AAEhBH,MAAAA,OAFgB;AAGhBI,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAejD,IAAf;AAHW,KAAhB;AAKA,SAAK7C,QAAL,CAAc;AAAC2C,MAAAA,iBAAiB,EAAG;AAArB,KAAd;AACA,SAAK3C,QAAL,CAAc;AAAC0E,MAAAA,wBAAwB,EAAG;AAA5B,KAAd;AAEH,UAAMQ,OAAO,GAAG,MAAM9G,KAAK,CAAC+G,IAAN,CAAWhH,IAAI,CAACiH,QAAL,GAAe,eAA1B,EAA2CM,OAA3C,CAAtB;AACG,UAAML,MAAM,GAAGH,OAAO,CAACG,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMxC,IAAI,GAAGqC,OAAO,CAACrC,IAAR,CAAaA,IAA1B;AACA,UAAIqD,UAAU,GAAGrD,IAAjB;AACA,WAAK7C,QAAL,CAAc6C,IAAd;AACA,UAAIsD,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIuB,UAAU,GAAE,EAAhB;AAEA,UAAInB,iBAAiB,GAAG,EAAxB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;AAEA,UAAIkB,gBAAgB,GAAG,EAAvB;;AACA,WAAKzB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,MAAM,CAACC,IAAP,CAAYjE,IAAZ,EAAkBkE,MAAlC,EAA0CZ,CAAC,EAA3C,EAA+C;AACzC3G,QAAAA,OAAO,CAACC,GAAR,CAAYoD,IAAI,CAACsD,CAAD,CAAhB;AACA,YAAIhC,GAAG,GAAG0C,MAAM,CAACC,IAAP,CAAYjE,IAAZ,EAAkBsD,CAAlB,CAAV;AACAC,QAAAA,SAAS,CAACY,IAAV,CAAe7C,GAAf;AACA,YAAI/D,KAAK,GAAGyC,IAAI,CAACsB,GAAD,CAAhB;AACAwD,QAAAA,UAAU,CAACX,IAAX,CAAgB5G,KAAhB;AACA,YAAI6G,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB9C,GAAlB;AACA8C,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkBU,UAAlB;AACAC,QAAAA,gBAAgB,CAACZ,IAAjB,CAAsBC,SAAtB;AAEA,YAAIE,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAAC,OAAD,CAAX,GAAsBhD,GAAtB;AACAgD,QAAAA,WAAW,CAAC,WAAD,CAAX,GAA0BhD,GAA1B;AACAgD,QAAAA,WAAW,CAAC,KAAD,CAAX,GAAoBhD,GAApB;AACAuC,QAAAA,eAAe,CAACvC,GAAD,CAAf,GAAuB/D,KAAvB;AACAoG,QAAAA,iBAAiB,CAACQ,IAAlB,CAAuBG,WAAvB;AAEH;;AACDV,MAAAA,eAAe,CAACO,IAAhB,CAAqBN,eAArB;AACA,WAAK1G,QAAL,CAAc;AAACiD,QAAAA,gBAAgB,EAACmD;AAAlB,OAAd;AACF,WAAKpG,QAAL,CAAc;AAAC2C,QAAAA,iBAAiB,EAACiF;AAAnB,OAAd;AAEC,WAAK5H,QAAL,CAAc;AAACwE,QAAAA,kBAAkB,EAACgC;AAApB,OAAd;AACD,WAAKxG,QAAL,CAAc;AAACyE,QAAAA,eAAe,EAACgC;AAAjB,OAAd;AAGA,WAAKzG,QAAL,CAAc;AAAC0E,QAAAA,wBAAwB,EAAG,CAACwB,UAAD;AAA5B,OAAd;AACA,WAAKlG,QAAL,CAAc;AAAC+D,QAAAA,YAAY,EAAC;AAAd,OAAd;AACE,WAAK/D,QAAL,CAAc;AAACa,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH;AAEJ;;AAEDgH,EAAAA,MAAM,GAAG;AAET,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,CAAC,GAAG,KAAK/G,KAAL,CAAWiC,gBAAnB;;AACA,SAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,CAAC,CAAChB,MAAtB,EAA8BZ,CAAC,EAA/B,EAAmC;AACjC2B,MAAAA,QAAQ,CAACd,IAAT,CAAc,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEe,CAAC,CAAC5B,CAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB4B,CAAC,CAAC5B,CAAD,CAArB,CAAd;AACD;;AAED,UAAM6B,EAAE,GAAG,IAAIhJ,OAAO,CAACiJ,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKlH,KAAL,CAAW4C,UAArC,CAAX;AACAoE,IAAAA,EAAE,CAACG,SAAH,CAAa;AACX/F,MAAAA,IAAI,EAAE,SADK;AAEXgG,MAAAA,KAAK,EAAE,OAFI;AAGXC,MAAAA,SAAS,EAAE,MAHA;AAIXC,MAAAA,EAAE,EAAE,SAJO;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAb;AAOA,UAAMjF,QAAQ,GAAG0E,EAAE,CAACQ,IAApB;AAGA,UAAMC,GAAG,GAAG,IAAIzJ,OAAO,CAACiJ,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKlH,KAAL,CAAW8C,gBAArC,CAAZ;AACA2E,IAAAA,GAAG,CAACN,SAAJ,CAAc;AACZ/F,MAAAA,IAAI,EAAE,SADM;AAEZgG,MAAAA,KAAK,EAAE,OAFK;AAGZC,MAAAA,SAAS,EAAE,MAHC;AAIZC,MAAAA,EAAE,EAAE;AAJQ,KAAd;AAMA,UAAMI,QAAQ,GAAGD,GAAG,CAACD,IAArB;AAEA,UAAMG,IAAI,GAAG,IAAI3J,OAAO,CAACiJ,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKlH,KAAL,CAAWyC,SAArC,CAAb;AACIkF,IAAAA,IAAI,CAACR,SAAL,CAAe;AACb/F,MAAAA,IAAI,EAAE,MADO;AAEbwG,MAAAA,MAAM,EAAC,KAAK5H,KAAL,CAAW0C,UAFL;AAGbS,MAAAA,GAAG,EAAE,WAHQ;AAIb/D,MAAAA,KAAK,EAAE;AAJM,KAAf;AAMA,UAAMyI,QAAQ,GAAGF,IAAI,CAACH,IAAtB;AAIJ,UAAMM,MAAM,GAAG,IAAI9J,OAAO,CAACiJ,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKlH,KAAL,CAAWuC,QAArC,CAAf;AACAuF,IAAAA,MAAM,CAACX,SAAP,CAAiB;AACf/F,MAAAA,IAAI,EAAE,MADS;;AAEf2G,MAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,eAAOD,CAAC,CAAC5I,KAAF,GAAU6I,CAAC,CAAC7I,KAAZ,GAAoB,CAA3B;AACD;;AAJc,KAAjB;AAMA,UAAM8I,cAAc,GAAGJ,MAAM,CAACN,IAA9B;AAMA,UAAMW,uBAAuB,GAAG,CAAC;AAC/BC,MAAAA,OAAO,EAAE,OADsB;AAE/BC,MAAAA,GAAG,EAAE,CAF0B;AAG/BtH,MAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBnC,GAAnB,EAAwB;AACxB,YAAIA,GAAG,GAAG,MAAV,EAAkB;AACK,iBAAOoC,IAAI,CAACC,KAAL,CAAYrC,GAAG,GAAC,IAAL,GAAa,EAAxB,IAA4B,EAA5B,GAA+B,GAAtC;AACH,SAFpB,MAGgB,IAAIA,GAAG,IAAI,OAAX,EAAmB;AAExB,iBAAOA,GAAG,GAAEA,GAAG,GAAC,OAAL,GAAc,GAAzB;AAEC,SAJI,MAMC;AACM,iBAAOA,GAAP;AACH;AACxB;AAhBwB,KAAD,EAiB9B;AACAwJ,MAAAA,OAAO,EAAE,MADT;AAEAC,MAAAA,GAAG,EAAE,CAFL;AAGAC,MAAAA,GAAG,EAAE;AAHL,KAjB8B,CAAhC;AAyBA,UAAMC,SAAS,GAAG,IAAIvK,OAAO,CAACiJ,IAAZ,GAAmBC,MAAnB,CAA0B,KAAKlH,KAAL,CAAWwC,WAArC,CAAlB;AACA+F,IAAAA,SAAS,CAACpB,SAAV,CAAoB;AAClB/F,MAAAA,IAAI,EAAE,MADY;;AAElB2G,MAAAA,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,eAAOD,CAAC,CAAC5I,KAAF,GAAU6I,CAAC,CAAC7I,KAAZ,GAAoB,CAA3B;AACD;;AAJiB,KAApB;AAMA,UAAMoJ,iBAAiB,GAAGD,SAAS,CAACf,IAApC;AAGA,UAAMiB,QAAQ,GAAGhL,GAAI;;;;;;;CAArB;AAUI,WACC,oBAAC,IAAD;AACG,MAAA,KAAK,EAAE,KAAKuC,KAAL,CAAWT,QADrB;AAEG,MAAA,KAAK,EAAE;AAAEmJ,QAAAA,SAAS,EAAE;AAAb,OAFV;AAGG,MAAA,QAAQ,EAAE,KAHb;AAIG,MAAA,SAAS,EAAC,qDAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,oBAAC,MAAD;AACC,MAAA,UAAU,MADX;AAEC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFR;AAGC,MAAA,YAAY,EAAC,OAHd;AAIC,MAAA,WAAW,EAAC,iBAJb;AAKC,MAAA,gBAAgB,EAAC,UALlB;AAMC,MAAA,QAAQ,EAAE,KAAKrJ,cANhB;AAOC,MAAA,OAAO,EAAE,KAAKZ,OAPf;AAQC,MAAA,MAAM,EAAE,KAAKH,MARd;AASC,MAAA,QAAQ,EAAE,KAAKI,QAThB;AAUC,MAAA,YAAY,EAAE,CAACiK,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACvK,KAAP,CAAawI,QAAb,CAAsBgC,WAAtB,GAAoCC,OAApC,CAA4CH,KAAK,CAACE,WAAN,EAA5C,KAAoE,CAXvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE,KAAK9I,KAAL,CAAW8B,OAAX,CAAmBkH,GAAnB,CAAuB,CAAC5J,KAAD,EAAO6J,KAAP,KACxB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE7J,KAAf;AAAsB,MAAA,GAAG,EAAE6J,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC7J,KAAnC,CADC,CAdF,CADP,EAoBK,oBAAC,MAAD;AACG,MAAA,UAAU,MADb;AAEG,MAAA,KAAK,EAAE;AAAEuJ,QAAAA,KAAK,EAAE,GAAT;AAAeO,QAAAA,UAAU,EAAC;AAA1B,OAFV;AAGG,MAAA,YAAY,EAAC,QAHhB;AAIG,MAAA,WAAW,EAAC,iBAJf;AAKG,MAAA,gBAAgB,EAAC,UALpB;AAMG,MAAA,QAAQ,EAAE,KAAK1J,cANlB;AAOG,MAAA,OAAO,EAAE,KAAKd,OAPjB;AAQG,MAAA,MAAM,EAAE,KAAKH,MARhB;AASG,MAAA,QAAQ,EAAE,KAAKI,QATlB;AAUG,MAAA,YAAY,EAAE,CAACiK,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACvK,KAAP,CAAawI,QAAb,CAAsBgC,WAAtB,GAAoCC,OAApC,CAA4CH,KAAK,CAACE,WAAN,EAA5C,KAAoE,CAXzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcI,KAAK9I,KAAL,CAAW+B,SAAX,CAAqBiH,GAArB,CAAyB,CAAC5J,KAAD,EAAO6J,KAAP,KAC1B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE7J,KAAf;AAAsB,MAAA,GAAG,EAAE6J,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC7J,KAAnC,CADC,CAdJ,CApBL,EAuCK,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAE8J,QAAAA,UAAU,EAAC;AAAb,OAApB;AAA0C,MAAA,QAAQ,EAAE,KAAKrK,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCL,EAyCM,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAE;AAAE8J,QAAAA,KAAK,EAAE,KAAT;AAAgBO,QAAAA,UAAU,EAAC;AAA3B,OAFT;AAGE,MAAA,WAAW,EAAC,aAHd;AAIE,MAAA,YAAY,EAAE,EAJhB;AAKE,MAAA,QAAQ,EAAE,KAAK/J,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG2H,QAPH,CAzCN,OAkDD,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKpH,cAArC;AAAqD,MAAA,KAAK,EAAE;AAACwJ,QAAAA,UAAU,EAAC;AAAZ,OAA5D;AAAiF,MAAA,KAAK,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDC,EAmDA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,qBAAY,OAAnC;AAA0C,qBAAY,kBAAtD;AACE,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAC;AAAZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAoB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,MAnDA,EAsDE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAC,iBAA3B;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAI,MAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF,EAKE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKnJ,KAAL,CAAWwD,kBAA3B;AAA+C,MAAA,UAAU,EAAE,KAAKxD,KAAL,CAAWyD,eAAtE;AACA,MAAA,KAAK,EAAE;AAAC2F,QAAAA,SAAS,EAAC;AAAX,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALF,EAUE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAwB,sBAAa,OAArC;AAA6C,MAAA,KAAK,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKpJ,KAAL,CAAW0D,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,eADA,CAFF,MAVF,CADF,CADF,CAtDF,EA4EA,oBAAC,UAAD;AACE,MAAA,GAAG,EAAE+E,QADP;AAEE,MAAA,IAAI,EAAE,GAFR,CAEa;AAFb;AAGE,MAAA,KAAK,EAAE,SAHT;AAIE,MAAA,OAAO,EAAE,KAAKzI,KAAL,CAAWH,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5EA,EAkFE,KAAKG,KAAL,CAAW+C,YAAX,IAA2B,IAA3B,GACF,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK/C,KAAL,CAAWK,kBAApC;AACA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAW2B,iBADnB;AACsC,MAAA,IAAI,EAAC,MAD3C;AACkD,MAAA,KAAK,EAAC,KADxD;AAC8D,MAAA,MAAM,EAAC,KADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAE4E,IApF9E,CADA,CALH,CADD;AAkGD;;AA1lBqC;;AA4lBxC,eAAexD,SAAf","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport FinancialCharts from \"./FinancialCharts\";\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nconst DataSet = require('@antv/data-set');\nconst Menu_Name = \"Financial\"\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_ax : \"Group\",\n     value_ay : \"Amount\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({A:\"Group\", B:\"Amount\", Menu:Menu_Name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_ax:\"\"})\n    this.setState({value_ax:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_ay:\"\"})\n  this.setState({value_ay:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.StackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ax,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n        this.setState({select_unit_list:keys_list})\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n     <Card\n        title={this.state.value_ax}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n        <div>\n        <div id=\"chart\">\n               <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\"data-target=\"#myModal_Stacked\"\n          style={{marginLeft:\"10px\"}}>\n        <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                 <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_areaChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n         {this.state.area_display == true?\n        <ReactApexChart options={this.state.area_chart_options}\n        series={this.state.area_chart_series} type=\"area\" width=\"420\" height=\"350\" />:null\n        }\n\n     </div>\n  </div>\n</Card>\n    );\n  }\n}\nexport default AreaChart;"]},"metadata":{},"sourceType":"module"}
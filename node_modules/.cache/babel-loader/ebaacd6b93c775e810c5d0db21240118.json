{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../../registry');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nmodule.exports = function makeBoundArray(trace, arrayIn, v0In, dvIn, numbricks, ax) {\n  var arrayOut = [];\n  var isContour = Registry.traceIs(trace, 'contour');\n  var isHist = Registry.traceIs(trace, 'histogram');\n  var isGL2D = Registry.traceIs(trace, 'gl2d');\n  var v0;\n  var dv;\n  var i;\n  var isArrayOfTwoItemsOrMore = isArrayOrTypedArray(arrayIn) && arrayIn.length > 1;\n\n  if (isArrayOfTwoItemsOrMore && !isHist && ax.type !== 'category') {\n    var len = arrayIn.length; // given vals are brick centers\n    // hopefully length === numbricks, but use this method even if too few are supplied\n    // and extend it linearly based on the last two points\n\n    if (len <= numbricks) {\n      // contour plots only want the centers\n      if (isContour || isGL2D) arrayOut = arrayIn.slice(0, numbricks);else if (numbricks === 1) {\n        arrayOut = [arrayIn[0] - 0.5, arrayIn[0] + 0.5];\n      } else {\n        arrayOut = [1.5 * arrayIn[0] - 0.5 * arrayIn[1]];\n\n        for (i = 1; i < len; i++) {\n          arrayOut.push((arrayIn[i - 1] + arrayIn[i]) * 0.5);\n        }\n\n        arrayOut.push(1.5 * arrayIn[len - 1] - 0.5 * arrayIn[len - 2]);\n      }\n\n      if (len < numbricks) {\n        var lastPt = arrayOut[arrayOut.length - 1];\n        var delta = lastPt - arrayOut[arrayOut.length - 2];\n\n        for (i = len; i < numbricks; i++) {\n          lastPt += delta;\n          arrayOut.push(lastPt);\n        }\n      }\n    } else {\n      // hopefully length === numbricks+1, but do something regardless:\n      // given vals are brick boundaries\n      return isContour ? arrayIn.slice(0, numbricks) : // we must be strict for contours\n      arrayIn.slice(0, numbricks + 1);\n    }\n  } else {\n    var calendar = trace[ax._id.charAt(0) + 'calendar'];\n\n    if (isHist) {\n      v0 = ax.r2c(v0In, 0, calendar);\n    } else {\n      if (isArrayOrTypedArray(arrayIn) && arrayIn.length === 1) {\n        v0 = arrayIn[0];\n      } else if (v0In === undefined) {\n        v0 = 0;\n      } else {\n        var fn = ax.type === 'log' ? ax.d2c : ax.r2c;\n        v0 = fn(v0In, 0, calendar);\n      }\n    }\n\n    dv = dvIn || 1;\n\n    for (i = isContour || isGL2D ? 0 : -0.5; i < numbricks; i++) {\n      arrayOut.push(v0 + dv * i);\n    }\n  }\n\n  return arrayOut;\n};","map":null,"metadata":{},"sourceType":"script"}
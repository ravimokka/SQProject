{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/AnalyticalTest/AnalyticalTest.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts';\nimport ReactApexChart from 'react-apexcharts';\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport axios from \"axios\";\nconst t = [10, 20, 32, 34, 5, 63, 6, 75, 7];\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      var label = this.state.value;\n      this.setState({\n        l: label\n      });\n      this.loadData({\n        A: this.state.value,\n        B: this.state.value1\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n      this.loadCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      options1: {\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      },\n      series1: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        chart: {\n          width: '200%'\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      series2: [],\n      options3: {\n        dataLabels: {\n          enabled: true\n        },\n        fill: {\n          type: 'gradient'\n        },\n        legend: {\n          formatter: function (val, opts) {\n            return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      },\n      series3: [5],\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      l: []\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState({\n        filter: data\n      });\n      console.log(data);\n    }\n  }\n\n  async loadData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [1, 2, 34];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Grouped Bar Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value1,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 12,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \" Gradient Donut Chart\",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \" \", value, \" \");\n    }))), React.createElement(ReactApexChart, {\n      options: this.state.options3,\n      series: this.state.donut_data,\n      type: \"donut\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/AnalyticalTest/AnalyticalTest.js"],"names":["React","Component","Row","Col","Card","Button","Icon","Progress","$","Popper","Chart","ReactApexChart","ChartHistoryGroupColumn","ChartBreakdownDonut","ReactMultiSelectCheckboxes","axios","t","AnalyticalTest","constructor","props","handleSubmit","e","setState","value","target","preventDefault","loadCheckbox","Column","handleSubmit12","label","state","l","loadData","A","B","value1","handleSubmit1","handleSubmitDonut","DonutCheckbox","options1","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","series1","name","data","options2","position","chart","offsetX","style","fontSize","series2","options3","type","legend","opts","w","globals","series","seriesIndex","responsive","breakpoint","options","series3","books","intHeader","filter","chart_data","donut_data","componentWillMount","loadAnalytical","loadIntHeaders","promise","post","firstName","lastName","status","console","log","d","dou","headers","Headers","append","method","body","JSON","stringify","i","keys_list","value_list","chart_list","Object","keys","length","key","data_dict","push","g_data","Actual","Budget","g","d_data","SQBL","SQCL","render","span","order","minHeight","marginLeft","map","index","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,OAAO,sCAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,wCAAP;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,8CAApC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,CAAC,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAgB,CAAhB,EAAkB,EAAlB,EAAqB,CAArB,EAAuB,EAAvB,EAA0B,CAA1B,CAAV;;AAIA,MAAMC,cAAN,SAA6BjB,KAAK,CAACC,SAAnC,CAA6C;AAC3CiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkJnBC,YAlJmB,GAkJHC,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AAAjB,OAAd;AACH,KApJmB;;AAAA,SAuJrBH,YAvJqB,GAuJLC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKH,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AAAjB,OAAd;AACC,WAAKG,YAAL,CACI;AAACC,QAAAA,MAAM,EAACN,CAAC,CAACG,MAAF,CAASD;AAAjB,OADJ;AAGF,KA7JkB;;AAAA,SA+JrBK,cA/JqB,GA+JHP,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACI,cAAF;AACA,UAAII,KAAK,GAAG,KAAKC,KAAL,CAAWP,KAAvB;AACA,WAAKD,QAAL,CAAc;AAACS,QAAAA,CAAC,EAACF;AAAH,OAAd;AAGC,WAAKG,QAAL,CACI;AAACC,QAAAA,CAAC,EAAC,KAAKH,KAAL,CAAWP,KAAd;AAAqBW,QAAAA,CAAC,EAAC,KAAKJ,KAAL,CAAWK;AAAlC,OADJ;AAGF,KAxKkB;;AAAA,SA6KrBC,aA7KqB,GA6KJf,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKH,QAAL,CAAc;AAACa,QAAAA,MAAM,EAAEd,CAAC,CAACG,MAAF,CAASD;AAAlB,OAAd;AACC,WAAKG,YAAL,CACI;AAACC,QAAAA,MAAM,EAACN,CAAC,CAACG,MAAF,CAASD;AAAjB,OADJ;AAGF,KAnLkB;;AAAA,SAsLnBa,aAtLmB,GAsLFf,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKH,QAAL,CAAc;AAACa,QAAAA,MAAM,EAAEd,CAAC,CAACG,MAAF,CAASD;AAAlB,OAAd;AACC,WAAKG,YAAL,CACI;AAACC,QAAAA,MAAM,EAACN,CAAC,CAACG,MAAF,CAASD;AAAjB,OADJ;AAGF,KA5LkB;;AAAA,SAsSrBc,iBAtSqB,GAsSAhB,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKH,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AAAjB,OAAd;AACC,WAAKe,aAAL,CACI;AAACX,QAAAA,MAAM,EAACN,CAAC,CAACG,MAAF,CAASD;AAAjB,OADJ;AAGF,KA5SkB;;AAElB,SAAKO,KAAL,GAAa;AAIRS,MAAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,KADT;AAEHC,YAAAA,WAAW,EAAE,KAFV;AAGHC,YAAAA,WAAW,EAAE;AAHV;AADM,SADP;AAQNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SARN;AAWNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,KAAK,EAAE,CAFD;AAGNC,UAAAA,MAAM,EAAE,CAAC,aAAD;AAHF,SAXF;AAgBNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD;AADP,SAhBD;AAmBNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADF,SAnBD;AAwBNC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL,SAxBA;AA2BNC,QAAAA,OAAO,EAAE;AACPC,UAAAA,CAAC,EAAE;AACDC,YAAAA,SAAS,EAAE,UAAUC,GAAV,EAAe;AACxB,qBAAO,OAAOA,GAAP,GAAa,YAApB;AACD;AAHA;AADI;AA3BH,OAJF;AAuCNC,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,IAAI,EAAE,YADE;AAERC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC;AAFE,OAAD,EAGN;AACDD,QAAAA,IAAI,EAAE,SADL;AAEDC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,EAAd,EAAkB,EAAlB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,EAApC;AAFL,OAHM,CAvCH;AAgDbC,MAAAA,QAAQ,EAAE;AACDzB,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,UAAU,EAAE,IADT;AAEHG,YAAAA,UAAU,EAAE;AACVqB,cAAAA,QAAQ,EAAE;AADA;AAFT;AADM,SADZ;AAeDC,QAAAA,KAAK,EAAC;AACHlB,UAAAA,KAAK,EAAC;AADH,SAfL;AAqBDJ,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,KADC;AAEVsB,UAAAA,OAAO,EAAE,CAAC,CAFA;AAGVC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,MADL;AAELpB,YAAAA,MAAM,EAAE,CAAC,MAAD;AAFH;AAHG,SArBX;AAgCDH,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,KAAK,EAAE,CAFD;AAGNC,UAAAA,MAAM,EAAE,CAAC,MAAD;AAHF,SAhCP;AAuCDC,QAAAA,KAAK,EAAE;AAELC,UAAAA,UAAU,EAAC,CAAC,EAAD;AAFN;AAvCN,OAhDG;AA6FNmB,MAAAA,OAAO,EAAC,EA7FF;AAiGhBC,MAAAA,QAAQ,EAAE;AACE3B,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SADd;AAIEU,QAAAA,IAAI,EAAE;AACJiB,UAAAA,IAAI,EAAE;AADF,SAJR;AAOEC,QAAAA,MAAM,EAAE;AACNd,UAAAA,SAAS,EAAE,UAAUC,GAAV,EAAec,IAAf,EAAqB;AAC9B,mBAAOd,GAAG,GAAG,KAAN,GAAcc,IAAI,CAACC,CAAL,CAAOC,OAAP,CAAeC,MAAf,CAAsBH,IAAI,CAACI,WAA3B,CAArB;AACD;AAHK,SAPV;AAYEC,QAAAA,UAAU,EAAE,CAAC;AACXC,UAAAA,UAAU,EAAE,GADD;AAEXC,UAAAA,OAAO,EAAE;AACPf,YAAAA,KAAK,EAAE;AACLlB,cAAAA,KAAK,EAAE;AADF,aADA;AAIPyB,YAAAA,MAAM,EAAE;AACNR,cAAAA,QAAQ,EAAE;AADJ;AAJD;AAFE,SAAD;AAZd,OAjGM;AA0HNiB,MAAAA,OAAO,EAAE,CAAC,CAAD,CA1HH;AA6HXC,MAAAA,KAAK,EAAC,EA7HK;AA8HXC,MAAAA,SAAS,EAAC,EA9HC;AA+HXC,MAAAA,MAAM,EAAC,EA/HI;AAgIXC,MAAAA,UAAU,EAAC,EAhIA;AAiIXC,MAAAA,UAAU,EAAC,EAjIA;AAkIXzD,MAAAA,CAAC,EAAC;AAlIS,KAAb;AAqIA;;AAID0D,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,cAAL;AACA,SAAKC,cAAL;AAGD;;AA+CD,QAAMD,cAAN,GACA;AACE,UAAME,OAAO,GAAG,MAAM7E,KAAK,CAAC8E,IAAN,CAAW,sCAAX,EAAmD;AAAEC,MAAAA,SAAS,EAAE,YAAb;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAnD,CAAtB;AACA,UAAMC,MAAM,GAAGJ,OAAO,CAACI,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMhC,IAAI,GAAG4B,OAAO,CAAC5B,IAAR,CAAaA,IAA1B;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AAEA,WAAK1C,QAAL,CAAc;AAAC8D,QAAAA,KAAK,EAACpB;AAAP,OAAd;AACA,YAAMmC,CAAC,GAAG,CAAC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAD,EAAgC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAhC,CAAV;AACA,WAAK7E,QAAL,CAAc;AAACiE,QAAAA,UAAU,EAACY;AAAZ,OAAd;AACCF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpE,KAAL,CAAWyD,UAAvB;AAEF;AACF;;AAED,QAAMI,cAAN,GACA;AACE,UAAMC,OAAO,GAAG,MAAM7E,KAAK,CAAC8E,IAAN,CAAW,wCAAX,EAAqD;AAAEC,MAAAA,SAAS,EAAE,YAAb;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAArD,CAAtB;AACA,UAAMC,MAAM,GAAGJ,OAAO,CAACI,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMhC,IAAI,GAAG4B,OAAO,CAAC5B,IAAR,CAAaA,IAA1B;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AACA,WAAK1C,QAAL,CAAc;AAAC+D,QAAAA,SAAS,EAACrB;AAAX,OAAd;AACA,YAAMmC,CAAC,GAAG,CAAC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAD,EAAgC;AAAC,gBAAQ,QAAT;AAAkB,gBAAQ;AAA1B,OAAhC,CAAV;AACA,YAAMC,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAZ;AACA,WAAK9E,QAAL,CAAc;AAACkE,QAAAA,UAAU,EAACY;AAAZ,OAAd;AACA,WAAK9E,QAAL,CAAc;AAACiE,QAAAA,UAAU,EAACY;AAAZ,OAAd;AACCF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpE,KAAL,CAAWyD,UAAvB;AAEF;AACF;;AAGD,QAAM7D,YAAN,CAAmBsC,IAAnB,EAAwB;AAEtB,UAAMqC,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMrB,OAAO,GAAG;AAChBsB,MAAAA,MAAM,EAAG,MADO;AAEhBH,MAAAA,OAFgB;AAGhBI,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe3C,IAAf;AAHW,KAAhB;AAMA,UAAM4B,OAAO,GAAG,MAAM7E,KAAK,CAAC8E,IAAN,CAAW,yCAAX,EAAsDX,OAAtD,CAAtB;AACA,UAAMc,MAAM,GAAGJ,OAAO,CAACI,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMhC,IAAI,GAAG4B,OAAO,CAAC5B,IAAR,CAAaA,IAA1B;AACA,WAAK1C,QAAL,CAAc;AAACgE,QAAAA,MAAM,EAACtB;AAAR,OAAd;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AACD;AAEJ;;AAID,QAAMhC,QAAN,CAAegC,IAAf,EAAoB;AAEhB,UAAMqC,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMrB,OAAO,GAAG;AAChBsB,MAAAA,MAAM,EAAG,MADO;AAEhBH,MAAAA,OAFgB;AAGhBI,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe3C,IAAf;AAHW,KAAhB;AAKA,SAAK1C,QAAL,CAAc;AAACiE,MAAAA,UAAU,EAAG;AAAd,KAAd;AACA,UAAMK,OAAO,GAAG,MAAM7E,KAAK,CAAC8E,IAAN,CAAW,mCAAX,EAAgDX,OAAhD,CAAtB;AACA,UAAMc,MAAM,GAAGJ,OAAO,CAACI,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMhC,IAAI,GAAG4B,OAAO,CAAC5B,IAAR,CAAaA,IAA1B;AACA,WAAK1C,QAAL,CAAc0C,IAAd;AACA,UAAI4C,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,UAAU,GAAE,EAAhB;AAEA,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGI,MAAM,CAACC,IAAP,CAAYjD,IAAZ,EAAkBkD,MAAlC,EAA0CN,CAAC,EAA3C,EAA+C;AACzCX,QAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAI,CAAC4C,CAAD,CAAhB;AACA,YAAIO,GAAG,GAAGH,MAAM,CAACC,IAAP,CAAYjD,IAAZ,EAAkB4C,CAAlB,CAAV,CAFyC,CAGrD;;AACY,YAAIrF,KAAK,GAAGyC,IAAI,CAACmD,GAAD,CAAhB,CAJyC,CAKrD;;AACY,YAAIC,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkBD,GAAlB;AACAC,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,CAAC7F,KAAD,CAAlB;AACAwF,QAAAA,UAAU,CAACM,IAAX,CAAgBD,SAAhB;AACH;;AAEH,YAAME,MAAM,GAAG,CAAC,KAAKxF,KAAL,CAAWyF,MAAZ,EAAoB,KAAKzF,KAAL,CAAW0F,MAA/B,CAAf;AACA,WAAKlG,QAAL,CAAc;AAACmG,QAAAA,CAAC,EAACH;AAAH,OAAd,EArBF,CAsBJ;AACA;AACA;;AACM,WAAKhG,QAAL,CAAc;AAACiE,QAAAA,UAAU,EAACwB;AAAZ,OAAd;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AACD;AAEJ;;AASD,QAAM1B,aAAN,CAAoB0B,IAApB,EAAyB;AAErB,UAAMqC,OAAO,GAAI,IAAIC,OAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,UAAMrB,OAAO,GAAG;AAChBsB,MAAAA,MAAM,EAAG,MADO;AAEhBH,MAAAA,OAFgB;AAGhBI,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe3C,IAAf;AAHW,KAAhB;AAMA,UAAM4B,OAAO,GAAG,MAAM7E,KAAK,CAAC8E,IAAN,CAAW,wCAAX,EAAqDX,OAArD,CAAtB;AACA,UAAMc,MAAM,GAAGJ,OAAO,CAACI,MAAvB;;AACA,QAAGA,MAAM,KAAG,GAAZ,EACA;AACE,YAAMhC,IAAI,GAAG4B,OAAO,CAAC5B,IAAR,CAAaA,IAA1B;AACA,WAAK1C,QAAL,CAAc0C,IAAd;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AACA,UAAI4C,CAAJ;AACA,UAAIC,SAAS,GAAE,EAAf;AACA,UAAIC,UAAU,GAAE,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,CAAhB;AAEA,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGI,MAAM,CAACC,IAAP,CAAYjD,IAAZ,EAAkBkD,MAAlC,EAA0CN,CAAC,EAA3C,EAA+C;AACzCX,QAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAI,CAAC4C,CAAD,CAAhB;AACA,YAAIO,GAAG,GAAGH,MAAM,CAACC,IAAP,CAAYjD,IAAZ,EAAkB4C,CAAlB,CAAV;AAEAC,QAAAA,SAAS,CAACQ,IAAV,CAAeF,GAAf;AACA,YAAI5F,KAAK,GAAGyC,IAAI,CAACmD,GAAD,CAAhB;;AACA,YAAI,KAAKrF,KAAL,CAAWP,KAAX,IAAoBA,KAAxB,EAA8B;AAACuF,UAAAA,UAAU,CAACO,IAAX,CAAgB9F,KAAhB;AAAuB,SAAtD,MACK,CACJ;;AAED,YAAI6F,SAAS,GAAG,EAAhB;AACAA,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkBD,GAAlB;AACAC,QAAAA,SAAS,CAAC,MAAD,CAAT,GAAkB,CAAC7F,KAAD,CAAlB;AACAwF,QAAAA,UAAU,CAACM,IAAX,CAAgBD,SAAhB;AACH;;AACH,YAAMM,MAAM,GAAG,CAAC,KAAK5F,KAAL,CAAW6F,IAAZ,EAAkB,KAAK7F,KAAL,CAAW6F,IAAX,GAAgB,CAAlC,EAAqC,KAAK7F,KAAL,CAAW6F,IAAX,GAAgB,CAArD,EAAwD,KAAK7F,KAAL,CAAW8F,IAAnE,EAAyE,KAAK9F,KAAL,CAAW8F,IAAX,GAAgB,CAAzF,EACE,KAAK9F,KAAL,CAAW6F,IAAX,GAAgB,CADlB,CAAf;AAEA,WAAKrG,QAAL,CAAc;AAACkE,QAAAA,UAAU,EAACsB;AAAZ,OAAd;AAED;AAEJ;;AAMCe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACC,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACD,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,SAAS,EAAC,qDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEhB;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKlG,KAAL,CAAWP,KAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKH,YAAvE;AACoB,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAC,OAAR;AAAiBgF,QAAAA,UAAU,EAAC;AAA5B,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEqB;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFrB,EAGsB,KAAKnG,KAAL,CAAWsD,KAAX,CAAiB8C,GAAjB,CAAqB,CAAC3G,KAAD,EAAO4G,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,UAAV;AAAsB9D,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE6D,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD5G,KADpD,MAAT;AAC+E,KAFxF,CAHtB,CAFgB,EAchB;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWK,MAAjD;AAAyD,MAAA,QAAQ,EAAE,KAAKC,aAAxE;AACoB,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAC,OAAR;AAAiBgF,QAAAA,UAAU,EAAC;AAA5B,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEqB;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFrB,EAGsB,KAAKnG,KAAL,CAAWuD,SAAX,CAAqB6C,GAArB,CAAyB,CAAC3G,KAAD,EAAO4G,KAAP,KACjB;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,UAAV;AAAsB9D,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE6D,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD5G,KADpD,MAAT;AAC+E,KAFxF,CAHtB,CAdgB,EAyBhB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKK,cAAtB;AAAsC,MAAA,SAAS,EAAC,cAAhD;AAA+D,MAAA,KAAK,EAAE;AAACqG,QAAAA,UAAU,EAAC;AAAZ,OAAtE;AACE,MAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAzBgB,CADA,EAkCJ,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKnG,KAAL,CAAWmC,QAApC;AAA8C,MAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWyD,UAAjE;AAA6E,MAAA,IAAI,EAAC,KAAlF;AAAwF,MAAA,KAAK,EAAC,KAA9F;AAAoG,MAAA,MAAM,EAAC,KAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCI,CALF,CADH,CAHA,EAkDA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE;AAACuC,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE;AAAlB,OAAzB;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,EAAE,EAAE;AAACD,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,KAAK,EAAE;AAAjB,OAA3D;AAAgF,MAAA,SAAS,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,SAAS,EAAC,qDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEhB;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA+B,MAAA,KAAK,EAAE,KAAKlG,KAAL,CAAWP,KAAjD;AAAwD,MAAA,QAAQ,EAAE,KAAKc,iBAAvE;AACoB,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAC,OAAR;AAAiBgF,QAAAA,UAAU,EAAC;AAA5B,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEqB;AAAS,MAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFrB,EAGsB,KAAKnG,KAAL,CAAWsD,KAAX,CAAiB8C,GAAjB,CAAqB,CAAC3G,KAAD,EAAO4G,KAAP,KACb;AAAC,aAAS;AAAQ,QAAA,KAAK,EAAC,qCAAd;AACV,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,UAAV;AAAsB9D,UAAAA,QAAQ,EAAE;AAAhC,SADG;AACsC,QAAA,GAAG,EAAE6D,KAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACoD5G,KADpD,MAAT;AAC+E,KAFxF,CAHtB,CAFgB,CADA,EAmBJ,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAW0C,QAApC;AAA8C,MAAA,MAAM,EAAE,KAAK1C,KAAL,CAAW0D,UAAjE;AAA6E,MAAA,IAAI,EAAC,OAAlF;AAA0F,MAAA,KAAK,EAAC,KAAhG;AAAsG,MAAA,MAAM,EAAC,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBI,CALF,CADH,CAlDA,CAJH,EAsFE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAiB,MAAA,MAAM,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtFF,CADF,CADF;AA8FD;;AA9b0C;;AAgc7C,eAAevE,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Chart from 'react-apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\nimport axios from \"axios\";\n\n\nconst t = [10, 20, 32, 34,5,63,6,75,7]\n\n\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n   this.state = {\n\n\n\n        options1: {\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n              },\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n              width: 2,\n              colors: ['transparent']\n            },\n            xaxis: {\n              categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n            },\n            yaxis: {\n              title: {\n                text: '$ (thousands)'\n              }\n            },\n            fill: {\n              opacity: 1\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return \"$ \" + val + \" thousands\"\n                }\n              }\n            }\n          },\n          series1: [{\n            name: 'Net Profit',\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n          }, {\n            name: 'Revenue',\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n          }],\n\n\n   options2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n\n\n\n\n\n\n            chart:{\n               width:'200%'\n            },\n\n\n\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n\n\n\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n\n            xaxis: {\n\n              categories:[\"\"],\n            }\n          },\n\n          series2:[\n          ],\n\n\noptions3: {\n            dataLabels: {\n              enabled: true\n            },\n            fill: {\n              type: 'gradient',\n            },\n            legend: {\n              formatter: function (val, opts) {\n                return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\n              }\n            },\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          },\n\n          series3: [5],\n\n\n     books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     l:[]\n\n      }\n  }\n\n\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n\n\n  }\n\n  handleSubmit = (e) => {\n     this.setState({value: e.target.value});\n };\n\n\nhandleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n    var label = this.state.value\n    this.setState({l:label})\n\n\n     this.loadData(\n         {A:this.state.value, B:this.state.value1}\n  );\n  };\n\n\n\n\nhandleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  handleSubmit1 = (e) => {\n    e.preventDefault();\n    this.setState({value1: e.target.value});\n     this.loadCheckbox(\n         {Column:e.target.value }\n  );\n  };\n\n\n  async loadAnalytical()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n  async loadIntHeaders()\n  {\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n  async loadCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/filter_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({filter:data});\n      console.log(data);\n    }\n\n}\n\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(\"http://127.0.0.1:8070/api/v1/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[1,2,34];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <div id=\"content\">\n\n\n\n           <Row type=\"flex\" gutter={24}>\n\n\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Grouped Bar Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                <div>\n\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmit}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n<select class=\"custom-select\"  value={this.state.value1} onChange={this.handleSubmit1}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Yaxis</option>\n                     {this.state.intHeader.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n<React.Fragment>\n    <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"20px\"}}\n      type='button'>OK</button>\n    </React.Fragment>\n\n\n                    </div>\n\n            <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n              <Card\n                title=\" Gradient Donut Chart\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                <div id=\"chart\">\n                <div>\n\n<select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n\n\n\n                    </div>\n\n            <ReactApexChart options={this.state.options3} series={this.state.donut_data} type=\"donut\" width=\"420\" height=\"350\" />\n          </div>\n              </Card>\n            </Col>\n\n\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
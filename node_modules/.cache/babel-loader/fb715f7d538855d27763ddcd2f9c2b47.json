{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport \"./chat.css\";\nimport axios from \"axios\";\nimport { Host } from \"../../Host\";\nimport firebase from 'firebase';\nconst Config_chat = {\n  apiKey: \"AIzaSyB5fOOl4b5DpbBhaeXAL-61qkpJoENQeTY\",\n  authDomain: \"sqd-project.firebaseapp.com\",\n  databaseURL: \"https://sqd-project.firebaseio.com\",\n  projectId: \"sqd-project\",\n  storageBucket: \"sqd-project.appspot.com\",\n  messagingSenderId: \"727802836038\",\n  appId: \"1:727802836038:web:44732927a6e01d5abdc647\",\n  measurementId: \"G-YVGMP4HC63\"\n};\nfirebase.initializeApp(Config_chat);\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectUser = (username, id) => {\n      this.setState({\n        msg_list: []\n      });\n      this.setState({\n        massage_box: true\n      });\n      this.setState({\n        select_username: username\n      });\n      this.setState({\n        received_id: id\n      });\n      this.setState({\n        sel_u_id: id\n      });\n      this.allMassageList(id);\n    };\n\n    this.handleSendMassage = e => {\n      this.setState({\n        massage: this.refs.msg.value\n      });\n      var newItem = {\n        user_Id: this.state.user_id,\n        send_Id: this.state.user_id,\n        received_Id: this.state.received_id,\n        message: this.state.message,\n        msg_Status: true,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      };\n      this.messageSend.push(newItem);\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.state = {\n      online: false,\n      massage_box: false,\n      select_username: '',\n      user_list: [],\n      userName: 'Vamsi',\n      user_id: '',\n      sel_u_id: '',\n      send_msg_list: [],\n      received_list: [],\n      send_id: '',\n      received_id: '',\n      text: 'sqd_massages',\n      user_text: 'users',\n      user_state: '',\n      msg: '',\n      message: '',\n      user_Name: '',\n      user_Email: '',\n      massage_List: '',\n      msg_list: [{\n        'massage': 'hi'\n      }]\n    };\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n  }\n\n  componentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({\n      user_Name: profile_data['username']\n    });\n    this.setState({\n      user_Email: profile_data['email']\n    });\n    this.loadAllUserList();\n    this.setState({\n      user_id: profile_data['user_id']\n    });\n  }\n\n  async loadAllUserList() {\n    this.setState({\n      user_list: []\n    });\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL + \"/chat_user_api\", {\n      username: profile_data['username'],\n      email: profile_data['email']\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const users_list = promise.data.users;\n      this.setState({\n        user_list: users_list\n      });\n    }\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  async allMassageList(id) {\n    const s_id = id;\n    this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n      if (message.val() != null) {\n        var i;\n        var m_list = [];\n        var rsm_list = Object.values(message.val());\n\n        for (i = 0; i < Object.keys(rsm_list).length; i++) {\n          if (this.state.user_id == rsm_list[i]['received_Id'] || this.state.user_id == rsm_list[i]['send_Id']) {\n            var re_data = rsm_list[i];\n            m_list.push(re_data);\n          }\n\n          this.setState({\n            msg_list: m_list\n          });\n        }\n      } else {\n        this.setState({\n          msg_list: []\n        });\n      }\n    });\n  }\n\n  render() {\n    var filteredSuppliers = this.state.data.filter(item => {\n      return item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n    });\n    return React.createElement(\"div\", {\n      className: \"messaging\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headind_srch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recent_heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"srch_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stylish-input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"inbox_chat scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.user_list.map((value, index) => React.createElement(\"div\", {\n      className: \"chat_list active_chat\",\n      key: index,\n      onClick: () => this.selectUser(value.username, value.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_people\",\n      value: this.state.select_username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      className: \"chat_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      value: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, value.username, \" \", value.id, React.createElement(\"span\", {\n      className: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"new user for sq dashboard\"))))))), React.createElement(\"div\", {\n      className: \"mesgs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-success  select_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        marginLeft: \"19px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.select_username), React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      className: \"hear_user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), this.state.massage_box == true ? React.createElement(\"div\", {\n      className: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"incoming_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.msg_list.map((value, index) => React.createElement(\"div\", {\n      className: \"received_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.sel_u_id == value.send_Id ? React.createElement(\"div\", {\n      className: \"received_withd_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, value.message, \" \"), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })) : null, this.state.sel_u_id == value.received_Id ? React.createElement(\"div\", {\n      className: \"outgoing_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sent_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, value.message, \" \"), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))) : null)))) : React.createElement(\"h2\", {\n      className: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \" welcome Message Chatting\"), React.createElement(\"div\", {\n      className: \"type_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_msg_write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"msg\",\n      className: \"write_msg\",\n      placeholder: \"Type a message\",\n      value: this.state.message,\n      onKeyPress: this.handleKeyPress.bind(this),\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"msg_send_btn\",\n      type: \"button\",\n      onClick: this.handleSendMassage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-paper-plane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default ChartRoom;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Layout/chart_room.js"],"names":["React","Component","useState","useEffect","Layout","Menu","Dropdown","Icon","Button","Avatar","Drawer","Input","AppRouter","NotificationTab","ReactApexChart","$","Popper","isAbsolute","axios","Host","firebase","Config_chat","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ChartRoom","constructor","props","selectUser","username","id","setState","msg_list","massage_box","select_username","received_id","sel_u_id","allMassageList","handleSendMassage","e","massage","refs","msg","value","newItem","user_Id","state","user_id","send_Id","received_Id","message","msg_Status","timestamp","database","ServerValue","TIMESTAMP","messageSend","push","online","user_list","userName","send_msg_list","received_list","send_id","text","user_text","user_state","user_Name","user_Email","massage_List","ref","child","componentWillMount","profile_data","JSON","parse","sessionStorage","getItem","loadAllUserList","promise","post","loginURL","email","status","users_list","data","users","handleKeyPress","event","key","handleChange","target","s_id","on","val","i","m_list","rsm_list","Object","values","keys","length","re_data","render","filteredSuppliers","filter","item","name","toLowerCase","indexOf","search","map","index","marginLeft","bind"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport \"./chat.css\"\nimport axios from \"axios\";\nimport { Host } from  \"../../Host\";\nimport firebase from 'firebase';\n\nconst Config_chat = {\n  apiKey: \"AIzaSyB5fOOl4b5DpbBhaeXAL-61qkpJoENQeTY\",\n  authDomain: \"sqd-project.firebaseapp.com\",\n  databaseURL: \"https://sqd-project.firebaseio.com\",\n  projectId: \"sqd-project\",\n  storageBucket: \"sqd-project.appspot.com\",\n  messagingSenderId: \"727802836038\",\n  appId: \"1:727802836038:web:44732927a6e01d5abdc647\",\n  measurementId: \"G-YVGMP4HC63\"\n};\n\nfirebase.initializeApp(Config_chat);\n\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        online:false,\n        massage_box:false,\n        select_username:'',\n        user_list:[],\n        userName:'Vamsi',\n        user_id:'',\n        sel_u_id:'',\n        send_msg_list:[],\n        received_list:[],\n        send_id:'',\n        received_id:'',\n        text:'sqd_massages',\n        user_text:'users',\n        user_state:'',\n        msg:'',\n        message:'',\n        user_Name:'',\n        user_Email:'',\n        massage_List:'',\n        msg_list:[{'massage':'hi'}]\n    }\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n\n\n\n\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({user_Name:profile_data['username']});\n    this.setState({user_Email:profile_data['email']});\n    this.loadAllUserList()\n    this.setState({user_id:profile_data['user_id']});\n}\n\nasync loadAllUserList()\n  {\n    this.setState({user_list:[]});\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL +\"/chat_user_api\", {username:profile_data['username'],\n                                                                    email:profile_data['email']});\n    const status = promise.status;\n    if(status===200)\n    {\n      const users_list= promise.data.users;\n      this.setState({user_list:users_list});\n    }\n  }\n\n\nselectUser = (username, id) => {\n    this.setState({msg_list:[]});\n    this.setState({massage_box:true});\n    this.setState({select_username:username});\n    this.setState({received_id:id});\n    this.setState({sel_u_id:id});\n    this.allMassageList(id);\n\n\n  };\n\n\n  handleSendMassage = (e) => {\n     this.setState({massage:this.refs.msg.value})\n      var newItem = {\n        user_Id:this.state.user_id,\n        send_Id:this.state.user_id,\n        received_Id:this.state.received_id,\n        message:this.state.message,\n        msg_Status:true,\n        timestamp : firebase.database.ServerValue.TIMESTAMP\n      }\n      this.messageSend.push(newItem);\n      this.setState({ message: '' });\n\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\n\nasync allMassageList(id){\n       const s_id = id;\n       this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n            if ( message.val() != null){\n              var i;\n              var m_list = []\n              var rsm_list = Object.values(message.val());\n              for (i = 0; i < Object.keys(rsm_list).length; i++) {\n                if((this.state.user_id == rsm_list[i]['received_Id']) || (this.state.user_id == rsm_list[i]['send_Id'])){\n                      var re_data = rsm_list[i]\n                      m_list.push(re_data)\n                }\n               this.setState({msg_list:m_list});\n              }\n            }\n            else{\n                this.setState({ msg_list:[]});\n            }\n       });\n}\n\n\n\n\n\n  render() {\nvar filteredSuppliers = this.state.data.filter(\n  (item) => {\n    return item.name.toLowerCase().indexOf(\n      this.state.search.toLowerCase()) !== -1;\n  }\n)\n\n\n    return (\n    <div className=\"messaging\">\n      <div className=\"inbox_msg\">\n        <div className=\"inbox_people\">\n\t  <div className=\"headind_srch\">\n\t\t<div className=\"recent_heading\">\n\t\t  <h4>Users</h4>\n\t\t</div>\n\t\t<div className=\"srch_bar\">\n\t\t  <div className=\"stylish-input-group\">\n\t\t\t<input type=\"text\" className=\"search-bar\"  placeholder=\"Search\"  / >\n\t\t\t</div>\n\t\t</div>\n\t  </div>\n\n\n\t  <div className=\"inbox_chat scroll\">\n\t  {this.state.user_list.map((value, index) =>\n\t\t<div className=\"chat_list active_chat\"   key={index} onClick={()=>this.selectUser(value.username, value.id)}>\n\t\t  <div className=\"chat_people\" value={this.state.select_username}>\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"chat_img\" />\n\t\t\t<div className=\"chat_ib\">\n\t\t\t  <h5 value={value.id}>{value.username} {value.id}\n\n\t\t\t  <span className=\"online\"></span>\n\n\t\t\t   </h5>\n\t\t\t  <p>new user for sq dashboard</p>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n        )}\n        </div>\n\t</div>\n\n\n\n        <div className=\"mesgs\">\n        <div className=\"alert alert-success  select_user\">\n          <strong style={{marginLeft:\"19px\"}}>{this.state.select_username}</strong >\n         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"hear_user\" />\n          </div>\n\n        {this.state.massage_box == true?\n          <div className=\"msg_history\">\n                  <div className=\"incoming_msg\">\n                         { this.state.msg_list.map((value, index) =>\n                              <div className=\"received_msg\">\n                              {this.state.sel_u_id == value.send_Id?\n                                <div className=\"received_withd_msg\">\n                                    <p key={index}>{value.message} </p>\n                                  <span className=\"time_date\"></span>\n                                  </div>:null\n                                  }\n                                  {this.state.sel_u_id == value.received_Id?\n                                  <div className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                        <p key={index}>{value.message} </p>\n                                        <span className=\"time_date\"></span>\n                                        </div>\n                                  </div>:null\n                               }\n                              </div>\n                          )}\n                        </div>\n\n            </div>:<h2 className=\"msg_history\"> welcome Message Chatting</h2>\n          }\n\n          <div className=\"type_msg\">\n            <div className=\"input_msg_write\">\n              <input type=\"text\"  ref='msg' className=\"write_msg\" placeholder=\"Type a message\"\n                                              value={this.state.message}\n                                              onKeyPress={this.handleKeyPress.bind(this)}\n                                              onChange={this.handleChange.bind(this)}/>\n              <button className=\"msg_send_btn\" type=\"button\" onClick={this.handleSendMassage}>\n                                    <i className=\"fa fa-paper-plane\"></i></button>\n            </div>\n          </div>\n\n        </div>\n  </div>\n</div>\n\n    );\n  }\n}\n\nexport default ChartRoom;\n"]},"metadata":{},"sourceType":"module"}
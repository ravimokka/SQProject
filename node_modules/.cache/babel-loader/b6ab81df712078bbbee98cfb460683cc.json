{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar LINKEDFILLS = {\n  tonextx: 1,\n  tonexty: 1,\n  tonext: 1\n};\n\nmodule.exports = function linkTraces(gd, plotinfo, cdscatter) {\n  var trace, i, group, prevtrace, groupIndex; // first sort traces to keep stacks & filled-together groups together\n\n  var groupIndices = {};\n  var needsSort = false;\n  var prevGroupIndex = -1;\n  var nextGroupIndex = 0;\n  var prevUnstackedGroupIndex = -1;\n\n  for (i = 0; i < cdscatter.length; i++) {\n    trace = cdscatter[i][0].trace;\n    group = trace.stackgroup || '';\n\n    if (group) {\n      if (group in groupIndices) {\n        groupIndex = groupIndices[group];\n      } else {\n        groupIndex = groupIndices[group] = nextGroupIndex;\n        nextGroupIndex++;\n      }\n    } else if (trace.fill in LINKEDFILLS && prevUnstackedGroupIndex >= 0) {\n      groupIndex = prevUnstackedGroupIndex;\n    } else {\n      groupIndex = prevUnstackedGroupIndex = nextGroupIndex;\n      nextGroupIndex++;\n    }\n\n    if (groupIndex < prevGroupIndex) needsSort = true;\n    trace._groupIndex = prevGroupIndex = groupIndex;\n  }\n\n  var cdscatterSorted = cdscatter.slice();\n\n  if (needsSort) {\n    cdscatterSorted.sort(function (a, b) {\n      var traceA = a[0].trace;\n      var traceB = b[0].trace;\n      return traceA._groupIndex - traceB._groupIndex || traceA.index - traceB.index;\n    });\n  } // now link traces to each other\n\n\n  var prevtraces = {};\n\n  for (i = 0; i < cdscatterSorted.length; i++) {\n    trace = cdscatterSorted[i][0].trace;\n    group = trace.stackgroup || ''; // Note: The check which ensures all cdscatter here are for the same axis and\n    // are either cartesian or scatterternary has been removed. This code assumes\n    // the passed scattertraces have been filtered to the proper plot types and\n    // the proper subplots.\n\n    if (trace.visible === true) {\n      trace._nexttrace = null;\n\n      if (trace.fill in LINKEDFILLS) {\n        prevtrace = prevtraces[group];\n        trace._prevtrace = prevtrace || null;\n\n        if (prevtrace) {\n          prevtrace._nexttrace = trace;\n        }\n      }\n\n      trace._ownfill = trace.fill && (trace.fill.substr(0, 6) === 'tozero' || trace.fill === 'toself' || trace.fill.substr(0, 2) === 'to' && !trace._prevtrace);\n      prevtraces[group] = trace;\n    } else {\n      trace._prevtrace = trace._nexttrace = trace._ownfill = null;\n    }\n  }\n\n  return cdscatterSorted;\n};","map":null,"metadata":{},"sourceType":"script"}
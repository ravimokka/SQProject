{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar colorAttrs = require('../color/attributes');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'plot',\n    description: 'Determines whether or not this button is visible.'\n  },\n  step: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n    dflt: 'month',\n    editType: 'plot',\n    description: ['The unit of measurement that the `count` value will set the range by.'].join(' ')\n  },\n  stepmode: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['backward', 'todate'],\n    dflt: 'backward',\n    editType: 'plot',\n    description: ['Sets the range update mode.', 'If *backward*, the range update shifts the start of range', 'back *count* times *step* milliseconds.', 'If *todate*, the range update shifts the start of range', 'back to the first timestamp from *count* times', '*step* milliseconds back.', 'For example, with `step` set to *year* and `count` set to *1*', 'the range update shifts the start of the range back to', 'January 01 of the current year.', 'Month and year *todate* are currently available only', 'for the built-in (Gregorian) calendar.'].join(' ')\n  },\n  count: {\n    valType: 'number',\n    role: 'info',\n    min: 0,\n    dflt: 1,\n    editType: 'plot',\n    description: ['Sets the number of steps to take to update the range.', 'Use with `step` to specify the update interval.'].join(' ')\n  },\n  label: {\n    valType: 'string',\n    role: 'info',\n    editType: 'plot',\n    description: 'Sets the text label to appear on the button.'\n  },\n  editType: 'plot',\n  description: ['Sets the specifications for each buttons.', 'By default, a range selector comes with no buttons.'].join(' ')\n});\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    editType: 'plot',\n    description: ['Determines whether or not this range selector is visible.', 'Note that range selectors are only available for x axes of', '`type` set to or auto-typed to *date*.'].join(' ')\n  },\n  buttons: buttonAttrs,\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the x position (in normalized coordinates) of the range selector.'\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the range selector.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the y position (in normalized coordinates) of the range selector.'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    dflt: 'bottom',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the range selector.'].join(' ')\n  },\n  font: fontAttrs({\n    editType: 'plot',\n    description: 'Sets the font of the range selector button text.'\n  }),\n  bgcolor: {\n    valType: 'color',\n    dflt: colorAttrs.lightLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the range selector buttons.'\n  },\n  activecolor: {\n    valType: 'color',\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the active range selector button.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the color of the border enclosing the range selector.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the width (in px) of the border enclosing the range selector.'\n  },\n  editType: 'plot'\n};","map":null,"metadata":{},"sourceType":"script"}
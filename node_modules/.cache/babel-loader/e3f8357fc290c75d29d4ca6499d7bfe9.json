{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar isReact16 = ReactDOM.createPortal !== undefined;\n\nfunction generateRandomNum() {\n  return Math.floor(new Date().getTime() + Math.random() * 10000).toString();\n}\n\nvar FacetView = function (_super) {\n  __extends(FacetView, _super);\n\n  function FacetView(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.displayName = 'FacetView';\n    _this.state = {\n      hasInViews: true,\n      viewId: _this.props.viewId || generateRandomNum(),\n      viewType: 'facet'\n    };\n    return _this;\n  }\n\n  FacetView.prototype.getChildContext = function () {\n    return {\n      hasInViews: this.state.hasInViews,\n      viewId: this.state.viewId,\n      viewType: this.state.viewType\n    };\n  };\n\n  FacetView.prototype.componentDidUpdate = function () {\n    this.context.centralizedUpdates(this);\n  };\n\n  FacetView.prototype.componentDidMount = function () {\n    this.context.centralizedUpdates(this);\n  };\n\n  FacetView.prototype.render = function () {\n    if (isReact16) {\n      return this.props.children;\n    } else {\n      return React.Children.only(this.props.children);\n    }\n  };\n\n  FacetView.childContextTypes = {\n    hasInViews: PropTypes.bool,\n    viewId: PropTypes.string,\n    viewType: PropTypes.string\n  };\n  FacetView.contextTypes = {\n    centralizedUpdates: PropTypes.func,\n    hasInViews: PropTypes.bool,\n    viewType: PropTypes.string\n  };\n  return FacetView;\n}(React.Component);\n\nexport default FacetView;","map":{"version":3,"sources":["../../src/components/FacetView.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AAGA,IAAM,SAAS,GAAI,QAAgB,CAAC,YAAjB,KAAkC,SAArD;;AAEA,SAAS,iBAAT,GAA0B;AACxB,SAAQ,IAAI,CAAC,KAAL,CAAW,IAAI,IAAJ,GAAW,OAAX,KAAuB,IAAI,CAAC,MAAL,KAAgB,KAAlD,CAAD,CAA2D,QAA3D,EAAP;AACD;;AAED,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAerC,WAAA,SAAA,CAAY,KAAZ,EAAwB;AAAxB,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAFO,IAAA,KAAA,CAAA,WAAA,GAAc,WAAd;AAKL,IAAA,KAAI,CAAC,KAAL,GAAa;AACX,MAAA,UAAU,EAAE,IADD;AAEX,MAAA,MAAM,EAAE,KAAI,CAAC,KAAL,CAAW,MAAX,IAAqB,iBAAiB,EAFnC;AAGX,MAAA,QAAQ,EAAE;AAHC,KAAb;;AAKD;;AAEM,EAAA,SAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACE,WAAO;AACL,MAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UADlB;AAEL,MAAA,MAAM,EAAE,KAAK,KAAL,CAAW,MAFd;AAGL,MAAA,QAAQ,EAAE,KAAK,KAAL,CAAW;AAHhB,KAAP;AAKD,GANM;;AAQA,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,YAAA;AACE,SAAK,OAAL,CAAa,kBAAb,CAAgC,IAAhC;AACD,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,SAAK,OAAL,CAAa,kBAAb,CAAgC,IAAhC;AACD,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,QAAI,SAAJ,EAAe;AACb,aAAO,KAAK,KAAL,CAAW,QAAlB;AACD,KAFD,MAEO;AACL,aAAO,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,KAAK,KAAL,CAAW,QAA/B,CAAP;AACD;AACF,GANM;;AAxCO,EAAA,SAAA,CAAA,iBAAA,GAAoB;AAChC,IAAA,UAAU,EAAE,SAAS,CAAC,IADU;AAEhC,IAAA,MAAM,EAAE,SAAS,CAAC,MAFc;AAGhC,IAAA,QAAQ,EAAE,SAAS,CAAC;AAHY,GAApB;AAMA,EAAA,SAAA,CAAA,YAAA,GAAe;AAC3B,IAAA,kBAAkB,EAAE,SAAS,CAAC,IADH;AAE3B,IAAA,UAAU,EAAE,SAAS,CAAC,IAFK;AAG3B,IAAA,QAAQ,EAAE,SAAS,CAAC;AAHO,GAAf;AAyChB,SAAA,SAAA;AAAC,CAhDD,CAAuC,KAAK,CAAC,SAA7C,CAAA;;eAAqB,S","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar isReact16 = ReactDOM.createPortal !== undefined;\nfunction generateRandomNum() {\n    return (Math.floor(new Date().getTime() + Math.random() * 10000)).toString();\n}\nvar FacetView = (function (_super) {\n    __extends(FacetView, _super);\n    function FacetView(props) {\n        var _this = _super.call(this, props) || this;\n        _this.displayName = 'FacetView';\n        _this.state = {\n            hasInViews: true,\n            viewId: _this.props.viewId || generateRandomNum(),\n            viewType: 'facet'\n        };\n        return _this;\n    }\n    FacetView.prototype.getChildContext = function () {\n        return {\n            hasInViews: this.state.hasInViews,\n            viewId: this.state.viewId,\n            viewType: this.state.viewType\n        };\n    };\n    FacetView.prototype.componentDidUpdate = function () {\n        this.context.centralizedUpdates(this);\n    };\n    FacetView.prototype.componentDidMount = function () {\n        this.context.centralizedUpdates(this);\n    };\n    FacetView.prototype.render = function () {\n        if (isReact16) {\n            return this.props.children;\n        }\n        else {\n            return React.Children.only(this.props.children);\n        }\n    };\n    FacetView.childContextTypes = {\n        hasInViews: PropTypes.bool,\n        viewId: PropTypes.string,\n        viewType: PropTypes.string\n    };\n    FacetView.contextTypes = {\n        centralizedUpdates: PropTypes.func,\n        hasInViews: PropTypes.bool,\n        viewType: PropTypes.string\n    };\n    return FacetView;\n}(React.Component));\nexport default FacetView;\n//# sourceMappingURL=FacetView.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/AnalyticalTest.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form, Modal, Table } from \"antd\";\nimport { Host } from \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts';\nconst CollectionCreateForm = Form.create({\n  name: \"form_in_modal\"\n})( // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 240\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const columns = [{\n      title: 'Order Number',\n      dataIndex: 'oNumber',\n      key: 'oNumber'\n    }];\n    const data = [{\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success']\n    }];\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      style: {\n        overflowY: \"scroll\",\n        maxHeight: \"500%\",\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n});\n\nconst DataSet = require('@antv/data-set');\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst sourceData12 = [{\n  item: 'A',\n  count: 40\n}, {\n  item: 'B',\n  count: 21\n}, {\n  item: 'C',\n  count: 17\n}, {\n  item: 'D',\n  count: 13\n}, {\n  item: 'E',\n  count: 9\n}];\n\nclass AnalyticalTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        drawerVisible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        value_x: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = e => {\n      this.setState({\n        value_y: e.target.value\n      });\n    };\n\n    this.handleSubmit12 = e => {\n      e.preventDefault();\n      this.loadData({\n        A: this.state.value_x,\n        B: this.state.value_y\n      });\n    };\n\n    this.handleSubmitDonut = e => {\n      e.preventDefault();\n      this.setState({\n        value_donut: e.target.value\n      });\n      this.DonutCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.handleSubmitPie = e => {\n      e.preventDefault();\n      this.setState({\n        value_pie: e.target.value\n      });\n      this.PieCheckbox({\n        Column: e.target.value\n      });\n    };\n\n    this.state = {\n      u: [{\n        id: 1,\n        name: 'Ravi',\n        color: 'mokka raveendra',\n        'user_status': 'offline'\n      }, {\n        id: 1,\n        name: 'Vamsi',\n        color: 'mokka raveendra',\n        'user_status': 'online'\n      }, {\n        id: 1,\n        name: 'Raju',\n        color: 'mokka raveendra',\n        'user_status': 'offline'\n      }, {\n        id: 1,\n        name: 'Abu',\n        color: 'mokka raveendra',\n        'user_status': 'online'\n      }],\n      options2: {\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          offsetX: -6,\n          style: {\n            fontSize: '12px',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: [\"\"]\n        }\n      },\n      series2: [],\n      series2: [],\n      books: [],\n      intHeader: [],\n      filter: [],\n      chart_data: [],\n      donut_data: [],\n      pie_data: [],\n      l: [],\n      sourceData: [{\n        item: 'A',\n        count: 20\n      }],\n      sourceData_donut: [{\n        item: 'B',\n        count: 2\n      }]\n    };\n  }\n\n  componentWillMount() {\n    this.loadAnalytical();\n    this.loadIntHeaders();\n  }\n\n  async loadAnalytical() {\n    const promise = await axios.post(Host.loginURL + \"/sqd_api\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        books: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadIntHeaders() {\n    const promise = await axios.post(Host.loginURL + \"/intHeader\", {\n      firstName: 'Mokka Ravi',\n      lastName: 'Flintstone'\n    });\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({\n        intHeader: data\n      });\n      const d = [{\n        'name': 'Actual',\n        'data': []\n      }, {\n        'name': 'Budget',\n        'data': []\n      }];\n      const dou = [1, 3, 4];\n      this.setState({\n        donut_data: dou\n      });\n      this.setState({\n        chart_data: d\n      });\n      console.log(this.state.chart_data);\n    }\n  }\n\n  async loadData(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      chart_data: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/data\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i]; //            keys_list.push(key)\n\n        var value = data[key]; //            value_list.push(value)\n\n        var data_dict = {};\n        data_dict['name'] = key;\n        data_dict['data'] = [value];\n        chart_list.push(data_dict);\n      }\n\n      const g_data = [this.state.Actual, this.state.Budget];\n      this.setState({\n        g: g_data\n      }); //\n      //      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n      //      this.setState({c:['test']})\n\n      const d = [{\n        'name': 'Actual',\n        'data': [1, 23]\n      }, {\n        'name': 'Budget',\n        'data': [1, 2, 4, 5]\n      }];\n      this.setState({\n        chart_data: chart_list\n      });\n      console.log(data);\n    }\n  }\n\n  async DonutCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData_donut: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData_donut: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  async PieCheckbox(data) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data)\n    };\n    this.setState({\n      sourceData: []\n    });\n    const promise = await axios.post(Host.loginURL + \"/count_api\", options);\n    const status = promise.status;\n\n    if (status === 200) {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list = [];\n      var value_list = [];\n      var chart_list = [];\n      var ct_list1 = [];\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n        console.log(data[i]);\n        var key = Object.keys(data)[i];\n        keys_list.push(key);\n\n        if (key != \"label\") {\n          ct_list1.push(key);\n        } else {}\n\n        var value = data[key];\n\n        if (this.state.value != value) {\n          value_list.push(value);\n        } else {}\n\n        var data_dict = {};\n\n        if (key != \"label\") {\n          data_dict['item'] = key;\n          data_dict['count'] = value;\n          chart_list.push(data_dict);\n        } else {}\n      }\n\n      const sd = [{\n        item: 'D',\n        count: 8000\n      }, {\n        item: '2019/2001',\n        count: 800\n      }];\n      console.log(chart_list);\n      this.setState({\n        sourceData: chart_list\n      });\n      const d_data = [this.state.SQBL, this.state.SQBL - 1, this.state.SQBL - 2, this.state.SQCL, this.state.SQCL - 1, this.state.SQBL - 2];\n      this.setState({\n        donut_data: value_list\n      });\n    }\n  }\n\n  render() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n    const dv1 = new DataSet.View().source(this.state.sourceData_donut);\n    dv1.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    });\n    const don_data = dv1.rows;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: {\n        span: 12,\n        order: 4\n      },\n      lg: 12,\n      xl: {\n        span: 24,\n        order: 5\n      },\n      className: \"c-mb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Group Bar chart \",\n      style: {\n        minHeight: \"100%\"\n      },\n      bordered: false,\n      className: \"mi-card mi-card-header-borderless mi-card-boxshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_chat scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"my_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_x,\n      onChange: this.handleSubmit,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value_y,\n      onChange: this.handleSubmit1,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"Yaxis\"), this.state.intHeader.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit12,\n      className: \"btn btn-info\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"OK\")), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showModal,\n      className: \"btn btn-primary\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Table View\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.modalVisible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    })), React.createElement(ReactApexChart, {\n      options: this.state.options2,\n      series: this.state.chart_data,\n      type: \"bar\",\n      width: \"420\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }))))))), React.createElement(Row, {\n      type: \"flex\",\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AnalyticalTest;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/Test/AnalyticalTest.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","Row","Col","Card","Button","Icon","Progress","Form","Modal","Table","Host","axios","ReactApexChart","CollectionCreateForm","create","name","Component","constructor","props","state","render","visible","onCancel","onCreate","form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","columns","title","dataIndex","key","data","oNumber","confDate","customer","salePer","total","tags","overflowY","maxHeight","marginTop","marginBottom","DataSet","require","scale","dataKey","min","formatter","scale1","sourceData12","item","count","AnalyticalTest","showModal","setState","modalVisible","handleCancel","saveFormRef","formRef","showDrawer","drawerVisible","onClose","handleSubmit","e","value_x","target","value","handleSubmit1","value_y","handleSubmit12","preventDefault","loadData","A","B","handleSubmitDonut","value_donut","DonutCheckbox","Column","handleSubmitPie","value_pie","PieCheckbox","u","id","color","options2","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","xaxis","categories","series2","books","intHeader","filter","chart_data","donut_data","pie_data","l","sourceData","sourceData_donut","componentWillMount","loadAnalytical","loadIntHeaders","promise","post","loginURL","firstName","lastName","status","console","log","d","dou","headers","Headers","append","options","method","body","JSON","stringify","i","keys_list","value_list","chart_list","Object","keys","length","data_dict","push","g_data","Actual","Budget","g","ct_list1","sd","d_data","SQBL","SQCL","dv","View","source","transform","type","field","dimension","as","align","rows","dv1","don_data","order","minHeight","marginLeft","map","index","cursor","handleCreate"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 240 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n\nconst columns = [{title: 'Order Number',dataIndex: 'oNumber',key: 'oNumber',}]\n\nconst data = [\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  }]\n\n\n\n\n      return (\n        <Modal visible={visible}\n          title=\"Create a new collection\"\n          okText=\"\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        style={{overflowY:\"scroll\", maxHeight:\"500%\", marginTop:\"50px\", marginBottom:\"50px\"}}>\n         <Table columns={columns} dataSource={data} />\n        </Modal>\n      );\n    }\n  }\n);\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\n\nconst sourceData12 = [\n  { item: 'A', count: 40 },\n  { item: 'B', count: 21 },\n  { item: 'C', count: 17 },\n  { item: 'D', count: 13 },\n  { item: 'E', count: 9 }\n];\n\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\n     u:[{id: 1, name: 'Ravi', color: 'mokka raveendra', 'user_status':'offline'},\n        {id: 1, name: 'Vamsi', color: 'mokka raveendra', 'user_status':'online'},\n         {id: 1, name: 'Raju', color: 'mokka raveendra', 'user_status':'offline'},\n      {id: 1, name: 'Abu', color: 'mokka raveendra', 'user_status':'online'}],\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n            }\n          },\n\n          series2:[],\n\n\n          series2:[],\n\n\n\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     l:[],\n     sourceData :[\n  { item: 'A', count: 20 }\n],\n\nsourceData_donut:[{ item: 'B', count: 2 }]\n\n      }\n\n\n   }\n\n showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n\n\n\n\n   componentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n\n\n  }\n\n   async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n\n\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n\n     this.loadData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(Host.loginURL +\"/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [1, 23]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n   handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\n\n\n\n\n\n    return (\n\n    <div>\n        <div id=\"content\">\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Group Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n\n         <div className=\"\">\n           <div className=\"inbox\">\n               <div className=\"inbox_people\">\n                       <div className=\"inbox_chat scroll\">\n                      <div  id=\"my_search\">\n                          \n                        </div>\n\n                      </div>\n              </div>\n\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                        <React.Fragment>\n                        <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"10px\"}}\n                          type='button'>OK</button>\n                        </React.Fragment>\n                       <React.Fragment>\n                            <button onClick={this.showModal} className='btn btn-primary' style={{marginLeft:\"10px\"}}\n                              type='button'>Table View</button>\n                              <CollectionCreateForm\n                                  wrappedComponentRef={this.saveFormRef}\n                                  visible={this.state.modalVisible}\n                                  onCancel={this.handleCancel}\n                                  onCreate={this.handleCreate}\n                              />\n                        </React.Fragment>\n\n\n\n                                      <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n               </div>\n\n\n\n           </div>\n\n\n            </div>\n         </Card>\n      </Col>\n\n\n\n </Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default AnalyticalTest;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict'; // This module provides a centralized place for\n// runtime checking that the props passed to React Infinite\n// make the minimum amount of sense.\n\nvar React = global.React || require('react');\n\nvar _isFinite = require('lodash.isfinite');\n\nmodule.exports = function (props) {\n  var rie = 'Invariant Violation: ';\n\n  if (!(props.containerHeight || props.useWindowAsScrollContainer)) {\n    throw new Error(rie + 'Either containerHeight or useWindowAsScrollContainer must be provided.');\n  }\n\n  if (!(_isFinite(props.elementHeight) || Array.isArray(props.elementHeight))) {\n    throw new Error(rie + 'You must provide either a number or an array of numbers as the elementHeight.');\n  }\n\n  if (Array.isArray(props.elementHeight)) {\n    if (React.Children.count(props.children) !== props.elementHeight.length) {\n      throw new Error(rie + 'There must be as many values provided in the elementHeight prop as there are children.');\n    }\n  }\n};","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/node_modules/react-infinite/build/utils/checkProps.js"],"names":["React","global","require","_isFinite","module","exports","props","rie","containerHeight","useWindowAsScrollContainer","Error","elementHeight","Array","isArray","Children","count","children","length"],"mappings":"AAAA,a,CAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,MAAM,CAACD,KAAP,IAAgBE,OAAO,CAAC,OAAD,CAAnC;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAChC,MAAIC,GAAG,GAAG,uBAAV;;AACA,MAAI,EAAED,KAAK,CAACE,eAAN,IAAyBF,KAAK,CAACG,0BAAjC,CAAJ,EAAkE;AAChE,UAAM,IAAIC,KAAJ,CAAUH,GAAG,GAAG,wEAAhB,CAAN;AACD;;AAED,MAAI,EAAEJ,SAAS,CAACG,KAAK,CAACK,aAAP,CAAT,IAAkCC,KAAK,CAACC,OAAN,CAAcP,KAAK,CAACK,aAApB,CAApC,CAAJ,EAA6E;AAC3E,UAAM,IAAID,KAAJ,CAAUH,GAAG,GAAG,+EAAhB,CAAN;AACD;;AAED,MAAIK,KAAK,CAACC,OAAN,CAAcP,KAAK,CAACK,aAApB,CAAJ,EAAwC;AACtC,QAAIX,KAAK,CAACc,QAAN,CAAeC,KAAf,CAAqBT,KAAK,CAACU,QAA3B,MAAyCV,KAAK,CAACK,aAAN,CAAoBM,MAAjE,EAAyE;AACvE,YAAM,IAAIP,KAAJ,CAAUH,GAAG,GAAG,wFAAhB,CAAN;AACD;AACF;AACF,CAfD","sourcesContent":["'use strict';\n\n// This module provides a centralized place for\n// runtime checking that the props passed to React Infinite\n// make the minimum amount of sense.\n\nvar React = global.React || require('react');\nvar _isFinite = require('lodash.isfinite');\n\nmodule.exports = function (props) {\n  var rie = 'Invariant Violation: ';\n  if (!(props.containerHeight || props.useWindowAsScrollContainer)) {\n    throw new Error(rie + 'Either containerHeight or useWindowAsScrollContainer must be provided.');\n  }\n\n  if (!(_isFinite(props.elementHeight) || Array.isArray(props.elementHeight))) {\n    throw new Error(rie + 'You must provide either a number or an array of numbers as the elementHeight.');\n  }\n\n  if (Array.isArray(props.elementHeight)) {\n    if (React.Children.count(props.children) !== props.elementHeight.length) {\n      throw new Error(rie + 'There must be as many values provided in the elementHeight prop as there are children.');\n    }\n  }\n};"]},"metadata":{},"sourceType":"script"}
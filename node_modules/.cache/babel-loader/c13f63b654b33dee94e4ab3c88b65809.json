{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js\";\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\n\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [{\n  item: '事例一',\n  count: 40\n}, {\n  item: '事例二',\n  count: 21\n}, {\n  item: '事例三',\n  count: 17\n}, {\n  item: '事例四',\n  count: 13\n}, {\n  item: '事例五',\n  count: 9\n}];\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%'\n}];\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(Chart, {\n      forceFit: true,\n      height: 400,\n      data: data,\n      scale: scale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      showTitle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Coord, {\n      type: \"theta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      dataKey: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      class: \"custom-select\",\n      value: this.state.value,\n      onChange: this.handleSubmitDonut,\n      style: {\n        width: \"110px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Xaxis\"), this.state.books.map((value, index) => {\n      return React.createElement(\"option\", {\n        class: \"btn btn-custom btn-block btn-detail\",\n        style: {\n          cursor: \"pointer;\",\n          fontSize: \"14px\"\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" \", value, \" \");\n    })), React.createElement(Pie, {\n      position: \"percent\",\n      color: \"item\",\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      label: ['percent', {\n        formatter: (val, item) => {\n          return item.point.item + ': ' + val;\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Reactjs;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Personal/TestRect/Reactjs.js"],"names":["Chart","Tooltip","Axis","Legend","Pie","Coord","React","Row","Col","Card","Button","Icon","Progress","DataSet","require","sourceData","item","count","scale","dataKey","min","formatter","dv","View","source","transform","type","field","dimension","as","data","rows","Reactjs","Component","constructor","props","state","render","value","handleSubmitDonut","width","marginLeft","books","map","index","cursor","fontSize","stroke","lineWidth","val","point"],"mappings":"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","sourcesContent":["import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { item: '事例一', count: 40 },\n  { item: '事例二', count: 21 },\n  { item: '事例三', count: 17 },\n  { item: '事例四', count: 13 },\n  { item: '事例五', count: 9 }\n];\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass Reactjs extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n      }\n   }\n\n  render() {\n    return (\n\n      <Chart forceFit height={400} data={data} scale={scale}>\n        <Tooltip showTitle={false} />\n        <Coord type=\"theta\" />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <select class=\"custom-select\"  value={this.state.value} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Pie\n          position=\"percent\"\n          color=\"item\"\n          style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n\n    );\n  }\n}\n\n\n\n\n\nexport default Reactjs;"]},"metadata":{},"sourceType":"module"}
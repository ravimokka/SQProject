{"ast":null,"code":"import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nimport * as setCustomFormatter from './setCustomFormatter';\nimport * as setQuickType from './setQuickType';\n\nfunction setSeriesGemo(chart, currSeries) {\n  var gemo = currSeries.gemo;\n\n  switch (gemo) {\n    case 'line':\n      chart = chart.line();\n      break;\n\n    case 'area':\n      chart = chart.area();\n      break;\n\n    case 'bar':\n    case 'interval':\n      chart = chart.interval();\n      break;\n\n    case 'point':\n      chart = chart.point();\n      break;\n\n    case 'schema':\n      chart = chart.schema();\n      break;\n\n    case 'polygon':\n      chart = chart.polygon();\n      break;\n\n    case 'contour':\n      chart = chart.contour();\n      break;\n\n    case 'heatmap':\n      chart = chart.heatmap();\n      break;\n\n    case 'edge':\n      chart = chart.edge();\n      break;\n\n    case 'path':\n      chart = chart.path();\n      break;\n\n    case 'venn':\n      chart = chart.venn();\n      break;\n\n    default:\n      chart = chart.line();\n  }\n\n  return chart;\n}\n\nfunction setSeriesPosition(chart, currSeries) {\n  var position = currSeries.position;\n\n  if (!_.isNil(position)) {\n    return chart.position(position);\n  }\n\n  return chart;\n}\n\nfunction setSeriesAdjust(chart, currSeries) {\n  var adjust = currSeries.adjust;\n\n  if (!_.isNil(adjust)) {\n    return chart.adjust(adjust);\n  }\n\n  return chart;\n}\n\nfunction setSeriesShape(chart, currSeries) {\n  var shape = currSeries.shape;\n\n  if (_.isString(shape)) {\n    return chart.shape(shape);\n  }\n\n  if (_.isArray(shape) && shape.length >= 1) {\n    if (shape[1]) {\n      return chart.shape(shape[0], shape[1]);\n    }\n\n    return chart.shape(shape[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesColor(chart, currSeries) {\n  var color = currSeries.color;\n\n  if (_.isString(color)) {\n    return chart.color(color);\n  }\n\n  if (_.isArray(color) && color.length >= 1) {\n    if (color[1]) {\n      return chart.color(color[0], color[1]);\n    }\n\n    return chart.color(color[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesSize(chart, currSeries) {\n  var size = currSeries.size;\n\n  if (_.isNumber(size) || _.isString(size)) {\n    return chart.size(size);\n  }\n\n  if (_.isArray(size) && size.length >= 1) {\n    if (size[1]) {\n      return chart.size(size[0], size[1]);\n    }\n\n    return chart.size(size[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesOpacity(chart, currSeries) {\n  var opacity = currSeries.opacity;\n\n  if (_.isNumber(opacity) || _.isString(opacity)) {\n    return chart.opacity(opacity);\n  }\n\n  if (_.isArray(opacity) && opacity.length >= 1) {\n    if (opacity[1]) {\n      return chart.opacity(opacity[0], opacity[1]);\n    }\n\n    return chart.opacity(opacity[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesLabel(chart, currSeries) {\n  var label = currSeries.label;\n\n  if (_.isString(label)) {\n    return chart.label(label);\n  }\n\n  if (_.isArray(label) && label.length >= 2) {\n    if (_.isNumber(label[1].density) && 0 < label[1].density && label[1].density < 1 && (_.isFunction(label[1].formatter) || _.isString(label[1].formatter))) {\n      var gap_1 = Math.floor(1 / label[1].density);\n      var formatter_1 = _.isString(label[1].formatter) ? setCustomFormatter.supportD3Formatter(label[1]).formatter : label[1].formatter;\n\n      label[1].formatter = function (val, item, i) {\n        if (i % gap_1) {\n          return ' ';\n        } else {\n          return formatter_1(val, item, i);\n        }\n      };\n    }\n\n    return chart.label.apply(chart, label);\n  }\n\n  return chart;\n}\n\nfunction setSeriesStyle(chart, currSeries) {\n  var style = currSeries.style;\n\n  if (_.isArray(style) && style.length >= 1) {\n    if (style[1]) {\n      return chart.style(style[0], style[1]);\n    }\n\n    return chart.style(style[0]);\n  }\n\n  if (_.isPlainObject(style)) {\n    return chart.style(style);\n  }\n\n  return chart;\n}\n\nfunction setSeriesTooltip(chart, currSeries) {\n  var tooltip = currSeries.tooltip;\n\n  if (_.isBoolean(tooltip) || _.isString(tooltip)) {\n    return chart.tooltip(tooltip);\n  }\n\n  if (_.isArray(tooltip) && tooltip.length >= 1) {\n    if (tooltip[1]) {\n      return chart.tooltip(tooltip[0], tooltip[1]);\n    }\n\n    return chart.tooltip(tooltip[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesSelect(chart, currSeries) {\n  var select = currSeries.select;\n\n  if (_.isBoolean(select)) {\n    return chart.select(select);\n  }\n\n  if (_.isArray(select) && select.length >= 1) {\n    if (select[1]) {\n      return chart.select(select[0], select[1]);\n    }\n\n    return chart.select(select[0]);\n  }\n\n  return chart;\n}\n\nfunction setSeriesActive(chart, currSeries) {\n  var active = currSeries.active;\n\n  if (_.isArray(active)) {\n    return chart.active.apply(chart, active);\n  }\n\n  if (_.isBoolean(active) || _.isPlainObject(active)) {\n    return chart.active(active);\n  }\n\n  return chart;\n}\n\nfunction setSeriesAnimate(chart, currSeries) {\n  var animate = currSeries.animate;\n\n  if (!_.isEmpty(animate)) {\n    return chart.animate(animate);\n  }\n\n  return chart;\n}\n\nexport var process = function (chart, config) {\n  var cSeries = _.cloneDeep(config.series);\n\n  var isArr = _.isArray(cSeries);\n\n  if (_.isNil(cSeries) || _.isEmpty(cSeries)) {\n    return chart;\n  }\n\n  var arrSeries = isArr ? cSeries : [cSeries];\n  arrSeries = setQuickType.process(arrSeries, config.coord);\n  arrSeries = _.sortBy(arrSeries, 'zIndex');\n  var chartInstance;\n  arrSeries.forEach(function (currSeries) {\n    EventUtils.setEvent(chart, currSeries.gemo, currSeries);\n\n    for (var item in currSeries) {\n      if (currSeries.hasOwnProperty(item)) {\n        EventUtils.setSEvent(chart, 'label', name, currSeries[item]);\n      }\n    }\n\n    chartInstance = setSeriesGemo(chart, currSeries);\n    chartInstance = setSeriesPosition(chartInstance, currSeries);\n    chartInstance = setSeriesAdjust(chartInstance, currSeries);\n    chartInstance = setSeriesShape(chartInstance, currSeries);\n    chartInstance = setSeriesColor(chartInstance, currSeries);\n    chartInstance = setSeriesOpacity(chartInstance, currSeries);\n    chartInstance = setSeriesSize(chartInstance, currSeries);\n    chartInstance = setSeriesLabel(chartInstance, currSeries);\n    chartInstance = setSeriesTooltip(chartInstance, currSeries);\n    chartInstance = setSeriesStyle(chartInstance, currSeries);\n    chartInstance = setSeriesSelect(chartInstance, currSeries);\n    chartInstance = setSeriesActive(chartInstance, currSeries);\n    chartInstance = setSeriesAnimate(chartInstance, currSeries);\n  });\n  return chartInstance;\n};","map":{"version":3,"sources":["../../src/components/setSeriesConfig.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAZ,MAAmB,QAAnB;AAGA,OAAO,KAAK,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAK,kBAAZ,MAAoC,sBAApC;AACA,OAAO,KAAK,YAAZ,MAA8B,gBAA9B;;AAEA,SAAS,aAAT,CAAuB,KAAvB,EAAmC,UAAnC,EAAsD;AACpD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAxB;;AAEA,UAAQ,IAAR;AACE,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AACA;;AACF,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AACA;;AACF,SAAK,KAAL;AACA,SAAK,UAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,QAAN,EAAR;AACA;;AACF,SAAK,OAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,KAAN,EAAR;AACA;;AACF,SAAK,QAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,MAAN,EAAR;AACA;;AACF,SAAK,SAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,EAAR;AACA;;AACF,SAAK,SAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,EAAR;AACA;;AACF,SAAK,SAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,EAAR;AACA;;AACF,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AACA;;AACF,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AACA;;AACF,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AACA;;AACF;AACE,MAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;AApCJ;;AAuCA,SAAO,KAAP;AACD;;AAED,SAAS,iBAAT,CAA2B,KAA3B,EAAuC,UAAvC,EAA0D;AACxD,MAAM,QAAQ,GAAG,UAAU,CAAC,QAA5B;;AACA,MAAI,CAAC,CAAC,CAAC,KAAF,CAAQ,QAAR,CAAL,EAAwB;AAAE,WAAO,KAAK,CAAC,QAAN,CAAe,QAAf,CAAP;AAAkC;;AAE5D,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CAAyB,KAAzB,EAAqC,UAArC,EAAwD;AACtD,MAAM,MAAM,GAAG,UAAU,CAAC,MAA1B;;AACA,MAAI,CAAC,CAAC,CAAC,KAAF,CAAQ,MAAR,CAAL,EAAsB;AAAE,WAAO,KAAK,CAAC,MAAN,CAAa,MAAb,CAAP;AAA8B;;AAEtD,SAAO,KAAP;AACD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAAoC,UAApC,EAAuD;AACrD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAzB;;AAEA,MAAI,CAAC,CAAC,QAAF,CAAW,KAAX,CAAJ,EAAuB;AACrB,WAAO,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,KAAV,KAAoB,KAAK,CAAC,MAAN,IAAgB,CAAxC,EAA2C;AACzC,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ,aAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,EAAsB,KAAK,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAAoC,UAApC,EAAuD;AACrD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAzB;;AAEA,MAAI,CAAC,CAAC,QAAF,CAAW,KAAX,CAAJ,EAAuB;AACrB,WAAO,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,KAAV,KAAoB,KAAK,CAAC,MAAN,IAAgB,CAAxC,EAA2C;AACzC,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ,aAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,EAAsB,KAAK,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,aAAT,CAAuB,KAAvB,EAAmC,UAAnC,EAAsD;AACpD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAxB;;AAEA,MAAI,CAAC,CAAC,QAAF,CAAW,IAAX,KAAoB,CAAC,CAAC,QAAF,CAAW,IAAX,CAAxB,EAA0C;AACxC,WAAO,KAAK,CAAC,IAAN,CAAW,IAAX,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,IAAV,KAAmB,IAAI,CAAC,MAAL,IAAe,CAAtC,EAAyC;AACvC,QAAI,IAAI,CAAC,CAAD,CAAR,EAAa;AACX,aAAO,KAAK,CAAC,IAAN,CAAW,IAAI,CAAC,CAAD,CAAf,EAAoB,IAAI,CAAC,CAAD,CAAxB,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,IAAN,CAAW,IAAI,CAAC,CAAD,CAAf,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAsC,UAAtC,EAAyD;AACvD,MAAM,OAAO,GAAG,UAAU,CAAC,OAA3B;;AAEA,MAAI,CAAC,CAAC,QAAF,CAAW,OAAX,KAAuB,CAAC,CAAC,QAAF,CAAW,OAAX,CAA3B,EAAgD;AAC9C,WAAO,KAAK,CAAC,OAAN,CAAc,OAAd,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,OAAV,KAAsB,OAAO,CAAC,MAAR,IAAkB,CAA5C,EAA+C;AAC7C,QAAI,OAAO,CAAC,CAAD,CAAX,EAAgB;AACd,aAAO,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,CAAD,CAArB,EAA0B,OAAO,CAAC,CAAD,CAAjC,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,CAAD,CAArB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAAoC,UAApC,EAAuD;AACrD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAzB;;AAEA,MAAI,CAAC,CAAC,QAAF,CAAW,KAAX,CAAJ,EAAuB;AACrB,WAAO,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAP;AACD;;AACD,MAAI,CAAC,CAAC,OAAF,CAAU,KAAV,KAAoB,KAAK,CAAC,MAAN,IAAgB,CAAxC,EAA2C;AAEzC,QAAI,CAAC,CAAC,QAAF,CAAW,KAAK,CAAC,CAAD,CAAL,CAAS,OAApB,KACE,IAAI,KAAK,CAAC,CAAD,CAAL,CAAS,OADf,IAC6B,KAAK,CAAC,CAAD,CAAL,CAAS,OAAT,GAAmB,CADhD,KAEE,CAAC,CAAC,UAAF,CAAa,KAAK,CAAC,CAAD,CAAL,CAAS,SAAtB,KAAoC,CAAC,CAAC,QAAF,CAAW,KAAK,CAAC,CAAD,CAAL,CAAS,SAApB,CAFtC,CAAJ,EAE2E;AACzE,UAAM,KAAG,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,KAAK,CAAC,CAAD,CAAL,CAAS,OAAxB,CAAZ;AACA,UAAM,WAAS,GAAG,CAAC,CAAC,QAAF,CAAW,KAAK,CAAC,CAAD,CAAL,CAAS,SAApB,IAChB,kBAAkB,CAAC,kBAAnB,CAAsC,KAAK,CAAC,CAAD,CAA3C,EAAgD,SADhC,GAC4C,KAAK,CAAC,CAAD,CAAL,CAAS,SADvE;;AAEA,MAAA,KAAK,CAAC,CAAD,CAAL,CAAS,SAAT,GAAqB,UAAC,GAAD,EAAW,IAAX,EAAsB,CAAtB,EAA+B;AAClD,YAAI,CAAC,GAAG,KAAR,EAAa;AACX,iBAAO,GAAP;AACD,SAFD,MAEO;AACL,iBAAO,WAAS,CAAC,GAAD,EAAM,IAAN,EAAY,CAAZ,CAAhB;AACD;AACF,OAND;AAOD;;AACD,WAAO,KAAK,CAAC,KAAN,CAAW,KAAX,CAAA,KAAA,EAAe,KAAf,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAAoC,UAApC,EAAuD;AACrD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAzB;;AAEA,MAAI,CAAC,CAAC,OAAF,CAAU,KAAV,KAAoB,KAAK,CAAC,MAAN,IAAgB,CAAxC,EAA2C;AACzC,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ,aAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,EAAsB,KAAK,CAAC,CAAD,CAA3B,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,CAAD,CAAjB,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,aAAF,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,WAAO,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAsC,UAAtC,EAAyD;AACvD,MAAM,OAAO,GAAG,UAAU,CAAC,OAA3B;;AAEA,MAAI,CAAC,CAAC,SAAF,CAAY,OAAZ,KAAwB,CAAC,CAAC,QAAF,CAAW,OAAX,CAA5B,EAAiD;AAC/C,WAAO,KAAK,CAAC,OAAN,CAAc,OAAd,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,OAAV,KAAsB,OAAO,CAAC,MAAR,IAAkB,CAA5C,EAA+C;AAC7C,QAAI,OAAO,CAAC,CAAD,CAAX,EAAgB;AACd,aAAO,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,CAAD,CAArB,EAA0B,OAAO,CAAC,CAAD,CAAjC,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,CAAD,CAArB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CAAyB,KAAzB,EAAqC,UAArC,EAAwD;AACtD,MAAM,MAAM,GAAG,UAAU,CAAC,MAA1B;;AAEA,MAAI,CAAC,CAAC,SAAF,CAAY,MAAZ,CAAJ,EAAyB;AACvB,WAAO,KAAK,CAAC,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,OAAF,CAAU,MAAV,KAAqB,MAAM,CAAC,MAAP,IAAiB,CAA1C,EAA6C;AAC3C,QAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACb,aAAO,KAAK,CAAC,MAAN,CAAa,MAAM,CAAC,CAAD,CAAnB,EAAwB,MAAM,CAAC,CAAD,CAA9B,CAAP;AACD;;AAED,WAAO,KAAK,CAAC,MAAN,CAAa,MAAM,CAAC,CAAD,CAAnB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CAAyB,KAAzB,EAAqC,UAArC,EAAwD;AACtD,MAAM,MAAM,GAAG,UAAU,CAAC,MAA1B;;AAEA,MAAI,CAAC,CAAC,OAAF,CAAU,MAAV,CAAJ,EAAuB;AACrB,WAAO,KAAK,CAAC,MAAN,CAAY,KAAZ,CAAA,KAAA,EAAgB,MAAhB,CAAP;AACD;;AAED,MAAI,CAAC,CAAC,SAAF,CAAY,MAAZ,KAAuB,CAAC,CAAC,aAAF,CAAgB,MAAhB,CAA3B,EAAoD;AAClD,WAAO,KAAK,CAAC,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAsC,UAAtC,EAAyD;AACvD,MAAM,OAAO,GAAG,UAAU,CAAC,OAA3B;;AAEA,MAAI,CAAC,CAAC,CAAC,OAAF,CAAU,OAAV,CAAL,EAAyB;AACvB,WAAO,KAAK,CAAC,OAAN,CAAc,OAAd,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,OAAO,IAAM,OAAO,GAAG,UAAC,KAAD,EAAa,MAAb,EAAgC;AACrD,MAAM,OAAO,GAAG,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,MAAnB,CAAhB;;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,OAAF,CAAU,OAAV,CAAd;;AAEA,MAAI,CAAC,CAAC,KAAF,CAAQ,OAAR,KAAoB,CAAC,CAAC,OAAF,CAAU,OAAV,CAAxB,EAA4C;AAAE,WAAO,KAAP;AAAe;;AAE7D,MAAI,SAAS,GAAG,KAAK,GAAG,OAAH,GAAa,CAAC,OAAD,CAAlC;AACA,EAAA,SAAS,GAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,EAAgC,MAAM,CAAC,KAAvC,CAAZ;AAGA,EAAA,SAAS,GAAG,CAAC,CAAC,MAAF,CAAS,SAAT,EAAoB,QAApB,CAAZ;AAEA,MAAI,aAAJ;AACA,EAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,UAAD,EAAgB;AAChC,IAAA,UAAU,CAAC,QAAX,CAAoB,KAApB,EAA2B,UAAU,CAAC,IAAtC,EAA4C,UAA5C;;AAEA,SAAK,IAAM,IAAX,IAAmB,UAAnB,EAA+B;AAC7B,UAAI,UAAU,CAAC,cAAX,CAA0B,IAA1B,CAAJ,EAAqC;AACnC,QAAA,UAAU,CAAC,SAAX,CAAqB,KAArB,EAA4B,OAA5B,EAAqC,IAArC,EAA2C,UAAU,CAAC,IAAD,CAArD;AACD;AACF;;AAED,IAAA,aAAa,GAAG,aAAa,CAAC,KAAD,EAAQ,UAAR,CAA7B;AACA,IAAA,aAAa,GAAG,iBAAiB,CAAC,aAAD,EAAgB,UAAhB,CAAjC;AACA,IAAA,aAAa,GAAG,eAAe,CAAC,aAAD,EAAgB,UAAhB,CAA/B;AACA,IAAA,aAAa,GAAG,cAAc,CAAC,aAAD,EAAgB,UAAhB,CAA9B;AACA,IAAA,aAAa,GAAG,cAAc,CAAC,aAAD,EAAgB,UAAhB,CAA9B;AACA,IAAA,aAAa,GAAG,gBAAgB,CAAC,aAAD,EAAgB,UAAhB,CAAhC;AACA,IAAA,aAAa,GAAG,aAAa,CAAC,aAAD,EAAgB,UAAhB,CAA7B;AACA,IAAA,aAAa,GAAG,cAAc,CAAC,aAAD,EAAgB,UAAhB,CAA9B;AACA,IAAA,aAAa,GAAG,gBAAgB,CAAC,aAAD,EAAgB,UAAhB,CAAhC;AACA,IAAA,aAAa,GAAG,cAAc,CAAC,aAAD,EAAgB,UAAhB,CAA9B;AACA,IAAA,aAAa,GAAG,eAAe,CAAC,aAAD,EAAgB,UAAhB,CAA/B;AACA,IAAA,aAAa,GAAG,eAAe,CAAC,aAAD,EAAgB,UAAhB,CAA/B;AACA,IAAA,aAAa,GAAG,gBAAgB,CAAC,aAAD,EAAgB,UAAhB,CAAhC;AACD,GAtBD;AAwBA,SAAO,aAAP;AACD,CAtCM","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport * as EventUtils from '../utils/EventUtils';\nimport * as setCustomFormatter from './setCustomFormatter';\nimport * as setQuickType from './setQuickType';\nfunction setSeriesGemo(chart, currSeries) {\n    var gemo = currSeries.gemo;\n    switch (gemo) {\n        case 'line':\n            chart = chart.line();\n            break;\n        case 'area':\n            chart = chart.area();\n            break;\n        case 'bar':\n        case 'interval':\n            chart = chart.interval();\n            break;\n        case 'point':\n            chart = chart.point();\n            break;\n        case 'schema':\n            chart = chart.schema();\n            break;\n        case 'polygon':\n            chart = chart.polygon();\n            break;\n        case 'contour':\n            chart = chart.contour();\n            break;\n        case 'heatmap':\n            chart = chart.heatmap();\n            break;\n        case 'edge':\n            chart = chart.edge();\n            break;\n        case 'path':\n            chart = chart.path();\n            break;\n        case 'venn':\n            chart = chart.venn();\n            break;\n        default:\n            chart = chart.line();\n    }\n    return chart;\n}\nfunction setSeriesPosition(chart, currSeries) {\n    var position = currSeries.position;\n    if (!_.isNil(position)) {\n        return chart.position(position);\n    }\n    return chart;\n}\nfunction setSeriesAdjust(chart, currSeries) {\n    var adjust = currSeries.adjust;\n    if (!_.isNil(adjust)) {\n        return chart.adjust(adjust);\n    }\n    return chart;\n}\nfunction setSeriesShape(chart, currSeries) {\n    var shape = currSeries.shape;\n    if (_.isString(shape)) {\n        return chart.shape(shape);\n    }\n    if (_.isArray(shape) && shape.length >= 1) {\n        if (shape[1]) {\n            return chart.shape(shape[0], shape[1]);\n        }\n        return chart.shape(shape[0]);\n    }\n    return chart;\n}\nfunction setSeriesColor(chart, currSeries) {\n    var color = currSeries.color;\n    if (_.isString(color)) {\n        return chart.color(color);\n    }\n    if (_.isArray(color) && color.length >= 1) {\n        if (color[1]) {\n            return chart.color(color[0], color[1]);\n        }\n        return chart.color(color[0]);\n    }\n    return chart;\n}\nfunction setSeriesSize(chart, currSeries) {\n    var size = currSeries.size;\n    if (_.isNumber(size) || _.isString(size)) {\n        return chart.size(size);\n    }\n    if (_.isArray(size) && size.length >= 1) {\n        if (size[1]) {\n            return chart.size(size[0], size[1]);\n        }\n        return chart.size(size[0]);\n    }\n    return chart;\n}\nfunction setSeriesOpacity(chart, currSeries) {\n    var opacity = currSeries.opacity;\n    if (_.isNumber(opacity) || _.isString(opacity)) {\n        return chart.opacity(opacity);\n    }\n    if (_.isArray(opacity) && opacity.length >= 1) {\n        if (opacity[1]) {\n            return chart.opacity(opacity[0], opacity[1]);\n        }\n        return chart.opacity(opacity[0]);\n    }\n    return chart;\n}\nfunction setSeriesLabel(chart, currSeries) {\n    var label = currSeries.label;\n    if (_.isString(label)) {\n        return chart.label(label);\n    }\n    if (_.isArray(label) && label.length >= 2) {\n        if (_.isNumber(label[1].density)\n            && (0 < label[1].density) && (label[1].density < 1)\n            && (_.isFunction(label[1].formatter) || _.isString(label[1].formatter))) {\n            var gap_1 = Math.floor(1 / label[1].density);\n            var formatter_1 = _.isString(label[1].formatter) ?\n                setCustomFormatter.supportD3Formatter(label[1]).formatter : label[1].formatter;\n            label[1].formatter = function (val, item, i) {\n                if (i % gap_1) {\n                    return ' ';\n                }\n                else {\n                    return formatter_1(val, item, i);\n                }\n            };\n        }\n        return chart.label.apply(chart, label);\n    }\n    return chart;\n}\nfunction setSeriesStyle(chart, currSeries) {\n    var style = currSeries.style;\n    if (_.isArray(style) && style.length >= 1) {\n        if (style[1]) {\n            return chart.style(style[0], style[1]);\n        }\n        return chart.style(style[0]);\n    }\n    if (_.isPlainObject(style)) {\n        return chart.style(style);\n    }\n    return chart;\n}\nfunction setSeriesTooltip(chart, currSeries) {\n    var tooltip = currSeries.tooltip;\n    if (_.isBoolean(tooltip) || _.isString(tooltip)) {\n        return chart.tooltip(tooltip);\n    }\n    if (_.isArray(tooltip) && tooltip.length >= 1) {\n        if (tooltip[1]) {\n            return chart.tooltip(tooltip[0], tooltip[1]);\n        }\n        return chart.tooltip(tooltip[0]);\n    }\n    return chart;\n}\nfunction setSeriesSelect(chart, currSeries) {\n    var select = currSeries.select;\n    if (_.isBoolean(select)) {\n        return chart.select(select);\n    }\n    if (_.isArray(select) && select.length >= 1) {\n        if (select[1]) {\n            return chart.select(select[0], select[1]);\n        }\n        return chart.select(select[0]);\n    }\n    return chart;\n}\nfunction setSeriesActive(chart, currSeries) {\n    var active = currSeries.active;\n    if (_.isArray(active)) {\n        return chart.active.apply(chart, active);\n    }\n    if (_.isBoolean(active) || _.isPlainObject(active)) {\n        return chart.active(active);\n    }\n    return chart;\n}\nfunction setSeriesAnimate(chart, currSeries) {\n    var animate = currSeries.animate;\n    if (!_.isEmpty(animate)) {\n        return chart.animate(animate);\n    }\n    return chart;\n}\nexport var process = function (chart, config) {\n    var cSeries = _.cloneDeep(config.series);\n    var isArr = _.isArray(cSeries);\n    if (_.isNil(cSeries) || _.isEmpty(cSeries)) {\n        return chart;\n    }\n    var arrSeries = isArr ? cSeries : [cSeries];\n    arrSeries = setQuickType.process(arrSeries, config.coord);\n    arrSeries = _.sortBy(arrSeries, 'zIndex');\n    var chartInstance;\n    arrSeries.forEach(function (currSeries) {\n        EventUtils.setEvent(chart, currSeries.gemo, currSeries);\n        for (var item in currSeries) {\n            if (currSeries.hasOwnProperty(item)) {\n                EventUtils.setSEvent(chart, 'label', name, currSeries[item]);\n            }\n        }\n        chartInstance = setSeriesGemo(chart, currSeries);\n        chartInstance = setSeriesPosition(chartInstance, currSeries);\n        chartInstance = setSeriesAdjust(chartInstance, currSeries);\n        chartInstance = setSeriesShape(chartInstance, currSeries);\n        chartInstance = setSeriesColor(chartInstance, currSeries);\n        chartInstance = setSeriesOpacity(chartInstance, currSeries);\n        chartInstance = setSeriesSize(chartInstance, currSeries);\n        chartInstance = setSeriesLabel(chartInstance, currSeries);\n        chartInstance = setSeriesTooltip(chartInstance, currSeries);\n        chartInstance = setSeriesStyle(chartInstance, currSeries);\n        chartInstance = setSeriesSelect(chartInstance, currSeries);\n        chartInstance = setSeriesActive(chartInstance, currSeries);\n        chartInstance = setSeriesAnimate(chartInstance, currSeries);\n    });\n    return chartInstance;\n};\n//# sourceMappingURL=setSeriesConfig.js.map"]},"metadata":{},"sourceType":"module"}
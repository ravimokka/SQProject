{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../registry');\n/**\n * localize: translate a string for the current locale\n *\n * @param {object} gd: the graphDiv for context\n *  gd._context.locale determines the language (& optional region/country)\n *  the dictionary for each locale may either be supplied in\n *  gd._context.locales or globally via Plotly.register\n * @param {string} s: the string to translate\n */\n\n\nmodule.exports = function localize(gd, s) {\n  var locale = gd._context.locale;\n  /*\n   * Priority of lookup:\n   *     contextDicts[locale],\n   *     registeredDicts[locale],\n   *     contextDicts[baseLocale], (if baseLocale is distinct)\n   *     registeredDicts[baseLocale]\n   * Return the first translation we find.\n   * This way if you have a regionalization you are allowed to specify\n   * only what's different from the base locale, everything else will\n   * fall back on the base.\n   */\n\n  for (var i = 0; i < 2; i++) {\n    var locales = gd._context.locales;\n\n    for (var j = 0; j < 2; j++) {\n      var dict = (locales[locale] || {}).dictionary;\n\n      if (dict) {\n        var out = dict[s];\n        if (out) return out;\n      }\n\n      locales = Registry.localeRegistry;\n    }\n\n    var baseLocale = locale.split('-')[0];\n    if (baseLocale === locale) break;\n    locale = baseLocale;\n  }\n\n  return s;\n};","map":null,"metadata":{},"sourceType":"script"}
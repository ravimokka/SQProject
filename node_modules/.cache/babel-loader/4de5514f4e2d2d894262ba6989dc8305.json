{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/ChartDashboard.js\";\nimport React, { Component } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Modal, Select } from 'antd';\nimport LineChart from './LineChart';\nconst Option = Select.Option;\n\nclass ChartDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false,\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onChange = value => {\n      console.log(`selected ${value}`);\n    };\n\n    this.onBlur = () => {\n      console.log('blur');\n    };\n\n    this.onFocus = () => {\n      console.log('focus');\n    };\n\n    this.onSearch = val => {\n      console.log('search:', val);\n    };\n\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false,\n      loading: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"button-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Create Dashboard\"), React.createElement(Modal, {\n      title: \"Add New Chart\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      confirmLoading: this.state.confirmLoading,\n      onCancel: this.handleCancel,\n      footer: [React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        key: \"submit\",\n        type: \"success\",\n        loading: this.state.loading,\n        onClick: this.handleOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Add Chart\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: 300\n      },\n      placeholder: \"Select a option\",\n      optionFilterProp: \"children\",\n      onChange: this.onChange,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onSearch: this.onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"jack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"line-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), \" Line Chart\"), React.createElement(Option, {\n      value: \"lucy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"bar-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \" Bar Chart\"), React.createElement(Option, {\n      value: \"tom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"pie-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \" Pie Chart\"), React.createElement(Option, {\n      value: \"tom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"area-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \" Area Chart\")), \",\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      ghost: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Save Dashboard\"))))))), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), \",\");\n  }\n\n}\n\nexport default ChartDashboard;","map":{"version":3,"sources":["/home/user/Desktop/milonux-sq-dashboard-59aefe7abad7/src/Management/ChartDashboard/ChartDashboard.js"],"names":["React","Component","Link","Switch","Route","Row","Col","Card","Button","Layout","Menu","Breadcrumb","Icon","Tree","Checkbox","Modal","Select","LineChart","Option","ChartDashboard","constructor","props","showModal","setState","visible","handleOk","loading","ModalText","confirmLoading","setTimeout","handleCancel","console","log","onChange","value","onBlur","onFocus","onSearch","val","state","render","width","input","option","children","toLowerCase","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card,\n         Button, Layout,\n         Menu, Breadcrumb,\n         Icon, Tree, Checkbox,\n         Modal, Select} from 'antd';\nimport LineChart from './LineChart';\nconst { Option } = Select;\n\n\nclass ChartDashboard extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n       ModalText: 'Content of the modal',\n       visible: false,\n       confirmLoading: false,\n       loading: false,\n\n    };\n }\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n\n    this.setState({ loading: true });\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n         loading: false,\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\nonChange = (value) => {\n  console.log(`selected ${value}`);\n}\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\n  render() {\n    return (\n\n     <div>\n              <div className=\"page-header\">\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Col>\n                      <h1 className=\"page-heading\"></h1>\n                    </Col>\n                    <Col>\n                      <ul className=\"button-actions\">\n                        <li>\n                          <div>\n                            <Button type=\"primary\" onClick={this.showModal}>\n                              Create Dashboard\n                            </Button>\n                               <Modal\n                                  title=\"Add New Chart\"\n                                  visible={this.state.visible}\n                                  onOk={this.handleOk}\n                                  confirmLoading={this.state.confirmLoading}\n                                  onCancel={this.handleCancel}\n                                  footer={[\n                                    <Button key=\"back\" onClick={this.handleCancel}>\n                                      Cancel\n                                    </Button>,\n                                    <Button key=\"submit\" type=\"success\" loading={this.state.loading} onClick={this.handleOk}>\n                                      Add Chart\n                                    </Button>,\n                                  ]}\n                                  >\n                                      <Select\n                                            showSearch\n                                            style={{ width: 300 }}\n                                            placeholder=\"Select a option\"\n                                            optionFilterProp=\"children\"\n                                            onChange={this.onChange}\n                                            onFocus={this.onFocus}\n                                            onBlur={this.onBlur}\n                                            onSearch={this.onSearch}\n                                            filterOption={(input, option) =>\n                                              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                          >\n                                            <Option value=\"jack\"><Icon type=\"line-chart\" /> Line Chart</Option>\n                                            <Option value=\"lucy\"><Icon type=\"bar-chart\" /> Bar Chart</Option>\n                                            <Option value=\"tom\"><Icon type=\"pie-chart\" /> Pie Chart</Option>\n                                            <Option value=\"tom\"><Icon type=\"area-chart\" /> Area Chart</Option>\n                                      </Select>,\n                                </Modal>\n                          </div>\n                        </li>\n                        <li>\n                          <a href=\"\">\n                            <Button type=\"primary\" ghost>\n                              Save Dashboard\n                            </Button>\n                          </a>\n                        </li>\n                      </ul>\n                    </Col>\n                  </Row>\n                </div>\n          <Layout>\n              <LineChart />\n          </Layout>,\n\n    </div>\n\n\n    );\n  }\n}\nexport default ChartDashboard;\n\n\n"]},"metadata":{},"sourceType":"module"}
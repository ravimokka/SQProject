"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _input = _interopRequireDefault(require("./input.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }

var buttonStyle1 = {
  float: 'right',
  cursor: 'pointer',
  marginTop: '1rem',
  padding: '0.5rem 1rem',
  color: '#FFF',
  fontSize: '0.875rem',
  backgroundPosition: 'center',
  transition: 'background 0.8s'
};
var errorStyle = {
  fontSize: '0.875rem',
  height: '0.875rem',
  color: '#CC2C21',
  fontStyle: 'italic'
};

var LoginForm =
/*#__PURE__*/
function (_React$Component) {
  function LoginForm(props) {
    var _this;

    _classCallCheck(this, LoginForm);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));
    _this.state = {
      username: '',
      password: '',
      usernameError: '',
      passwordError: ''
    };
    return _this;
  }

  _createClass(LoginForm, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this._updateStyles();
    }
  }, {
    key: "_resetError",
    value: function _resetError() {
      this.setState({
        usernameError: '',
        passwordError: ''
      });
    }
  }, {
    key: "_isInputValid",
    value: function _isInputValid() {
      this._resetError();

      var isValid = true;

      if (this.state.username === '') {
        this.setState({
          usernameError: 'Username cannot be empty'
        });
        isValid = false;
      }

      if (this.state.password === '') {
        this.setState({
          passwordError: 'Password cannot be empty'
        });
        isValid = false;
      }

      return isValid;
    }
  }, {
    key: "_login",
    value: function _login() {
      if (this._isInputValid()) {
        var _this$state = this.state,
            username = _this$state.username,
            password = _this$state.password;
        this.props.login(username, password);
      }
    }
  }, {
    key: "_openSignupForm",
    value: function _openSignupForm() {
      this.props.openSignupForm();
    }
  }, {
    key: "_onUsernameChange",
    value: function _onUsernameChange(val) {
      this.setState({
        username: val
      });
    }
  }, {
    key: "onPasswordChange",
    value: function onPasswordChange(val) {
      this.setState({
        password: val
      });
    }
  }, {
    key: "_updateStyles",
    value: function _updateStyles() {
      // Button Styles
      if (this.props.buttonColor !== null) {
        buttonStyle1.color = this.props.buttonColor;
      } // Error message Styles


      if (this.props.errorStyle !== null) {
        errorStyle = this.props.errorStyle;
        errorStyle.height = this.props.errorStyle.fontSize || '1rem';
      } else {
        if (this.props.errorFontColor !== null) {
          errorStyle.color = this.props.errorFontColor;
        }

        if (this.props.errorFontSize !== null) {
          errorStyle.fontSize = this.props.errorFontSize;
          errorStyle.height = this.props.errorFontSize;
        }

        if (this.props.errorFontStyle !== null) {
          errorStyle.fontStyle = this.props.errorFontStyle;
        }
      }
    }
  }, {
    key: "_renderUsernameInput",
    value: function _renderUsernameInput() {
      var _this2 = this;

      return _react.default.createElement("div", null, _react.default.cloneElement(this.props.inputElement, {
        onChange: function onChange(val) {
          return _this2._onUsernameChange(val);
        },
        value: this.state.username
      }), _react.default.createElement("div", {
        style: errorStyle
      }, this.state.usernameError));
    }
  }, {
    key: "_renderPasswordInput",
    value: function _renderPasswordInput() {
      var _this3 = this;

      return _react.default.createElement("div", null, _react.default.cloneElement(this.props.inputElement, {
        onChange: function onChange(val) {
          return _this3.onPasswordChange(val);
        },
        value: this.state.password,
        isPassword: true
      }), _react.default.createElement("div", {
        style: errorStyle
      }, this.state.passwordError));
    }
  }, {
    key: "_renderLoginButton",
    value: function _renderLoginButton() {
      var _this4 = this;

      var style = {
        float: 'right',
        marginTop: '1rem'
      };
      return _react.default.createElement("div", {
        style: style
      }, _react.default.cloneElement(this.props.loginButton, {
        onClick: function onClick() {
          return _this4._login();
        }
      }));
    }
  }, {
    key: "_renderSignupButton",
    value: function _renderSignupButton() {
      var _this5 = this;

      var style = {
        float: 'left',
        marginTop: '1rem'
      };
      return _react.default.createElement("div", {
        style: style
      }, _react.default.cloneElement(this.props.signupButton, {
        onClick: function onClick() {
          return _this5._openSignupForm();
        }
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      return _react.default.createElement("div", null, this.props.inputElement ? _react.default.createElement("div", null, this._renderUsernameInput(), this._renderPasswordInput()) : _react.default.createElement("div", null, _react.default.createElement(_input.default, {
        borderColor: this.props.inputBorderColor,
        borderFocusedColor: this.props.inputBorderFocusedColor,
        fontColor: this.props.inputFontColor,
        hintColor: this.props.inputHintColor,
        hintFocusedColor: this.props.inputHintFocusedColor,
        hintText: "Username",
        onChange: function onChange(val) {
          return _this6._onUsernameChange(val);
        },
        value: this.state.username,
        width: this.props.inputWidth
      }), _react.default.createElement("div", {
        style: errorStyle
      }, this.state.usernameError), _react.default.createElement(_input.default, {
        borderColor: this.props.inputBorderColor,
        borderFocusedColor: this.props.inputBorderFocusedColor,
        fontColor: this.props.inputFontColor,
        hintColor: this.props.inputHintColor,
        hintFocusedColor: this.props.inputHintFocusedColor,
        hintText: "Password",
        isPassword: true,
        onChange: function onChange(val) {
          return _this6.onPasswordChange(val);
        },
        value: this.state.password,
        width: this.props.inputWidth
      }), _react.default.createElement("div", {
        style: errorStyle
      }, this.state.passwordError)), this.props.loginButton ? this._renderLoginButton() : _react.default.createElement("div", {
        onClick: function onClick() {
          return _this6._login();
        },
        style: buttonStyle1
      }, "LOGIN"), this.props.signupButton ? this._renderSignupButton() : _react.default.createElement("div", {
        onClick: function onClick() {
          return _this6._openSignupForm();
        },
        style: _objectSpread({}, buttonStyle1, {
          float: 'left'
        })
      }, "SIGNUP"));
    }
  }]);

  _inherits(LoginForm, _React$Component);

  return LoginForm;
}(_react.default.Component);

LoginForm.propTypes = {
  loginButton: _propTypes.default.node,
  errorFontColor: _propTypes.default.string,
  errorFontSize: _propTypes.default.string,
  errorFontStyle: _propTypes.default.string,
  errorStyle: _propTypes.default.object,
  inputBorderColor: _propTypes.default.string,
  inputBorderFocusedColor: _propTypes.default.string,
  inputElement: _propTypes.default.node,
  inputFontColor: _propTypes.default.string,
  inputHintColor: _propTypes.default.string,
  inputHintFocusedColor: _propTypes.default.string,
  inputWidth: _propTypes.default.string,
  login: _propTypes.default.func.isRequired,
  openSignupForm: _propTypes.default.func.isRequired,
  signupButton: _propTypes.default.node
};
LoginForm.defaultProps = {
  loginButton: null,
  errorFontColor: null,
  errorFontSize: null,
  errorFontStyle: null,
  errorStyle: null,
  inputBorderColor: null,
  inputBorderFocusedColor: null,
  inputElement: null,
  inputFontColor: null,
  inputHintColor: null,
  inputHintFocusedColor: null,
  inputWidth: null,
  signupButton: null
};
var _default = LoginForm;
exports.default = _default;
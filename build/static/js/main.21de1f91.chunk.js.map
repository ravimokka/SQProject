{"version":3,"sources":["Personal/Home/plotly.js","Management/Home/plotly.js","Host/Host.js","Auth/Login.js","Workspace/Workspace.js","Signup/Signup.js","Personal/Home/DataScatter.js","Personal/Home/DataArea.js","Personal/Home/BusinessData.js","Personal/Home/RevenueScatter.js","Personal/Home/Home.js","Personal/BidRequest/BidRequest.js","Personal/RequestProposal/RequestProposal.js","Personal/components/charts/ChartHistoryGroupColumn.js","Personal/components/charts/ChartBreakdownDonut.js","Personal/BankPersonal/BankPersonal.js","Personal/AnalyticalTest/AnalyticalTest.js","Personal/TestRect/Reactjs.js","Personal/Test/chart.js","Personal/Test/Test.js","Personal/Operations/Operations.js","Personal/Finance/Finance.js","Personal/components/Form/FormAccountSetting.js","Personal/AccountSetting/AccountSetting.js","Personal/Calendar/CalendarPage.js","Management/Home/DataScatter.js","Management/Home/DataArea.js","Management/Home/Home.js","Management/ManagementCharts/LineChart.js","Management/ManagementCharts/BarChart.js","Management/ManagementCharts/VerticalChart.js","Management/ManagementCharts/DonutChart.js","Management/ManagementCharts/PieChart.js","Management/ManagementCharts/GroupBarChart.js","Management/ManagementCharts/MixedChart.js","Management/ManagementCharts/AreaChart.js","Management/ManagementCharts/ManagementCharts.js","Management/OperationalCharts/LineChart.js","Management/OperationalCharts/BarChart.js","Management/OperationalCharts/VerticalChart.js","Management/OperationalCharts/DonutChart.js","Management/OperationalCharts/PieChart.js","Management/OperationalCharts/GroupBarChart.js","Management/OperationalCharts/MixedChart.js","Management/OperationalCharts/AreaChart.js","Management/OperationalCharts/OperationalCharts.js","Management/FinancialCharts/LineChart.js","Management/FinancialCharts/BarChart.js","Management/FinancialCharts/VerticalChart.js","Management/FinancialCharts/DonutChart.js","Management/FinancialCharts/PieChart.js","Management/FinancialCharts/GroupBarChart.js","Management/FinancialCharts/MixedChart.js","Management/FinancialCharts/AreaChart.js","Management/FinancialCharts/FinancialCharts.js","Management/AddUser/AddUser.js","Management/ChartDashboard/LineChart.js","Management/ChartDashboard/AllCharts.js","Management/ChartDashboard/BarChart.js","Management/ChartDashboard/VerticalChart.js","Management/ChartDashboard/GroupBarChart.js","Management/ChartDashboard/DonutChart.js","Management/ChartDashboard/PieChart.js","Management/ChartDashboard/MixedChart.js","Management/ChartDashboard/AreaChart.js","Management/ChartDashboard/ChartDashboard.js","router/routes.js","router/index.js","Personal/components/Header/NotificationTab.js","FirebaseConfig/FirebaseConfig.js","Personal/Layout/chart_room.js","Personal/Layout/PageLayout.js","Management/components/Header/NotificationTab.js","Management/Layout/chart_room.js","Management/Layout/PageLayout.js","App.js","serviceWorker.js","index.js"],"names":["Plotly","require","register","module","exports","AppHost","loginURL","FormItem","Form","Item","LoginForm","props","myChangeHandler","event","nam","target","name","val","value","setState","handleSubmit","e","preventDefault","form","validateFields","err","values","username","state","password","LoginAPI","errormessage","text","user_id","user_name","user_status","u","a","b","this","userLoginUpdate","x","y","uid","una","firebase","database","ref","child","orderByChild","equalTo","on","snapshot","Object","length","forEach","data","key","update","today","Date","time","getHours","getMinutes","getSeconds","newItem","getFullYear","getMonth","getDate","user_Id","timestamp","ServerValue","TIMESTAMP","push","Headers","append","payload","axios","post","Host","promise","history","session_data","sessionStorage","setItem","JSON","stringify","uname","userLoginAPI","msg","localStorage","clear","getFieldDecorator","className","src","alt","style","backgroundImage","onSubmit","rules","required","message","refs","onChange","size","prefix","type","color","placeholder","to","htmlType","width","Component","WrappedLoginForm","create","Workspace","console","log","onConfirm","async","getItem","window","location","reload","id","maxWidth","minHeight","margin","Group","gutter","justify","span","ghost","onClick","disabled","SignupForm","f_name","fistName","l_name","lastName","u_name","p_word","email","phone","a_type","accountType","company","title","of_num","officeNumber","h_num","homeNumber","address","SignupAPI","first_name","last_name","account_type","office_number","cell_number","home_number","headers","options","method","body","status","layout","textDecoration","WrappedSignupForm","dataChart","line","mode","xsrc","ysrc","xaxis","yaxis","hoverlabel","namelength","showlegend","stackgroup","legendgroup","orientation","hovertemplate","layoutChart","anchor","domain","height","legend","tracegroupgap","t","template","bar","marker","error_x","error_y","table","cells","fill","header","carpet","aaxis","gridcolor","linecolor","endlinecolor","minorgridcolor","startlinecolor","baxis","mesh3d","colorbar","ticks","outlinewidth","contour","colorscale","heatmap","scatter","surface","barpolar","heatmapgl","histogram","parcoords","scatter3d","scattergl","choropleth","scattergeo","histogram2d","scatterpolar","contourcarpet","scattercarpet","scattermapbox","scatterpolargl","scatterternary","histogram2dcontour","geo","bgcolor","showland","lakecolor","landcolor","showlakes","subunitcolor","font","polar","radialaxis","angularaxis","scene","gridwidth","zerolinecolor","showbackground","backgroundcolor","zaxis","automargin","zerolinewidth","mapbox","ternary","caxis","colorway","hovermode","diverging","sequential","sequentialminus","align","plot_bgcolor","paper_bgcolor","shapedefaults","annotationdefaults","arrowhead","arrowcolor","arrowwidth","dataArea","symbol","hovertextsrc","hovertext","layoutArea","BusinessData","offsetgroup","textposition","alignmentgroup","BusinessLayout","barmode","RevenueData","Revenuelayout","Plot","createPlotlyComponent","Option","Select","CollectionCreateForm","visible","onCancel","onCreate","okText","onOk","labelCol","xs","sm","wrapperCol","label","React","Home","showModal","modalVisible","handleCancel","handleCreate","formRef","resetFields","saveFormRef","showDrawer","drawerVisible","onClose","confirmDirty","wrappedComponentRef","href","md","lg","bordered","xl","extra","defaultValue","responsive","marginBottom","placement","closable","marginRight","Search","Input","columns","dataIndex","render","tags","map","tag","toUpperCase","record","oNumber","confDate","customer","salePer","total","BidRequests","dataSource","shape","icon","RequestProposal","ChartHistoryGroupColumn","forceFit","chartData","position","adjust","marginRatio","DataSet","scale","dataKey","min","formatter","dv","View","source","item","count","transform","field","dimension","as","rows","ChartBreakdownDonut","showTitle","radius","innerRadius","stroke","lineWidth","point","sourceDataDaily","sourceDataWeekly","sourceDataMonthly","BankPersonal","selectedKey","onChangeChart","bind","fields","block","strokeColor","from","percent","order","overflowY","maxHeight","marginTop","scale1","AnalyticalTest","value_x","handleSubmit1","value_y","handleSubmit12","loadData","A","B","handleSubmitDonut","value_donut","DonutCheckbox","Column","handleSubmitPie","value_pie","PieCheckbox","options2","plotOptions","horizontal","dataLabels","enabled","offsetX","fontSize","colors","show","categories","series2","loadAnalytical","loadIntHeaders","firstName","books","d","chart_data","intHeader","dou","donut_data","chart_list","i","keys","data_dict","g_data","Actual","Budget","g","sourceData_donut","keys_list","value_list","ct_list1","SQBL","SQCL","sourceData","pie_data","dv1","don_data","class","marginLeft","index","cursor","series","App","selectedOptions","handleChange","userRights","alert","selectedOption","Fragment","isMulti","Menu_name","ChartDashboard","Tree","TreeNode","DirectoryTree","Menu","SubMenu","Layout","Header","Content","Footer","Sider","ModalText","confirmLoading","handleOk","setTimeout","Operations","onSearch","Finance","FormAccountSetting","profile_data","parse","first_nam","fname","last_nam","lname","officePhone","cellPhone","homePhone","address_1","address_2","city","zipCode","req_data","ProfileUpdateAPI","User_Name","User_Email","Account_type","profile_up_data","offset","initialValue","WrappedAccountForm","TabPane","Tabs","AccountSetting","handleSubmitChangePwd","pwd","new_pwd","npwd","conf_pwd","cpwd","errorMsg","userId","userName","ChangePasswordAPI","swal","then","willDelete","defaultActiveKey","tab","textAlign","WrappedAccountSetting","dateCellRender","listData","date","content","getListData","monthCellRender","num","month","getMonthData","CalendarPage","ManagementHome","RangePicker","DatePicker","MonthPicker","WeekPicker","LineChart","onBlur","onFocus","onChangeDate","dateString","start_date","end_date","select_unit","onChange_Xaxis","value_xl","onChange_Yaxis","value_yl","handleSubmitOK","loading","LineChartData","unit_value","handleDownload","lineChart_TableDownload","filter","select_unit_list","select_group","select_amount","bar_data","ve_bar_data","line_data","field_list","line_chart_source_data","table_columns","table_data","load_table_columns","load_table_data","line_table_columns","line_table_data","bar_table_columns","bar_table_data","vertical_table_columns","vertical_table_data","Gbar_table_columns","Gbar_table_data","donut_table_columns","donut_table_data","pie_table_columns","pie_table_data","mix_table_columns","mix_table_data","download_lineChart_table","firstname","lastname","download_barChart_table","loadHeaders","loadAllChartData","area_chart_series","download_group_barChart_table","table_dict","line_value_list","line_chart_list","load_bar_chart_list","table_column_list","table_data_list","table_data_dict","area_list","area_chart_data","load_data_dict","column_dict","area_dict","area_table_columns","area_table_data","download_areaChart_table","children","line_chart_source_scale","Math","round","max","override","css","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","data-toggle","data-target","role","data-dismiss","BarChartData","value_bar","select_amount_USD","loadAllHeaders","loadAll_count_view","download_verticalChart_table","download_donutChart_table","download_pieChart_table","bar_value_list","load_chart_list","load_donut_chart_list","Bar_chart_list","bar_dv","callback","basic_bar_data","direction","vertical_scale","VerticalChart","VerticalBarChartData","value_v_bar","Ve_Bar_chart_list","ve_bar_dv","vertical_bar_data","DonutChart","DonutChartData","PieChart","PieChartData","GroupBarChart","GroupBarChartData","group_bar_options","labels","group_bar_display","loadGroupBarChartData","MixedChart","value_mx","value_my","onChange_Zaxis","value_mz","MixedChartData","C","mixed_chart_options","axisTicks","axisBorder","tooltip","seriesName","opposite","fixed","offsetY","horizontalAlign","mixed_chart_series","mix_display","download_mixedChart_table","loadMixedChartData","sum_data","count_data","max_chart_list","c_value_list","max_chart_count_list","j","Menu_Name","AreaChart","value_ax","value_ay","StackedAreaChartData","area_chart_options","chart","stacked","gradient","opacityFrom","opacityTo","area_display","loadAreaChartData","SArea_chart_list","dv12","ManagementCharts","OperationalAllCharts","FinancialAllCharts","AddUser","handleSubmitCreateUser","toString","UserCreateAPI","lassName","WrappedAddUser","onSelect","onExpand","checkedValue","checkVal","selected_Xaxis","checked","ValueX","ValueY","selected_Yaxis","filterHeaders","loadFilterHeaders","loadLineChartData","background","padding","defaultSelectedKeys","defaultOpenKeys","AllCharts","BarChart","HorizontalBar_FilterCount","handleSubmitBarChart","Select_Count","VerticalBar_FilterCount","GroupBarData","DonutChart_FilterCount","PieChart_FilterCount","ValueZ","selected_Zaxis","chatName","DashboardChart","footer","routes","path","exact","component","BidRequest","Reactjs","Test","OperationalCharts","FinancialCharts","RouteWithSubRoutes","route","AppRouter","NotificationTab","boxShadow","itemLayout","renderItem","Meta","avatar","description","Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ChartRoom","selectUser","msg_list","massage_box","select_username","received_id","sel_u_id","allMassageList","readMessage","handleSendMassage","massage","sender_name","user_Name","receive_name","send_Id","received_Id","msg_Status","is_read","messageSend","myFunction","li","document","getElementById","getElementsByTagName","textContent","innerText","display","online","user_list","send_msg_list","received_list","send_id","user_text","user_Email","massage_List","allUserStatus","loadAllUserList","massageCount","rid","rsm_list","cnt","msg_count","u_l","users_list","users","m_list","re_data","userStatus","u_list","ulist","float","backgroundColor","onKeyPress","handleKeyPress","PageLayout","sendMassage","sendMsg","toggle","collapsed","handleSubmitLogout","userLogout","windowWidth","innerWidth","documentElement","clientWidth","windowHeight","innerHeight","clientHeight","clientHeigh","updateDimensions","w","addEventListener","removeEventListener","userMenu","minWidth","trigger","collapsible","theme","overlay","u_rights","menuList","pathname","linkName","menuName","getSelectedPictures","panel","Login","Signup","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7tGmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,EAAG,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,QAAS,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,gBAAiB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,EAAG,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,gBAAiB,iBAAkB,OAAQ,iBAAkB,iBAAkB,OAAQ,kBAChgEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sCACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,YACh4DxF,cAAe,mGAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,qBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7oEmI,KAAM,qBACNlI,EAAG,CAAC,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,eAAgB,UAAW,iBAAkB,UAAW,iBAAkB,UAAW,iBAAkB,UAAW,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,iBAAkB,SAAU,EAAG,YAAa,iBAAkB,YAAa,iBAAkB,YAAa,iBAAkB,YAAa,kBACzyCmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qBACbyF,aAAc,qBACdC,UAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAChoCxF,cAAe,kFAEP,CACRX,KAAM,UACN1J,KAAM,uCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,gBAAiB,gBAAiB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC/ZmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,uCACbyF,aAAc,qBACdC,UAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAChSxF,cAAe,oGAEP,CACRX,KAAM,UACN1J,KAAM,qCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7oEmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,iBAAkB,EAAG,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,gBAAiB,QAAS,iBAAkB,QAAS,QAAS,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,QAAS,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,gBAAiB,OAAQ,iBAAkB,OAAQ,EAAG,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,kBAC5qCmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qCACbyF,aAAc,qBACdC,UAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAChoCxF,cAAe,kGAEP,CACRX,KAAM,UACN1J,KAAM,wCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,UAAW,UAAW,UAAW,UAAW,UAAW,MAAO,MAAO,MAAO,MAAO,UAAW,UAAW,UAAW,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,kBACxuBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,wCACbyF,aAAc,qBACdC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjhBxF,cAAe,qGAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,cAAe,cAAe,aAAc,cAAe,aAAc,aAAc,cAAe,cAAe,aAAc,cAAe,cAAe,cAC7OmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7YxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAS,OAAS,OAAS,OAAS,MAAS,QAAS,QAAS,MAAS,QAAS,OAAS,OAAS,QAC/KmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7YxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACpQmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7YxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,yBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1nBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yBACbyF,aAAc,qBACdC,UAAW,CAAC,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cACtfxF,cAAe,sFAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACl0BmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBACnqCxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,sBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,KAAO,IAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC7lBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sBACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBACnqCxF,cAAe,mFAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACvhBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBACnqCxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAC1LmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBACv3BxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,kBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrQmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACh+BxF,cAAe,+EAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,wCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBACtiBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,wCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,qGAEP,CACRX,KAAM,UACN1J,KAAM,gDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAC5TmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,gDACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,6GAEP,CACRX,KAAM,UACN1J,KAAM,yCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1nBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,sGAEP,CACRX,KAAM,UACN1J,KAAM,gDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBACtuBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,gDACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,6GAEP,CACRX,KAAM,UACN1J,KAAM,8CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1VmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8CACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,2GAEP,CACRX,KAAM,UACN1J,KAAM,sCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7iBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,mGAEP,CACRX,KAAM,UACN1J,KAAM,sCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAC5mBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,mGAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC3dmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,4CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,UAAW,OAAQ,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,UAAW,SAAU,UAAW,OAAQ,UAAW,OAAQ,OAAQ,UAAW,UAAW,OAAQ,UAAW,UAAW,UAAW,SAAU,UAAW,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UACxjBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4CACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,yGAEP,CACRX,KAAM,UACN1J,KAAM,kCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtYmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,+FAEP,CACRX,KAAM,UACN1J,KAAM,wBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,QAC1YmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,wBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,qFAEP,CACRX,KAAM,UACN1J,KAAM,wCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,wCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,qGAEP,CACRX,KAAM,UACN1J,KAAM,uCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAClRmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,uCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACh+BxF,cAAe,oGAEP,CACRX,KAAM,UACN1J,KAAM,iCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,KACzPmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACh+BxF,cAAe,8FAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAClamI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,uDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,MAAO,MAAO,iBAAkB,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACvjBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,uDACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,oHAEP,CACRX,KAAM,UACN1J,KAAM,6CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACpQmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6CACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,0GAEP,CACRX,KAAM,UACN1J,KAAM,8CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,MAChUmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8CACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,2GAEP,CACRX,KAAM,UACN1J,KAAM,4CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBACl1BmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4CACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,yGAEP,CACRX,KAAM,UACN1J,KAAM,2CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBACtZmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2CACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,wGAEP,CACRX,KAAM,UACN1J,KAAM,qDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAClamI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qDACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpjBxF,cAAe,kHAEP,CACRX,KAAM,UACN1J,KAAM,uCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,uCACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpjBxF,cAAe,oGAEP,CACRX,KAAM,UACN1J,KAAM,sBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAChRmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sBACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5jBxF,cAAe,mFAEP,CACRX,KAAM,UACN1J,KAAM,8BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,2FAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC55BmI,KAAM,qBACNlI,EAAG,CAAC,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,GAC5fmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5oBxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,qCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC5LmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qCACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,kGAEP,CACRX,KAAM,UACN1J,KAAM,4BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9ImI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5jBxF,cAAe,yFAEP,CACRX,KAAM,UACN1J,KAAM,sBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sBACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,mFAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,yCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,QAAS,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACzhBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yCACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC94CxF,cAAe,sGAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,qBAC/exF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,qCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,KAAQ,KAAO,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,MAAQ,KAAO,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,gBAAiB,iBAAkB,kBAChlBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qCACbyF,aAAc,qBACdC,UAAW,CAAC,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,qBACv+BxF,cAAe,kGAEP,CACRX,KAAM,UACN1J,KAAM,mCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,IAAO,KAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,KAAO,KAAO,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzHmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,mCACbyF,aAAc,qBACdC,UAAW,CAAC,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,qBAC/exF,cAAe,gGAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrmDmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,OAAQ,iBAAkB,iBAAkB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAC/hCmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,iBAAkB,WAAY,kBAC1nCxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,oBAAqB,qBAC/exF,cAAe,4FAEP,CACRX,KAAM,UACN1J,KAAM,oCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBACl1BmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,oCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,iGAEP,CACRX,KAAM,UACN1J,KAAM,mDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,SAAU,OAAQ,OAAQ,SAAU,SAAU,UAAW,WAAY,WAAY,OAAQ,aAAc,eAAgB,iBAAkB,MAAO,MAAO,iBAAkB,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,MAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACzmBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,mDACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,gHAEP,CACRX,KAAM,UACN1J,KAAM,4BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAClxBmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAS,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBACzXmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACp8BxF,cAAe,yFAEP,CACRX,KAAM,UACN1J,KAAM,sBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAClamI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,sBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,mFAEP,CACRX,KAAM,UACN1J,KAAM,8BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC5XmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,2FAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,KAAO,KAAO,KAAO,KAAO,IAAO,KAAO,IAAO,IAAO,IAAO,KAAO,KAAO,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzHmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,IAAO,KACrKmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,yBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC1emI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,sFAEP,CACRX,KAAM,UACN1J,KAAM,yBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjWmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,sFAEP,CACRX,KAAM,UACN1J,KAAM,4BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAChRmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACh+BxF,cAAe,yFAEP,CACRX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtKmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,4FAEP,CACRX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,MAAQ,MAAQ,KAAO,MAC/OmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,4FAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACzyBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAClRmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BACh+BxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,6BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACj+BmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAClZmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,6BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChsCxF,cAAe,0FAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACxSmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,mBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAQ,OAAQ,QAC5LmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,mBACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,gFAEP,CACRX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,OAC/QmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChzCxF,cAAe,wFAEP,CACRX,KAAM,UACN1J,KAAM,yBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC9oBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yBACbyF,aAAc,qBACdC,UAAW,CAAC,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cAC9pBxF,cAAe,sFAEP,CACRX,KAAM,UACN1J,KAAM,gDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC7oBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,gDACbyF,aAAc,qBACdC,UAAW,CAAC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,qCACvtDxF,cAAe,6GAEP,CACRX,KAAM,UACN1J,KAAM,iDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC7oBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iDACbyF,aAAc,qBACdC,UAAW,CAAC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,qCACvtDxF,cAAe,8GAEP,CACRX,KAAM,UACN1J,KAAM,iCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,gBAAiB,iBAAkB,iBAAkB,iBAC9oBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iCACbyF,aAAc,qBACdC,UAAW,CAAC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,oCAAqC,qCACvtDxF,cAAe,8FAEP,CACRX,KAAM,UACN1J,KAAM,oCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7PmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,oCACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBAC3kBxF,cAAe,iGAEP,CACRX,KAAM,UACN1J,KAAM,oCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,UAAW,iBAAkB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,gBAAiB,iBAAkB,kBACnrBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,oCACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC94CxF,cAAe,iGAEP,CACRX,KAAM,UACN1J,KAAM,qCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACj0BmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qCACbyF,aAAc,qBACdC,UAAW,CAAC,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,+BAC77CxF,cAAe,kGAEP,CACRX,KAAM,UACN1J,KAAM,iCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,QAAS,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,iBACplBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iCACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC94CxF,cAAe,8FAEP,CACRX,KAAM,UACN1J,KAAM,kCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC9zBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kCACbyF,aAAc,qBACdC,UAAW,CAAC,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,+BAC77CxF,cAAe,+FAEP,CACRX,KAAM,UACN1J,KAAM,oDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,cAAe,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,aAAc,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC3zBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,oDACbyF,aAAc,qBACdC,UAAW,CAAC,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,8BAA+B,+BAC77CxF,cAAe,iHAEP,CACRX,KAAM,UACN1J,KAAM,2CACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,KAAO,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC1dmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2CACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC94CxF,cAAe,wGAEP,CACRX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACn0BmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC94CxF,cAAe,4FAEP,CACRX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,eACrWxF,cAAe,uFAEP,CACRX,KAAM,UACN1J,KAAM,uBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,uBACbyF,aAAc,qBACdC,UAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAChSxF,cAAe,oFAEP,CACRX,KAAM,UACN1J,KAAM,qBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,qBACbyF,aAAc,qBACdC,UAAW,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAClPxF,cAAe,kFAEP,CACRX,KAAM,UACN1J,KAAM,iCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iCACbyF,aAAc,qBACdC,UAAW,CAAC,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,sBACtgBxF,cAAe,8FAEN,CACTX,KAAM,UACN1J,KAAM,iCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,iCACbyF,aAAc,qBACdC,UAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAChSxF,cAAe,8FAEN,CACTX,KAAM,UACN1J,KAAM,mCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,eAAgB,iBAAkB,iBAAkB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACxoBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,mCACbyF,aAAc,qBACdC,UAAW,CAAC,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBACpnCxF,cAAe,gGAEN,CACTX,KAAM,UACN1J,KAAM,4BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,gBAAiB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,cAAe,gBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACtoBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4BACbyF,aAAc,qBACdC,UAAW,CAAC,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,gBAAiB,iBAC3yBxF,cAAe,yFAEN,CACTX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7jCmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,EAAG,iBAAkB,iBAAkB,gBAAiB,kBAC1oBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,eAC7sBxF,cAAe,uFAEN,CACTX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBACxdxF,cAAe,4FAEN,CACTX,KAAM,UACN1J,KAAM,+BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjjEmI,KAAM,qBACNlI,EAAG,CAAC,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,QAAS,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,OAAQ,EAAG,EAAG,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,kBAC7tBmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,+BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,WAAY,WAAY,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBACpwCxF,cAAe,4FAEN,CACTX,KAAM,UACN1J,KAAM,kCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC/gCmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,EAAG,KAAO,GAClPmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kCACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,WAAY,eAAgB,YACpoBxF,cAAe,+FAEN,CACTX,KAAM,UACN1J,KAAM,0BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC3YmI,KAAM,qBACNlI,EAAG,CAAC,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,MAAS,KAAS,KAAS,KAAS,KAAS,KAAS,KAAS,KAAS,KAAS,MAC7JmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,0BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5RxF,cAAe,uFAEN,CACTX,KAAM,UACN1J,KAAM,gDACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACpNmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,gDACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,6GAEN,CACTX,KAAM,UACN1J,KAAM,oCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACpTmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,oCACbyF,aAAc,qBACdC,UAAW,CAAC,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,2BAA4B,4BAChpBxF,cAAe,iGAEN,CACTX,KAAM,UACN1J,KAAM,kCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,gBAAiB,eAAgB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,gBAAiB,iBAAkB,gBAAiB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBAC7YmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kCACbyF,aAAc,qBACdC,UAAW,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7hBxF,cAAe,+FAEN,CACTX,KAAM,UACN1J,KAAM,yCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACjZmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,yCACbyF,aAAc,qBACdC,UAAW,CAAC,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,6BAA8B,8BAC9rBxF,cAAe,sGAEN,CACTX,KAAM,UACN1J,KAAM,8BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,OAAS,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,iBAAkB,gBAAiB,iBAAkB,EAAG,iBAAkB,iBAAkB,iBAAkB,kBACtYmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8BACbyF,aAAc,qBACdC,UAAW,CAAC,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,mBACjcxF,cAAe,2FAEN,CACTX,KAAM,UACN1J,KAAM,2BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACrhBmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,aAC3WmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,2BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5XxF,cAAe,wFAEN,CACTX,KAAM,UACN1J,KAAM,4BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjQmI,KAAM,qBACNlI,EAAG,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SACvGmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,4BACbyF,aAAc,qBACdC,UAAW,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,eAAgB,gBAC5LxF,cAAe,yFAEN,CACTX,KAAM,UACN1J,KAAM,8BACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjQmI,KAAM,qBACNlI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAC5FmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,8BACbyF,aAAc,qBACdC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrIxF,cAAe,2FAEN,CACTX,KAAM,UACN1J,KAAM,kCACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjQmI,KAAM,qBACNlI,EAAG,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SACvGmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,kCACbyF,aAAc,qBACdC,UAAW,CAAC,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,yBAC/RxF,cAAe,gGAGJyF,EAAa,CACxB3H,MAAO,CAACnH,KAAM,+BACd6I,MAAO,CACL1B,MAAO,CAACnH,KAAM,SACduJ,OAAQ,IACRC,OAAQ,CAAC,EAAK,MAEhBV,MAAO,CACL3B,MAAO,CAACnH,KAAM,cACduJ,OAAQ,IACRC,OAAQ,CAAC,EAAK,IAEhBC,OAAQ,IACRC,OAAQ,CAACC,cAAe,GACxBE,SAAU,CACRrI,KAAM,CACJsI,IAAK,CACH,CACEpF,KAAM,MACNqF,OAAQ,CAACtB,KAAM,CACX9D,MAAO,UACPI,MAAO,KAEXiF,QAAS,CAACrF,MAAO,WACjBsF,QAAS,CAACtF,MAAO,aAGrBuF,MAAO,CACL,CACExF,KAAM,QACNyF,MAAO,CACLC,KAAM,CAACzF,MAAO,WACd8D,KAAM,CAAC9D,MAAO,UAEhB0F,OAAQ,CACND,KAAM,CAACzF,MAAO,WACd8D,KAAM,CAAC9D,MAAO,YAIpB2F,OAAQ,CACN,CACE5F,KAAM,SACN6F,MAAO,CACLC,UAAW,QACXC,UAAW,QACXC,aAAc,UACdC,eAAgB,QAChBC,eAAgB,WAElBC,MAAO,CACLL,UAAW,QACXC,UAAW,QACXC,aAAc,UACdC,eAAgB,QAChBC,eAAgB,aAItBE,OAAQ,CACN,CACEpG,KAAM,SACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,KAIpBC,QAAS,CACP,CACExG,KAAM,UACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,cAGrUC,QAAS,CACP,CACE1G,KAAM,UACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,cAGrUE,QAAS,CACP,CACE3G,KAAM,UACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBK,QAAS,CACP,CACE5G,KAAM,UACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,cAGrUI,SAAU,CACR,CACE7G,KAAM,WACNqF,OAAQ,CAACtB,KAAM,CACX9D,MAAO,UACPI,MAAO,OAIfyG,UAAW,CACT,CACE9G,KAAM,YACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,cAGrUM,UAAW,CACT,CACE/G,KAAM,YACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBS,UAAW,CACT,CACEjD,KAAM,CAACsC,SAAU,CACbC,MAAO,GACPC,aAAc,IAElBvG,KAAM,cAGViH,UAAW,CACT,CACElD,KAAM,CAACsC,SAAU,CACbC,MAAO,GACPC,aAAc,IAElBvG,KAAM,YACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBW,UAAW,CACT,CACElH,KAAM,YACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBY,WAAY,CACV,CACEnH,KAAM,aACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,KAIpBa,WAAY,CACV,CACEpH,KAAM,aACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBc,YAAa,CACX,CACErH,KAAM,cACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,cAGrUa,aAAc,CACZ,CACEtH,KAAM,eACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBgB,cAAe,CACb,CACEvH,KAAM,gBACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,KAIpBiB,cAAe,CACb,CACExH,KAAM,gBACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBkB,cAAe,CACb,CACEzH,KAAM,gBACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBmB,eAAgB,CACd,CACE1H,KAAM,iBACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBoB,eAAgB,CACd,CACE3H,KAAM,iBACNqF,OAAQ,CAACgB,SAAU,CACfC,MAAO,GACPC,aAAc,MAItBqB,mBAAoB,CAClB,CACE5H,KAAM,qBACNqG,SAAU,CACRC,MAAO,GACPC,aAAc,GAEhBE,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,eAIvU9C,OAAQ,CACNkE,IAAK,CACHC,QAAS,QACTC,UAAU,EACVC,UAAW,QACXC,UAAW,UACXC,WAAW,EACXC,aAAc,SAEhBC,KAAM,CAACnI,MAAO,WACdoI,MAAO,CACLP,QAAS,UACTQ,WAAY,CACVhC,MAAO,GACPR,UAAW,QACXC,UAAW,SAEbwC,YAAa,CACXjC,MAAO,GACPR,UAAW,QACXC,UAAW,UAGfyC,MAAO,CACLrE,MAAO,CACLmC,MAAO,GACPR,UAAW,QACX2C,UAAW,EACX1C,UAAW,QACX2C,cAAe,QACfC,gBAAgB,EAChBC,gBAAiB,WAEnBxE,MAAO,CACLkC,MAAO,GACPR,UAAW,QACX2C,UAAW,EACX1C,UAAW,QACX2C,cAAe,QACfC,gBAAgB,EAChBC,gBAAiB,WAEnBC,MAAO,CACLvC,MAAO,GACPR,UAAW,QACX2C,UAAW,EACX1C,UAAW,QACX2C,cAAe,QACfC,gBAAgB,EAChBC,gBAAiB,YAGrBnG,MAAO,CAAC1G,EAAG,KACXoI,MAAO,CACLmC,MAAO,GACPR,UAAW,QACXC,UAAW,QACX+C,YAAY,EACZJ,cAAe,QACfK,cAAe,GAEjB3E,MAAO,CACLkC,MAAO,GACPR,UAAW,QACXC,UAAW,QACX+C,YAAY,EACZJ,cAAe,QACfK,cAAe,GAEjBC,OAAQ,CAAC1J,MAAO,SAChB2J,QAAS,CACPpD,MAAO,CACLS,MAAO,GACPR,UAAW,QACXC,UAAW,SAEbI,MAAO,CACLG,MAAO,GACPR,UAAW,QACXC,UAAW,SAEbmD,MAAO,CACL5C,MAAO,GACPR,UAAW,QACXC,UAAW,SAEb+B,QAAS,WAEXqB,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9GC,UAAW,UACX3C,WAAY,CACV4C,UAAW,CAAC,CAAC,IAAK,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,MAAO,WAAY,CAAC,IAAK,YACxNC,WAAY,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,YACjUC,gBAAiB,CAAC,CAAC,MAAO,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,qBAAsB,WAAY,CAAC,MAAO,aAExUlF,WAAY,CAACmF,MAAO,QACpBC,aAAc,UACdC,cAAe,QACfC,cAAe,CAAC5F,KAAM,CAAC9D,MAAO,YAC9B2J,mBAAoB,CAClBC,UAAW,EACXC,WAAY,UACZC,WAAY,MC5lFTM,EAAe,CAnJnB,CACP/P,KAAM,mBACN0F,KAAM,MACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjvhHmI,KAAM,qBACNlI,EAAG,CAAC,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,YAAa,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,UAAW,SAAU,IAAK,MAAO,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,iBAAkB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,kBAAmB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB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oB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,kBAAmB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,WAAY,IAAK,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,UAAW,mBAAoB,mBAAoB,SAAU,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,iBAAkB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,MAAO,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,MAAO,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,MAAO,OAAQ,QAAS,eAAgB,OAAQ,QAAS,QAAS,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,iBAAkB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,kBAAmB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,wBAAyB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,QAAS,SAAU,OAAQ,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,kBAAmB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,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sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACr03DmI,KAAM,qBACNlI,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,QAAS,QAAS,IAAK,IAAK,IAAK,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,SAAU,QAAS,QAAS,IAAK,QAAS,SAAU,QAAS,SAAU,IAAK,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,QAAS,QAAS,SAAU,SAAU,IAAK,QAAS,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,QAAS,QAAS,IAAK,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,IAAK,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,IAAK,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,QAAS,QAAS,QAAS,IAAK,SAAU,SAAU,SAAU,SAAU,QAAS,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,IAAK,mBAAoB,SAAU,mBAAoB,SAAU,mBAAoB,OAAQ,mBAAoB,SAAU,QAAS,mBAAoB,QAAS,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,WAAY,SAAU,mBAAoB,mBAAoB,QAAS,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,QAAS,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,IAAK,QAAS,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,SAAU,mBAAoB,SAAU,mBAAoB,SAAU,IAAK,QAAS,mBAAoB,QAAS,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,QAAS,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,aAAc,mBAAoB,QAAS,WAAY,mBAAoB,IAAK,UAAW,QAAS,IAAK,mBAAoB,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,SAAU,mBAAoB,WAAY,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,IAAK,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,WAAY,mBAAoB,IAAK,mBAAoB,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,kBAAmB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,kBAAmB,YAAa,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,UAAW,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,IAAK,QAAS,UAAW,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,QAAS,SAAU,aAAc,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,WAAY,UAAW,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,YAAa,SAAU,SAAU,YAAa,UAAW,IAAK,WAAY,SAAU,IAAK,SAAU,YAAa,SAAU,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,YAAa,SAAU,IAAK,SAAU,UAAW,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,UAAW,UAAW,SAAU,YAAa,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,IAAK,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAAY,WAAY,IAAK,IAAK,QAAS,QAAS,YAAa,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,UAAW,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,WAAY,SAAU,IAAK,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,SAAU,SAAU,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,SAAU,YAAa,WAAY,IAAK,WAAY,SAAU,IAAK,QAAS,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,UAAW,WAAY,IAAK,SAAU,SAAU,IAAK,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,YAAa,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,SAAU,WAAY,SAAU,S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,QAAS,OAAQ,IAAK,IAAK,mBAAoB,OAAQ,OAAQ,mBAAoB,mBAAoB,QAAS,GAAI,UAAW,SAAU,UAAW,IAAK,OAAQ,IAAK,SAAU,SAAU,QAAS,UAAW,SAAU,IAAK,IAAK,QAAS,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,UAAW,QAAS,IAAK,IAAK,UAAW,SAAU,SAAU,UAAW,QAAS,IAAK,IAAK,OAAQ,IAAK,OAAQ,QAAS,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,UAAW,IAAK,IAAK,IAAK,mBAAoB,SAAU,QAAS,mBAAoB,QAAS,IAAK,IAAK,QAAS,IAAK,QAAS,SAAU,IAAK,IAAK,QAAS,SAAU,UAAW,SAAU,mBAAoB,QAAS,QAAS,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,kBAAmB,IAAK,QAAS,QAAS,SAAU,QAAS,IAAK,QAAS,GAAI,UAAW,SAAU,kBAAmB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,QAAS,QAAS,QAAS,QAAS,IAAK,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,iBAAkB,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,SAAU,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,IAAK,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,iBAAkB,IAAK,IAAK,QAAS,QAAS,QA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AY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,YAChl+BI,aAAc,OACd5F,cAAe,+EACf6F,eAAgB,QAET,CACPlQ,KAAM,oBACN0F,KAAM,MACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAA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aAAc,qBACdaAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,YACxrKI,aAAc,OACd5F,cAAe,iFACf6F,eAAgB,QAET,CACPlQ,KAAM,iBACN0F,KAAM,MACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAu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,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACjvhHmI,KAAM,qBACNlI,EAAG,CAAC,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,YAAa,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,UAAW,SAAU,IAAK,MAAO,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,iBAAkB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,kBAAmB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MA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B,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,kBAAmB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,WAAY,IAAK,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,UAAW,mBAAoB,mBAAoB,SAAU,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,mBAAoB,mBAAoB,IAAK,SAAU,mBAAoB,mBAAoB,iBAAkB,QAAS,QAAS,IAAK,IAAK,QAAS,IAAK,IAAK,OAAQ,kBAAmB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,OAAQ,mBAAoB,MAAO,mBAAoB,IAAK,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,IAAK,IAAK,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,OAAQ,OAAQ,IAAK,IAAK,IAAK,MAAO,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,IAAK,SAAU,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,MAAO,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,kBAAmB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,MAAO,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,OAAQ,OAAQ,IAAK,IAAK,OAAQ,OAAQ,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,aAAc,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,kBAAmB,mBAAoB,IAAK,IAAK,kBAAmB,IAAK,mBAAoB,IAAK,mBAAoB,IAAK,iBAAkB,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,MAAO,OAAQ,QAAS,eAAgB,OAAQ,QAAS,QAAS,mBAAoB,MAAO,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,iBAAkB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,MAAO,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,WAAY,MAAO,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,YAAa,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,kBAAmB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,SAAU,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,wBAAyB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,QAAS,SAAU,OAAQ,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,OAAQ,IAAK,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,kBAAmB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,QAAS,YAAa,OAAQ,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,oBAChwoEmI,MAAO,IACPC,MAAO,IACPiB,OAAQ,CACNpF,MAAO,UACPgK,OAAQ,UAEV5F,WAAY,CAACC,WAAY,GACzBC,YAAY,EACZE,YAAa,mBACbyF,aAAc,qBACdxnnBxF,cAAe,iFAER,CACPX,KAAM,UACN1J,KAAM,kBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBACr03DmI,KAAM,qBACNlI,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,QAAS,QAAS,IAAK,IAAK,IAAK,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,SAAU,SAAU,QAAS,QAAS,IAAK,QAAS,SAAU,QAAS,SAAU,IAAK,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,QAAS,QAAS,SAAU,SAAU,IAAK,QAAS,SAAU,IAAK,QAAS,SAAU,QAAS,QAAS,QAAS,QAAS,IAAK,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,IAAK,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,IAAK,SAAU,QAAS,QAAS,SAAU,QAAS,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,QAAS,QAAS,QAAS,IAAK,SAAU,SAAU,SAAU,SAAU,QAAS,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,IAAK,mBAAoB,SAAU,mBAAoB,SAAU,mBAAoB,OAAQ,mBAAoB,SAAU,QAAS,mBAAoB,QAAS,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,WAAY,SAAU,mBAAoB,mBAAoB,QAAS,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,QAAS,mBAAoB,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,QAAS,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,IAAK,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,IAAK,QAAS,mBAAoB,mBAAoB,OAAQ,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,SAAU,mBAAoB,SAAU,mBAAoB,SAAU,IAAK,QAAS,mBAAoB,QAAS,OAAQ,mBAAoB,mBAAoB,mBAAoB,QAAS,IAAK,QAAS,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,aAAc,mBAAoB,QAAS,WAAY,mBAAoB,IAAK,UAAW,QAAS,IAAK,mBAAoB,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,SAAU,mBAAoB,WAAY,mBAAoB,IAAK,mBAAoB,SAAU,IAAK,mBAAoB,mBAAoB,mBAAoB,QAAS,mBAAoB,mBAAoB,IAAK,mBAAoB,QAAS,mBAAoB,mBAAoB,mBAAoB,IAAK,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,WAAY,mBAAoB,IAAK,mBAAoB,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,kBAAmB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,IAAK,IAAK,IAAK,IAAK,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,kBAAmB,YAAa,mBAAoB,IAAK,mBAAoB,mBAAoB,IAAK,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,IAAK,UAAW,UAAW,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,IAAK,QAAS,UAAW,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,QAAS,SAAU,aAAc,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,WAAY,UAAW,IAAK,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,IAAK,SAAU,UAAW,SAAU,SAAU,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,YAAa,SAAU,SAAU,YAAa,UAAW,IAAK,WAAY,SAAU,IAAK,SAAU,YAAa,SAAU,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,YAAa,SAAU,IAAK,SAAU,UAAW,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,UAAW,UAAW,SAAU,YAAa,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,IAAK,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,IAAK,IAAK,IAAK,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAAY,WAAY,IAAK,IAAK,QAAS,QAAS,YAAa,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,UAAW,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,UAAW,SAAU,IAAK,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,IAAK,IAAK,SAAU,QAAS,SAAU,SAAU,SAAU,WAAY,SAAU,IAAK,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,IAAK,QAAS,SAAU,SAAU,SAAU,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,SAAU,YAAa,WAAY,IAAK,WAAY,SAAU,IAAK,QAAS,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,UAAW,WAAY,IAAK,SAAU,SAAU,IAAK,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,YAAa,SAAU,IAAK,SAAU,SAAU,IAAK,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,UAAW,SAAU,SAAU,YAAa,SAAU,IAAK,QAAS,SAAU,IAAK,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,IAAK,WAAY,QAAS,WAAY,WAAY,WAAY,QAAS,WAAY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AAS,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,UAAW,QAAS,IAAK,IAAK,UAAW,SAAU,SAAU,UAAW,QAAS,IAAK,IAAK,OAAQ,IAAK,OAAQ,QAAS,IAAK,IAAK,IAAK,IAAK,UAAW,SAAU,UAAW,IAAK,IAAK,IAAK,mBAAoB,SAAU,QAAS,mBAAoB,QAAS,IAAK,IAAK,QAAS,IAAK,QAAS,SAAU,IAAK,IAAK,QAAS,SAAU,UAAW,SAAU,mBAAoB,QAAS,QAAS,QAAS,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,kBAAmB,IAAK,QAAS,QAAS,SAAU,QAAS,IAAK,QAAS,GAAI,UAAW,SAAU,kBAAmB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,QAAS,QAAS,QAAS,QAAS,IAAK,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,mBAAoB,QAAS,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,iBAAkB,IAAK,QAAS,QAAS,IAAK,QAAS,SAAU,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,SAAU,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,IAAK,QAAS,QAAS,SAAU,QAAS,IAAK,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,mBAAoB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,iBAAkB,IAAK,IAAK,QAAS,QAAS,QAAS,QAAS,SAAU,GAAI,UAAW,SAAU,mBAAoB,QAAS,QAAS,mBAAoB,kBAAmB,mBAAoB,SAAU,mBAAoB,mBAAoB,mBAAoB,IAAK,QAAS,QAAS,QAAS,IAAK,QAAS,QAAS,S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,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,YAChl+BxF,cAAe,gFAER,CACPX,KAAM,UACN1J,KAAM,oBACN0F,KAAM,YACNiE,KAAM,qBACNlI,EAAG,CAAC,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAu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,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAu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AuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,sBAAuB,uBAC7oEmI,KAAM,qBACNlI,EAAG,CAAC,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ,iBAAkB,OAAQ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","file":"static/js/main.21de1f91.chunk.js","sourcesContent":["var Plotly = require('plotly.js/lib/core');\nPlotly.register([\nrequire('plotly.js/lib/heatmap'),\nrequire('plotly.js/lib/choropleth'),\nrequire('plotly.js/lib/scattergeo')\n]);\n\nmodule.exports = Plotly;","var Plotly = require('plotly.js/lib/core');\nPlotly.register([\nrequire('plotly.js/lib/heatmap'),\nrequire('plotly.js/lib/choropleth'),\nrequire('plotly.js/lib/scattergeo')\n]);\n\nmodule.exports = Plotly;","\n\nconst AppHost = {\n\n       /* loginURL: \"http://127.0.0.1:8001/api/sqd\",*/\n\n    loginURL:\"http://54.251.162.155:8000/api/sqd\",\n\n}\nexport default AppHost\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { Host } from  \"../Host\";\nimport axios from \"axios\";\nimport firebase from 'firebase';\nconst FormItem = Form.Item;\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errormessage: '',\n      text:'users',\n      user_id:'',\n      user_name:'',\n      user_status:'online',\n      u:'',\n\n\n    };\n\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    let msg = '';\n//    if (nam === \"age\") {\n//      if (val !=\"\" && !Number(val)) {\n//        err = <strong>Your age must be a number</strong>;\n//      }\n//    }\n//    this.setState({errormessage: err});\n    this.setState({[nam]: val});\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n    const username = this.state.username;\n    const password= this.state.password;\n    if(username == ''){\n     return false\n    }\n    else if(password == ''){\n     return false\n    }\n    else{\n        this.LoginAPI();\n\n\n    }\n    });\n};\n\n  async userLoginAPI(a, b){\n  this.userLoginUpdate(a, b);\n\n }\n\n  async userLoginUpdate(x , y) {\n  var uid = x;\n  var una = y;\n  firebase.database().ref().child('messages/' + 'users').orderByChild(\"user_Id\").equalTo(uid)\n      .on(\"value\", function(snapshot) {\n          if (snapshot.val() != null){\n              if(Object.values(snapshot.val()).length >= 1){\n                snapshot.forEach(function(data) {\n                var record = data.val();\n                var key = data.key;\n                firebase.database().ref().child('messages/' + 'users/'+ key).update({ user_status: \"online\" });\n                });\n              }\n          }\n         else{\n            var today = new Date();\n            var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            var newItem = {\n            user_Id:uid,\n            user_name:una,\n            user_status:'online',\n            time:time,\n            timestamp : firebase.database.ServerValue.TIMESTAMP\n            }\n            const usersLoginStatus = firebase.database().ref().child('messages/' + 'users');\n            usersLoginStatus.push(newItem);\n         }\n    });\n}\n\n\n  async LoginAPI(){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    var payload={\n        \"username\":this.state.username,\n        \"password\":this.state.password\n    }\n\n    try{\n     const promise = await axios.post(Host.loginURL+\"/login_api\", payload);\n     this.props.history.push(\"/workspace\");\n     const session_data = promise.data.data;\n     sessionStorage.setItem(\"session_data\",JSON.stringify(session_data));\n     const uid = session_data['user_id'];\n     const uname = session_data['username'];\n     this.userLoginAPI(uid, uname);\n  }\n  catch(err){this.setState({msg: \"Username & Password is Invalid\"});}\n//  this.setState({msg: \"Username & Password is Invalid\"});\n}\n  render() {\n    localStorage.clear();\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"login-form-container\">\n        <div className=\"header-login\">\n          <div className=\"login-logo\">\n            <img src=\"/assets/images/logo-white.png\" alt=\"SQ\"/>\n          </div>\n        </div>\n        <div className=\"login-row\">\n          <div className=\"login-cell cell-login-hero\" style={{backgroundImage: 'url(/assets/images/login-bg.jpg)'}}>\n            <div className=\"login-cell-block\">\n              <div className=\"login-cell-content\">\n                <div className=\"login-hero-content\">\n                  <h1 className=\"login-heading\">Q Nest</h1>\n                  <div className=\"login-subheading\">\n                    <p>\n                    Centralized data platform with insights, visualisation and prediction.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"login-cell cell-login-form\">\n            <div className=\"bg-image-mobile\" style={{backgroundImage: 'url(/assets/images/login-bg.jpg)'}}></div>\n            <div className=\"login-cell-block\">\n              <div className=\"login-logo text-center\">\n                <img src=\"/assets/images/logo-white.png\" alt=\"SQ\"/>\n              </div>\n              <div className=\"logo-with-form login-cell-content\">\n                <h4 className=\"mb-3\">Login</h4>\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                  <FormItem>\n\n                    {getFieldDecorator(\"userName\", {\n                      rules: [\n                        {\n                          required: true,\n                          message: \"Please input your Username!\"\n                        }\n                      ]\n                    })(\n                      <Input refs=\"u_name\" name=\"username\" onChange={this.myChangeHandler} size=\"large\" prefix={ <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />  }\n                        placeholder=\"Username\"\n                      />\n                    )}\n                  </FormItem>\n                  <FormItem>\n                    {getFieldDecorator(\"password\", {\n                      rules: [\n                        {\n                          required: true,\n                          message: \"Please input your Password!\"\n                        }\n                      ]\n                    })(\n                      <Input refs=\"u_pass\" name=\"password\" onChange={this.myChangeHandler}\n                        size=\"large\"\n                        prefix={\n                          <Icon\n                            type=\"lock\"\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                          />\n                        }\n                        type=\"password\"\n                        placeholder=\"Password\"\n                      />\n                    )}\n                  </FormItem>\n                  <FormItem>\n                    <ul className=\"login-meta\">\n                      <li>\n                        <Link to='/forgot-password'>\n                          Forgot password ?\n                        </Link>\n                      </li>\n                      <li>\n                        <Checkbox>Remember Me</Checkbox>\n                      </li>\n                    </ul>\n                  </FormItem>\n                  <FormItem>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"login-form-button\"\n                      style={{ width: \"100%\" }}\n                    >\n                      Log in\n                    </Button>\n                  </FormItem>\n                  <FormItem>\n                    <p style={{ color: \"red\" }}>{this.state.msg}</p>\n                  </FormItem>\n                </Form>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\nexport default WrappedLoginForm;","import React, { Component } from \"react\";\nimport { Row, Col, Card, Icon, Radio, Button } from \"antd\";\n\nclass Workspace extends Component {\n  state = {\n    value: null\n  };\n\n  onChange = e => {\n    console.log(\"radio checked\", e.target.value);\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  onConfirm = async e => {\n    e.preventDefault();\n    await localStorage.clear();\n    await localStorage.setItem(\"panel\", `${this.state.value}`);\n    console.log(localStorage.getItem(\"panel\"));\n    await this.props.history.push(`/${this.state.value}-home`);\n    await window.location.reload();\n  };\n  render() {\n    return (\n      <div className=\"workspace-container\">\n        <div\n          id=\"content\"\n          style={{\n            width: \"100%\",\n            maxWidth: \"1000px\",\n            minHeight: \"auto\",\n            margin: \"auto\"\n          }}\n        >\n          <Radio.Group\n            onChange={this.onChange}\n            value={this.state.value}\n            style={{ width: \"100%\", margin: \"0 auto\" }}\n          >\n            <Row type=\"flex\" gutter={16} justify=\"center\">\n              <Col span={24}>\n                <h1 className=\"workspace-heading\">Choose Workspace Type</h1>\n              </Col>\n              <Col span={8} className=\"c-mb\">\n                <Card className=\"mi-card mi-card-boxshadow card-workspace\">\n                  <div>\n                    <div className=\"workspace-icon\">\n                      <Icon type=\"user\" />\n                    </div>\n                    <h4>Personal</h4>\n                    {/* <div className=\"like-radio\"></div> */}\n                    <Radio value=\"personal\" />\n                  </div>\n                </Card>\n              </Col>\n              <Col span={8} className=\"c-mb\">\n                <Card className=\"mi-card mi-card-boxshadow card-workspace\">\n                  <div>\n                    <div className=\"workspace-icon\">\n                      <Icon type=\"home\" />\n                    </div>\n                    <h4>Management</h4>\n                    {/* <div className=\"like-radio\"></div> */}\n                    <Radio value=\"management\" />\n                  </div>\n                </Card>\n              </Col>\n\n              <Col span={8} className=\"c-mb\">\n                <Card className=\"mi-card mi-card-boxshadow card-workspace\">\n                  <div>\n                    <div className=\"workspace-icon\">\n                      <Icon type=\"usergroup-add\" />\n                    </div>\n                    <h4>Board</h4>\n                    {/* <div className=\"like-radio\"></div> */}\n                    <Radio value=\"board\" />\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n          </Radio.Group>\n          <Row type=\"flex\" gutter={16}>\n            <Col span={24} className=\"text-center mt-4\">\n              <Button\n                type=\"primary\"\n                ghost\n                onClick={this.onConfirm}\n                disabled={this.state.value ? false : true}\n              >\n                Confirm\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Workspace;\n","import React, { Component } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { Row, Col, Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { Host } from  \"../Host\";\nimport axios from \"axios\";\nconst FormItem = Form.Item;\n\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n    const f_name =  values.fistName;\n    const l_name =  values.lastName;\n    const u_name =  values.username;\n    const p_word =  values.password;\n    const email =  values.email;\n    const phone =  values.phone;\n    const a_type =  values.accountType;\n    const company =  values.company;\n    const title =  values.title;\n    const of_num =  values.officeNumber;\n    const h_num =  values.homeNumber;\n    const address =  values.address;\n    if(f_name == null && f_name == null && u_name == null && p_word == null && email == null && phone == null &&\n     a_type == null && company == null && title == null && of_num == null && h_num == null &&  address == null){\n     return false\n    }\n    else{\n        this.SignupAPI({\n\n     first_name:f_name,\n    last_name : l_name,\n    username :u_name,\n    password :  p_word,\n    account_type :a_type,\n    company : company,\n    title : title,\n    office_number :of_num,\n    cell_number :  phone,\n    home_number :h_num,\n    email : email,\n    address : address,\n    'flog_value':'signUp'\n\n                            })\n\n    }\n  });\n};\n\n\n  async SignupAPI(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    const promise = await axios.post(Host.loginURL+\"/signup_api\", options);\n    const status = promise.status;\n    if(status==200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      this.props.history.push(\"/\");\n   }\n   else {this.setState({msg: \"Username & Password not correct\"});}\n\n}\n\n\n  render() {\n    localStorage.clear();\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"login-form-container\">\n        <div className=\"header-login\">\n          <div className=\"login-logo\">\n            <img src=\"/assets/images/logo-white.png\" alt=\"SQ\"/>\n          </div>\n        </div>\n        <div className=\"login-row\">\n          <div className=\"login-cell cell-login-hero\" style={{backgroundImage: 'url(/assets/images/login-bg.jpg)'}}>\n            <div className=\"login-cell-block\">\n              <div className=\"login-cell-content\">\n                <div className=\"login-hero-content\">\n                  <h1 className=\"login-heading\">Welcome to SQ</h1>\n                  <div className=\"login-subheading\">\n                    <p>\n                    This is the new face of SQ. New look, new ideas, same core\n                    </p>\n                  </div>\n                  <div className=\"website-link\">\n                    <Link to='http://webmamu.com/static/qcn/'>www.sqgc.com/</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"login-cell cell-login-form\">\n            <div className=\"bg-image-mobile\" style={{backgroundImage: 'url(/assets/images/login-bg.jpg)'}}></div>\n            <div className=\"login-cell-block\">\n              <div className=\"login-logo text-center\">\n                <img src=\"/assets/images/logo-white.png\" alt=\"SQ\"/>\n              </div>\n              <div className=\"logo-with-form login-cell-content\">\n                <h4 className=\"mb-3\">Signup with SQ</h4>\n               <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n\n        <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('fistName', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })( <Input size=\"large\" prefix={ <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"FirstName\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('lastName', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })( <Input size=\"large\" prefix={ <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"LastName\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Please input your Username!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"usergroup-add\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Username\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Password\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('accountType', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"book\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"AccountType\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('company', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Company\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n\n         <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"title\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Title\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('officeNumber', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"office\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"OfficeNumber\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('phone', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Phone\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('homeNumber', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"HomeNumber\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item>\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('email', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Email\" /> )}\n            </Col>\n             <Col span={12}>\n              {getFieldDecorator('address', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"large\" prefix={ <Icon type=\"address\" style={{ color: \"rgba(0,0,0,.25)\" }} /> } type=\"\" placeholder=\"Address\" /> )}\n            </Col>\n          </Row>\n        </Form.Item>\n                 <Form.Item>\n                     <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"login-form-button\"\n                      style={{ width: \"100%\" }}\n                    >\n                      Signup\n                    </Button>\n                 </Form.Item>\n\n\n              <Form.Item>\n\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  size=\"large\"\n                  className=\"btn-info\"\n                  style={{ width: \"100%\" }}\n                >\n                  <Link to='/' style={{textDecoration:\"none\"}}>Cancel</Link>\n                </Button>\n\n              </Form.Item>\n      </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst WrappedSignupForm = Form.create()(SignupForm);\n\nexport default WrappedSignupForm;\n","var  trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116, trace117, trace118, trace119, trace120, trace121, trace122, trace123, trace124, trace125, trace126, trace127, trace128, trace129, trace130, trace131, trace132, trace133, trace134, trace135, trace136;\n\n\ntrace1 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:425279', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c87349', \n    y: [22932.549977827, 15288.3666518847, 22083.1962749446, 22932.549977827, 21233.8425720621, 22083.1962749446, 21233.8425720621, 21233.8425720621, 21233.8425720621, 20384.4888691796, 14439.0129490022, 22083.1962749446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace2 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0f37f3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0a6879', \n    y: [229325.49977827, 152883.666518847, 220831.962749446, 229325.49977827, 212338.425720621, 220831.962749446, 212338.425720621, 212338.425720621, 212338.425720621, 203844.888691796, 144390.129490022, 220831.962749446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace3 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2e0c77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d318d5', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 139829.371493738, 137170.186130577, 129079.739031383, 125605.344395292, 134357.033703167, 134725.378704549, 136576.824101274, 423696, 129626.43768249, 123306.875180938, 122810.346078415, 122810.449392715, 283866.628506262, 286525.813869423, 294616.260968617, 298090.655604708, 289338.966296833, 288970.621295451, 287119.175898726, 0, 294069.56231751, 300389.124819062, 300885.653921585, 300885.550607285], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace4 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1c9dc0', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:a9f4f7', \n    y: [0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace5 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1d2e3e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:339d55', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace6 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9acaae', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6b9dc9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace7 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ac9611', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:37e82b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace8 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:73eb8e', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:a00fde', \n    y: [0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace9 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5fc7f0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8f445b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace10 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:908923', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:38560a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace11 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:7b2e0c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9864fa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace12 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:d5d6ff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1dc36c', \n    y: [518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 335158.029611278, 328784.209024321, 309392.157987594, 301064.356411395, 322041.343669961, 322924.232461934, 327361.975294292, 1015560, 310702.543929679, 295555.13896462, 294365.004775582, 294365.252410373, 680401.970388722, 686775.790975679, 706167.842012406, 714495.643588605, 693518.656330039, 692635.767538066, 688198.024705708, 0, 704857.456070322, 720004.86103538, 721194.995224418, 721194.747589627], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace13 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:88707d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:40fddb', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 18313759.5010242, 18313759.5010242, 18313759.5010242, 4489996.83222118, 4404608.95033818, 4144820.31324015, 4033255.62019112, 4314277.10265343, 4326104.86009597, 4385555.77428892, 13605107.97912, 4162375.10294867, 3959450.52916369, 3943506.71082552, 3943510.02830364, 9115111.14689882, 9200499.02878182, 9460287.66587985, 9571852.35892888, 9290830.87646657, 9279003.11902404, 9219552.20483108, 0, 9442732.87617133, 9645657.44995631, 9661601.26829448, 9661597.95081636], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace14 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c62213', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:161e2b', \n    y: [161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 448124.859277611, 439602.707930368, 413674.461031386, 402539.728816393, 430587.123277496, 431767.59452003, 437701.102616396, 1357860, 415426.519654529, 395173.599781893, 393582.324416648, 393582.655518088, 909735.140722389, 918257.292069633, 944185.538968614, 955320.271183607, 927272.876722504, 926092.40547997, 920158.897383604, 0, 942433.480345471, 962686.400218107, 964277.675583352, 964277.344481912], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace15 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:044f3e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e532c3', \n    y: [1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace16 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:773613', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9a8b6c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Photo Shoot<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace17 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:eac99a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6d9612', \n    y: [475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 495483.817014797, 500125.374639313, 514247.096629526, 520311.5865809, 505035.678854754, 504392.739639872, 501161.076809369, 0, 513292.844501221, 524323.521008034, 525190.203140667, 525190.022807515], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace18 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:10da05', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:084d15', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Testing & Audit <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace19 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1a380b', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:27fc6b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace20 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:444ab6', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5087b8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace21 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ebf7fe', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:efa3ae', \n    y: [1608960.74423044, 0, 1072640.49615363, 0, 1549369.60555524, 0, 1608960.74423044, 0, 1489778.46688004, 0, 1549369.60555524, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1430187.32820484, 0, 1013049.35747843, 0, 1549369.60555524, 0, 720202.382362438, 0, 480134.921574959, 0, 693528.220052718, 0, 720202.382362438, 0, 666854.057742998, 0, 693528.220052718, 0, 666854.057742998, 0, 666854.057742998, 0, 666854.057742998, 0, 640179.895433278, 0, 453460.759265239, 0, 693528.220052718, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace22 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8345c7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d42154', \n    y: [39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 30135735.9214807, 25298938.4880667, 29724412.3863718, 30267446.4541684, 26543650.0134904, 25724358.4067107, 24124086.6958053, 26553358.1757382, 28367214.9389574, 28641569.2691702, 26079482.1375705, 29353877.6095957, 55835950.7148664, 56057968.826279, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 30762800.0082777, 57275330.7882282, 63043415.0213892, 63043415.0213892, 63043415.0213892], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace23 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:97feb1', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d12534', \n    y: [10726404.9615363, 0, 7150936.64102418, 0, 10329130.7037016, 0, 10726404.9615363, 0, 9931856.44586692, 0, 10329130.7037016, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9534582.18803224, 0, 6753662.38318951, 0, 10329130.7037016, 0, 4801349.21574959, 0, 3200899.47716639, 0, 4623521.46701812, 0, 4801349.21574959, 0, 4445693.71828665, 0, 4623521.46701812, 0, 4445693.71828665, 0, 4445693.71828665, 0, 4445693.71828665, 0, 4267865.96955519, 0, 3023071.72843492, 0, 4623521.46701812, 0, 3362997.93933349, 2287830.4495513, 3243534.88491325, 3362997.93933349, 1031216.02490194, 1031216.02490194, 1048402.95865031, 962468.289908477, 2137375.45490759, 3004608.77607276, 2338545.76897808, 3243534.88491325, 19686663.6666706, 13839328.6318585, 19352611.2161978, 20016620.2098093, 16845452.4342116, 16750842.6688536, 16822670.3109249, 16378.0079825834, 19640793.2851611, 20616507.7338572, 16042895.3602932, 22091066.4794303], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace24 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0d90b0', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18a0ea', \n    y: [2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 3039523.13135566, 2947705.13135566, 3151571.13135566, 3161773.13135566, 3141369.13135566, 3120965.13135566, 3080157.13135566, 3141369.13135566, 3151571.13135566, 3131167.13135566, 3080157.13135566, 3151571.13135566, 7954761.4005913, 6463094.26706087, 8318940.60797681, 7780223.42233043, 7131068.81797101, 7312133.85440704, 6269752.85049241, 7647843.37942797, 8587163.79945083, 8556167.67741496, 10880117.3201905], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace25 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1fde67', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:67b750', \n    y: [1146600, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace26 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fd9f81', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:634f4c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace27 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0e4162', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a3ff6b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 218284.285714286, 13020, 154911.428571429, 9240, 211242.857142857, 12600, 218284.285714286, 13020, 211242.857142857, 12600, 211242.857142857, 12600, 214763.571428571, 12810, 197160, 11760, 211242.857142857, 12600, 197160, 11760, 147870, 8820, 211242.857142857, 12600], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace28 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:afbc2a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:523d94', \n    y: [1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Maternity Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace29 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:981aed', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5dfd37', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1228576, 830575.428571429, 1212274.4, 1258667.37142857, 1028615.71428571, 949960.742857143, 793407.942857143, 1025587.14285714, 1212274.4, 1119488.45714286, 884495.028571429, 1212274.4, 2428752.78571429, 1703589.81292517, 2555960.51020408, 2645760.52721088, 2521450.51020408, 2452430.51020408, 2342035.51870748, 0, 2555960.51020408, 2482320.47619048, 2106776.07142857, 2670750.51020408], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Food Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace30 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:70976d', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b9e693', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace31 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:47a0ef', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:411fc2', \n    y: [235200], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace32 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9e7823', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4c852c', \n    y: [522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace33 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6251a0', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:cf5a69', \n    y: [378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace34 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:65f3b1', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:cf770a', \n    y: [277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace35 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f7b6a3', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:97ae5f', \n    y: [2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace36 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:830b85', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:227b02', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Capitalization<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace37 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b60f8f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c79baa', \n    y: [22557834.602987, 22557834.602987, 22557834.602987, 20919834.602987, 20919834.602987, 20919834.602987, 19638834.602987, 19638834.602987, 20524882.484747, 20524882.484747, 20524882.484747, 20524882.484747, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9291085.39664606, 9291085.39664606, 9291085.39664606, 9291085.39664606, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 6216550.2, 6216550.2, 6216550.2, 6216550.2, 18272100, 18572064, 18572064, 18572064, 18572064, 18572064, 18572064, 18572064, 19872108.48, 19872108.48, 19872108.48, 19872108.48], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace38 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:64b6eb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e60c8c', \n    y: [733129.624597079, 733129.624597079, 733129.624597079, 679894.624597079, 679894.624597079, 679894.624597079, 638262.124597079, 638262.124597079, 667058.680754279, 667058.680754279, 667058.680754279, 667058.680754279, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 301960.275390997, 301960.275390997, 301960.275390997, 301960.275390997, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace39 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:41fa5b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ef4f87', \n    y: [4409374.25364134, 2789909.4797758, 4321492.11643394, 4489240.88784013, 4015814.76627071, 3284560.35719498, 3484329.25744528, 3121222.73049681, 4014533.22508098, 4142919.46999126, 4416627.10286536, 3000121.08413271, 2502587.6123425, 1743690.98807963, 2544870.49781418, 2662995.27166689, 2068260.5719009, 1638712.7090145, 1845099.22882579, 1905665.95220836, 2607349.10491958, 2643208.5138882, 2001265.19895564, 2472748.13154685, 150281.25, 150281.25, 150281.25, 150281.25, 150281.25, 82320, 82320, 82320, 82320, 150281.25, 150281.25, 150281.25, 17929276.1694776, 13383805.8072267, 18430717.2429529, 18984487.3006549, 18571072.7950706, 18670257.9530689, 19513101.4274891, 507698.244336978, 17711508.783694, 16040398.7036612, 11932003.6936207, 17443872.5735388], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Electricity Meter Reading<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace40 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cc6014', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c47869', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2299481.13168, 1632756.04416, 2225400.5664, 2299481.13168, 2272686.0336, 2225400.5664, 2262440.84904, 2077239.43584, 2225400.5664, 2077239.43584, 1558675.47888, 2225400.5664], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Gas Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace41 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6a34be', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9cbd08', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2808000, 1872000, 2704000, 2808000, 2080000, 1913600, 1580800, 2080000, 2433600, 2496000, 1976000, 2704000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Generator fuel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace42 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:487914', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ff1919', \n    y: [1490000, 1490000, 1490000, 1490000, 1490000, 1490000, 0, 0, 0, 0, 0, 0, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Generator Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace43 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:e93350', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f4168a', \n    y: [713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace44 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c46025', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9cc476', \n    y: [770896.996705107, 745896.996705107, 770896.996705107, 770896.996705107, 770896.996705107, 735896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 562481.382423978, 1705156.68598511, 1501219.3887161, 1804211.03215689, 1832379.96116656, 1804211.03215689, 1804211.03215689, 1818295.49666172, 0, 2032761.03215689, 1976423.17413754, 1779240.67106982, 2032761.03215689], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Consumables<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace45 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ac0d4d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:bd5051', \n    y: [75000, 70000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 332511.3, 239380.2, 322163.4, 332511.3, 320707.5, 317795.7, 316418.1, 302923.5, 322163.4, 301467.6, 231944.1, 322163.4, 2091552.18270353, 1516532.3495633, 2368195.82941798, 2457196.12480318, 2084301.22084974, 2105916.4334555, 1919459.40985666, 0, 2205499.34796037, 2276821.33897514, 1742612.23423136, 2436584.21461623], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Needles<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace46 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b6b205', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4ff47e', \n    y: [725000, 630000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 0, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Spare Parts<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace47 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5b0b25', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:beaddf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Chemical ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace48 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1b2c94', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:38126b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=CSR Projects<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace49 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:733f82', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4b7ba0', \n    y: [217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=T&D<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace50 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:34a1d8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1b650a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Annual Trip<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace51 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8d8642', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:273b2c', \n    y: [291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Fire & All Risk Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace52 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0661fb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5cf27b', \n    y: [207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Group Insurance - Workers & staff<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace53 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5637a8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:13d76a', \n    y: [437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Security Sercvices Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace54 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f6e724', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6bd41e', \n    y: [145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Telephone, Fax & Email , Internet<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace55 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:694d13', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8ccac1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 5398.45758354756, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Postage & Courier Charges Local<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace56 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8de7eb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:181239', \n    y: [533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=WFX,FR & Kormee Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace57 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:41a51e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18de04', \n    y: [465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 718000, 718000, 718000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Vehicle  Hire -  staff <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace58 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3c3f9e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7cf904', \n    y: [252175, 151305, 252175, 252175, 252175, 252175, 252175, 252175, 252175, 201740, 151305, 252175, 108075, 64845, 108075, 108075, 108075, 108075, 108075, 108075, 108075, 86460, 64845, 108075, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 44996.8888888889, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Adhoc Hiring<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace59 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:dd155a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5d6718', \n    y: [382982.25, 263802, 369740, 382982.25, 356497.75, 369740, 356497.75, 356497.75, 356497.75, 343255.5, 250559.75, 369740, 164135.25, 113058, 158460, 164135.25, 152784.75, 158460, 152784.75, 152784.75, 152784.75, 147109.5, 107382.75, 158460, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 751413.2, 751413.2, 751413.2, 751413.2], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Vehicle Fuel Expenses Factory<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace60 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fc662a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6d3d43', \n    y: [0, 0, 0, 0, 0, 2100, 0, 0, 0, 0, 79940, 37870, 0, 0, 0, 0, 0, 900, 0, 0, 0, 0, 34260, 16230, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Lisence & Tax Token<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace61 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b975c1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:3df8c3', \n    y: [127281, 82908, 123648, 127281, 120015, 123648, 120015, 120015, 120015, 110544, 79275, 123648, 54549, 35532, 52992, 54549, 51435, 52992, 51435, 51435, 51435, 47376, 33975, 52992, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 123355, 123355, 123355, 123355], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Driver OT<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace62 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:218e14', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:de3b63', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Genarator Fuel Transpsort<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace63 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b64f76', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d8f351', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Foreign Travel-Operation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace64 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3c71d3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:49bdcc', \n    y: [96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Annual Trip Expact<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace65 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:61ddf7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1e5e0c', \n    y: [46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Expact VISA<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace66 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f3b174', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7ef159', \n    y: [478520, 436613.333333333, 473863.703703704, 478520, 469207.407407407, 473863.703703704, 469207.407407407, 469207.407407407, 469207.407407407, 464551.111111111, 431957.037037037, 473863.703703704, 69060, 46040, 66502.2222222222, 69060, 63944.4444444444, 66502.2222222222, 63944.4444444444, 63944.4444444444, 63944.4444444444, 61386.6666666667, 43482.2222222222, 66502.2222222222, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Factory Maintenance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace67 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8132b3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b4afaf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Equipment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace68 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3af169', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:70172d', \n    y: [218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Electrical<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace69 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:46c3b5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0cc254', \n    y: [91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Computer<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace70 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a259ab', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5c0c86', \n    y: [58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Vehicle<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace71 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:38017e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:bcf0c7', \n    y: [428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Plant & Machinery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace72 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:71c835', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:3ab903', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace73 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:bef4ae', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c4fa7f', \n    y: [261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=AC Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace74 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1740f6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9570d8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Industrial Fans<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace75 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cd29f2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00'], \n    ysrc: 'sumon23:122:818f1b', \n    y: [35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Machine Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace76 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a073d1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0c45e2', \n    y: [481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=House Rent/Office Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace77 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0bd9ca', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ba7f5e', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Table & Chair<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace78 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ebef01', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:639ee1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=TV Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace79 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:d7ee73', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4c4935', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Refrigerator<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace80 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b3dac8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:09e362', \n    y: [130000, 78000, 130000, 130000, 130000, 130000, 130000, 130000, 130000, 104000, 78000, 130000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 164838.492247193, 166382.654405936, 171080.695554536, 173098.241527794, 168016.223688229, 167802.329455666, 166727.213760382, 0, 170763.233153844, 174432.93945183, 174721.268900936, 174721.208907363], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Buyer QC entertainment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace81 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:726fdf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f27509', \n    y: [90000, 54000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 72000, 54000, 90000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Buyer Visit Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace82 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:01fda5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:08f107', \n    y: [244069.516318536, 239427.958694021, 225306.236703807, 219241.746752434, 234517.654478579, 235160.593693461, 238392.256523965, 739553.333333333, 226260.488832113, 215229.8123253, 214363.130192666, 214363.310525818], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace83 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:26fd40', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b2b09b', \n    y: [455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 119545.614444444, 605609.686666667, 605609.686666667, 605609.686666667, 605609.686666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Printing & Stationery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace84 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:512d20', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:329cb2', \n    y: [369724.5, 321183, 364331, 369724.5, 358937.5, 405413.75, 402321.875, 407634.375, 414275, 415833.90625, 379016.7578125, 452663.603515625, 71865, 47910, 69203.3333333333, 71865, 66541.6666666667, 69203.3333333333, 66541.6666666667, 66541.6666666667, 66541.6666666667, 63880, 45248.3333333333, 69203.3333333333, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Entertainment & Daily Tea Coffee Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace85 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1957e6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:df3e61', \n    y: [546750, 364500, 526500, 546750, 506250, 526500, 506250, 506250, 506250, 486000, 8032500, 526500, 176850, 117900, 170300, 176850, 163750, 170300, 163750, 163750, 163750, 157200, 4777000, 170300, 1966492.34693878, 1312276.09329446, 1907623.03206997, 1980993.14868805, 1834252.9154519, 1687512.68221574, 1394032.21574344, 1907623.03206997, 2127264.13994169, 1684084.11078717, 2304536.1516035], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Tifin Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace86 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cf444b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e9eb0f', \n    y: [421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 886156.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 479586.666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Welfare<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace87 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:12a895', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8dce64', \n    y: [65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Medical Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace88 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5b1eaf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ceecfe', \n    y: [54000, 36000, 52000, 54000, 50000, 52000, 50000, 50000, 50000, 48000, 34000, 52000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Child Care Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace89 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c8f11b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d650a9', \n    y: [80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Best Line Gift<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace90 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:303488', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b21d79', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Compliance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace91 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:899890', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9dbfd1', \n    y: [72750, 43650, 72750, 72750, 72750, 72750, 72750, 72750, 72750, 58200, 43650, 72750, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 12323.125, 61615.625, 61615.625, 61615.625, 61615.625], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Convayance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace92 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6e124b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a6c3a7', \n    y: [210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Casual Labour<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace93 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:072bdb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:32f7e1', \n    y: [126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Mobile Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace94 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8a246b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:46bd53', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 225000, 225000, 75000, 75000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Facility Expeses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace95 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:193ed9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1d03eb', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Legal Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace96 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9e4cbb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:25eaaa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70495.9410790425, 73577.9027633131, 74520.6450522933, 78146.5342128796, 60200.2269944661, 29075.2920620521, 62286.0986439324, 46783.6409541974, 3597203.12301931, 2077760.79770928, 4549019.69683021, 4835894.00896865, 4464452.7175772, 4032589.89200036, 3484822.56944306, 0, 4178749.58307533, 4053168.12041538, 3336006.95191142, 4907767.64792832], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Washing Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace97 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:15e210', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d496e7', \n    y: [16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Accomodation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace98 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9f9594', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:91c23a', \n    y: [276750, 184500, 266500, 276750, 256250, 266500, 256250, 256250, 256250, 246000, 174250, 266500, 205875, 137250, 198250, 205875, 190625, 198250, 190625, 190625, 190625, 183000, 129625, 198250], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Meal<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace99 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c36a37', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:73f946', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=VAT Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace100 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c7433e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:424e15', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Air Freight<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace101 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:27688b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1eccc0', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Discount<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace102 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9c01b5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:979cdf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Claims<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace103 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2daa2e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e207fe', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Inspection charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace104 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:af5e17', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f6e1cf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Demmurage Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace105 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:684e45', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f2cc47', \n    y: [1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 1282875.94285714, 1287031.42857143, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1333820.11428571, 1457190.11428571, 1457190.11428571], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace106 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0370ef', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:80a482', \n    y: [235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace107 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:83d47a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:77829c', \n    y: [1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Subcontract<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace108 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:526c85', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e9f893', \n    y: [856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Resignation Benefit<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace109 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:322820', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:2b056c', \n    y: [436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=HR Event & activities<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace110 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0a3651', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d460e6', \n    y: [9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Depreciation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace111 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:aea68b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4d5f8d', \n    y: [1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Winding Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace112 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f649af', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:da39c6', \n    y: [1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Winding  Consumable<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace113 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2f118a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:915bb3', \n    y: [1652245.58475172, 1641506.49941012, 1670355.6205427, 1670355.6205427, 1670355.6205427, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1666076.15994459, 714612.613960769, 709967.852964984, 722445.384182673, 722445.384182673, 722445.384182673, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 720594.475000298], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Salary ( Station common)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace114 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c0a999', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:491c21', \n    y: [1600084.51832467, 1587789.28409258, 1620818.79176776, 1620818.79176776, 1620818.79176776, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1615919.21524266], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace115 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:945f26', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6827d8', \n    y: [446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Winding Utility<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace116 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:76cfff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:44d502', \n    y: [8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5196481.87052486, 5097658.50900636, 4796993.05348522, 4667874.0526299, 4993113.26624445, 5006802.07926944, 5075607.38344534, 15745823.3495136, 4817310.02694198, 4582455.99292789, 4564003.47145913, 4564007.31093064, 10549341.4789887, 10648164.8405072, 10948830.2960284, 11077949.2968837, 10752710.0832691, 10739021.2702441, 10670215.9660682, 0, 10928513.3225716, 11163367.3565857, 11181819.8780545, 11181816.0385829], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=BSC Common<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace117 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:68c71c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:989cec', \n    y: [7542638.22161732, 7992605.73721689, 8259132.87861216, 8398021.42547909, 8266939.13907942, 8249411.63557159, 8464358.37926181, 8048972.03593794, 8737907.74420371, 9033845.10426946, 8724980.13052805, 9346054.27171425, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6383497.35697776, 6551780.54101973, 6384291.65256811, 6411279.50891445, 6775473.1665179, 6789773.08159736, 7368504.39222547, 21102504.0478758, 7257292.03750336, 7134606.3163587, 6855436.63068271, 7495613.11101102, 12959093.3109863, 13685585.0732936, 14571737.9793854, 15215455.3715708, 14591036.6442246, 14563291.3762081, 15490467.8932432, 0, 16463838.1740182, 17380686.5525925, 16795836.8281441, 18364249.0455663], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Q Collection Expenses (Singapore)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace118 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2d6b15', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6a6750', \n    y: [2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1679171.60237042, 1647238.19310484, 1550082.28891733, 1508359.26072926, 1613455.83666009, 1617879.1882034, 1640112.67534784, 5088046.12105263, 1556647.43928728, 1480757.59026164, 1474794.91189298, 1474796.15256536, 3408874.51868221, 3440807.92794779, 3537963.83213531, 3579686.86032337, 3474590.28439254, 3470166.93284924, 3447933.4457048, 0, 3531398.68176536, 3607288.53079099, 3613251.20915965, 3613249.96848727], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Q Collection Expenses (Bangladesh)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace119 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:79b34e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:86a571', \n    y: [587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Birichina CHO Direct <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace120 = {\n    line: {color: '#FFA15A'}, \n    mode: 'lines', \n    name: 'Category=Design Center', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c92427', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e801a6', \n    y: [1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 972958.773613414, 954455.667276649, 898160.831624269, 873985.347546289, 934881.229470619, 937444.242498445, 950326.943917804, 2948155.57090144, 901964.862518739, 857992.171262254, 854537.229417818, 854537.948297935, 1975196.79728802, 1993699.90362479, 2049994.73927717, 2074170.22335515, 2013274.34143082, 2010711.32840299, 1997828.62698363, 0, 2046190.7083827, 2090163.39963918, 2093618.34148362, 2093617.6226035], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Design Center', \n    orientation: 'v', \n    hovertemplate: 'Category=Design Center<br>Description=UK Office Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace121 = {\n    line: {color: '#19d3f3'}, \n    mode: 'lines', \n    name: 'Category=Import Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a7c4e2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:196fd0', \n    y: [1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 493758.277103692, 484368.29866506, 455799.728428189, 443531.124978364, 474434.639656586, 475735.32056017, 482273.049218128, 1496133.5, 457730.202556633, 435414.8888319, 433661.570830288, 433661.935648426, 1002375.22289631, 1011765.20133494, 1040333.77157181, 1052602.37502164, 1021698.86034341, 1020398.17943983, 1013860.45078187, 0, 1038403.29744337, 1060718.6111681, 1062471.92916971, 1062471.56435157], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Import Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Import Expenses<br>Description=C& F Charges - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace122 = {\n    line: {color: '#19d3f3'}, \n    mode: 'lines', \n    name: 'Category=Import Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:4842e1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b5b211', \n    y: [1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 624898.311344436, 613014.395789073, 576858.138514228, 561331.047761802, 600442.400487487, 602088.536538138, 610362.65727258, 1893500, 579301.338109857, 551059.174868554, 548840.183290563, 548840.645002799, 1268601.68865556, 1280485.60421093, 1316641.86148577, 1332168.9522382, 1293057.59951251, 1291411.46346186, 1283137.34272742, 0, 1314198.66189014, 1342440.82513145, 1344659.81670944, 1344659.3549972], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Import Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Import Expenses<br>Description=Transport - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace123 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:aeb87d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8f4793', \n    y: [1677739.81850432, 1587722.62816896, 1299648.33739565, 2076128.47117164, 1617002.18682339, 2333067.02849418, 2354723.38202931, 2748608.26003403, 2886152.93322663, 1763933.93967844, 1299424.83242869, 1785380.76199099, 719031.350787566, 680452.554929554, 556992.144598134, 889769.344787845, 693000.937210026, 999885.86935465, 1009167.16372685, 1177974.96858601, 1236922.68566856, 755971.688433617, 556896.356755153, 765163.183710423, 678679.802839185, 883305.764504294, 899414.096500405, 977294.681412369, 905673.967534534, 958047.607126306, 1035468.41481008, 1149459.8160657, 773254.601967319, 936151.649809413, 702874.207398739, 995995.584258069, 1377783.11816186, 1845079.53374957, 2052855.23632017, 2319347.26745694, 1950376.26498461, 2054903.20327125, 2176817.62543384, 0, 1754199.57861919, 2280568.49524025, 1722043.55960981, 2440188.77264763], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=C& F Charges - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace124 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6fa5c6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8eb87f', \n    y: [1089403.20614105, 1036164.4651338, 1017666.27571308, 1326795.57761849, 1241431.92719414, 1272876.37659969, 1332495.57022356, 1300476.60897125, 1419772.81453305, 1434657.40866167, 1056859.0018641, 1452100.71639039, 466887.088346166, 444070.485057343, 436142.68959132, 568626.676122212, 532042.254511775, 545518.447114151, 571069.530095812, 557347.118130534, 608474.063371309, 614853.175140714, 452939.572227471, 622328.878453023, 1117220.6379875, 900661.216714062, 1343206.36484148, 1326222.35659685, 1232391.18675497, 1062174.08431979, 916542.237073173, 1149345.97633447, 1252774.22876258, 1191063.67820593, 890803.588707002, 1261972.10707289, 2268061.79857091, 1881332.20067197, 3065782.74707102, 3147433.68332658, 2653964.4573934, 2278242.65940961, 1926804.59160251, 0, 2842034.20013165, 2901562.26386442, 2182471.01211378, 3091831.14437969], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Transport - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace125 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b52341', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:719362', \n    y: [1259409.88819286, 1194264.33560202, 1026569.08647076, 1573004.07831, 1249111.76982545, 1780836.23120121, 1767465.45648945, 2040596.61406134, 2141845.54093323, 1360231.12490562, 1019426.95675037, 1389966.37384633, 539747.094939797, 511827.572400865, 439958.179916039, 674144.60499, 535333.615639479, 763215.527657663, 757485.195638336, 874541.406026289, 917933.803257099, 582956.196388122, 436897.26717873, 595699.874505569, 346040.048107684, 486333.823548411, 500397.224261824, 539200.711515193, 502635.133444161, 526880.568389034, 563952.732913928, 672039.696803797, 434794.914950447, 515699.182249713, 392011.326955426, 547306.126697075, 702493.479983012, 1015870.85747473, 1142124.70769909, 1279648.52428775, 1082428.85338259, 1130098.92167213, 1185571.89322262, 0, 986372.476350392, 1256299.98974983, 960428.727888611, 1340899.78577799], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Documentation Chrages & Misc Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace126 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:127397', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5b648f', \n    y: [0, 0, 0, 0, 0, 280000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120000, 0, 0, 0, 0, 0, 0, 11880.8234530762, 11654.8815676824, 14775.6111528598, 10672.2565193688, 11415.8576274357, 184585.368608603, 11604.4656254623, 36000, 11013.9150630868, 10476.9634514222, 10434.7750718037, 57536.2387288384, 24119.1765469238, 24345.1184323176, 33724.3888471402, 25327.7434806312, 24584.1423725643, 395914.631391397, 24395.5343745377, 0, 24986.0849369132, 25523.0365485778, 25565.2249281963, 140963.761271162], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Custom & VAT service charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace127 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8bd53e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9e4346', \n    y: [432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 87571.0468099923, 85905.6767705923, 80838.8663138996, 78662.9545432656, 84143.8816607902, 84374.5653648909, 85534.0714813156, 265348.416093455, 81181.2476938312, 77223.4904806637, 76912.5288220713, 76912.5935247967, 177777.369283462, 179442.739322862, 184509.549779555, 186685.461550189, 181204.534432664, 180973.850728564, 179814.344612139, 0, 184167.168399623, 188124.925612791, 188435.887271383, 188435.822568658], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Marine Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace128 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:bbf0bd', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1959b4', \n    y: [26345317.4533711, 26286344.78057, 26443688.2500088, 26750235.1744672, 27043710.34799, 27339839.0407889, 28188645.2100924, 28124326.6401811, 28059380.7024324, 27993801.2681649, 27927582.1487396, 27860717.0949725, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7584511.23210952, 7263509.74746615, 6997360.17711525, 6966666.96498879, 7619195.85308483, 7806122.6827214, 8080141.4534435, 24495659.4297901, 7318034.95057534, 9431655.53572762, 9059401.97906665, 8955543.12658645, 15397263.1738764, 15172269.5772978, 15971027.7345011, 16533518.8002639, 16408000.321108, 16743245.7286413, 16986509.7575964, 0, 16601639.0900993, 22976551.3708359, 22195557.4237167, 21941076.9845297], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - Term Loan<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace129 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a4b05f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18e328', \n    y: [10453741.5853845, 10025464.8528619, 9795521.7551532, 9667393.299376, 9306132.17215348, 9156697.64801144, 9592902.12776383, 8902775.65939242, 9464147.20163676, 9436113.66565703, 9120015.19634, 9528458.9009511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3530378.7887179, 3462583.09143366, 3257731.78654968, 3169431.15202398, 3389602.29974493, 3347436.50457805, 3341266.00287915, 10203584.0360386, 3072176.07256655, 2875279.92524695, 2816764.4005748, 2816119.47014271, 7166997.27244541, 7232762.93741485, 7435564.75550766, 7521796.26232712, 7299536.15775942, 7179870.75468753, 7024189.84712751, 0, 6969515.54924982, 7004498.48467384, 6901079.80046603, 6899491.54603491], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - WC<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace130 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2e8093', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:47d37e', \n    y: [5776611.71136482, 5573373.3770077, 6476297.81245559, 9004041.58579832, 8325392.37272467, 8554809.5313783, 8943367.22219713, 8644887.35672514, 8736023.30946739, 8784806.16312224, 7044055.12975788, 9252103.69135721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 676817.173598667, 2006924.04376777, 2064596.14240516, 2403585.82444489, 3173057.79829852, 2575717.0080632, 1913241.65538662, 3278053.26626029, 1136788.92422352, 2147059.10071133, 3195355.68500536, 3848249.83961438, 1374001.80757586, 4192132.13334332, 4712308.84451781, 5704267.42317678, 6833205.81033459, 5524620.16628314, 4022119.9387561, 0, 2578910.80994323, 5230472.37431883, 7828629.3907275, 9428210.52762515], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Bank Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace131 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2b3fd4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a98160', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest on IDBP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace132 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6be012', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f6a28d', \n    y: [404048.917905421, 415505.20019154, 459144.2955772, 569151.797061948, 603484.937736964, 611214.586929408, 976361.510345334, 2043884.95181965, 1035020.15068679, 1055735.60698053, 967306.767568972, 1273152.63007536, 820256.880597881, 867921.587118999, 1047967.5324966, 1350729.4067907, 1299609.72825799, 1310985.8040716, 2052559.89860853, 0, 2348038.93514219, 2571888.18187022, 2369903.99096286, 3119223.42114693], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - WC(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace133 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5c9b09', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:662e37', \n    y: [1356568.31979069, 1330769.97298001, 1252279.70937899, 1218572.53009739, 1303477.89964091, 1307051.43468788, 1325013.41323494, 4110528.17217144, 1257583.55979783, 1196273.70627449, 1191456.5806367, 1191457.58295049, 2753959.85238076, 2779758.19919144, 2858248.46279246, 2891955.64207406, 2807050.27253053, 2803476.73748357, 2785514.7589365, 0, 2852944.61237362, 2914254.46589696, 2919071.59153474, 2919070.58922095], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - Term Loan(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace134 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:904941', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5ad15c', \n    y: [2021390.10139143, 1982948.60005708, 1865992.1301292, 1815765.86614261, 1942281.33244566, 1947606.1717962, 1974370.88766546, 6125000, 1873895.27115018, 1782538.92055447, 1775361.03652215, 1775362.53004602, 4103609.89860857, 4142051.39994292, 4259007.8698708, 4309234.13385739, 4182718.66755434, 4177393.8282038, 4150629.11233454, 0, 4251104.72884982, 4342461.07944553, 4349638.96347785, 4349637.46995398], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest on EDF<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace135 = {\n    line: {color: '#FF97FF'}, \n    mode: 'lines', \n    name: 'Category=Product development', \n    type: 'scatter', \n    xsrc: 'sumon23:122:890860', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a24dd5', \n    y: [652657.195296801, 640245.379078543, 602483.008726379, 586266.182216168, 627114.917619678, 628834.177407056, 637475.846513938, 1977612, 605034.738770589, 575538.017919277, 573220.455536106, 573220.937758265, 1324954.8047032, 1337366.62092146, 1375128.99127362, 1391345.81778383, 1350497.08238032, 1348777.82259294, 1340136.15348606, 0, 1372577.26122941, 1402073.98208072, 1404391.54446389, 1404391.06224174], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Product development', \n    orientation: 'v', \n    hovertemplate: 'Category=Product development<br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace136 = {\n    line: {color: '#FF97FF'}, \n    mode: 'lines', \n    name: 'Category=Product development', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fc65b3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7cadb3', \n    y: [222440.69723746, 218210.462631195, 205340.171686721, 199813.101393303, 213735.297072603, 214321.260651328, 217266.541750322, 674016, 206209.860421153, 196156.694379828, 195366.815411023, 195366.97976351, 451575.30276254, 455805.537368805, 468675.828313279, 474202.898606697, 460280.702927397, 459694.739348672, 456749.458249678, 0, 467806.139578847, 477859.305620173, 478649.184588977, 478649.02023649], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Product development', \n    orientation: 'v', \n    hovertemplate: 'Category=Product development<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  export const dataChart = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116, trace117, trace118, trace119, trace120, trace121, trace122, trace123, trace124, trace125, trace126, trace127, trace128, trace129, trace130, trace131, trace132, trace133, trace134, trace135, trace136];\n  export const layoutChart = {\n    xaxis: {\n      title: {text: 'Month'}, \n      anchor: 'y', \n      domain: [0.0, 0.98]\n    }, \n    yaxis: {\n      title: {text: 'Amount BDT'}, \n      anchor: 'x', \n      domain: [0.0, 1.0]\n    }, \n    height: 600, \n    legend: {tracegroupgap: 0}, \n    margin: {t: 60}, \n    template: {\n      data: {\n        bar: [\n          {\n            type: 'bar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}, \n            error_x: {color: '#2a3f5f'}, \n            error_y: {color: '#2a3f5f'}\n          }\n        ], \n        table: [\n          {\n            type: 'table', \n            cells: {\n              fill: {color: '#EBF0F8'}, \n              line: {color: 'white'}\n            }, \n            header: {\n              fill: {color: '#C8D4E3'}, \n              line: {color: 'white'}\n            }\n          }\n        ], \n        carpet: [\n          {\n            type: 'carpet', \n            aaxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }, \n            baxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }\n          }\n        ], \n        mesh3d: [\n          {\n            type: 'mesh3d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        contour: [\n          {\n            type: 'contour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        heatmap: [\n          {\n            type: 'heatmap', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatter: [\n          {\n            type: 'scatter', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        surface: [\n          {\n            type: 'surface', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        barpolar: [\n          {\n            type: 'barpolar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}\n          }\n        ], \n        heatmapgl: [\n          {\n            type: 'heatmapgl', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        histogram: [\n          {\n            type: 'histogram', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        parcoords: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'parcoords'\n          }\n        ], \n        scatter3d: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'scatter3d', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattergl: [\n          {\n            type: 'scattergl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        choropleth: [\n          {\n            type: 'choropleth', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattergeo: [\n          {\n            type: 'scattergeo', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2d: [\n          {\n            type: 'histogram2d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatterpolar: [\n          {\n            type: 'scatterpolar', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        contourcarpet: [\n          {\n            type: 'contourcarpet', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattercarpet: [\n          {\n            type: 'scattercarpet', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattermapbox: [\n          {\n            type: 'scattermapbox', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterpolargl: [\n          {\n            type: 'scatterpolargl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterternary: [\n          {\n            type: 'scatterternary', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2dcontour: [\n          {\n            type: 'histogram2dcontour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ]\n      }, \n      layout: {\n        geo: {\n          bgcolor: 'white', \n          showland: true, \n          lakecolor: 'white', \n          landcolor: '#E5ECF6', \n          showlakes: true, \n          subunitcolor: 'white'\n        }, \n        font: {color: '#2a3f5f'}, \n        polar: {\n          bgcolor: '#E5ECF6', \n          radialaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          angularaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }\n        }, \n        scene: {\n          xaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          yaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          zaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }\n        }, \n        title: {x: 0.05}, \n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        mapbox: {style: 'light'}, \n        ternary: {\n          aaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          baxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          caxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          bgcolor: '#E5ECF6'\n        }, \n        colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n        hovermode: 'closest', \n        colorscale: {\n          diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n          sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n          sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }, \n        hoverlabel: {align: 'left'}, \n        plot_bgcolor: '#E5ECF6', \n        paper_bgcolor: 'white', \n        shapedefaults: {line: {color: '#2a3f5f'}}, \n        annotationdefaults: {\n          arrowhead: 0, \n          arrowcolor: '#2a3f5f', \n          arrowwidth: 1\n        }\n      }\n    }\n  };\n\n","\nvar trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116;\ntrace1 = {\n    mode: 'markers', \n    name: 'Description=Overtime - Extra', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c767bc', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4d42f5', \n    y: [22932.549977827, 15288.3666518847, 22083.1962749446, 22932.549977827, 21233.8425720621, 22083.1962749446, 21233.8425720621, 21233.8425720621, 21233.8425720621, 20384.4888691796, 14439.0129490022, 22083.1962749446, 1608960.74423044, 0, 1072640.49615363, 0, 1549369.60555524, 0, 1608960.74423044, 0, 1489778.46688004, 0, 1549369.60555524, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1430187.32820484, 0, 1013049.35747843, 0, 1549369.60555524, 0, 720202.382362438, 0, 0, 480134.921574959, 0, 0, 693528.220052718, 0, 0, 720202.382362438, 0, 0, 666854.057742998, 0, 0, 693528.220052718, 0, 0, 666854.057742998, 0, 0, 666854.057742998, 0, 0, 666854.057742998, 0, 0, 640179.895433278, 0, 0, 453460.759265239, 0, 0, 693528.220052718, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Overtime - Extra', \n    hovertextsrc: 'sumon23:120:16e39f', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace2 = {\n    mode: 'markers', \n    name: 'Description=Wages', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:19cee5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:150852', \n    y: [39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 30135735.9214807, 25298938.4880667, 29724412.3863718, 30267446.4541684, 26543650.0134904, 25724358.4067107, 24124086.6958053, 26553358.1757382, 28367214.9389574, 28641569.2691702, 26079482.1375705, 29353877.6095957, 55835950.7148664, 56057968.826279, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 30762800.0082777, 57275330.7882282, 63043415.0213892, 63043415.0213892, 63043415.0213892], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Wages', \n    hovertextsrc: 'sumon23:120:e14a99', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace3 = {\n    mode: 'markers', \n    name: 'Description=Overtime - Normal (Buyer)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0c48b8', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0345c4', \n    y: [10726404.9615363, 0, 7150936.64102418, 0, 229325.49977827, 152883.666518847, 220831.962749446, 229325.49977827, 212338.425720621, 10329130.7037016, 0, 220831.962749446, 212338.425720621, 212338.425720621, 212338.425720621, 203844.888691796, 10726404.9615363, 0, 144390.129490022, 220831.962749446, 9931856.44586692, 0, 10329130.7037016, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9534582.18803224, 0, 6753662.38318951, 0, 10329130.7037016, 0, 4801349.21574959, 0, 0, 3200899.47716639, 0, 0, 4623521.46701812, 0, 0, 4801349.21574959, 0, 0, 4445693.71828665, 0, 0, 4623521.46701812, 0, 0, 4445693.71828665, 0, 0, 4445693.71828665, 0, 0, 4445693.71828665, 0, 0, 4267865.96955519, 0, 0, 3023071.72843492, 0, 0, 4623521.46701812, 0, 0, 3362997.93933349, 2287830.4495513, 3243534.88491325, 3362997.93933349, 1031216.02490194, 1031216.02490194, 1048402.95865031, 962468.289908477, 2137375.45490759, 3004608.77607276, 2338545.76897808, 3243534.88491325, 19686663.6666706, 13839328.6318585, 19352611.2161978, 20016620.2098093, 16845452.4342116, 16750842.6688536, 16822670.3109249, 16378.0079825834, 19640793.2851611, 20616507.7338572, 16042895.3602932, 22091066.4794303], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Overtime - Normal (Buyer)', \n    hovertextsrc: 'sumon23:120:e39389', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace4 = {\n    mode: 'markers', \n    name: 'Description=Incentive', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a874d5', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:67faa3', \n    y: [2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 3039523.13135566, 139829.371493738, 2947705.13135566, 137170.186130577, 3151571.13135566, 129079.739031383, 3161773.13135566, 125605.344395292, 3141369.13135566, 134357.033703167, 3120965.13135566, 134725.378704549, 3080157.13135566, 136576.824101274, 3141369.13135566, 423696, 3151571.13135566, 129626.43768249, 3131167.13135566, 123306.875180938, 3080157.13135566, 122810.346078415, 3151571.13135566, 122810.449392715, 7954761.4005913, 283866.628506262, 6463094.26706087, 286525.813869423, 8318940.60797681, 294616.260968617, 7780223.42233043, 298090.655604708, 7131068.81797101, 289338.966296833, 7312133.85440704, 288970.621295451, 6269752.85049241, 287119.175898726, 0, 7647843.37942797, 294069.56231751, 8587163.79945083, 300389.124819062, 8556167.67741496, 300885.653921585, 10880117.3201905, 300885.550607285], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Incentive', \n    hovertextsrc: 'sumon23:120:b410c8', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace5 = {\n    mode: 'markers', \n    name: 'Description=Attendance Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:71c50c', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:120:e82042', \n    y: [1146600, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Attendance Bonus', \n    hovertextsrc: 'sumon23:120:e4c807', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace6 = {\n    mode: 'markers', \n    name: 'Description=Daily Allowance ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:827b0d', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:bbb1ff', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Daily Allowance ', \n    hovertextsrc: 'sumon23:120:446809', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace7 = {\n    mode: 'markers', \n    name: 'Description=Night Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c1cdf2', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:eda70d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 218284.285714286, 13020, 154911.428571429, 9240, 211242.857142857, 12600, 218284.285714286, 13020, 211242.857142857, 12600, 211242.857142857, 12600, 214763.571428571, 12810, 197160, 11760, 211242.857142857, 12600, 197160, 11760, 147870, 8820, 211242.857142857, 12600], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Night Allowance', \n    hovertextsrc: 'sumon23:120:c287fb', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace8 = {\n    mode: 'markers', \n    name: 'Description=Maternity Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:935e79', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:17fd2e', \n    y: [1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Maternity Allowance', \n    hovertextsrc: 'sumon23:120:c89984', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Maternity Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace9 = {\n    mode: 'markers', \n    name: 'Description=Food Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8d2abb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ec5a18', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1228576, 830575.428571429, 1212274.4, 1258667.37142857, 1028615.71428571, 949960.742857143, 793407.942857143, 1025587.14285714, 1212274.4, 1119488.45714286, 884495.028571429, 1212274.4, 2428752.78571429, 1703589.81292517, 2555960.51020408, 2645760.52721088, 2521450.51020408, 2452430.51020408, 2342035.51870748, 0, 2555960.51020408, 2482320.47619048, 2106776.07142857, 2670750.51020408], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Food Allowance', \n    hovertextsrc: 'sumon23:120:273443', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Food Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace10 = {\n    mode: 'markers', \n    name: 'Description=Friday /Holiday allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:06d836', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0a4083', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Friday /Holiday allowance', \n    hovertextsrc: 'sumon23:120:2adddb', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace11 = {\n    mode: 'markers', \n    name: 'Description=Additional Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:972d42', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:120:c15240', \n    y: [235200, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Additional Allowance', \n    hovertextsrc: 'sumon23:120:33c973', \n    hovertext: ['Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace12 = {\n    mode: 'markers', \n    name: 'Description=Thursday Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:be5db7', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:cfcf89', \n    y: [522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Thursday Allowance', \n    hovertextsrc: 'sumon23:120:d48885', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace13 = {\n    mode: 'markers', \n    name: 'Description=Shift Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:34102f', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3e1503', \n    y: [378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Shift Allowance', \n    hovertextsrc: 'sumon23:120:70a7ba', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace14 = {\n    mode: 'markers', \n    name: 'Description=Provision for Earned Leave', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ba464a', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:de599a', \n    y: [277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Earned Leave', \n    hovertextsrc: 'sumon23:120:f66265', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace15 = {\n    mode: 'markers', \n    name: 'Description=Provision for EID Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:414091', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9ae6e8', \n    y: [2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1904844.15485769, 365568, 335158.029611278, 1904844.15485769, 365568, 328784.209024321, 1904844.15485769, 365568, 309392.157987594, 1904844.15485769, 365568, 301064.356411395, 1904844.15485769, 365568, 322041.343669961, 1904844.15485769, 365568, 322924.232461934, 1904844.15485769, 365568, 327361.975294292, 1904844.15485769, 365568, 1015560, 1904844.15485769, 365568, 310702.543929679, 1904844.15485769, 365568, 295555.13896462, 1904844.15485769, 365568, 294365.004775582, 1904844.15485769, 365568, 294365.252410373, 3169835.54657814, 609252, 680401.970388722, 3169835.54657814, 609252, 686775.790975679, 3169835.54657814, 609252, 706167.842012406, 3169835.54657814, 609252, 714495.643588605, 3169835.54657814, 609252, 693518.656330039, 3169835.54657814, 609252, 692635.767538066, 3169835.54657814, 609252, 688198.024705708, 3169835.54657814, 609252, 0, 3169835.54657814, 609252, 704857.456070322, 3169835.54657814, 609252, 720004.86103538, 3169835.54657814, 609252, 721194.995224418, 3169835.54657814, 609252, 721194.747589627], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for EID Bonus', \n    hovertextsrc: 'sumon23:120:045c99', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace16 = {\n    mode: 'markers', \n    name: 'Description=Capitalization', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0ecaf3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fe52e8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Capitalization', \n    hovertextsrc: 'sumon23:120:66ac02', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Capitalization<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace17 = {\n    mode: 'markers', \n    name: 'Description=Salary', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7a72e0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:288904', \n    y: [22557834.602987, 22557834.602987, 22557834.602987, 20919834.602987, 20919834.602987, 20919834.602987, 19638834.602987, 19638834.602987, 20524882.484747, 20524882.484747, 20524882.484747, 20524882.484747, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 18313759.5010242, 18313759.5010242, 18313759.5010242, 5809860, 4489996.83222118, 5809860, 4404608.95033818, 5809860, 4144820.31324015, 5809860, 4033255.62019112, 5809860, 4314277.10265343, 5809860, 4326104.86009597, 5809860, 4385555.77428892, 5809860, 13605107.97912, 6216550.2, 4162375.10294867, 6216550.2, 3959450.52916369, 6216550.2, 3943506.71082552, 6216550.2, 3943510.02830364, 18272100, 9115111.14689882, 18572064, 9200499.02878182, 18572064, 9460287.66587985, 18572064, 9571852.35892888, 18572064, 9290830.87646657, 18572064, 9279003.11902404, 18572064, 9219552.20483108, 18572064, 0, 19872108.48, 9442732.87617133, 19872108.48, 9645657.44995631, 19872108.48, 9661601.26829448, 19872108.48, 9661597.95081636], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Salary', \n    hovertextsrc: 'sumon23:120:915681', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace18 = {\n    mode: 'markers', \n    name: 'Description=Salary ( Station common)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5c8a9d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:791116', \n    y: [1652245.58475172, 1641506.49941012, 1670355.6205427, 1670355.6205427, 1670355.6205427, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1666076.15994459, 714612.613960769, 709967.852964984, 722445.384182673, 722445.384182673, 722445.384182673, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 720594.475000298], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Salary ( Station common)', \n    hovertextsrc: 'sumon23:120:2558b8', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Salary ( Station common)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace19 = {\n    mode: 'markers', \n    name: 'Description=Provision for Gratuity', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0af547', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6d251d', \n    y: [733129.624597079, 733129.624597079, 733129.624597079, 679894.624597079, 679894.624597079, 679894.624597079, 638262.124597079, 638262.124597079, 667058.680754279, 667058.680754279, 667058.680754279, 667058.680754279, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 301960.275390997, 0, 301960.275390997, 0, 301960.275390997, 0, 301960.275390997, 0, 1042020, 448124.859277611, 1042020, 439602.707930368, 1042020, 413674.461031386, 1042020, 402539.728816393, 1042020, 430587.123277496, 1042020, 431767.59452003, 1042020, 437701.102616396, 1042020, 1357860, 1042020, 415426.519654529, 1042020, 395173.599781893, 1042020, 393582.324416648, 1042020, 393582.655518088, 882168, 909735.140722389, 882168, 918257.292069633, 882168, 944185.538968614, 882168, 955320.271183607, 882168, 927272.876722504, 882168, 926092.40547997, 882168, 920158.897383604, 882168, 0, 882168, 942433.480345471, 882168, 962686.400218107, 882168, 964277.675583352, 882168, 964277.344481912], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Gratuity', \n    hovertextsrc: 'sumon23:120:66a15d', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace20 = {\n    mode: 'markers', \n    name: 'Description=Electricity Meter Reading', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7e42bf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ac713d', \n    y: [4409374.25364134, 2789909.4797758, 4321492.11643394, 4489240.88784013, 4015814.76627071, 3284560.35719498, 3484329.25744528, 3121222.73049681, 4014533.22508098, 4142919.46999126, 4416627.10286536, 3000121.08413271, 2502587.6123425, 1743690.98807963, 2544870.49781418, 2662995.27166689, 2068260.5719009, 1638712.7090145, 1845099.22882579, 1905665.95220836, 2607349.10491958, 2643208.5138882, 2001265.19895564, 2472748.13154685, 150281.25, 150281.25, 150281.25, 150281.25, 150281.25, 82320, 82320, 82320, 82320, 150281.25, 150281.25, 150281.25, 17929276.1694776, 13383805.8072267, 18430717.2429529, 18984487.3006549, 18571072.7950706, 18670257.9530689, 19513101.4274891, 507698.244336978, 17711508.783694, 16040398.7036612, 11932003.6936207, 17443872.5735388], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Electricity Meter Reading', \n    hovertextsrc: 'sumon23:120:84d619', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Electricity Meter Reading<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace21 = {\n    mode: 'markers', \n    name: 'Description=Gas Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:35331c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8e37e9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2299481.13168, 1632756.04416, 2225400.5664, 2299481.13168, 2272686.0336, 2225400.5664, 2262440.84904, 2077239.43584, 2225400.5664, 2077239.43584, 1558675.47888, 2225400.5664], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Gas Charges', \n    hovertextsrc: 'sumon23:120:00cf58', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Gas Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace22 = {\n    mode: 'markers', \n    name: 'Description=Generator fuel', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:943b23', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5c3c5e', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2808000, 1872000, 2704000, 2808000, 2080000, 1913600, 1580800, 2080000, 2433600, 2496000, 1976000, 2704000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Generator fuel', \n    hovertextsrc: 'sumon23:120:56053a', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Generator fuel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace23 = {\n    mode: 'markers', \n    name: 'Description=Generator Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:669ec8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:255082', \n    y: [1490000, 1490000, 1490000, 1490000, 1490000, 1490000, 0, 0, 0, 0, 0, 0, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Generator Rent', \n    hovertextsrc: 'sumon23:120:bf5714', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Generator Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace24 = {\n    mode: 'markers', \n    name: 'Description=Station OH', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:203b4d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:38b1c9', \n    y: [713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 1600084.51832467, 1587789.28409258, 1620818.79176776, 1620818.79176776, 1620818.79176776, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1615919.21524266], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Station OH', \n    hovertextsrc: 'sumon23:120:d6383a', \n    hovertext: ['Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace25 = {\n    mode: 'markers', \n    name: 'Description=Consumables', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:35e9c0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ef7f60', \n    y: [770896.996705107, 745896.996705107, 770896.996705107, 770896.996705107, 770896.996705107, 735896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 562481.382423978, 1705156.68598511, 1501219.3887161, 1804211.03215689, 1832379.96116656, 1804211.03215689, 1804211.03215689, 1818295.49666172, 0, 2032761.03215689, 1976423.17413754, 1779240.67106982, 2032761.03215689], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Consumables', \n    hovertextsrc: 'sumon23:120:3a9295', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Consumables<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace26 = {\n    mode: 'markers', \n    name: 'Description=Needles', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8aa5d1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2dd0f0', \n    y: [75000, 70000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 332511.3, 239380.2, 322163.4, 332511.3, 320707.5, 317795.7, 316418.1, 302923.5, 322163.4, 301467.6, 231944.1, 322163.4, 2091552.18270353, 1516532.3495633, 2368195.82941798, 2457196.12480318, 2084301.22084974, 2105916.4334555, 1919459.40985666, 0, 2205499.34796037, 2276821.33897514, 1742612.23423136, 2436584.21461623], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Needles', \n    hovertextsrc: 'sumon23:120:ad3260', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Needles<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace27 = {\n    mode: 'markers', \n    name: 'Description=Spare Parts', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:13401e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:92490c', \n    y: [725000, 630000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 0, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Spare Parts', \n    hovertextsrc: 'sumon23:120:98f6e8', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Spare Parts<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace28 = {\n    mode: 'markers', \n    name: 'Description=Chemical ETP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7c5280', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:93ea9f', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Chemical ETP', \n    hovertextsrc: 'sumon23:120:b42a36', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Chemical ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace29 = {\n    mode: 'markers', \n    name: 'Description=CSR Projects', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:98a1ad', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2e4c10', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=CSR Projects', \n    hovertextsrc: 'sumon23:120:38610f', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=CSR Projects<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace30 = {\n    mode: 'markers', \n    name: 'Description=T&D', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4736c5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f12ae6', \n    y: [217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=T&D', \n    hovertextsrc: 'sumon23:120:24f748', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=T&D<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace31 = {\n    mode: 'markers', \n    name: 'Description=Annual Trip', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:95509b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2160dc', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Annual Trip', \n    hovertextsrc: 'sumon23:120:485f3a', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Annual Trip<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace32 = {\n    mode: 'markers', \n    name: 'Description=Fire & All Risk Insurance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6410b7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a1250d', \n    y: [291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Fire & All Risk Insurance', \n    hovertextsrc: 'sumon23:120:d5b7ad', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Fire & All Risk Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace33 = {\n    mode: 'markers', \n    name: 'Description=Group Insurance - Workers & staff', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:162f20', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e91b09', \n    y: [207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Group Insurance - Workers & staff', \n    hovertextsrc: 'sumon23:120:7b1621', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Group Insurance - Workers & staff<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace34 = {\n    mode: 'markers', \n    name: 'Description=Security Sercvices Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d0cee4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8657a1', \n    y: [437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Security Sercvices Charges', \n    hovertextsrc: 'sumon23:120:e9d047', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Security Sercvices Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace35 = {\n    mode: 'markers', \n    name: 'Description=Telephone, Fax & Email , Internet', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:eea175', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d6eab6', \n    y: [145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Telephone, Fax & Email , Internet', \n    hovertextsrc: 'sumon23:120:464894', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Telephone, Fax & Email , Internet<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace36 = {\n    mode: 'markers', \n    name: 'Description=Postage & Courier Charges Local', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:61feb4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f6f49a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 5398.45758354756, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Postage & Courier Charges Local', \n    hovertextsrc: 'sumon23:120:266b71', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Postage & Courier Charges Local<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace37 = {\n    mode: 'markers', \n    name: 'Description=WFX,FR & Kormee Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:77a1c4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:abb4ba', \n    y: [533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=WFX,FR & Kormee Charges', \n    hovertextsrc: 'sumon23:120:b5797d', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=WFX,FR & Kormee Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace38 = {\n    mode: 'markers', \n    name: 'Description=Vehicle  Hire -  staff ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b7a0d2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ad6533', \n    y: [465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 718000, 718000, 718000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Vehicle  Hire -  staff ', \n    hovertextsrc: 'sumon23:120:6e8fe5', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Vehicle  Hire -  staff <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace39 = {\n    mode: 'markers', \n    name: 'Description=Adhoc Hiring', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4ec3e2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4188a2', \n    y: [252175, 151305, 252175, 252175, 252175, 252175, 252175, 252175, 252175, 201740, 151305, 252175, 108075, 64845, 108075, 108075, 108075, 108075, 108075, 108075, 108075, 86460, 64845, 108075, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 44996.8888888889, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Adhoc Hiring', \n    hovertextsrc: 'sumon23:120:5b8355', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Adhoc Hiring<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace40 = {\n    mode: 'markers', \n    name: 'Description=Vehicle Fuel Expenses Factory', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:784fb6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6f858f', \n    y: [382982.25, 263802, 369740, 382982.25, 356497.75, 369740, 356497.75, 356497.75, 356497.75, 343255.5, 250559.75, 369740, 164135.25, 113058, 158460, 164135.25, 152784.75, 158460, 152784.75, 152784.75, 152784.75, 147109.5, 107382.75, 158460, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 751413.2, 751413.2, 751413.2, 751413.2], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Vehicle Fuel Expenses Factory', \n    hovertextsrc: 'sumon23:120:5d5109', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Vehicle Fuel Expenses Factory<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace41 = {\n    mode: 'markers', \n    name: 'Description=Lisence & Tax Token', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5dcbcc', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:362f82', \n    y: [0, 0, 0, 0, 0, 2100, 0, 0, 0, 0, 79940, 37870, 0, 0, 0, 0, 0, 900, 0, 0, 0, 0, 34260, 16230, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Lisence & Tax Token', \n    hovertextsrc: 'sumon23:120:38fddd', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Lisence & Tax Token<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace42 = {\n    mode: 'markers', \n    name: 'Description=Driver OT', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7c0b77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:678bcb', \n    y: [127281, 82908, 123648, 127281, 120015, 123648, 120015, 120015, 120015, 110544, 79275, 123648, 54549, 35532, 52992, 54549, 51435, 52992, 51435, 51435, 51435, 47376, 33975, 52992, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 123355, 123355, 123355, 123355], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Driver OT', \n    hovertextsrc: 'sumon23:120:895394', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Driver OT<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace43 = {\n    mode: 'markers', \n    name: 'Description=Genarator Fuel Transpsort', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:bea12a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:53e17c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Genarator Fuel Transpsort', \n    hovertextsrc: 'sumon23:120:abb0ef', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Genarator Fuel Transpsort<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace44 = {\n    mode: 'markers', \n    name: 'Description=Foreign Travel-Operation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:05c79f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4eb01f', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Foreign Travel-Operation', \n    hovertextsrc: 'sumon23:120:c38434', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Foreign Travel-Operation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace45 = {\n    mode: 'markers', \n    name: 'Description=Annual Trip Expact', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2066f9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:1f6711', \n    y: [96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Annual Trip Expact', \n    hovertextsrc: 'sumon23:120:dee3eb', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Annual Trip Expact<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace46 = {\n    mode: 'markers', \n    name: 'Description=Expact VISA', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ff692c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e2bcd7', \n    y: [46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Expact VISA', \n    hovertextsrc: 'sumon23:120:d0cfde', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Expact VISA<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace47 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Factory Maintenance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:3bb11a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:156c1a', \n    y: [478520, 436613.333333333, 473863.703703704, 478520, 469207.407407407, 473863.703703704, 469207.407407407, 469207.407407407, 469207.407407407, 464551.111111111, 431957.037037037, 473863.703703704, 69060, 46040, 66502.2222222222, 69060, 63944.4444444444, 66502.2222222222, 63944.4444444444, 63944.4444444444, 63944.4444444444, 61386.6666666667, 43482.2222222222, 66502.2222222222, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Factory Maintenance', \n    hovertextsrc: 'sumon23:120:bd8b06', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Factory Maintenance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace48 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Equipment', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:cac786', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5b89c1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Equipment', \n    hovertextsrc: 'sumon23:120:87d84b', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Equipment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace49 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Electrical', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9f6230', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ddc203', \n    y: [218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Electrical', \n    hovertextsrc: 'sumon23:120:a1f1b3', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Electrical<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace50 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Computer', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4916a0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6adba0', \n    y: [91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Computer', \n    hovertextsrc: 'sumon23:120:f2a72d', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Computer<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace51 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Vehicle', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e32050', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6fa85d', \n    y: [58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Vehicle', \n    hovertextsrc: 'sumon23:120:a1b357', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Vehicle<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace52 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Plant & Machinery', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:41d9ab', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:1d0919', \n    y: [428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Plant & Machinery', \n    hovertextsrc: 'sumon23:120:d4eb22', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Plant & Machinery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace53 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - ETP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:49f1e7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0a2306', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - ETP', \n    hovertextsrc: 'sumon23:120:aa4f0d', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace54 = {\n    mode: 'markers', \n    name: 'Description=AC Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7232f7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:961022', \n    y: [261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=AC Rent', \n    hovertextsrc: 'sumon23:120:151756', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=AC Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace55 = {\n    mode: 'markers', \n    name: 'Description=Industrial Fans', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fe9732', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:331093', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Industrial Fans', \n    hovertextsrc: 'sumon23:120:4a49d0', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Industrial Fans<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace56 = {\n    mode: 'markers', \n    name: 'Description=Machine Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d1a9c3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00'], \n    ysrc: 'sumon23:120:9a77dc', \n    y: [35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Machine Rent', \n    hovertextsrc: 'sumon23:120:beb957', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Machine Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace57 = {\n    mode: 'markers', \n    name: 'Description=House Rent/Office Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c216c5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:08212e', \n    y: [481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=House Rent/Office Rent', \n    hovertextsrc: 'sumon23:120:9deaf0', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=House Rent/Office Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace58 = {\n    mode: 'markers', \n    name: 'Description=Table & Chair', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:eee9ba', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:45b209', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Table & Chair', \n    hovertextsrc: 'sumon23:120:c5ebfb', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Table & Chair<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace59 = {\n    mode: 'markers', \n    name: 'Description=TV Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7b99c9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e2ddfa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=TV Rent', \n    hovertextsrc: 'sumon23:120:9d530c', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=TV Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace60 = {\n    mode: 'markers', \n    name: 'Description=Refrigerator', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4dea81', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fa793b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Refrigerator', \n    hovertextsrc: 'sumon23:120:7d214c', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Refrigerator<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace61 = {\n    mode: 'markers', \n    name: 'Description=Development sample courier', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2ce2a8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:16c626', \n    y: [1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 652657.195296801, 640245.379078543, 602483.008726379, 586266.182216168, 627114.917619678, 628834.177407056, 637475.846513938, 1977612, 605034.738770589, 575538.017919277, 573220.455536106, 573220.937758265, 1324954.8047032, 1337366.62092146, 1375128.99127362, 1391345.81778383, 1350497.08238032, 1348777.82259294, 1340136.15348606, 0, 1372577.26122941, 1402073.98208072, 1404391.54446389, 1404391.06224174], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Development sample courier', \n    hovertextsrc: 'sumon23:120:0c70e7', \n    hovertext: ['Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace62 = {\n    mode: 'markers', \n    name: 'Description=Photo Shoot', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:db7f39', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:97692d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Photo Shoot', \n    hovertextsrc: 'sumon23:120:7e9e00', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Photo Shoot<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace63 = {\n    mode: 'markers', \n    name: 'Description=Buyer QC entertainment', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:32bcff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f66398', \n    y: [130000, 78000, 130000, 130000, 130000, 130000, 130000, 130000, 130000, 104000, 78000, 130000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 164838.492247193, 166382.654405936, 171080.695554536, 173098.241527794, 168016.223688229, 167802.329455666, 166727.213760382, 0, 170763.233153844, 174432.93945183, 174721.268900936, 174721.208907363], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Buyer QC entertainment', \n    hovertextsrc: 'sumon23:120:7e8afe', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Buyer QC entertainment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace64 = {\n    mode: 'markers', \n    name: 'Description=Buyer Visit Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:05e785', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8ce675', \n    y: [90000, 54000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 72000, 54000, 90000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Buyer Visit Expenses', \n    hovertextsrc: 'sumon23:120:ad4abe', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Buyer Visit Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace65 = {\n    mode: 'markers', \n    name: 'Description=Foreign Travel', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:92a85d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b6d933', \n    y: [475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244069.516318536, 222440.69723746, 239427.958694021, 218210.462631195, 225306.236703807, 205340.171686721, 219241.746752434, 199813.101393303, 234517.654478579, 213735.297072603, 235160.593693461, 214321.260651328, 238392.256523965, 217266.541750322, 739553.333333333, 674016, 226260.488832113, 206209.860421153, 215229.8123253, 196156.694379828, 214363.130192666, 195366.815411023, 214363.310525818, 195366.97976351, 495483.817014797, 451575.30276254, 500125.374639313, 455805.537368805, 514247.096629526, 468675.828313279, 520311.5865809, 474202.898606697, 505035.678854754, 460280.702927397, 504392.739639872, 459694.739348672, 501161.076809369, 456749.458249678, 0, 0, 513292.844501221, 467806.139578847, 524323.521008034, 477859.305620173, 525190.203140667, 478649.184588977, 525190.022807515, 478649.02023649], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Foreign Travel', \n    hovertextsrc: 'sumon23:120:b7bee9', \n    hovertext: ['Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace66 = {\n    mode: 'markers', \n    name: 'Description=Testing & Audit ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fa3daf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7d3cfa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Testing & Audit ', \n    hovertextsrc: 'sumon23:120:7e86e4', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Testing & Audit <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace67 = {\n    mode: 'markers', \n    name: 'Description=Printing & Stationery', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:bf144a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:663f2e', \n    y: [455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 119545.614444444, 605609.686666667, 605609.686666667, 605609.686666667, 605609.686666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Printing & Stationery', \n    hovertextsrc: 'sumon23:120:1b6d45', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Printing & Stationery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace68 = {\n    mode: 'markers', \n    name: 'Description=Entertainment & Daily Tea Coffee Exp', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d81185', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8798fc', \n    y: [369724.5, 321183, 364331, 369724.5, 358937.5, 405413.75, 402321.875, 407634.375, 414275, 415833.90625, 379016.7578125, 452663.603515625, 71865, 47910, 69203.3333333333, 71865, 66541.6666666667, 69203.3333333333, 66541.6666666667, 66541.6666666667, 66541.6666666667, 63880, 45248.3333333333, 69203.3333333333, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Entertainment & Daily Tea Coffee Exp', \n    hovertextsrc: 'sumon23:120:6d3c57', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Entertainment & Daily Tea Coffee Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace69 = {\n    mode: 'markers', \n    name: 'Description=Tifin Expense', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c9c9aa', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9e71c7', \n    y: [546750, 364500, 526500, 546750, 506250, 526500, 506250, 506250, 506250, 486000, 8032500, 526500, 176850, 117900, 170300, 176850, 163750, 170300, 163750, 163750, 163750, 157200, 4777000, 170300, 1966492.34693878, 1312276.09329446, 1907623.03206997, 1980993.14868805, 1834252.9154519, 1687512.68221574, 1394032.21574344, 1907623.03206997, 2127264.13994169, 1684084.11078717, 2304536.1516035], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Tifin Expense', \n    hovertextsrc: 'sumon23:120:6859f7', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Tifin Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace70 = {\n    mode: 'markers', \n    name: 'Description=Welfare', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f85304', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5b022b', \n    y: [421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 886156.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 479586.666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Welfare', \n    hovertextsrc: 'sumon23:120:3cdfcf', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Welfare<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace71 = {\n    mode: 'markers', \n    name: 'Description=Medical Expense', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4fa5aa', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:493372', \n    y: [65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Medical Expense', \n    hovertextsrc: 'sumon23:120:d8b27a', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Medical Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace72 = {\n    mode: 'markers', \n    name: 'Description=Child Care Exp', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b6fd2a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7abd0c', \n    y: [54000, 36000, 52000, 54000, 50000, 52000, 50000, 50000, 50000, 48000, 34000, 52000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Child Care Exp', \n    hovertextsrc: 'sumon23:120:b9cd58', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Child Care Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace73 = {\n    mode: 'markers', \n    name: 'Description=Best Line Gift', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a32d33', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7d86b6', \n    y: [80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Best Line Gift', \n    hovertextsrc: 'sumon23:120:7f4722', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Best Line Gift<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace74 = {\n    mode: 'markers', \n    name: 'Description=Compliance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:abb04b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9ddc96', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Compliance', \n    hovertextsrc: 'sumon23:120:7b8eb0', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Compliance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace75 = {\n    mode: 'markers', \n    name: 'Description=Convayance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9662d7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a58706', \n    y: [72750, 43650, 72750, 72750, 72750, 72750, 72750, 72750, 72750, 58200, 43650, 72750, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 12323.125, 61615.625, 61615.625, 61615.625, 61615.625], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Convayance', \n    hovertextsrc: 'sumon23:120:2ec3f8', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Convayance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace76 = {\n    mode: 'markers', \n    name: 'Description=Casual Labour', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6bd7ed', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d5e309', \n    y: [210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Casual Labour', \n    hovertextsrc: 'sumon23:120:f53fc1', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Casual Labour<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace77 = {\n    mode: 'markers', \n    name: 'Description=Mobile Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:cbbdea', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f53de1', \n    y: [126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Mobile Allowance', \n    hovertextsrc: 'sumon23:120:7382d5', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Mobile Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace78 = {\n    mode: 'markers', \n    name: 'Description=Facility Expeses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5bff24', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f9d754', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 225000, 225000, 75000, 75000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Facility Expeses', \n    hovertextsrc: 'sumon23:120:0bece6', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Facility Expeses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace79 = {\n    mode: 'markers', \n    name: 'Description=Legal Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e700b4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b27a11', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Legal Expenses', \n    hovertextsrc: 'sumon23:120:4daefc', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Legal Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace80 = {\n    mode: 'markers', \n    name: 'Description=Washing Charge', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:3f7da6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ae2fc4', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70495.9410790425, 73577.9027633131, 74520.6450522933, 78146.5342128796, 60200.2269944661, 29075.2920620521, 62286.0986439324, 46783.6409541974, 3597203.12301931, 2077760.79770928, 4549019.69683021, 4835894.00896865, 4464452.7175772, 4032589.89200036, 3484822.56944306, 0, 4178749.58307533, 4053168.12041538, 3336006.95191142, 4907767.64792832], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Washing Charge', \n    hovertextsrc: 'sumon23:120:81ad1d', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Washing Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace81 = {\n    mode: 'markers', \n    name: 'Description=Accomodation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:110603', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d96c27', \n    y: [16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Accomodation', \n    hovertextsrc: 'sumon23:120:ac2314', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Accomodation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace82 = {\n    mode: 'markers', \n    name: 'Description=Meal', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:48ba03', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:72ecc9', \n    y: [276750, 184500, 266500, 276750, 256250, 266500, 256250, 256250, 256250, 246000, 174250, 266500, 205875, 137250, 198250, 205875, 190625, 198250, 190625, 190625, 190625, 183000, 129625, 198250], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Meal', \n    hovertextsrc: 'sumon23:120:6274ff', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Meal<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace83 = {\n    mode: 'markers', \n    name: 'Description=VAT Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:561068', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:38f926', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=VAT Expense ', \n    hovertextsrc: 'sumon23:120:aeb905', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=VAT Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace84 = {\n    mode: 'markers', \n    name: 'Description=BSC Common', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6ac3ff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:921a87', \n    y: [8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5196481.87052486, 5097658.50900636, 4796993.05348522, 4667874.0526299, 4993113.26624445, 5006802.07926944, 5075607.38344534, 15745823.3495136, 4817310.02694198, 4582455.99292789, 4564003.47145913, 4564007.31093064, 10549341.4789887, 10648164.8405072, 10948830.2960284, 11077949.2968837, 10752710.0832691, 10739021.2702441, 10670215.9660682, 0, 10928513.3225716, 11163367.3565857, 11181819.8780545, 11181816.0385829], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=BSC Common', \n    hovertextsrc: 'sumon23:120:c3ad0f', \n    hovertext: ['BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=BSC Common<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace85 = {\n    mode: 'markers', \n    name: 'Description=Q Collection Expenses (Singapore)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ea0c3d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:bd0bb5', \n    y: [7542638.22161732, 7992605.73721689, 8259132.87861216, 8398021.42547909, 8266939.13907942, 8249411.63557159, 8464358.37926181, 8048972.03593794, 8737907.74420371, 9033845.10426946, 8724980.13052805, 9346054.27171425, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6383497.35697776, 6551780.54101973, 6384291.65256811, 6411279.50891445, 6775473.1665179, 6789773.08159736, 7368504.39222547, 21102504.0478758, 7257292.03750336, 7134606.3163587, 6855436.63068271, 7495613.11101102, 12959093.3109863, 13685585.0732936, 14571737.9793854, 15215455.3715708, 14591036.6442246, 14563291.3762081, 15490467.8932432, 0, 16463838.1740182, 17380686.5525925, 16795836.8281441, 18364249.0455663], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Q Collection Expenses (Singapore)', \n    hovertextsrc: 'sumon23:120:7f5343', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Q Collection Expenses (Singapore)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace86 = {\n    mode: 'markers', \n    name: 'Description=Q Collection Expenses (Bangladesh)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f042c6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:410b6d', \n    y: [2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1679171.60237042, 1647238.19310484, 1550082.28891733, 1508359.26072926, 1613455.83666009, 1617879.1882034, 1640112.67534784, 5088046.12105263, 1556647.43928728, 1480757.59026164, 1474794.91189298, 1474796.15256536, 3408874.51868221, 3440807.92794779, 3537963.83213531, 3579686.86032337, 3474590.28439254, 3470166.93284924, 3447933.4457048, 0, 3531398.68176536, 3607288.53079099, 3613251.20915965, 3613249.96848727], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Q Collection Expenses (Bangladesh)', \n    hovertextsrc: 'sumon23:120:310f48', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Q Collection Expenses (Bangladesh)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace87 = {\n    mode: 'markers', \n    name: 'Description=UK Office Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f68a55', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:322334', \n    y: [1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 972958.773613414, 954455.667276649, 898160.831624269, 873985.347546289, 934881.229470619, 937444.242498445, 950326.943917804, 2948155.57090144, 901964.862518739, 857992.171262254, 854537.229417818, 854537.948297935, 1975196.79728802, 1993699.90362479, 2049994.73927717, 2074170.22335515, 2013274.34143082, 2010711.32840299, 1997828.62698363, 0, 2046190.7083827, 2090163.39963918, 2093618.34148362, 2093617.6226035], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=UK Office Expense ', \n    hovertextsrc: 'sumon23:120:b00a9a', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=UK Office Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace88 = {\n    mode: 'markers', \n    name: 'Description=Birichina CHO Direct ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:afb033', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b26465', \n    y: [587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Birichina CHO Direct ', \n    hovertextsrc: 'sumon23:120:dca1d2', \n    hovertext: ['Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Birichina CHO Direct <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace89 = {\n    mode: 'markers', \n    name: 'Description=C& F Charges - Inward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2a341b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:03a727', \n    y: [1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 493758.277103692, 484368.29866506, 455799.728428189, 443531.124978364, 474434.639656586, 475735.32056017, 482273.049218128, 1496133.5, 457730.202556633, 435414.8888319, 433661.570830288, 433661.935648426, 1002375.22289631, 1011765.20133494, 1040333.77157181, 1052602.37502164, 1021698.86034341, 1020398.17943983, 1013860.45078187, 0, 1038403.29744337, 1060718.6111681, 1062471.92916971, 1062471.56435157], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=C& F Charges - Inward', \n    hovertextsrc: 'sumon23:120:1de855', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=C& F Charges - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace90 = {\n    mode: 'markers', \n    name: 'Description=C& F Charges - Outward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2ca76b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3d5488', \n    y: [1677739.81850432, 1587722.62816896, 1299648.33739565, 2076128.47117164, 1617002.18682339, 2333067.02849418, 2354723.38202931, 2748608.26003403, 2886152.93322663, 1763933.93967844, 1299424.83242869, 1785380.76199099, 719031.350787566, 680452.554929554, 556992.144598134, 889769.344787845, 693000.937210026, 999885.86935465, 1009167.16372685, 1177974.96858601, 1236922.68566856, 755971.688433617, 556896.356755153, 765163.183710423, 678679.802839185, 883305.764504294, 899414.096500405, 977294.681412369, 905673.967534534, 958047.607126306, 1035468.41481008, 1149459.8160657, 773254.601967319, 936151.649809413, 702874.207398739, 995995.584258069, 1377783.11816186, 1845079.53374957, 2052855.23632017, 2319347.26745694, 1950376.26498461, 2054903.20327125, 2176817.62543384, 0, 1754199.57861919, 2280568.49524025, 1722043.55960981, 2440188.77264763], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=C& F Charges - Outward', \n    hovertextsrc: 'sumon23:120:497b1a', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=C& F Charges - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace91 = {\n    mode: 'markers', \n    name: 'Description=Transport - Inward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fdb698', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:90835d', \n    y: [1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 624898.311344436, 613014.395789073, 576858.138514228, 561331.047761802, 600442.400487487, 602088.536538138, 610362.65727258, 1893500, 579301.338109857, 551059.174868554, 548840.183290563, 548840.645002799, 1268601.68865556, 1280485.60421093, 1316641.86148577, 1332168.9522382, 1293057.59951251, 1291411.46346186, 1283137.34272742, 0, 1314198.66189014, 1342440.82513145, 1344659.81670944, 1344659.3549972], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Transport - Inward', \n    hovertextsrc: 'sumon23:120:bf0e74', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Transport - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace92 = {\n    mode: 'markers', \n    name: 'Description=Transport - Outward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:464e76', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0f1322', \n    y: [1089403.20614105, 1036164.4651338, 1017666.27571308, 1326795.57761849, 1241431.92719414, 1272876.37659969, 1332495.57022356, 1300476.60897125, 1419772.81453305, 1434657.40866167, 1056859.0018641, 1452100.71639039, 466887.088346166, 444070.485057343, 436142.68959132, 568626.676122212, 532042.254511775, 545518.447114151, 571069.530095812, 557347.118130534, 608474.063371309, 614853.175140714, 452939.572227471, 622328.878453023, 1117220.6379875, 900661.216714062, 1343206.36484148, 1326222.35659685, 1232391.18675497, 1062174.08431979, 916542.237073173, 1149345.97633447, 1252774.22876258, 1191063.67820593, 890803.588707002, 1261972.10707289, 2268061.79857091, 1881332.20067197, 3065782.74707102, 3147433.68332658, 2653964.4573934, 2278242.65940961, 1926804.59160251, 0, 2842034.20013165, 2901562.26386442, 2182471.01211378, 3091831.14437969], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Transport - Outward', \n    hovertextsrc: 'sumon23:120:62f44e', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Transport - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace93 = {\n    mode: 'markers', \n    name: 'Description=Documentation Chrages & Misc Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b1b21a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8a10a1', \n    y: [1259409.88819286, 1194264.33560202, 1026569.08647076, 1573004.07831, 1249111.76982545, 1780836.23120121, 1767465.45648945, 2040596.61406134, 2141845.54093323, 1360231.12490562, 1019426.95675037, 1389966.37384633, 539747.094939797, 511827.572400865, 439958.179916039, 674144.60499, 535333.615639479, 763215.527657663, 757485.195638336, 874541.406026289, 917933.803257099, 582956.196388122, 436897.26717873, 595699.874505569, 346040.048107684, 486333.823548411, 500397.224261824, 539200.711515193, 502635.133444161, 526880.568389034, 563952.732913928, 672039.696803797, 434794.914950447, 515699.182249713, 392011.326955426, 547306.126697075, 702493.479983012, 1015870.85747473, 1142124.70769909, 1279648.52428775, 1082428.85338259, 1130098.92167213, 1185571.89322262, 0, 986372.476350392, 1256299.98974983, 960428.727888611, 1340899.78577799], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Documentation Chrages & Misc Expenses', \n    hovertextsrc: 'sumon23:120:aa639f', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Documentation Chrages & Misc Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace94 = {\n    mode: 'markers', \n    name: 'Description=Custom & VAT service charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9b5f80', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:431462', \n    y: [0, 0, 0, 0, 0, 280000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120000, 0, 0, 0, 0, 0, 0, 11880.8234530762, 11654.8815676824, 14775.6111528598, 10672.2565193688, 11415.8576274357, 184585.368608603, 11604.4656254623, 36000, 11013.9150630868, 10476.9634514222, 10434.7750718037, 57536.2387288384, 24119.1765469238, 24345.1184323176, 33724.3888471402, 25327.7434806312, 24584.1423725643, 395914.631391397, 24395.5343745377, 0, 24986.0849369132, 25523.0365485778, 25565.2249281963, 140963.761271162], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Custom & VAT service charges', \n    hovertextsrc: 'sumon23:120:e24f0a', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Custom & VAT service charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace95 = {\n    mode: 'markers', \n    name: 'Description=Marine Insurance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:534e87', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fb21a4', \n    y: [432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 87571.0468099923, 85905.6767705923, 80838.8663138996, 78662.9545432656, 84143.8816607902, 84374.5653648909, 85534.0714813156, 265348.416093455, 81181.2476938312, 77223.4904806637, 76912.5288220713, 76912.5935247967, 177777.369283462, 179442.739322862, 184509.549779555, 186685.461550189, 181204.534432664, 180973.850728564, 179814.344612139, 0, 184167.168399623, 188124.925612791, 188435.887271383, 188435.822568658], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Marine Insurance', \n    hovertextsrc: 'sumon23:120:3f9088', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Marine Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace96 = {\n    mode: 'markers', \n    name: 'Description=Air Freight', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:130f56', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:19e755', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Air Freight', \n    hovertextsrc: 'sumon23:120:a78e2e', \n    hovertext: ['Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Air Freight<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace97 = {\n    mode: 'markers', \n    name: 'Description=Discount', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:09eb77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2f7ee9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Discount', \n    hovertextsrc: 'sumon23:120:662713', \n    hovertext: ['Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Discount<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace98 = {\n    mode: 'markers', \n    name: 'Description=Claims', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2b3049', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:399a1d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Claims', \n    hovertextsrc: 'sumon23:120:09f1ef', \n    hovertext: ['Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Claims<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace99 = {\n    mode: 'markers', \n    name: 'Description=Inspection charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:662706', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ee5bf8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Inspection charges', \n    hovertextsrc: 'sumon23:120:6d17ff', \n    hovertext: ['Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Inspection charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace100 = {\n    mode: 'markers', \n    name: 'Description=Demmurage Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:aa9f1c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:c5acd5', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Demmurage Expense ', \n    hovertextsrc: 'sumon23:120:a1374c', \n    hovertext: ['Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Demmurage Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace101 = {\n    mode: 'markers', \n    name: 'Description=Interest - Term Loan', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:1a69a1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b210e5', \n    y: [26345317.4533711, 26286344.78057, 26443688.2500088, 26750235.1744672, 27043710.34799, 27339839.0407889, 28188645.2100924, 28124326.6401811, 28059380.7024324, 27993801.2681649, 27927582.1487396, 27860717.0949725, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7584511.23210952, 7263509.74746615, 6997360.17711525, 6966666.96498879, 7619195.85308483, 7806122.6827214, 8080141.4534435, 24495659.4297901, 7318034.95057534, 9431655.53572762, 9059401.97906665, 8955543.12658645, 15397263.1738764, 15172269.5772978, 15971027.7345011, 16533518.8002639, 16408000.321108, 16743245.7286413, 16986509.7575964, 0, 16601639.0900993, 22976551.3708359, 22195557.4237167, 21941076.9845297], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - Term Loan', \n    hovertextsrc: 'sumon23:120:cb09d8', \n    hovertext: ['Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - Term Loan<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace102 = {\n    mode: 'markers', \n    name: 'Description=Interest - WC', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:be41cd', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b2f69c', \n    y: [10453741.5853845, 10025464.8528619, 9795521.7551532, 9667393.299376, 9306132.17215348, 9156697.64801144, 9592902.12776383, 8902775.65939242, 9464147.20163676, 9436113.66565703, 9120015.19634, 9528458.9009511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3530378.7887179, 3462583.09143366, 3257731.78654968, 3169431.15202398, 3389602.29974493, 3347436.50457805, 3341266.00287915, 10203584.0360386, 3072176.07256655, 2875279.92524695, 2816764.4005748, 2816119.47014271, 7166997.27244541, 7232762.93741485, 7435564.75550766, 7521796.26232712, 7299536.15775942, 7179870.75468753, 7024189.84712751, 0, 6969515.54924982, 7004498.48467384, 6901079.80046603, 6899491.54603491], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - WC', \n    hovertextsrc: 'sumon23:120:8dfa38', \n    hovertext: ['Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - WC<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace103 = {\n    mode: 'markers', \n    name: 'Description=Bank Charge', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:535772', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:debb45', \n    y: [5776611.71136482, 5573373.3770077, 6476297.81245559, 9004041.58579832, 8325392.37272467, 8554809.5313783, 8943367.22219713, 8644887.35672514, 8736023.30946739, 8784806.16312224, 7044055.12975788, 9252103.69135721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 676817.173598667, 2006924.04376777, 2064596.14240516, 2403585.82444489, 3173057.79829852, 2575717.0080632, 1913241.65538662, 3278053.26626029, 1136788.92422352, 2147059.10071133, 3195355.68500536, 3848249.83961438, 1374001.80757586, 4192132.13334332, 4712308.84451781, 5704267.42317678, 6833205.81033459, 5524620.16628314, 4022119.9387561, 0, 2578910.80994323, 5230472.37431883, 7828629.3907275, 9428210.52762515], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Bank Charge', \n    hovertextsrc: 'sumon23:120:321a73', \n    hovertext: ['Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Bank Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace104 = {\n    mode: 'markers', \n    name: 'Description=Interest on IDBP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b67773', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3a1d2a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest on IDBP', \n    hovertextsrc: 'sumon23:120:acbf4e', \n    hovertext: ['Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest on IDBP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace105 = {\n    mode: 'markers', \n    name: 'Description=Attendence Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5786fa', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:55df64', \n    y: [1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 1282875.94285714, 1287031.42857143, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1333820.11428571, 1457190.11428571, 1457190.11428571], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Attendence Bonus', \n    hovertextsrc: 'sumon23:120:da737d', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace106 = {\n    mode: 'markers', \n    name: 'Description=Additonal Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a2b5ac', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b8a263', \n    y: [235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Additonal Allowance', \n    hovertextsrc: 'sumon23:120:1b8aaf', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace107 = {\n    mode: 'markers', \n    name: 'Description=Subcontract', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:00f824', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d5847d', \n    y: [1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Subcontract', \n    hovertextsrc: 'sumon23:120:750731', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Subcontract<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace108 = {\n    mode: 'markers', \n    name: 'Description=Provision for Resignation Benefit', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:175834', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:616bfa', \n    y: [856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Resignation Benefit', \n    hovertextsrc: 'sumon23:120:16f44c', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Resignation Benefit<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace109 = {\n    mode: 'markers', \n    name: 'Description=HR Event & activities', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0c9806', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:33882c', \n    y: [436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=HR Event & activities', \n    hovertextsrc: 'sumon23:120:82a826', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=HR Event & activities<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace110 = {\n    mode: 'markers', \n    name: 'Description=Interest - WC(QCPL)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f7211b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a11773', \n    y: [404048.917905421, 415505.20019154, 459144.2955772, 569151.797061948, 603484.937736964, 611214.586929408, 976361.510345334, 2043884.95181965, 1035020.15068679, 1055735.60698053, 967306.767568972, 1273152.63007536, 820256.880597881, 867921.587118999, 1047967.5324966, 1350729.4067907, 1299609.72825799, 1310985.8040716, 2052559.89860853, 0, 2348038.93514219, 2571888.18187022, 2369903.99096286, 3119223.42114693], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - WC(QCPL)', \n    hovertextsrc: 'sumon23:120:dc0e6f', \n    hovertext: ['Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - WC(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace111 = {\n    mode: 'markers', \n    name: 'Description=Interest - Term Loan(QCPL)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9a5927', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:18977c', \n    y: [1356568.31979069, 1330769.97298001, 1252279.70937899, 1218572.53009739, 1303477.89964091, 1307051.43468788, 1325013.41323494, 4110528.17217144, 1257583.55979783, 1196273.70627449, 1191456.5806367, 1191457.58295049, 2753959.85238076, 2779758.19919144, 2858248.46279246, 2891955.64207406, 2807050.27253053, 2803476.73748357, 2785514.7589365, 0, 2852944.61237362, 2914254.46589696, 2919071.59153474, 2919070.58922095], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - Term Loan(QCPL)', \n    hovertextsrc: 'sumon23:120:849de2', \n    hovertext: ['Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - Term Loan(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace112 = {\n    mode: 'markers', \n    name: 'Description=Interest on EDF', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e6e36a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:31c5fc', \n    y: [2021390.10139143, 1982948.60005708, 1865992.1301292, 1815765.86614261, 1942281.33244566, 1947606.1717962, 1974370.88766546, 6125000, 1873895.27115018, 1782538.92055447, 1775361.03652215, 1775362.53004602, 4103609.89860857, 4142051.39994292, 4259007.8698708, 4309234.13385739, 4182718.66755434, 4177393.8282038, 4150629.11233454, 0, 4251104.72884982, 4342461.07944553, 4349638.96347785, 4349637.46995398], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest on EDF', \n    hovertextsrc: 'sumon23:120:0df330', \n    hovertext: ['Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest on EDF<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace113 = {\n    mode: 'markers', \n    name: 'Description=Depreciation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:289c86', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ec7c00', \n    y: [9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Depreciation', \n    hovertextsrc: 'sumon23:120:7de8ae', \n    hovertext: ['Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Depreciation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace114 = {\n    mode: 'markers', \n    name: 'Description=Winding Wages', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:46af01', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a9bd79', \n    y: [1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding Wages', \n    hovertextsrc: 'sumon23:120:87ab72', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace115 = {\n    mode: 'markers', \n    name: 'Description=Winding Utility', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8c2bd0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:81408b', \n    y: [446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding Utility', \n    hovertextsrc: 'sumon23:120:1a6319', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding Utility<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace116 = {\n    mode: 'markers', \n    name: 'Description=Winding  Consumable', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8e8f19', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a49172', \n    y: [1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding  Consumable', \n    hovertextsrc: 'sumon23:120:3c18b6', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding  Consumable<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  export const dataArea = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116];\n  export const layoutArea = {\n    title: {text: 'Description of BDT expenses'}, \n    xaxis: {\n      title: {text: 'Month'}, \n      anchor: 'y', \n      domain: [0.0, 0.98]\n    }, \n    yaxis: {\n      title: {text: 'Amount BDT'}, \n      anchor: 'x', \n      domain: [0.0, 1.0]\n    }, \n    height: 600, \n    legend: {tracegroupgap: 0}, \n    template: {\n      data: {\n        bar: [\n          {\n            type: 'bar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}, \n            error_x: {color: '#2a3f5f'}, \n            error_y: {color: '#2a3f5f'}\n          }\n        ], \n        table: [\n          {\n            type: 'table', \n            cells: {\n              fill: {color: '#EBF0F8'}, \n              line: {color: 'white'}\n            }, \n            header: {\n              fill: {color: '#C8D4E3'}, \n              line: {color: 'white'}\n            }\n          }\n        ], \n        carpet: [\n          {\n            type: 'carpet', \n            aaxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }, \n            baxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }\n          }\n        ], \n        mesh3d: [\n          {\n            type: 'mesh3d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        contour: [\n          {\n            type: 'contour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        heatmap: [\n          {\n            type: 'heatmap', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatter: [\n          {\n            type: 'scatter', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        surface: [\n          {\n            type: 'surface', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        barpolar: [\n          {\n            type: 'barpolar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}\n          }\n        ], \n        heatmapgl: [\n          {\n            type: 'heatmapgl', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        histogram: [\n          {\n            type: 'histogram', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        parcoords: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'parcoords'\n          }\n        ], \n        scatter3d: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'scatter3d', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattergl: [\n          {\n            type: 'scattergl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        choropleth: [\n          {\n            type: 'choropleth', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattergeo: [\n          {\n            type: 'scattergeo', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2d: [\n          {\n            type: 'histogram2d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatterpolar: [\n          {\n            type: 'scatterpolar', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        contourcarpet: [\n          {\n            type: 'contourcarpet', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattercarpet: [\n          {\n            type: 'scattercarpet', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattermapbox: [\n          {\n            type: 'scattermapbox', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterpolargl: [\n          {\n            type: 'scatterpolargl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterternary: [\n          {\n            type: 'scatterternary', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2dcontour: [\n          {\n            type: 'histogram2dcontour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ]\n      }, \n      layout: {\n        geo: {\n          bgcolor: 'white', \n          showland: true, \n          lakecolor: 'white', \n          landcolor: '#E5ECF6', \n          showlakes: true, \n          subunitcolor: 'white'\n        }, \n        font: {color: '#2a3f5f'}, \n        polar: {\n          bgcolor: '#E5ECF6', \n          radialaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          angularaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }\n        }, \n        scene: {\n          xaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          yaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          zaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }\n        }, \n        title: {x: 0.05}, \n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        mapbox: {style: 'light'}, \n        ternary: {\n          aaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          baxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          caxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          bgcolor: '#E5ECF6'\n        }, \n        colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n        hovermode: 'closest', \n        colorscale: {\n          diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n          sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n          sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }, \n        hoverlabel: {align: 'left'}, \n        plot_bgcolor: '#E5ECF6', \n        paper_bgcolor: 'white', \n        shapedefaults: {line: {color: '#2a3f5f'}}, \n        annotationdefaults: {\n          arrowhead: 0, \n          arrowcolor: '#2a3f5f', \n          arrowwidth: 1\n        }\n      }\n    }\n  }","var trace1, trace2, trace3, trace4, trace5, trace6, trace7;\ntrace1 = {\n  name: 'Review type=Cost', \n  type: 'bar', \n  xsrc: 'sumon23:207:1f95c3', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:21dc5b', \n  y: ['273.006547355084', '182.004364903389', '262.89519374934', '273.006547355084', '252.783840143596', '262.89519374934', '252.783840143596', '252.783840143596', '252.783840143596', '242.672486537852', '171.893011297645', '262.89519374934', '468265.963300134', '127695.297161146', '19154.2945741719', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19669.5902946633', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '52492.5506385874', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4559.3125', '0', '1515.25', '0', '0', '1145.83333333333', '556.051587301587', '5696.66666666667', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4401.48214285714', '6508.92857142857', '5013.76984126984', '773.809523809524', '642.857142857143', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3294.64285714286', '0', '102476.031009122', '89793.312162111', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '19973.0930774324', '12050', '12969.0857873935', '14992.9748594388', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327680.501953769', '122443.775450333', '68769.1870400573', '0', '164287', '468265.963300134', '85130.1981074307', '12769.5297161146', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19541.7440405966', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '2730.06547355084', '1820.04364903389', '2628.9519374934', '0', '0', '0', '0', '0', '0', '0', '0', '0', '2730.06547355084', '2527.83840143596', '33213.2080925691', '0', '0', '17738.0952380952', '8489.62001916743', '8879.72615125127', '833.333333333333', '7500', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '1801.25', '3140.5', '0', '987', '0', '0', '1145.83333333333', '556.051587301587', '5197.77777777778', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '928.571428571429', '642.857142857143', '5658.67063492064', '0', '5422.09115216652', '3823.60714285714', '4339.28571428571', '5013.76984126984', '773.809523809524', '428.571428571429', '952.380952380952', '0', '519.642857142857', '2500', '1500', '0', '0', '0', '200', '2196.42857142857', '0', '102476.031009122', '95150.068300201', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '18901.4598591543', '12050', '12335.2912515929', '14217.4325666907', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327228.185405629', '125981.578415274', '66349.6830596154', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '2628.9519374934', '2527.83840143596', '2527.83840143596', '0', '0', '0', '0', '0', '0', '0', '0', '0', '2527.83840143596', '2426.72486537852', '51446.3347194516', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '0', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4337.27380952381', '6267.85714285714', '5013.76984126984', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '102476.031009122', '98323.0104596685', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '15472.0040166148', '12050', '12115.07471087', '12221.0605532233', '0', '5146.94322898438', '0', '0', '0', '0', '0', '328402.29807296', '123537.171308948', '77098.7834816141', '0', '164287', '468265.963300134', '127695.297161146', '19154.2945741719', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '1718.93011297645', '2628.9519374934', '0', '0', '0', '0', '0', '0', '0', '0', '0', '53443.3439028586', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4559.3125', '0', '1515.25', '0', '0', '1145.83333333333', '556.051587301587', '5696.66666666667', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4401.48214285714', '6508.92857142857', '5013.76984126984', '773.809523809524', '642.857142857143', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3294.64285714286', '0', '102476.031009122', '99976.4455414178', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '24715.8151329957', '12050', '15795.1854478392', '18726.2390275', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327940.889962202', '123543.016174434', '107190.971259504', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '47807.3186460799', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4273.06547619048', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '102476.031009122', '98415.9421318979', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '19250.0260336118', '12050', '14778.951514216', '14870.3782122078', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327280.926557242', '118834.005743366', '99111.813961008', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '39101.909014226', '0', '0', '17738.0952380952', '8489.62001916743', '8760.67853220366', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '25', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4826.35416666667', '6267.85714285714', '5013.76984126984', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '102476.031009122', '98207.2813758523', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '27774.6074820736', '12050', '15153.2901976153', '21200.431323824', '3333.33333333333', '5146.94322898438', '0', '0', '0', '0', '0', '332498.72161347', '117041.148309523', '101842.970611646', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '233795.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15196.7172523114', '7598.3586261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '41480.1102076819', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4789.54613095238', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '100766.171181688', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '28032.4212146347', '12050', '15863.0425026614', '21041.2554343982', '0', '5146.94322898438', '0', '0', '0', '0', '0', '331813.589372641', '125016.829265224', '106468.657407109', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '233795.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15196.7172523114', '7598.3586261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '37157.4134582953', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4852.79017857143', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '95821.0956659278', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '32721.526905167', '12050', '15481.8643925148', '24292.8168340636', '0', '5146.94322898438', '0', '0', '0', '0', '0', '332209.963904642', '113606.372603343', '102915.325675299', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '47792.0622033451', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4931.84523809524', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '104022.71124052', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '34358.9634907932', '12050', '16902.0573158697', '25498.1612015861', '0', '5146.94322898438', '0', '0', '0', '0', '0', '331511.060505773', '125973.989972231', '104000.277493659', '0', '164287', '468265.963300134', '113506.930809908', '17026.0396214861', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '49320.4698808483', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '2401.66666666667', '4086.375', '0', '1316', '0', '0', '1145.83333333333', '556.051587301587', '5530.37037037037', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1238.09523809524', '857.142857142857', '5658.67063492064', '0', '5422.09115216652', '4950.40364583333', '5785.71428571429', '5013.76984126984', '773.809523809524', '571.428571428571', '952.380952380952', '0', '692.857142857143', '2500', '1500', '0', '0', '0', '200', '2928.57142857143', '0', '100193.292913884', '107545.775050827', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '20999.2135676005', '12050', '17079.2548650198', '16193.2276774478', '0', '5146.94322898438', '0', '0', '0', '0', '0', '330805.168072915', '126296.607247337', '104581.025751455', '0', '164287', '468265.963300134', '80400.7426570179', '12060.1113985527', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '52578.8940817304', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '1801.25', '2982.85416666667', '951.666666666667', '943.75', '0', '0', '1145.83333333333', '556.051587301587', '5142.34567901235', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '928.571428571429', '642.857142857143', '5658.67063492064', '0', '5422.09115216652', '4512.10425967262', '95625', '5013.76984126984', '773.809523809524', '404.761904761905', '952.380952380952', '0', '519.642857142857', '2500', '1500', '0', '0', '0', '200', '2074.40476190476', '0', '100193.292913884', '103868.811077715', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '15469.3432431987', '12050', '12581.6547840964', '12136.0351994092', '0', '5146.94322898438', '0', '0', '0', '0', '0', '332897.24669668', '120235.616701738', '83857.7991637843', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '19834.2399993404', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '35715.7271920561', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '450.833333333333', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '5388.85242280506', '6267.85714285714', '10549.4841269841', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '100193.292913884', '111262.550853741', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '21254.5328808451', '12050', '17286.9132903617', '16547.2187362658', '0', '5146.94322898438', '0', '0', '0', '0', '0', '335071.378726874', '126082.391314482', '110144.091563776', '0', '164287', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '209306.84026342', '57158.9192351141', '8573.83788526712', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8507.29302334248', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '29792.7096707441', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1953.99107142857', '0', '649.392857142857', '0', '0', '163.690476190476', '58.531746031746', '822.142857142857', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '855.535714285714', '2105.35714285714', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2450.89285714286', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8559.89703318531', '5164.28571428571', '5558.17962316865', '6425.5606540452', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '38105.9461567427', '5715.89192351141', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8451.99824958314', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '20758.226048567', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '771.964285714286', '1345.92857142857', '0', '423', '0', '0', '163.690476190476', '58.531746031746', '548.095238095238', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '570.357142857143', '1403.57142857143', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '1633.92857142857', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8100.62565392327', '5164.28571428571', '5286.5533935398', '6093.18538572458', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '30296.0773549307', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '0', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '6630.85886426351', '5164.28571428571', '5192.17487608714', '5237.59737995285', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '57158.9192351141', '8573.83788526712', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31702.3246627011', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1953.99107142857', '0', '649.392857142857', '0', '0', '163.690476190476', '58.531746031746', '822.142857142857', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '855.535714285714', '2105.35714285714', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2450.89285714286', '0', '0', '0', '0', '0', '0', '8667.27346428571', '10592.4921998553', '5164.28571428571', '6769.3651919311', '8025.53101178572', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '24622.1496654869', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8250.01115726221', '5164.28571428571', '6333.83636323542', '6373.01923380333', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '19508.484631125', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '10.7142857142857', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '11903.403206603', '5164.28571428571', '6494.26722754942', '9085.8991387817', '1428.57142857143', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '21965.4670098309', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '12013.894806272', '5164.28571428571', '6798.44678685491', '9017.68090045638', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '22686.4994310519', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '14023.5115307859', '5164.28571428571', '6635.08473964922', '10411.2072145987', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31039.8702966616', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '14725.2700674828', '5164.28571428571', '7243.73884965844', '10927.7833721083', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '50807.9282089903', '7621.18923134855', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31466.7680224785', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1029.28571428571', '1751.30357142857', '0', '564', '0', '0', '163.690476190476', '58.531746031746', '730.793650793651', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '760.47619047619', '1871.42857142857', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2178.57142857143', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8999.66295754306', '5164.28571428571', '7319.68065643707', '6939.95471890622', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '35988.9491480348', '5398.34237220522', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '23824.5857018528', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '771.964285714286', '1278.36607142857', '407.857142857143', '404.464285714286', '0', '0', '163.690476190476', '58.531746031746', '517.645502645503', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '538.670634920635', '56869.0476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '1543.15476190476', '0', '0', '0', '0', '0', '0', '8667.27346428571', '6629.71853279944', '5164.28571428571', '5392.13776461275', '5201.15794260393', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8578.50565476545', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '29437.4777565101', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '193.214285714286', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '5709.36507936508', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '9109.08552036217', '5164.28571428571', '7408.67712444075', '7091.66517268534', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '218020.946440765', '218020.946440765', '218020.946440765', '358758.760970009', '40035.6897539701', '36184.7991828055', '9644.19596953188', '2598.62244897959', '3305.34861111111', '14625.9047619048', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '155', '4352', '12405', '58924.1224866173', '1664.63537492545', '3989.97654299141', '5334.81975330489', '2905.58947998258', '1789.0625', '27374.7753771429', '29250', '7630.95238095238', '6681.52836219022', '3958.46785714286', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7769.72851543811', '973.642927489177', '2186.07151536601', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '61862.8794110103', '75994.0161544971', '19990.1381234574', '11582.8425430168', '5878.0747274249', '8079.52146237125', '7439.26561124329', '13300.2456903273', '4119.52438223433', '141.438374441383', '1042.51246202372', '101332.486973372', '36750.9628054552', '28621.7409182205', '4848.72497941917', '16149.622854651', '24064.1678737075', '110221.933531746', '301177.839143651', '27236.0767803726', '35091.7277542341', '9644.19596953188', '1844.18367346939', '3305.34861111111', '9887.80272108844', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '110', '4352', '12405', '57803.5412926975', '1632.97840631639', '3914.09772648001', '5233.36557059961', '2850.33284159549', '1789.0625', '19437.5719542857', '19500', '7630.95238095238', '6681.52836219022', '2849.76428571429', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7621.96879855408', '973.642927489177', '2144.49820845356', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '60686.4108215043', '77997.387393092', '19609.9784893433', '11362.5674675792', '5766.28926982214', '10515.5448155273', '7297.7904260604', '10722.1573418341', '5789.68837557632', '138.748590091457', '1022.68662822134', '97315.0939876831', '35579.0358408108', '34825.7467126247', '4944.98031230289', '15842.4996783334', '23606.5309530604', '110221.933531746', '353862.052218711', '38613.5105346815', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '54394.2254189883', '1536.66355989742', '3683.23997604278', '4924.69596465935', '2682.21710361675', '1789.0625', '26492.8638857143', '28166.6666666667', '7630.95238095238', '6681.52836219022', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7172.41677055213', '973.642927489177', '2018.01336652667', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '839.237393798126', '903.511904761905', '6000', '5194.24603174603', '57107.0601605383', '76003.4720543822', '18453.3605823491', '10692.3908526699', '5426.18724319273', '10707.3106726239', '6867.35879183604', '15990.5519623986', '5957.10981264076', '175.900132772141', '962.367456117852', '93520.3432912985', '33035.3420454979', '38125.7980130705', '5450.77107760126', '14908.0917783213', '22214.1920253476', '110221.933531746', '360326.743502004', '40035.6897539701', '37640.1563256627', '9644.19596953188', '2598.62244897959', '3305.34861111111', '14984.1353741497', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '155', '4352', '12405', '52930.1148897274', '1495.30171899157', '3584.09948108803', '4792.13962876659', '2610.02079467183', '1789.0625', '27374.7753771429', '29250', '7630.95238095238', '6681.52836219022', '3958.46785714286', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6979.35931209723', '973.642927489177', '1963.69519956386', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '875.927413848966', '903.511904761905', '6000', '5194.24603174603', '55569.929197975', '76324.7560585053', '17956.6578658245', '10404.5874707892', '5280.13244021862', '11634.4604930044', '6682.51247335479', '15788.3613880577', '6419.05608946658', '127.050672849629', '936.463744562686', '92893.0117746028', '31712.8404896963', '30446.6062125195', '7023.21887019779', '14506.8158344927', '21616.2603112216', '110221.933531746', '315995.833493933', '12276.3812488326', '37397.2515637579', '9644.19596953188', '2514.79591836735', '3305.34861111111', '12245.425170068', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '56618.0783500019', '1599.48849646627', '3833.82551988049', '5126.03718187495', '2791.8768390307', '1789.0625', '27055.7861142857', '21666.6666666667', '7630.95238095238', '6681.52836219022', '3817.94642857143', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7465.65378118664', '973.642927489177', '2100.51780344817', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '887.150536336825', '903.511904761905', '6000', '5194.24603174603', '59441.8245981482', '80660.3948394988', '19207.8075792868', '11129.5384460788', '5648.03142448317', '10781.8329468397', '7148.12381532722', '14671.3236518449', '5983.75158862097', '135.903066993282', '1001.71287691417', '101369.115090163', '37076.6787651153', '28917.3039728152', '7419.97320919913', '15517.5940433442', '23122.3968148293', '110221.933531746', '306242.361984652', '12276.3812488326', '37154.3468018531', '9644.19596953188', '2514.79591836735', '3305.34861111111', '11309.056462585', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '56773.2990003339', '1603.87355600653', '3844.33610073731', '5140.09041095274', '2799.53087730311', '980', '26492.8638857143', '19933.3333333333', '7630.95238095238', '6681.52836219022', '3783.28214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7486.12115960781', '973.642927489177', '2106.27645420049', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '930.315883486662', '903.511904761905', '6000', '5194.24603174603', '59604.7866579695', '80830.6319237781', '19260.4665262309', '11160.0505059339', '5663.51572095441', '11405.3286562656', '7167.72067307308', '12644.9295752356', '6272.38771891707', '2197.44486438813', '1004.4591114868', '103632.582263307', '36713.3884370762', '32546.4442965702', '7519.286784713', '15560.1361272366', '23185.7877594785', '110221.933531746', '287191.508283397', '12480.9876029798', '36668.5372780436', '9644.19596953188', '2556.70918367347', '3305.34861111111', '9445.33265306123', '5577.03244937929', '22676.7161292582', '10199.5107142857', '77447', '152.5', '4352', '12405', '57553.4984260234', '1625.91457263422', '3897.16637255109', '5210.72741209995', '2838.00305385672', '980', '26933.8196314286', '16466.6666666667', '7630.95238095238', '6681.52836219022', '3766.88214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7588.99817278498', '973.642927489177', '2135.22167508506', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '716.66936898174', '903.511904761905', '6000', '5194.24603174603', '60423.8974219683', '87720.2903836365', '19525.1508969981', '11313.4159990215', '5741.34582402534', '12327.0049382153', '7266.22211038786', '10911.217108014', '6713.7230108801', '138.148400303123', '1018.26275572995', '107050.921461599', '36746.5002355644', '10955.4018688694', '11791.3396844336', '15773.9692051779', '23504.4153293507', '110221.933531746', '316111.406854026', '11457.9558322438', '37397.2515637579', '9644.19596953188', '2347.14285714286', '3305.34861111111', '12209.3707482993', '5577.03244937929', '22676.7161292582', '10199.5107142857', '77447', '140', '4352', '12405', '178545.57118', '5044', '12090', '16165', '8804.20634920635', '980', '24729.0409028571', '21666.6666666667', '7630.95238095238', '6681.52836219022', '3606.23214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '23543', '973.642927489177', '6624', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '346.134429310144', '903.511904761905', '6000', '5194.24603174603', '187450.2779704', '251220.286284236', '60571.9776315789', '35097.090129779', '17811.1130952381', '13684.0454293535', '22541.6666666667', '13682.690194458', '8000.47258099758', '428.571428571429', '3158.90971539827', '325330.271997668', '112534.239887474', '25749.5290179439', '24340.0031864186', '48934.8591925172', '72916.6666666667', '110221.933531746', '337704.939749493', '25444.9458917571', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '10199.5107142857', '82868.29', '150', '4352', '12405', '58448.3266327088', '1543.17187717249', '3698.83980868665', '4945.55380541106', '2693.57724800134', '980', '26492.8638857143', '25350', '7630.95238095238', '6681.52836219022', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7202.79450917368', '973.642927489177', '2026.56037160797', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '741.501174332529', '903.511904761905', '6000', '5194.24603174603', '57348.9288921665', '86396.3337798019', '18531.5171343723', '10737.6769347469', '5449.16907805515', '9205.41192818236', '6896.44450130782', '14913.9789138403', '5176.12993988627', '131.118036465319', '966.443424926562', '97443.2457843945', '33981.359709097', '9902.67025391068', '13147.9201160085', '14971.232854736', '22308.2770375022', '110221.933531746', '340971.062728216', '35769.1520961043', '37275.7991828055', '9644.19596953188', '2347.14285714286', '3305.34861111111', '13327.243537415', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '140', '4352', '12405', '55598.847314522', '1467.93899024927', '3518.51355910262', '4704.44761645111', '2562.25967053928', '1789.0625', '24729.0409028571', '26000', '7630.95238095238', '6681.52836219022', '3588.9', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6851.64307046758', '973.642927489177', '1927.76127506169', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '556.948106597588', '903.511904761905', '6000', '5194.24603174603', '54553.0475348559', '84935.7894804607', '17628.0665507338', '10214.1925150268', '5183.51058133214', '11144.6624977311', '6560.22827224469', '14179.3295024515', '6139.27597916325', '124.725755374074', '919.327267626949', '122110.609523602', '32315.8697722833', '26954.1150074217', '13378.6201306907', '14241.3536461249', '21220.7014351723', '110221.933531746', '310470.025447268', '27839.8305830724', '36668.5372780436', '9644.19596953188', '1760.35714285714', '3305.34861111111', '10529.7027210884', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '105', '4352', '12405', '55374.9632389754', '1462.02792950494', '3504.3452949474', '4685.50386210296', '2551.94202610317', '1789.0625', '18555.6604628571', '20583.3333333333', '7630.95238095238', '6681.52836219022', '2761.23928571429', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6824.0530420965', '973.642927489177', '1919.99861321188', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '54333.3746602277', '81612.3408414609', '17557.0822844403', '10173.062254974', '5162.63774797962', '8367.55008808023', '6533.81170584003', '10604.8046274643', '4666.80151137412', '124.223512759568', '915.625343119897', '116281.967691197', '32176.8654031078', '27411.6962413761', '11790.3569457926', '14184.0069123417', '21135.2504347875', '110221.933531746', '349450.923923758', '38613.5105346815', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '150', '4352', '12405', '55375.0098232068', '1462.02915943708', '3504.34824298064', '4685.50780378677', '2551.94417292641', '1789.0625', '26492.8638857143', '28166.6666666667', '7630.95238095238', '6696.20693361879', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6824.05878283649', '973.642927489177', '1920.00022841222', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '54333.4203682219', '89233.4894167979', '17557.0970543496', '10173.0708130707', '5162.64209105269', '11857.0902887865', '6533.81720241427', '15023.4774651534', '6515.54912734613', '684.955222962362', '915.626113390437', '115039.434277474', '32167.931789496', '37555.3308281799', '14737.64994823', '14184.0188446487', '21135.2682148336', '110221.933531746', '664713.698986505', '234365.043650841', '68147.0842959184', '15272.3326530612', '9904.76190476191', '24227.3724084872', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '201476', '7253', '10502', '119621.448693383', '3379.36462507455', '8100.02345700859', '10830.1802466951', '5898.61686922377', '195443.763922353', '14048.6252181508', '5313', '16491.0486805106', '22396.3431161177', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '15773.2714845619', '1962.36300294278', '4437.92848463399', '5568.13410714286', '4249.38095238095', '13822.7042744535', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '34259.0773620887', '2386.90476190476', '12500', '8571.66666666667', '125587.39855939', '154274.920368885', '40581.8395081215', '23514.2475867622', '11933.0383678132', '16402.1799781173', '15102.4010554234', '27000.7356972727', '8363.01761884538', '287.133054130046', '2116.39725337455', '205714.372652916', '74607.8723983312', '58104.7959355154', '9843.36264805038', '32785.2363378662', '48852.4987929592', '339975.892857143', '667356.771741416', '164753.91228403', '59239.9609591837', '15321.8027210884', '9904.76190476191', '17418.630952381', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '202071', '7253', '10502', '120742.029887303', '3411.02159368361', '8175.90227351999', '10931.6344294004', '5953.87350761086', '141331.021514604', '14048.6252181508', '5313', '14063.2237130223', '16241.5893858336', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '15921.0312014459', '1980.74588578495', '4479.50179154644', '5568.13410714286', '4249.38095238095', '9820.31351575292', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '19788.1980734218', '2386.90476190476', '12500', '8571.66666666667', '126763.867148895', '162923.631824924', '40961.9991422356', '23734.5226621999', '12044.823825416', '21965.2325446377', '15243.8762406063', '22396.8119127615', '12093.7006842229', '289.822838479971', '2136.22308717693', '203275.123357034', '74318.7166872646', '72745.2203859107', '10329.2453594989', '33092.3595141838', '49310.1357136063', '339975.892857143', '681849.176050335', '230388.228764259', '73465.9753537415', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '203857', '7253', '10502', '124151.345761012', '3507.33644010258', '8406.76002395722', '11240.3040353406', '6121.9892455896', '201413.300511344', '14048.6252181508', '5313', '17670.2670873174', '25281.2650220501', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16370.5832294479', '2036.67494707781', '4605.98663347333', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '43323.9971126686', '2386.90476190476', '12500', '8571.66666666667', '130343.217809861', '173473.07118316', '42118.6170492298', '24404.6992771092', '12384.9258520454', '24438.7528133354', '15674.3078748306', '36497.4136556074', '13596.7227107034', '401.480819608812', '2196.54225928042', '213454.211108104', '75401.0584953043', '87019.699151426', '12441.0368840947', '34026.7674141959', '50702.474641319', '339975.892857143', '681849.176050335', '238293.097735825', '70103.3789387755', '15642.4231292517', '9904.76190476191', '26759.5487123421', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '125615.456290273', '3548.69828100843', '8505.90051891197', '11372.8603712334', '6194.18555453452', '208005.801198272', '14048.6252181508', '5313', '18005.6114802898', '26227.618517459', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16563.6406879028', '2060.69335152135', '4660.30480043614', '5568.13410714286', '4249.38095238095', '13935.9632450324', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '46056.1334187491', '2386.90476190476', '12500', '8571.66666666667', '131880.348772425', '181136.373471081', '42615.3197657545', '24692.5026589899', '12530.9806550195', '27611.276993535', '15859.1541933119', '37469.4486110307', '15233.9110034256', '301.5207557218', '2222.44597083558', '220456.692462405', '75261.936171368', '72256.8681334593', '16667.7296061862', '34428.0433580245', '51300.4063554451', '339975.892857143', '681849.176050335', '200541.10040728', '66051.4477891157', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '121927.492829998', '3444.51150353373', '8256.17448011951', '11038.962818125', '6012.32951017565', '203084.199941317', '14048.6252181508', '5313', '17670.2670873174', '22288.2348488053', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16077.3462188134', '2000.19313914558', '4523.48219655183', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '42518.597310259', '2386.90476190476', '12500', '8571.66666666667', '128008.453372252', '173702.81719315', '41364.1700522921', '23967.5516837002', '12163.0816707549', '23218.7650593406', '15393.5428513394', '31594.814968969', '12886.0577783641', '292.668361578146', '2157.1968384841', '218299.214906835', '79844.9296768403', '62273.6496108611', '15978.9727350111', '33417.265149173', '49794.2698518374', '339975.892857143', '681849.176050335', '199414.793676829', '65408.1125680272', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '121772.272179666', '3440.12644399347', '8245.66389926269', '11024.9095890473', '6004.67547190324', '204264.975631773', '14048.6252181508', '5313', '17670.2670873174', '22479.2045086321', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16056.8788403922', '1997.64677923411', '4517.72354579951', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '38405.6180190511', '2386.90476190476', '12500', '8571.66666666667', '127845.49131243', '173372.516383429', '41311.5111053481', '23937.0396238451', '12147.5973742837', '24463.1333722768', '15373.9459935936', '27121.9364215429', '13453.5585913349', '4713.26942132616', '2154.45060391147', '222280.107660731', '78746.044498333', '69808.4230289133', '16128.0153358651', '33374.7230652806', '49730.8789071882', '339975.892857143', '681849.176050335', '200269.884653868', '61066.9860340136', '15642.4231292517', '9904.76190476191', '26327.9430879495', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '204452', '7253', '10502', '120992.072753977', '3418.08542736578', '8192.83362744891', '10954.2725879001', '5966.20329534963', '214298.826517727', '14048.6252181508', '5313', '17837.9392838036', '20452.3148903922', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '15954.001827215', '1984.84778286169', '4488.77832491494', '5568.13410714286', '4249.38095238095', '13711.1896443061', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '33188.7863756482', '2386.90476190476', '12500', '8571.66666666667', '127026.380548432', '184410.332062419', '41046.8267345809', '23783.6741307575', '12069.7672712128', '25914.495540879', '15275.4445562788', '22938.1499000299', '14113.9511097931', '290.423028268306', '2140.64695966832', '225048.228727752', '77250.4774087738', '23031.0374906411', '24788.391114045', '33160.8899873393', '49412.2513373159', '339975.892857143', '366028.833336847', '-4.09272615797818e-12', '9904.76190476191', '0', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '204452', '7253', '10502', '0', '0', '0', '0', '0', '6044.02671829736', '14048.6252181508', '5313', '0', '0', '0', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '64.26735218509', '2032.36607142857', '6119.04761904762', '535.677248677249', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '0', '0', '685.384839285714', '4249.38095238095', '0', '4293.37880079365', '146.703869047619', '540.476190476191', '892.857142857143', '0', '2386.90476190476', '12500', '8571.66666666667', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '339975.892857143', '681849.176050335', '233818.967680489', '68033.1458843537', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '218763.64', '7253', '10502', '132595.434529891', '3500.82812282751', '8391.16019131335', '11219.4461945889', '6110.62910120501', '192851.295043976', '14048.6252181508', '5313', '19932.1718492222', '23576.1861370386', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16340.2054908263', '2032.89563278385', '4597.43962839203', '6166.86569047619', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '2678.57142857143', '39797.6150769079', '2386.90476190476', '12500', '8571.66666666667', '130101.349078233', '195998.073500217', '42040.4604972066', '24359.4131950321', '12361.9440171829', '20883.3283168951', '15645.2221653588', '33833.7404777577', '11742.5294803618', '297.45339210611', '2192.46629047171', '221059.015050641', '77089.8572487571', '22465.1233143894', '29827.2727618319', '33963.6263377812', '50608.3896291645', '339975.892857143', '750516.845492729', '245434.615879252', '67440.6793469388', '15878.8108843537', '9904.76190476191', '25098.9399092971', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135444.913848078', '3576.06100975073', '8571.48644089738', '11460.5523835489', '6241.94667866707', '172957.127424538', '14048.6252181508', '5313', '19261.4830632776', '24296.6426976578', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16691.3569295324', '2076.58261252179', '4696.23872493832', '6166.86569047619', '4249.38095238095', '18939.7365295324', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '2678.57142857143', '38601.6011468131', '2386.90476190476', '12500', '8571.66666666667', '132897.230435544', '206912.935149911', '42943.9110808452', '24882.8976147522', '12627.602513906', '27149.6249433363', '15981.438394422', '34542.4079031479', '14955.9522589266', '303.845673197355', '2239.58244777132', '297474.889961264', '78725.0169499354', '65663.1919791232', '32591.791710298', '34693.5055463923', '51695.9652314944', '339975.892857143', '750516.845492729', '190986.8495273', '65280.6122210885', '17347.5013605442', '9904.76190476191', '31281.3052721088', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135668.797923625', '3581.97207049506', '8585.6547050526', '11479.496137897', '6252.26432310318', '124047.663019295', '14048.6252181508', '5313', '16914.0723124714', '18639.1038089576', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16718.9469579035', '2080.01510596353', '4704.00138678812', '6166.86569047619', '4249.38095238095', '42614.407191448', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '31771.4947801088', '2386.90476190476', '12500', '8571.66666666667', '133116.903310172', '199950.438430287', '43014.8953471387', '24924.027874805', '12648.4753472585', '20500.5185667834', '16007.8549608266', '25981.7977632593', '11433.6753320073', '304.347915811861', '2243.28437227837', '284891.110604921', '78833.4004187174', '67158.7240982131', '28886.4038974257', '34750.8522801755', '51781.4162318791', '339975.892857143', '750516.845492729', '262988.886659884', '72648.2061972789', '17347.5013605442', '9904.76190476191', '26891.7213313897', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135668.751339393', '3581.97084056292', '8585.65175701936', '11479.4921962132', '6252.26217627994', '189665.149684985', '14048.6252181508', '5313', '19932.1718492222', '25997.9836046333', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16718.9412171635', '2080.01439175432', '4703.99977158778', '6166.86569047619', '4249.38095238095', '20292.5748530705', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '46740.644265984', '2386.90476190476', '12500', '8571.66666666667', '133116.857602178', '218622.012447218', '43014.8805772294', '24924.0193167084', '12648.4710041854', '29049.8663410433', '16007.8494642524', '36807.5136235677', '15963.0926878332', '1678.14001513288', '2243.28360200783', '281846.566764389', '78811.4196816402', '92010.5451152755', '36107.236324417', '34750.8403478685', '51781.3984518331', '339975.892857143'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#636efa'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Cost', \n  offsetgroup: 'Review type=Cost', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:becdf3', \n  hovertextn  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Cost<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace2 = {\n  name: 'Review type=KPI', \n  type: 'bar', \n  xsrc: 'sumon23:207:88003b', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:4f5798', \n  y: ['400000', '170000', '115000', '313000', '110000', '10000', '100000', '150000', '63000', '35000', '50000', '0', '0', '0', '10000', '280000', '355000', '144000', '110000', '443000', '120000', '35000', '45000', '80000', '25000', '35000', '70350', '70787', '0', '0', '10000', '25000', '735022', '170000', '130000', '470000', '120000', '40000', '80000', '225000', '100000', '25000', '120000', '100000', '0', '0', '30000', '30000', '802000', '130000', '90000', '433000', '125000', '40000', '110000', '180000', '76000', '25000', '250000', '100000', '0', '0', '40000', '30000', '576000', '45000', '115000', '440000', '120000', '0', '92640', '270000', '40000', '25000', '250000', '90000', '0', '0', '30000', '20000', '436500', '35000', '115000', '430000', '160000', '0', '90000', '200000', '40000', '15000', '250000', '80000', '0', '0', '20000', '15000', '260000', '20000', '135000', '173319', '240000', '0', '85000', '250000', '15000', '15000', '250000', '100000', '25000', '45000', '0', '20000', '330000', '20000', '115000', '0', '95000', '0', '0', '0', '0', '0', '100000', '0', '0', '0', '0', '0', '610430', '60000', '75000', '550674', '256712', '0', '46910', '132400', '0', '20000', '179290', '79392', '45000', '85000', '50000', '0', '496400', '110000', '110000', '430659', '184984', '0', '52040', '232400', '0', '50000', '179290', '159392', '75000', '110000', '50000', '0', '406400', '70000', '60000', '457274', '55000', '0', '50000', '70000', '0', '50000', '179290', '144392', '50000', '65000', '30000', '0', '781400', '120000', '130000', '548426', '80000', '0', '35000', '72400', '0', '50000', '179290', '159392', '85000', '120000', '30000', '0', '204476.333333333', '172500', '104166.666666667', '242250', '66166.6666666667', '8000', '63833.3333333333', '112500', '58800', '20416.6666666667', '30000', '0', '0', '0', '8666.66666666667', '294583.333333333', '186387.5', '156000', '88833.3333333333', '341283.333333333', '74000', '28000', '25000', '56666.6666666667', '23333.3333333333', '20416.6666666667', '42210', '58989.1666666667', '0', '0', '8666.66666666667', '25000', '382508.461666667', '172666.666666667', '105000', '376166.666666667', '86500', '30083.3333333333', '43333.3333333333', '162500', '93333.3333333333', '14583.3333333333', '72000', '83333.3333333333', '0', '0', '26000', '32666.6666666667', '403756.333333333', '130833.333333333', '72833.3333333333', '355450', '90416.6666666667', '32000', '65666.6666666667', '145000', '70933.3333333333', '14583.3333333333', '158666.666666667', '83333.3333333333', '0', '0', '34666.6666666667', '31666.6666666667', '295875.666666667', '45833.3333333333', '103833.333333333', '340166.666666667', '93750', '0', '55600', '185833.333333333', '37333.3333333333', '14583.3333333333', '158666.666666667', '75000', '0', '0', '26000', '20833.3333333333', '230989.583333333', '35416.6666666667', '103000', '332666.666666667', '123333.333333333', '0', '54500', '145833.333333333', '37333.3333333333', '8750', '158666.666666667', '66666.6666666667', '0', '0', '17333.3333333333', '15416.6666666667', '123359', '21666.6666666667', '112500', '133933.216666667', '160250', '0', '51000', '183333.333333333', '14000', '8750', '158666.666666667', '83333.3333333333', '28333.3333333333', '37500', '0', '20000', '176211.666666667', '20000', '95500', '0', '64416.6666666667', '0', '0', '0', '0', '0', '66666.6666666667', '0', '0', '0', '0', '0', '314111.675', '66666.6666666667', '62250', '425861.3', '181676.666666667', '0', '32212.5', '99300', '0', '11666.6666666667', '114007.333333333', '66160', '45500', '65833.3333333333', '43333.3333333333', '0', '235545.666666667', '110000', '94166.6666666667', '308931.9', '123093.333333333', '0', '28016.6666666667', '174300', '0', '29166.6666666667', '114007.333333333', '132826.666666667', '79500', '85416.6666666667', '43333.3333333333', '0', '190737.333333333', '77500', '50833.3333333333', '343696.733333333', '45083.3333333333', '0', '33500', '52500', '0', '29166.6666666667', '114007.333333333', '120326.666666667', '51166.6666666667', '48750', '26000', '0', '400984.833333333', '131666.666666667', '110833.333333333', '413933.7', '65166.6666666667', '0', '19333.3333333333', '54300', '0', '29166.6666666667', '114007.333333333', '132826.666666667', '90833.3333333333', '93750', '26000', '0', '9063.66725768322', '7646.27659574468', '4665.92011944756', '10738.0319148936', '2932.91962174941', '358.342665173572', '2829.49172576832', '5039.19372900336', '2606.3829787234', '904.994089834516', '1343.7849944009', '0', '0', '0', '388.204553938037', '13195.2220977977', '8261.85726950355', '6914.89361702128', '3979.09667786487', '15447.3649464313', '3280.14184397163', '1254.1993281075', '1108.15602836879', '2538.26054497947', '1034.27895981087', '904.994089834516', '1890.70548712206', '2614.76802600473', '0', '0', '388.204553938037', '1119.82082866741', '16955.1623079196', '7653.66430260047', '4703.24748040314', '16847.6654846336', '3834.21985815603', '1347.51773049645', '1920.80378250591', '7278.83538633819', '4137.1158392435', '653.228816722658', '3225.08398656215', '3693.85342789598', '0', '0', '1164.61366181411', '1463.23254945875', '18085.390070922', '5860.39567002613', '3262.41134751773', '16090.991398823', '4050.01866368048', '1513.00236406619', '2941.39604329974', '6494.960806271', '3177.30496453901', '653.228816722658', '7107.12952594252', '3732.73609555804', '0', '0', '1603.45359235276', '1433.52950052814', '13115.0561465721', '2031.61938534279', '4650.98917506532', '15078.3096926714', '4155.58510638298', '0', '2464.5390070922', '8324.00149309444', '1654.8463356974', '646.424349881797', '7107.12952594252', '3324.46808510638', '0', '0', '1164.61366181411', '933.184023889511', '10238.8999704492', '1569.88770685579', '4613.66181410974', '14745.8628841608', '5466.90307328605', '0', '2415.78014184397', '6532.28816722658', '1654.8463356974', '387.854609929078', '7107.12952594252', '2955.08274231678', '0', '0', '776.409107876073', '690.556177678238', '5468.04078014184', '960.401891252955', '5039.19372900336', '5936.75605791962', '7103.28014184397', '0', '2260.63829787234', '8212.0194102277', '620.567375886525', '387.854609929078', '7107.12952594252', '3693.85342789598', '1255.91016548463', '1662.23404255319', '0', '895.856662933931', '7810.80082742317', '886.524822695036', '4277.71556550952', '0', '2855.34869976359', '0', '0', '0', '0', '0', '2986.18887644644', '0', '0', '0', '0', '0', '13923.3898492908', '2955.08274231678', '2788.35386338186', '18876.8306737589', '8053.04373522459', '0', '1427.85904255319', '4447.92833146697', '0', '517.139479905437', '5106.71145949981', '2932.62411347518', '2016.84397163121', '2918.14420803783', '1941.02276969018', '0', '10440.8540189125', '4875.8865248227', '4217.99178798059', '13693.789893617', '5456.26477541371', '0', '1241.87352245863', '7807.39081746921', '0', '1292.84869976359', '5106.71145949981', '5887.70685579196', '3523.93617021277', '3786.19976359338', '1941.02276969018', '0', '8454.66903073286', '3435.28368794326', '2276.96901829041', '15234.7842789598', '1998.37470449173', '0', '1484.92907801418', '2351.62374020157', '0', '1292.84869976359', '5106.71145949981', '5333.62884160757', '2268.02600472813', '2160.90425531915', '1164.61366181411', '0', '17774.1504137116', '5836.28841607565', '4964.5390070922', '18348.125', '2888.59338061466', '0', '856.973995271868', '2432.25083986562', '0', '1292.84869976359', '5106.71145949981', '5887.70685579196', '4026.30023640662', '4155.58510638298', '1164.61366181411', '0', '1529700', '1320000', '567500', '1824400', '415000', '87000', '536500', '765000', '478100', '280000', '350000', '0', '0', '0', '95000', '1725500', '1236400', '1155300', '533000', '2550900', '480000', '304500', '225500', '424000', '191500', '280000', '492450', '566296', '0', '0', '95000', '140000', '2784352.94', '1417500', '643000', '2667500', '517500', '323250', '390000', '1177500', '766000', '200000', '840000', '800000', '0', '0', '285000', '186000', '3002100', '1080000', '441000', '2461900', '550000', '348000', '573000', '942000', '598800', '200000', '1532000', '800000', '0', '0', '380000', '206000', '2125950', '378750', '544500', '2498000', '551250', '0', '485136', '1317000', '316000', '200000', '1532000', '720000', '0', '0', '300000', '131000', '1483010', '293750', '524500', '2393000', '710000', '0', '475500', '1040000', '316000', '120000', '1532000', '640000', '0', '0', '200000', '93500', '829430', '150000', '610500', '877758.8', '1008750', '0', '445000', '1295000', '116500', '120000', '1532000', '800000', '237500', '360000', '0', '112000', '1134500', '150000', '524500', '0', '467500', '0', '0', '0', '0', '0', '575000', '0', '0', '0', '0', '0', '2092468.4', '517500', '355500', '2765504.8', '1102276', '0', '269221.5', '675240', '0', '160000', '1084486.5', '635136', '402500', '620000', '500000', '0', '1983892', '915000', '560000', '2162424.5', '743882', '0', '228446', '1185240', '0', '400000', '1084486.5', '1275136', '687500', '797500', '500000', '0', '1898436', '665000', '316250', '2566044', '267500', '0', '280500', '357000', '0', '400000', '1084486.5', '1155136', '450000', '452500', '300000', '0', '3426544', '1130000', '680000', '3217185.6', '407500', '0', '161000', '369240', '0', '400000', '1084486.5', '1275136', '782500', '877500', '300000', '0', '919510', '844000', '321500', '916000', '233000', '37500', '320000', '382500', '278250', '115500', '142500', '0', '0', '0', '56500', '896000', '742900', '746400', '307750', '1286300', '266000', '131250', '134250', '214000', '111750', '115500', '200497.5', '290226.7', '0', '0', '56500', '67500', '1532446.2', '860000', '364500', '1350000', '296000', '141250', '232000', '592500', '447000', '82500', '342000', '410000', '0', '0', '169500', '97000', '1675140', '655000', '258000', '1235300', '312500', '150000', '341500', '474000', '352200', '82500', '739500', '410000', '0', '0', '226000', '107000', '1219150', '230000', '321500', '1229000', '317500', '0', '289176', '683500', '186000', '82500', '739500', '369000', '0', '0', '172500', '67000', '852250', '177500', '326500', '1194000', '412500', '0', '283500', '522500', '186000', '49500', '739500', '328000', '0', '0', '115000', '47000', '479190', '100000', '376500', '461293.2', '565500', '0', '265250', '650000', '68250', '49500', '739500', '410000', '125000', '180000', '0', '54000', '650600', '100000', '321500', '0', '248500', '0', '0', '0', '0', '0', '300000', '0', '0', '0', '0', '0', '1208946', '302500', '214500', '1449887.2', '626951.2', '0', '160856.5', '337620', '0', '66000', '527370', '325507.2', '210000', '312000', '287500', '0', '1189256', '550000', '320000', '1179257', '423798.4', '0', '134386', '592620', '0', '165000', '527370', '653507.2', '360000', '402250', '287500', '0', '1064080', '385000', '175500', '1315605.7', '153500', '0', '167500', '178500', '0', '165000', '527370', '592007.2', '235000', '228750', '172500', '0', '1996430', '660000', '379000', '1600435.4', '229000', '0', '95250', '184620', '0', '165000', '527370', '653507.2', '410000', '442250', '172500', '0', '431452.5', '71632', '114237.5', '672433.5', '105404.5', '43368', '102549.5', '92039.5', '72127', '5145', '0', '22999', '0', '0', '13774', '116309.5', '641947.25', '209766', '176376.25', '627374.75', '165402.25', '41284', '98804.75', '122544.75', '70583.5', '15435', '58971.5', '11499.5', '0', '0', '12767', '123144.75', '710425.962', '162726', '157821.25', '694210.75', '204602.25', '55984', '125264.75', '181494.75', '87473.5', '25970', '117771.5', '60554.891', '0', '0', '28447', '85754.75', '658643.068', '151900', '104740', '481278', '133280', '39200', '83300', '177600', '78914', '29890', '125145', '90323.739', '0', '0', '29400', '31500', '637742', '81830', '72150', '342902', '106820', '19600', '77733.6', '222200', '60516', '26460', '151995', '143550', '0', '0', '30380', '24600', '627058', '52920', '111220', '429240', '160720', '0', '148293.6', '291400', '55020', '23030', '244080', '137610', '0', '0', '38220', '21690', '322714', '8330', '79590', '52430', '82810', '0', '17640', '88900', '7860', '17885', '150555', '15840', '0', '0', '3920', '2960', '176248', '1960', '0', '196490', '0', '0', '0', '148200', '0', '10045', '100185', '0', '0', '0', '0', '0', '106705.855', '56840', '111720', '298575.522', '197483.328', '0', '49410.13', '37807.6', '4417.5', '7350', '99630', '29700', '7350', '13230', '0', '7920', '265395.74', '93100', '176395', '429698.836', '361306.4', '0', '90815.62', '205276', '10307.5', '11760', '152135.76', '96779.232', '21070', '69090', '24500', '11880', '415491.54', '88200', '118987.5', '362865.776', '195023.92', '0', '49545.37', '182457', '8.17401701880272e-13', '41160', '334206.5', '119308.464', '42630', '70070', '41160', '0', '728693.451', '104860', '103057.5', '612490.543', '108288.432', '0', '47339.88', '97317', '0', '76930', '344163.02', '192642.12', '80360', '138180', '67620', '0', '124121.528833333', '13575.3925', '82371.137', '0', '1458.12333333333', '0', '67993.558', '118361.331833333', '716.272166666667', '77896.9203333333', '17826.8613333333', '0', '0', '1885.42383333333', '7115.02416666667', '0', '0', '0', '0', '0', '0', '56458.5826666666', '17190.2', '63497.3988333333', '4806', '0', '0', '105594.866666667', '75604.3676666667', '14060.4843333333', '43584.4255', '4655.1555', '0', '0', '1703.638', '0', '1000', '5167', '0', '0', '0', '0', '112529.182666667', '18500', '52898.858', '0', '0', '0', '170000', '50548', '1907.90066666667', '87433.9898333333', '3538.86683333333', '0', '0', '3648.2045', '0', '5500', '38500', '0', '0', '3166', '20000', '164594.574166667', '23045.8333333333', '38649', '6039.16666666667', '3129.66666666667', '3825', '149700', '55000', '11500', '66800', '4000', '4350', '8433', '0', '7166.66666666667', '2400', '53333.3333333333', '4250', '0', '13500', '', '101040.293333333', '24995.8333333333', '37283.3333333333', '6039.16666666667', '2342.5', '6705', '158000', '55000', '11500', '78700', '16000', '3500', '0', '0', '7166.66666666667', '8000', '24833.3333333333', '4250', '0', '14833.3333333333', '', '87755.0016666667', '22829.1666666667', '37183.3333333333', '6039.16666666667', '2342.5', '9585', '183000', '40000', '11500', '98700', '9500', '7500', '6151', '3333.33333333333', '3333.33333333333', '2400', '0', '4250', '27083.3333333333', '14833.3333333333', '', '163239.426333333', '30700', '72475', '6039.16666666667', '4842.5', '14911', '123800', '20000', '4900', '50200', '11100', '7500', '9276', '0', '8750', '3500', '0', '5000', '23166.6666666667', '14833.3333333333', '', '149399.927666667', '31783.3333333333', '71975', '6039.16666666667', '4842.5', '8636', '150360', '20000', '4900', '55300', '8500', '7500', '0', '4600', '6583.33333333333', '7000', '5166.66666666667', '3333.33333333333', '13583.3333333333', '14833.3333333333', '', '118165.6015', '33158.3333333333', '54975', '6039.16666666667', '4842.5', '12850', '154564', '40000', '4900', '78700', '3500', '7500', '0', '0', '7166.66666666667', '3500', '40333.3333333333', '3333.33333333333', '0', '14833.3333333333', '', '121041.036833333', '33158.3333333333', '46975', '6039.16666666667', '4842.5', '14880', '124700', '80000', '18600', '55300', '11500', '7500', '9276', '0', '0', '5500', '15166.6666666667', '5916.66666666667', '12083.3333333333', '22500', '', '95941.4563333333', '21204.1666666667', '32278.75', '5556.03333333333', '4455.1', '18988.8', '84370', '18400', '15612', '58084', '14300', '7500', '0', '3333.33333333333', '14333.3333333333', '9000', '0', '9416.66666666667', '12083.3333333333', '22500', '', '129774.079', '45841.6666666667', '45570', '7247', '5811', '22464', '123720', '48000', '22320', '66360', '13800', '9000', '0', '0', '6666.66666666667', '7000', '7500', '12916.6666666667', '12083.3333333333', '22500', '', '2526655', '146761', '2008694', '0', '6118', '0', '822533', '961695', '18091', '1853278', '266751', '0', '0', '10392', '32278', '0', '0', '0', '0', '0', '0', '1271076', '185840', '1439963', '22680', '0', '0', '1326600', '859630', '178784', '1129698', '31617', '0', '0', '8844', '0', '3000', '30000', '0', '0', '0', '0', '2950220', '200000', '1262885', '0', '0', '0', '2661428.57142857', '602159', '50674', '2303977.57142857', '17671', '0', '0', '23049', '0', '25000', '150000', '0', '0', '27000', '120000', '3195014', '292000', '1038292.15567042', '70000', '51000', '15000', '1697864.48629904', '643086.784855957', '260000', '1603199.84668321', '72666.6666666667', '86989.3048128342', '49998.023715415', '0', '40000', '17000', '230000', '25000', '0', '90000', '', '2056370', '310000', '1015276.6798419', '70000', '38000', '62084.8708487085', '1841435.91487047', '643086.784855957', '260000', '1908871.94204431', '264891.774891775', '82352.9411764706', '0', '0', '40000', '60000', '90000', '25000', '0', '100000', '', '1789798', '290000', '1012667.98418972', '70000', '38000', '109169.741697417', '2186370.97980553', '467699.479895241', '260000', '2266411.98032353', '99367.9653679654', '109019.607843137', '36468.3794466403', '20000', '20000', '17000', '0', '25000', '175000', '100000', '', '3380621', '420000', '1503070.33188389', '70000', '48000', '226174.682408879', '1682900.11559122', '233849.739947621', '106000', '1203349.82064714', '129844.155844156', '109019.607843137', '54996.04743083', '0', '45000', '25000', '0', '30000', '150000', '100000', '', '2695182', '430000', '1495753.25871316', '70000', '48000', '136005.928853755', '2073590.31413613', '233849.739947621', '106000', '1339349.82064714', '215367.965367965', '109019.607843137', '0', '27000', '35000', '50000', '20000', '20000', '85000', '100000', '', '2415261', '450000', '1312569.69003537', '70000', '48000', '260000', '2543920.89481199', '467699.479895241', '106000', '1908871.94204431', '74891.7748917749', '109019.607843137', '0', '0', '40000', '25000', '190000', '20000', '0', '100000', '', '2736120', '450000', '1270464.42687747', '70000', '48000', '284169.741697417', '2032094.92078602', '935398.959790483', '399000', '1339349.82064714', '133939.393939394', '109019.607843137', '54996.04743083', '0', '0', '40000', '85000', '35000', '75000', '150000', '', '1847540', '275000', '880329.545454545', '64400', '44160', '336190.405904059', '1345045.9645067', '215141.760751811', '329580', '1422167.05785907', '235418.528138528', '109019.607843137', '0', '20000', '80000', '65000', '0', '55000', '75000', '150000', '', '2637290', '610000', '1242818.18181818', '84000', '57600', '421505.535055351', '1940124.29455361', '561239.37587429', '478800', '1607219.78477657', '160727.272727273', '130823.529411765', '0', '0', '40000', '50000', '50000', '75000', '75000', '150000', '', '738475.068221499', '65268.015762', '444356.76916671', '0', '8311.303', '0', '319706.349176095', '620173.168847333', '5803.50754666667', '495453.7405607', '126393.644605', '0', '0', '34298.389908', '97383.532765', '0', '0', '0', '0', '0', '0', '332550.7379114', '83620.55868', '341768.415930929', '30699.54', '0', '0', '466890.74', '398158.276574333', '78798.0631926667', '262483.3884466', '31808.1719195', '0', '0', '32849.180079', '0', '8760', '21701.4', '0', '0', '0', '0', '639853.7129454', '88800', '293142.888747714', '0', '0', '0', '789000', '268672.8', '11968.9991666667', '584798.5261586', '33400.041228', '0', '0', '46588.298925', '0', '48000', '164400', '0', '0', '17096.4', '93600', '1012256.631125', '145188.75', '255083.4', '41324.5', '20655.8', '45900', '776943', '316800', '82800', '480960', '30900', '22410', '40478.4', '0', '66318.9', '21000', '272000', '27750', '0', '85050', '0', '621397.804', '157473.75', '246070', '41324.5', '15460.5', '66636', '820020', '316800', '82800', '566640', '113700', '16800', '0', '0', '67510', '69600', '126650', '27750', '0', '93450', '0', '539693.26025', '143823.75', '245410', '41324.5', '15460.5', '87372', '954831.78', '230400', '82800', '710640', '66600', '36000', '29524.8', '41000', '31400', '21000', '0', '27750', '178750', '93450', '0', '1028408.3859', '194839.0236', '496816.125', '41324.5', '31960.5', '113908.8', '649950', '117600', '35280', '384030', '79080', '36000', '44524.8', '0', '82425', '30600', '0', '33375', '155005.85', '93717', '0', '941219.5443', '209770', '496627.5', '41324.5', '31960.5', '58846.8', '789390', '117852', '35280', '423045', '62400', '36000', '0', '56580', '62015', '61200', '26350', '22250', '93725', '95675', '0', '744443.28945', '218845', '379327.5', '41324.5', '31960.5', '94050', '811461', '237600', '35280', '602055', '26700', '36000', '0', '0', '67510', '30600', '209959.2', '22250', '0', '95675', '0', '762558.53205', '228792.5', '324127.5', '41324.5', '31960.5', '108635.904', '658416', '480000', '133920', '424929.624', '81900', '36000', '46528.416', '0', '0', '48000', '81900', '38875', '83375', '145125', '0', '604431.1749', '146308.75', '222723.375', '38018.54', '29403.66', '136719.36', '445473.6', '110400', '112949.6976', '447827.64', '101304', '36000', '0', '41460', '135020', '78600', '0', '61000', '83375', '145125', '0', '818962.68486372', '316307.5', '314433', '49589.4', '38352.6', '161740.8', '653241.6', '288000', '164052', '511635.6', '98280', '46283.4', '0', '0', '62800', '61200', '40500', '83125', '83375', '145125', '0', '2256841.18455', '220040.0374', '1445342.76697185', '0', '24933.909', '0', '939365.9043', '1783800.08668333', '15236.276', '1338415.99455333', '411694.86075', '0', '0', '68186.29', '187274.23', '0', '0', '0', '0', '0', '0', '1037743.73755', '285806', '1097635.85245714', '82233.9', '0', '0', '1665672.22', '1302934.60346667', '204899.8846', '731671.9897', '89822.61945', '0', '0', '65388.75', '0', '13950', '135000', '0', '0', '0', '0', '2263232.59925', '300000', '935001.585878572', '0', '0', '0', '2827714.28571429', '873314.376666667', '34391.9802', '1659814.85932857', '98010.97', '0', '0', '118469.5', '0', '109500', '621000', '0', '0', '58500', '300000', '3061389.72', '445500', '724682.547582852', '137250', '89170', '142500', '2068149.44244237', '773608.125748597', '219000', '1252961.40945299', '115000', '132834.22459893', '162993.557312253', '0', '200000', '75000', '820000', '116750', '0', '189000', '', '1969707.2', '517500', '714063.833992095', '137250', '66100', '208691.881918819', '2186756.58529952', '773608.125748597', '219000', '1475542.13122305', '421928.571428571', '86470.5882352941', '0', '0', '200000', '252000', '363000', '116750', '0', '209000', '', '1729840.24', '437500', '712733.399209486', '137250', '66100', '274883.763837638', '2491847.49439043', '562624.091453525', '219000', '1855225.73696058', '227642.857142857', '150470.588235294', '118886.916996047', '96400', '92000', '75000', '0', '116750', '617500', '209000', '', '3215285.76', '610000', '1335727.9068381', '137250', '108100', '362403.526683488', '1737377.1605358', '281312.045726762', '91400', '941791.302553479', '273357.142857143', '150470.588235294', '179287.114624506', '0', '247000', '109500', '0', '135750', '528500', '209000', '', '2757672.72', '650000', '1327313.27269176', '137250', '108100', '202023.71541502', '2082881.03964099', '281312.045726762', '91400', '1036991.30255348', '252142.857142857', '150470.588235294', '0', '132900', '185000', '219000', '77000', '90500', '307000', '209000', '', '2301128.52', '605000', '1017178.48450177', '137250', '108100', '327500', '2281898.06962671', '562624.091453525', '91400', '1475542.13122305', '101428.571428571', '150470.588235294', '0', '0', '200000', '109500', '638000', '90500', '0', '209000', '', '2258894.36', '605000', '855073.221343873', '137250', '108100', '350883.763837638', '1849333.00469164', '1125248.18290705', '345600', '1036991.30255348', '285500', '150470.588235294', '179287.114624506', '0', '0', '172500', '255000', '162000', '272500', '315000', '', '1719822.48', '377500', '625033.977272727', '126270', '99452', '442022.656826568', '1212262.91221867', '258807.082068621', '287952', '1089540.00921907', '376231.428571429', '150470.588235294', '0', '96400', '400000', '282000', '0', '259750', '272500', '315000', '', '2365762.64', '827500', '882400.909090909', '164700', '129720', '528090.774907749', '1782687.91731828', '675148.90974423', '414720', '1244389.56306417', '342600', '180564.705882353', '0', '0', '184000', '219000', '135000', '357500', '272500', '315000', '', '100538.438355', '10996.067925', '66720.62097', '0', '1181.0799', '0', '55074.78198', '95872.678785', '580.180455', '63096.50547', '14439.75768', '0', '0', '1527.193305', '5763.169575', '0', '0', '0', '0', '0', '0', '69314.5424383333', '16503.386575', '67083.409085', '3892.86', '277.043433333333', '0', '98450.61802', '83728.1908583334', '11525.0840216667', '50103.7995183334', '7157.77960833333', '0', '0', '1738.17730833333', '1351.85459166667', '810', '4185.27', '0', '0', '0', '0', '101875.768666667', '18251.138', '54912.5807583333', '913.14', '0', '0', '157763.024666667', '55308.7098566667', '4216.89156333333', '79102.57261', '3750.96168', '0', '0', '3278.736865', '0', '4645', '32166.73', '0', '0', '2564.46', '16200', '154702.149781667', '22182.125', '41356.47302', '4891.725', '2535.03', '3098.25', '153557', '54154.12', '9677.50112666667', '70720.4580683333', '3912.38469833333', '3523.5', '6830.73', '693.158855', '5805', '2989', '50515', '3442.5', '0', '11536.54', '3800', '113115.606691667', '24625.3333333333', '37542.81', '6039.16666666667', '2492.06166666667', '6157.8', '156423', '55000', '11500', '76439', '13720', '3661.5', '1602.27', '0', '7166.66666666667', '6936', '30248.3333333333', '4250', '0', '14580', '0', '90279.2070833334', '23240.8333333333', '37202.3333333333', '6039.16666666667', '2342.5', '9037.8', '178250', '42850', '11500', '94900', '10735', '6740', '4982.31', '2700', '4061.66666666667', '3464', '4718.33333333333', '4250', '21937.5', '14833.3333333333', '0', '148897.385646667', '29204.5416666667', '65769.5833333333', '6039.16666666667', '4367.5', '13899.06', '135048', '23800', '6154', '59415', '10796', '7500', '8682.25', '633.333333333333', '7720.83333333333', '3291', '0', '4857.5', '23910.8333333333', '14833.3333333333', '0', '152029.432413333', '31577.5', '72070', '6039.16666666667', '4842.5', '9828.25', '145313.6', '20000', '4900', '54331', '8994', '7500', '1762.44', '3726', '6995', '6335', '4185', '3650', '15404.1666666667', '14833.3333333333', '0', '124100.123471667', '32897.0833333333', '58205', '6039.16666666667', '4842.5', '12049.34', '153765.24', '36200', '4900', '74254', '4450', '7500', '0', '874', '7055.83333333333', '4165', '33651.6666666667', '3333.33333333333', '2580.83333333333', '14833.3333333333', '0', '120494.70412', '33158.3333333333', '48495', '6039.16666666667', '4842.5', '14494.3', '130374.16', '72400', '15997', '59746', '9980', '7500', '7513.56', '0', '1361.66666666667', '5120', '19948.3333333333', '5425.83333333333', '9787.5', '21043.3333333333', '0', '100710.376628333', '23475.4583333333', '35071.0375', '5647.82866666667', '4528.706', '18208.128', '92032.7', '30104', '16179.72', '57555.04', '13768', '7500', '1762.44', '2700', '11610', '8335', '2881.66666666667', '8751.66666666667', '12083.3333333333', '22500', '0', '123345.880693333', '41160.5416666667', '43044.6625', '6925.71633333333', '5553.379', '21803.712', '116243.5', '42376', '21045.48', '64787.56', '13895', '8715', '0', '633.333333333333', '8123.33333333333', '7380', '6075', '12251.6666666667', '12083.3333333333', '22500', '0', '2046590.55', '118876.41', '1627042.14', '0', '4955.58', '0', '666251.73', '778972.95', '14653.71', '1501155.18', '216068.31', '0', '0', '8417.52', '26145.18', '0', '0', '0', '0', '0', '0', '1509636.01', '178414.99', '1548021.89', '18370.8', '1162.42', '0', '1230827.27', '879022.35', '148252.33', '1267178.2', '76292.46', '0', '0', '9138.12', '6132.82', '2430', '24300', '0', '0', '0', '0', '2631182.64', '197309.6', '1296529.82', '4309.2', '0', '0', '2407811.14285714', '651078.49', '75014.9', '2080864.45285714', '20320.74', '0', '0', '20350.05', '0', '20820', '127200', '0', '0', '21870', '97200', '3148503.14', '274520', '1080964.79609304', '56700', '41310', '12150', '1880941.66247365', '635310.505733325', '220228.06', '1736347.61438482', '62217.49', '70461.3368983957', '40498.3992094862', '4379.31', '32400', '18520', '214800', '20250', '0', '78030', '22800', '2272712.36', '306580', '1019649.62024932', '70000', '40470', '53138.7453874539', '1814157.3434419', '643086.784855957', '260000', '1850794.2439257', '228369.004329004', '83233.8502673797', '9499.62450592885', '0', '40000', '51830', '116600', '25000', '0', '98100', '0', '1840446.68', '293800', '1013163.63636364', '70000', '38000', '100223.616236162', '2120833.31746787', '501023.067837777', '260000', '2198479.37305047', '130817.489177489', '103952.941176471', '29539.3873517787', '16200', '23800', '25170', '17100', '25000', '141750', '100000', '0', '3078364.63', '395300', '1409893.885822', '70000', '46100', '203943.743673702', '1778559.57979194', '278281.190537669', '135260', '1405331.63098566', '124053.67965368', '109019.607843137', '51475.790513834', '3800', '40250', '23480', '0', '29050', '154750', '100000', '0', '2825415.41', '428100', '1497143.5026156', '70000', '48000', '153137.992029229', '1999359.17641259', '233849.739947621', '106000', '1313509.82064714', '199118.441558442', '109019.607843137', '10449.2490118577', '21870', '36900', '45250', '16200', '21900', '97350', '100000', '0', '2468445.99', '446200', '1347374.56808415', '70000', '48000', '236441.126482213', '2454558.08448358', '423268.029305193', '106000', '1800662.73897885', '101582.251082251', '109019.607843137', '0', '5130', '39050', '29750', '157700', '20000', '16150', '100000', '0', '2675156.79', '450000', '1278464.42687747', '70000', '48000', '279577.490774908', '2129341.85585096', '846536.058610387', '343330', '1447559.0237126', '122720.346320346', '109019.607843137', '44546.7984189723', '0', '7600', '37150', '104950', '32150', '60750', '140500', '0', '2016370.2', '308250', '954455.172924901', '65464', '44889.6', '326306.479704797', '1475585.26619977', '351990.628569159', '342769.8', '1406431.78278881', '216137.492640693', '109019.607843137', '10449.2490118577', '16200', '64800', '60250', '16150', '51200', '75000', '150000', '0', '2487237.5', '546350', '1173945.34090909', '80276', '55046.4', '405295.660516605', '1827059.4118447', '495480.829001019', '450448.2', '1572059.76666225', '174918.611255411', '126680.784313726', '0', '3800', '47600', '52850', '40500', '71200', '75000', '150000', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#EF553B'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=KPI', \n  offsetgroup: 'Review type=KPI', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:8e230c', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=KPI<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace3 = {\n  name: 'Review type=Sales', \n  type: 'bar', \n  xsrc: 'sumon23:207:53ef7f', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:7ad482', \n  y: ['1762496.58511521', '640148.95', '541234.446860465', '3734802.115', '418735.25675', '426328.3', '493989.125', '442179.835', '520268.525', '41160', '0', '180653.225', '0', '0', '139504.37', '743170.62', '2334572.44255761', '1694573.475', '845656.473430233', '3545533.4575', '647917.628375', '383684.15', '513407.5625', '619207.4175', '522816.6625', '123480', '412800.5', '90326.6125', '0', '0', '125612.185', '766399.31', '2754906.50679761', '1394154.475', '767512.473430233', '3897706.2575', '840242.628375', '499446.65', '629194.5625', '937492.4175', '654850.0625', '207760', '824400.5', '482769.7405', '0', '0', '274572.185', '536729.31', '2478685.76248', '1259055', '506610', '2730407.4', '583345', '328912.5', '421694', '929280', '611082.2', '239120', '830439', '722589.912', '0', '0', '279300', '209916', '2352028', '688327.5', '345843', '1939126', '485957.5', '170520', '406178.64', '1115180', '477194.8', '211680', '960753', '1148400', '0', '0', '303800', '165690', '2091925.72', '445777.5', '508626', '2390612', '718707.5', '0', '778970.64', '1385395', '434714', '184240', '1528992', '1100880', '0', '0', '382200', '138222', '1084900.18', '66762.5', '362817', '284935', '390897.5', '0', '93198', '461230', '62102', '143080', '879411', '126720', '0', '0', '39200', '18928', '561880.32', '14700', '0', '1028804', '0', '0', '0', '767580', '0', '80360', '587985', '0', '0', '0', '0', '0', '403199.5174', '433650', '514647', '1479925.7144', '856944.144', '0', '266782.9745', '194778.76', '34313.25', '58800', '593118', '237600', '69825', '105840', '0', '44352', '1034463.7772', '798700', '835722', '2200346.6856', '1564643.5', '0', '471935.513', '1048867.6', '80064.25', '94080', '923656.656', '774233.856', '195265', '524790', '245000', '66528', '1665774.7596', '738675', '591193.5', '1839785.213', '813901.76', '0', '247725.6005', '930530.7', '6.34922669995319e-12', '329280', '2042297.15', '954467.712', '387835', '505435', '411600', '0', '3039111.12321', '996170', '535825.5', '3405456.488', '522230.436', '0', '243448.562', '496316.7', '0', '615440', '2103207.962', '1541136.96', '729120', '999600', '676200', '0', '1828041.3594855', '178232.430294', '1170727.6412472', '0', '20196.46629', '0', '760886.382483', '1444878.0702135', '12341.38356', '1084116.9555882', '333472.8372075', '0', '0', '55230.8949', '151692.1263', '0', '0', '0', '0', '0', '0', '1269372.25248', '273310.467106', '1163700.16621494', '66609.459', '4737.44271', '0', '1527674.020017', '1394299.04527783', '168863.798966', '846953.350622134', '150978.345297', '0', '0', '65920.2826', '35582.1037', '11299.5', '109350', '0', '0', '0', '0', '2030389.715527', '297303.14', '965902.0965285', '15624.441', '0', '0', '2606926.29322857', '954942.219758667', '66788.482036', '1483467.71409914', '96455.1833955', '0', '0', '108384.1575', '0', '91345.5', '528660', '0', '0', '47385', '243000', '2909739.8670575', '417855', '764643.164859039', '111172.5', '72227.7', '115425', '2212466.76266404', '792552.31342303', '183924.476238', '1330263.56492935', '111772.0843', '107595.721925134', '132024.781422925', '22509.205', '162000', '81555', '782190', '94567.5', '0', '164205', '57000', '2177126.8788', '503820', '716081.389574339', '137250', '70483.3', '196115.424354244', '2164221.22815666', '773608.125748597', '219000', '1433251.79408674', '363612.142857143', '95279.679144385', '30968.7758893281', '0', '200000', '218370', '449830', '116750', '0', '205200', '0', '1775414.9624', '452700', '712986.181818182', '137250', '66100', '262307.306273063', '2433880.22166315', '602711.057969588', '219000', '1783085.85187045', '264557.142857143', '138310.588235294', '96298.4027667984', '78084', '112520', '108630', '68970', '116750', '500175', '209000', '0', '2933051.1112', '577225', '1217358.95038866', '137250', '100120', '345774.771742777', '1880726.52396818', '334761.334414847', '115644', '1115343.84509083', '264671.428571429', '150470.588235294', '167811.077075099', '18316', '217550', '102945', '0', '132140', '545410', '209000', '0', '2844619.1976', '642400', '1328912.05317956', '137250', '108100', '232495.879556029', '2017235.302611', '281312.045726762', '91400', '1018903.30255348', '256173.571428571', '150470.588235294', '34064.5517786561', '107649', '196780', '198195', '62370', '99097.5', '349085', '209000', '0', '2387871.918', '613550', '1076104.09425787', '137250', '108100', '303659.505928854', '2244084.83392942', '509174.80276544', '91400', '1392217.47377584', '130064.285714286', '150470.588235294', '0', '25251', '197150', '130305', '531410', '90500', '58330', '209000', '0', '2266918.8504', '605000', '885873.221343874', '137250', '108100', '346440.848708487', '1931520.36702931', '1018349.60553088', '297302', '1120315.9600007', '250526.428571429', '150470.588235294', '145222.56284585', '0', '38000', '160530', '327770', '148415', '220725', '294860', '0', '1822246.1372', '420725', '668741.433646245', '128356.2', '101095.12', '424706.267158672', '1333306.22978854', '423430.891227923', '298905.12', '1079555.7549526', '358992.457142857', '150470.588235294', '34064.5517786561', '78084', '324000', '261195', '48450', '241177.5', '272500', '315000', '0', '2243034.0096', '742000', '833501.192045454', '157398.3', '123969.08', '511737.832472325', '1674307.16634936', '596043.962485864', '390634.08', '1214968.1478336', '348989.971428571', '174846.823529412', '0', '18316', '225040', '230970', '109350', '338927.5', '272500', '315000', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#00cc96'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Sales', \n  offsetgroup: 'Review type=Sales', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:ae4872', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Sales<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace4 = {\n  name: 'Review type=VA', \n  type: 'bar', \n  xsrc: 'sumon23:207:a329d7', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:82a69d', \n  y: ['997203.172510155', '362788.03525', '297317.549512791', '1805415.67505', '242370.2796', '147372.09735', '290346.76275', '214948.63315', '288323.9015', '16978.5', '0', '92428.3939', '0', '0', '84617.90225', '385215.1549', '1374610.38625508', '1086669.017625', '482147.774756395', '1748820.237525', '365695.1398', '147186.048675', '303884.381375', '307513.066575', '297160.75075', '50935.5', '168068.775', '46214.19695', '0', '0', '75530.951125', '395520.57745', '1520670.64145508', '829517.017625', '430864.274756395', '1936137.437525', '477415.1398', '198023.548675', '372533.381375', '468860.566575', '374651.05075', '85701', '335648.775', '247341.30005', '0', '0', '164122.951125', '276535.57745', '1376988.2028', '763420', '299152', '1374205', '332024', '142712.5', '251125', '467580', '357696.3', '98637', '373875.75', '370327.3299', '0', '0', '166110', '107982', '1350008.8', '417970', '202528.5', '955980.2', '279055', '68600', '242097.24', '571422.5', '280738.2', '87318', '451307.25', '588555', '0', '0', '174685', '85530', '1207720.36', '270725', '315973', '1193444', '416745', '0', '464361.24', '695882.5', '255885', '75999', '723924', '564201', '0', '0', '219765', '70029', '617023.68', '42875', '222474', '144207', '224910', '0', '55566', '231595', '36555', '59020.5', '442829.25', '64944', '0', '0', '22540', '9266', '330438.64', '9800', '0', '551691', '0', '0', '0', '385260', '0', '33148.5', '294837.75', '0', '0', '0', '0', '0', '229500.081', '286650', '317226', '732719.4616', '479058.6528', '0', '159151.7795', '97634.38', '20102.625', '24255', '293692.5', '121770', '36750', '52920', '0', '21384', '623026.6046', '467950', '503314', '1137714.6536', '873346.6', '0', '280366.583', '524678.8', '46906.125', '38808', '451729.53', '396794.8512', '102410', '263473', '140875', '32076', '970311.468', '441000', '342205.5', '969876.306', '463603.112', '0', '146947.5455', '465265.35', '3.71973285506755e-12', '135828', '990665.25', '489164.7024', '202860', '254824.5', '236670', '0', '1794862.1322', '576730', '300247.5', '1717317.32515', '296528.2432', '0', '144778.242', '248158.35', '0', '253869', '1021054.56', '789832.692', '381220', '503916', '388815', '0', '598164.805259415', '52867.09276722', '359928.983025035', '0', '6732.15543', '0', '258962.142832637', '502340.26676634', '4700.8411128', '401317.529854167', '102378.85213005', '0', '0', '27781.69582548', '78880.66153965', '0', '0', '0', '0', '0', '0', '409676.360670319', '80133.57552558', '361260.203045727', '24866.6274', '1579.14757', '0', '438925.705743458', '440341.106106203', '64929.0976199267', '306747.755348279', '49779.411729745', '0', '0', '33124.52994651', '18502.87122535', '7095.6', '17578.134', '0', '0', '0', '0', '581466.14768894', '87815.9061492', '302381.738912525', '5832.9126', '0', '0', '727799.2406', '293275.040549123', '24666.5213316067', '523558.64999332', '33097.586059385', '0', '0', '43977.86634426', '0', '40544.4', '137287.266', '0', '0', '13848.084', '75816', '941500.076670876', '134474.8875', '262314.702862066', '33472.845', '16731.198', '37179', '779233.83', '307655.832', '69342.1098416667', '500689.319970134', '31375.00783332', '18152.1', '32787.504', '8851.77679575', '53718.309', '26130', '251556', '22477.5', '0', '72138.816', '17784', '695660.98115375', '155139.6', '247782.546', '41324.5', '16447.607', '62696.16', '811835.37', '316800', '82800', '550360.8', '97968', '17865.9', '7690.896', '0', '67283.691', '60366', '154266.5', '27750', '0', '91854', '0', '555217.1235625', '146417.25', '245535.4', '41324.5', '15460.5', '83432.16', '929217.5418', '246816', '82800', '683280', '75549', '32352', '23915.088', '33210', '38260.9', '30234', '24063.5', '27750', '144787.5', '93450', '0', '935552.5120265', '185146.121616', '449048.96125', '41324.5', '28825.5', '108866.808', '707877.5382', '139032', '44308.8', '446085.9', '76708.8', '36000', '41674.8', '7790', '72730.25', '28776', '0', '32306.25', '159517.2385', '93666.27', '0', '957785.424204', '206933.114484', '496663.33875', '41324.5', '31960.5', '69308.58', '762896.4', '117804.12', '35280', '415632.15', '65569.2', '36000', '8459.712', '45829.8', '65892.9', '55386', '21343.5', '24363.75', '105368.3615', '95302.98', '0', '781830.7778715', '217120.75', '401614.5', '41324.5', '31960.5', '87361.392', '807267.51', '214847.88', '35280', '568043.1', '33483', '36000', '0', '10750.2', '66465.95', '36414', '175073.452', '22250', '17807.75', '95675', '0', '759116.635956', '226902.475', '334615.5', '41324.5', '31960.5', '105864.58224', '687494.55', '433944', '115178.4', '458583.44544', '71412', '36000', '37688.01696', '0', '12826.9', '44694', '106231.248', '35716.25', '67533.75', '135729.5', '0', '634475.3727585', '161980.6625', '241990.15875', '38646.6724', '29889.4596', '131383.50336', '485932.656', '180624', '116934.055056', '443477.01696', '97617.24', '36000', '8840.39904', '33582.6', '109366.2', '72786', '15561', '56796.25', '83375', '145125', '0', '778201.697970613', '284007.7375', '297008.17125', '47390.9366', '36652.3014', '156986.7264', '613765.68', '254256', '154342.562544', '499512.0876', '98854.56', '44329.554', '0', '7877.4', '76521.8', '64506', '32805', '78921.25', '83375', '145125', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#ab63fa'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=VA', \n  offsetgroup: 'Review type=VA', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:34f477', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=VA<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace5 = {\n  name: 'Review type=Net Profit/(Loss) after Tax', \n  type: 'bar', \n  xsrc: 'sumon23:207:b03dca', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:4669ce', \n  y: ['656506.447985846', '2324430.21040714', '2789125.25716008', '1648719.41000399', '1132768.21335753', '1779562.33253512', '-2227591.46823751', '-1779151.37668471', '-1678009.73429829', '932634.351742139', '1320190.66795535', '3111042.73470144', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-682886.242997647', '-710626.929479647', '-189637.192875224', '508638.027690582', '454496.682794292', '465269.986729009', '586591.723070918', '546497.899589698', '504116.561150697', '543943.644278494', '-22735.3433983356', '539986.061236932', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#FFA15A'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Net Profit/(Loss) after Tax', \n  offsetgroup: 'Review type=Net Profit/(Loss) after Tax', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:e02475', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Net Profit/(Loss) after Tax<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace6 = {\n  name: 'Review type=EBITDA', \n  type: 'bar', \n  xsrc: 'sumon23:207:a37a77', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:9d702b', \n  y: ['1734598.74357878', '3580511.78157838', '4104380.17866117', '2847975.23718251', '2290669.58480627', '3014360.25782268', '-1162830.80440727', '-737294.236065078', '-620177.270478738', '2184906.54112075', '2591787.97715963', '4587473.74070199', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-34301.4242246228', '-58834.540073767', '467004.711364368', '1197498.27023728', '1131972.24651649', '1147367.52184411', '1289459.99982777', '1233897.22494098', '1198475.56286767', '1242344.60229636', '633221.02562791', '1241999.28252684', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#19d3f3'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=EBITDA', \n  offsetgroup: 'Review type=EBITDA', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:0c95dd', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=EBITDA<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\ntrace7 = {\n  name: 'Review type=Cash Profit/(Loss) after Tax', \n  type: 'bar', \n  xsrc: 'sumon23:207:c4e481', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:207:9af1e0', \n  y: ['1106704.27437474', '2774628.03679603', '3239323.08354897', '2098917.23639288', '1582966.03974642', '2229760.15892401', '-1777393.64184862', '-1328953.55029582', '-1227811.9079094', '1382832.17813103', '1770388.49434424', '3561240.56109033', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-502025.242997647', '-529765.929479647', '-8776.19287522364', '689499.027690582', '635357.682794292', '646130.986729009', '767452.723070918', '727358.899589698', '684977.561150697', '724804.644278494', '158125.656601664', '720847.061236932', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {color: '#FF6692'}, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Cash Profit/(Loss) after Tax', \n  offsetgroup: 'Review type=Cash Profit/(Loss) after Tax', \n  orientation: 'v', \n  hovertextsrc: 'sumon23:207:c60d28', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  textposition: 'auto', \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Cash Profit/(Loss) after Tax<br>Month=%{x}<br>Amount USD =%{y}', \n  alignmentgroup: 'True'\n};\nexport const BusinessData = [trace1, trace2, trace3, trace4, trace5, trace6, trace7];\nexport const BusinessLayout = {\n  xaxis: {\n    title: {text: 'Month'}, \n    anchor: 'y', \n    domain: [0.0, 0.98]\n  }, \n  yaxis: {\n    title: {text: 'Amount USD '}, \n    anchor: 'x', \n    domain: [0.0, 1.0]\n  }, \n  height: 600, \n  legend: {tracegroupgap: 0}, \n  margin: {t: 60}, \n  barmode: 'relative', \n  template: {\n    data: {\n      bar: [\n        {\n          type: 'bar', \n          marker: {line: {\n              color: '#E5ECF6', \n              width: 0.5\n            }}, \n          error_x: {color: '#2a3f5f'}, \n          error_y: {color: '#2a3f5f'}\n        }\n      ], \n      table: [\n        {\n          type: 'table', \n          cells: {\n            fill: {color: '#EBF0F8'}, \n            line: {color: 'white'}\n          }, \n          header: {\n            fill: {color: '#C8D4E3'}, \n            line: {color: 'white'}\n          }\n        }\n      ], \n      carpet: [\n        {\n          type: 'carpet', \n          aaxis: {\n            gridcolor: 'white', \n            linecolor: 'white', \n            endlinecolor: '#2a3f5f', \n            minorgridcolor: 'white', \n            startlinecolor: '#2a3f5f'\n          }, \n          baxis: {\n            gridcolor: 'white', \n            linecolor: 'white', \n            endlinecolor: '#2a3f5f', \n            minorgridcolor: 'white', \n            startlinecolor: '#2a3f5f'\n          }\n        }\n      ], \n      mesh3d: [\n        {\n          type: 'mesh3d', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      contour: [\n        {\n          type: 'contour', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      heatmap: [\n        {\n          type: 'heatmap', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      scatter: [\n        {\n          type: 'scatter', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      surface: [\n        {\n          type: 'surface', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      barpolar: [\n        {\n          type: 'barpolar', \n          marker: {line: {\n              color: '#E5ECF6', \n              width: 0.5\n            }}\n        }\n      ], \n      heatmapgl: [\n        {\n          type: 'heatmapgl', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      histogram: [\n        {\n          type: 'histogram', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      parcoords: [\n        {\n          line: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}, \n          type: 'parcoords'\n        }\n      ], \n      scatter3d: [\n        {\n          line: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}, \n          type: 'scatter3d', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scattergl: [\n        {\n          type: 'scattergl', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      choropleth: [\n        {\n          type: 'choropleth', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      scattergeo: [\n        {\n          type: 'scattergeo', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      histogram2d: [\n        {\n          type: 'histogram2d', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      scatterpolar: [\n        {\n          type: 'scatterpolar', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      contourcarpet: [\n        {\n          type: 'contourcarpet', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      scattercarpet: [\n        {\n          type: 'scattercarpet', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scattermapbox: [\n        {\n          type: 'scattermapbox', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scatterpolargl: [\n        {\n          type: 'scatterpolargl', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scatterternary: [\n        {\n          type: 'scatterternary', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      histogram2dcontour: [\n        {\n          type: 'histogram2dcontour', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ]\n    }, \n    layout: {\n      geo: {\n        bgcolor: 'white', \n        showland: true, \n        lakecolor: 'white', \n        landcolor: '#E5ECF6', \n        showlakes: true, \n        subunitcolor: 'white'\n      }, \n      font: {color: '#2a3f5f'}, \n      polar: {\n        bgcolor: '#E5ECF6', \n        radialaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        angularaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }\n      }, \n      scene: {\n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }, \n        zaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }\n      }, \n      title: {x: 0.05}, \n      xaxis: {\n        ticks: '', \n        gridcolor: 'white', \n        linecolor: 'white', \n        automargin: true, \n        zerolinecolor: 'white', \n        zerolinewidth: 2\n      }, \n      yaxis: {\n        ticks: '', \n        gridcolor: 'white', \n        linecolor: 'white', \n        automargin: true, \n        zerolinecolor: 'white', \n        zerolinewidth: 2\n      }, \n      mapbox: {style: 'light'}, \n      ternary: {\n        aaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        baxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        caxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        bgcolor: '#E5ECF6'\n      }, \n      colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n      hovermode: 'closest', \n      colorscale: {\n        diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n        sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n        sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n      }, \n      hoverlabel: {align: 'left'}, \n      plot_bgcolor: '#E5ECF6', \n      paper_bgcolor: 'white', \n      shapedefaults: {line: {color: '#2a3f5f'}}, \n      annotationdefaults: {\n        arrowhead: 0, \n        arrowcolor: '#2a3f5f', \n        arrowwidth: 1\n      }\n    }\n  }\n};\n","\nvar trace1, trace2, trace3, trace4, trace5, trace6, trace7;\ntrace1 = {\n  mode: 'markers', \n  name: 'Review type=Cost', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:9c66bb', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:793c5e', \n  y: ['273.006547355084', '182.004364903389', '262.89519374934', '273.006547355084', '252.783840143596', '262.89519374934', '252.783840143596', '252.783840143596', '252.783840143596', '242.672486537852', '171.893011297645', '262.89519374934', '468265.963300134', '127695.297161146', '19154.2945741719', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19669.5902946633', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '52492.5506385874', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4559.3125', '0', '1515.25', '0', '0', '1145.83333333333', '556.051587301587', '5696.66666666667', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4401.48214285714', '6508.92857142857', '5013.76984126984', '773.809523809524', '642.857142857143', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3294.64285714286', '0', '102476.031009122', '89793.312162111', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '19973.0930774324', '12050', '12969.0857873935', '14992.9748594388', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327680.501953769', '122443.775450333', '68769.1870400573', '0', '164287', '468265.963300134', '85130.1981074307', '12769.5297161146', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19541.7440405966', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '2730.06547355084', '1820.04364903389', '2628.9519374934', '0', '0', '0', '0', '0', '0', '0', '0', '0', '2730.06547355084', '2527.83840143596', '33213.2080925691', '0', '0', '17738.0952380952', '8489.62001916743', '8879.72615125127', '833.333333333333', '7500', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '1801.25', '3140.5', '0', '987', '0', '0', '1145.83333333333', '556.051587301587', '5197.77777777778', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '928.571428571429', '642.857142857143', '5658.67063492064', '0', '5422.09115216652', '3823.60714285714', '4339.28571428571', '5013.76984126984', '773.809523809524', '428.571428571429', '952.380952380952', '0', '519.642857142857', '2500', '1500', '0', '0', '0', '200', '2196.42857142857', '0', '102476.031009122', '95150.068300201', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '18901.4598591543', '12050', '12335.2912515929', '14217.4325666907', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327228.185405629', '125981.578415274', '66349.6830596154', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '268545.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '17455.4672523114', '8727.7336261557', '0', '2628.9519374934', '2527.83840143596', '2527.83840143596', '0', '0', '0', '0', '0', '0', '0', '0', '0', '2527.83840143596', '2426.72486537852', '51446.3347194516', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '0', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4337.27380952381', '6267.85714285714', '5013.76984126984', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '102476.031009122', '98323.0104596685', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '15472.0040166148', '12050', '12115.07471087', '12221.0605532233', '0', '5146.94322898438', '0', '0', '0', '0', '0', '328402.29807296', '123537.171308948', '77098.7834816141', '0', '164287', '468265.963300134', '127695.297161146', '19154.2945741719', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '1718.93011297645', '2628.9519374934', '0', '0', '0', '0', '0', '0', '0', '0', '0', '53443.3439028586', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4559.3125', '0', '1515.25', '0', '0', '1145.83333333333', '556.051587301587', '5696.66666666667', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4401.48214285714', '6508.92857142857', '5013.76984126984', '773.809523809524', '642.857142857143', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3294.64285714286', '0', '102476.031009122', '99976.4455414178', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '24715.8151329957', '12050', '15795.1854478392', '18726.2390275', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327940.889962202', '123543.016174434', '107190.971259504', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '19885.1859588417', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '47807.3186460799', '0', '0', '17738.0952380952', '8489.62001916743', '9177.34519887032', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4273.06547619048', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '102476.031009122', '98415.9421318979', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '19250.0260336118', '12050', '14778.951514216', '14870.3782122078', '0', '5146.94322898438', '0', '0', '0', '0', '0', '327280.926557242', '118834.005743366', '99111.813961008', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '249045.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '16187.9672523114', '8093.9836261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '39101.909014226', '0', '0', '17738.0952380952', '8489.62001916743', '8760.67853220366', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '25', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4826.35416666667', '6267.85714285714', '5013.76984126984', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '102476.031009122', '98207.2813758523', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '27774.6074820736', '12050', '15153.2901976153', '21200.431323824', '3333.33333333333', '5146.94322898438', '0', '0', '0', '0', '0', '332498.72161347', '117041.148309523', '101842.970611646', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '233795.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15196.7172523114', '7598.3586261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '41480.1102076819', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4789.54613095238', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '100766.171181688', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '28032.4212146347', '12050', '15863.0425026614', '21041.2554343982', '0', '5146.94322898438', '0', '0', '0', '0', '0', '331813.589372641', '125016.829265224', '106468.657407109', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '233795.65003556', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15196.7172523114', '7598.3586261557', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '37157.4134582953', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4852.79017857143', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '95821.0956659278', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '32721.526905167', '12050', '15481.8643925148', '24292.8168340636', '0', '5146.94322898438', '0', '0', '0', '0', '0', '332209.963904642', '113606.372603343', '102915.325675299', '0', '164287', '468265.963300134', '118236.38626032', '17735.4579390481', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '47792.0622033451', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4244.02083333333', '0', '1428.75', '0', '0', '1145.83333333333', '556.051587301587', '5585.8024691358', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '4931.84523809524', '6026.78571428571', '5013.76984126984', '773.809523809524', '595.238095238095', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3050.59523809524', '0', '100193.292913884', '104022.71124052', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '34358.9634907932', '12050', '16902.0573158697', '25498.1612015861', '0', '5146.94322898438', '0', '0', '0', '0', '0', '331511.060505773', '125973.989972231', '104000.277493659', '0', '164287', '468265.963300134', '113506.930809908', '17026.0396214861', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '49320.4698808483', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '2401.66666666667', '4086.375', '0', '1316', '0', '0', '1145.83333333333', '556.051587301587', '5530.37037037037', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1238.09523809524', '857.142857142857', '5658.67063492064', '0', '5422.09115216652', '4950.40364583333', '5785.71428571429', '5013.76984126984', '773.809523809524', '571.428571428571', '952.380952380952', '0', '692.857142857143', '2500', '1500', '0', '0', '0', '200', '2928.57142857143', '0', '100193.292913884', '107545.775050827', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '20999.2135676005', '12050', '17079.2548650198', '16193.2276774478', '0', '5146.94322898438', '0', '0', '0', '0', '0', '330805.168072915', '126296.607247337', '104581.025751455', '0', '164287', '468265.963300134', '80400.7426570179', '12060.1113985527', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '20177.6819175855', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '52578.8940817304', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '1801.25', '2982.85416666667', '951.666666666667', '943.75', '0', '0', '1145.83333333333', '556.051587301587', '5142.34567901235', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '928.571428571429', '642.857142857143', '5658.67063492064', '0', '5422.09115216652', '4512.10425967262', '95625', '5013.76984126984', '773.809523809524', '404.761904761905', '952.380952380952', '0', '519.642857142857', '2500', '1500', '0', '0', '0', '200', '2074.40476190476', '0', '100193.292913884', '103868.811077715', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '15469.3432431987', '12050', '12581.6547840964', '12136.0351994092', '0', '5146.94322898438', '0', '0', '0', '0', '0', '332897.24669668', '120235.616701738', '83857.7991637843', '0', '164287', '468265.963300134', '122965.841710733', '18444.87625661', '25480', '13650', '0', '0', '13000', '0', '0', '2800', '6220.1734045423', '4500', '3299.12361106922', '26258.3307819795', '0', '0', '244343.839104131', '19834.2399993404', '0', '0', '6500', '0', '0', '0', '0', '0', '0', '0', '15882.3495417686', '7941.17477088427', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '35715.7271920561', '0', '0', '0', '8489.62001916743', '8879.72615125127', '892.857142857143', '8630.95238095238', '0', '0', '2588.9880952381', '0', '3474.16666666667', '2465.91746041667', '5207.39722222222', '1732.98611111111', '0', '4371.33928571428', '5541.23711340206', '3002.08333333333', '4401.66666666667', '450.833333333333', '1472', '0', '0', '1145.83333333333', '556.051587301587', '5641.23456790123', '0', '2600', '1093.61111111111', '700', '5104.87698412699', '0', '3113.09523809524', '0', '419.379723333595', '5737.5', '0', '0', '0', '20000', '0', '1547.61904761905', '1071.42857142857', '5658.67063492064', '0', '5422.09115216652', '5388.85242280506', '6267.85714285714', '10549.4841269841', '773.809523809524', '619.047619047619', '952.380952380952', '0', '866.071428571429', '2500', '1500', '0', '0', '0', '200', '3172.61904761905', '0', '100193.292913884', '111262.550853741', '32615.6802631579', '18898.4331468041', '6993.05555555556', '20223.6380833333', '21254.5328808451', '12050', '17286.9132903617', '16547.2187362658', '0', '5146.94322898438', '0', '0', '0', '0', '0', '335071.378726874', '126082.391314482', '110144.091563776', '0', '164287', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '6172.355', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '1917.55738095238', '209306.84026342', '57158.9192351141', '8573.83788526712', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8507.29302334248', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '29792.7096707441', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1953.99107142857', '0', '649.392857142857', '0', '0', '163.690476190476', '58.531746031746', '822.142857142857', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '855.535714285714', '2105.35714285714', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2450.89285714286', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8559.89703318531', '5164.28571428571', '5558.17962316865', '6425.5606540452', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '38105.9461567427', '5715.89192351141', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8451.99824958314', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '20758.226048567', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '771.964285714286', '1345.92857142857', '0', '423', '0', '0', '163.690476190476', '58.531746031746', '548.095238095238', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '570.357142857143', '1403.57142857143', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '1633.92857142857', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8100.62565392327', '5164.28571428571', '5286.5533935398', '6093.18538572458', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '30296.0773549307', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '0', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '6630.85886426351', '5164.28571428571', '5192.17487608714', '5237.59737995285', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '57158.9192351141', '8573.83788526712', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31702.3246627011', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1953.99107142857', '0', '649.392857142857', '0', '0', '163.690476190476', '58.531746031746', '822.142857142857', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '855.535714285714', '2105.35714285714', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2450.89285714286', '0', '0', '0', '0', '0', '0', '8667.27346428571', '10592.4921998553', '5164.28571428571', '6769.3651919311', '8025.53101178572', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8600.54028788896', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '24622.1496654869', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8250.01115726221', '5164.28571428571', '6333.83636323542', '6373.01923380333', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '19508.484631125', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '10.7142857142857', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '11903.403206603', '5164.28571428571', '6494.26722754942', '9085.8991387817', '1428.57142857143', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '21965.4670098309', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '12013.894806272', '5164.28571428571', '6798.44678685491', '9017.68090045638', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '107352.230912453', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '6977.89500930947', '3488.94750465473', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '22686.4994310519', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '14023.5115307859', '5164.28571428571', '6635.08473964922', '10411.2072145987', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '52924.9252176983', '7938.73878265474', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31039.8702966616', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1818.86607142857', '0', '612.321428571429', '0', '0', '163.690476190476', '58.531746031746', '761.243386243386', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '792.162698412698', '1949.40476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2269.34523809524', '0', '0', '0', '0', '0', '0', '8667.27346428571', '14725.2700674828', '5164.28571428571', '7243.73884965844', '10927.7833721083', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '50807.9282089903', '7621.18923134855', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '31466.7680224785', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1029.28571428571', '1751.30357142857', '0', '564', '0', '0', '163.690476190476', '58.531746031746', '730.793650793651', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '760.47619047619', '1871.42857142857', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2178.57142857143', '0', '0', '0', '0', '0', '0', '8667.27346428571', '8999.66295754306', '5164.28571428571', '7319.68065643707', '6939.95471890622', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '35988.9491480348', '5398.34237220522', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8727.04769307127', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '23824.5857018528', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '771.964285714286', '1278.36607142857', '407.857142857143', '404.464285714286', '0', '0', '163.690476190476', '58.531746031746', '517.645502645503', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '538.670634920635', '56869.0476190476', '1780.79365079365', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '1543.15476190476', '0', '0', '0', '0', '0', '0', '8667.27346428571', '6629.71853279944', '5164.28571428571', '5392.13776461275', '5201.15794260393', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '209306.84026342', '55041.9222264062', '8256.28833396093', '14139', '8079.42857142857', '0', '1600', '2700', '0', '0', '1000', '1200', '0', '1687.71705971993', '14466.1462261709', '0', '0', '110608.159483882', '8578.50565476545', '0', '0', '1500', '0', '0', '0', '0', '0', '0', '0', '7189.53036645232', '3594.76518322615', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '29437.4777565101', '0', '0', '4166.66666666667', '3671.84491786222', '1613.17462932455', '488.544474393531', '0', '0', '0', '819.047619047619', '0', '0', '498.596875', '2065.48571428571', '799.791666666667', '0', '1330.11904761905', '2374.81590574374', '1286.60714285714', '1886.42857142857', '193.214285714286', '630.857142857143', '0', '0', '163.690476190476', '58.531746031746', '791.693121693122', '0', '0', '801.40873015873', '0', '1595.89080563043', '0', '744.047619047619', '0', '175.8583719045', '2458.92857142857', '0', '0', '0', '0', '0', '1500', '0', '0', '0', '2824.99614942078', '823.849206349206', '2027.38095238095', '5709.36507936508', '476.190476190476', '0', '476.190476190476', '0', '0', '500', '25', '0', '0', '0', '0', '2360.11904761905', '0', '0', '0', '0', '0', '0', '8667.27346428571', '9109.08552036217', '5164.28571428571', '7408.67712444075', '7091.66517268534', '0', '2205.83281242187', '0', '0', '0', '0', '0', '0', '0', '0', '0', '16574', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '207094.014297908', '218020.946440765', '218020.946440765', '218020.946440765', '358758.760970009', '40035.6897539701', '36184.7991828055', '9644.19596953188', '2598.62244897959', '3305.34861111111', '14625.9047619048', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '155', '4352', '12405', '58924.1224866173', '1664.63537492545', '3989.97654299141', '5334.81975330489', '2905.58947998258', '1789.0625', '27374.7753771429', '29250', '7630.95238095238', '6681.52836219022', '3958.46785714286', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7769.72851543811', '973.642927489177', '2186.07151536601', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '61862.8794110103', '75994.0161544971', '19990.1381234574', '11582.8425430168', '5878.0747274249', '8079.52146237125', '7439.26561124329', '13300.2456903273', '4119.52438223433', '141.438374441383', '1042.51246202372', '101332.486973372', '36750.9628054552', '28621.7409182205', '4848.72497941917', '16149.622854651', '24064.1678737075', '110221.933531746', '301177.839143651', '27236.0767803726', '35091.7277542341', '9644.19596953188', '1844.18367346939', '3305.34861111111', '9887.80272108844', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '110', '4352', '12405', '57803.5412926975', '1632.97840631639', '3914.09772648001', '5233.36557059961', '2850.33284159549', '1789.0625', '19437.5719542857', '19500', '7630.95238095238', '6681.52836219022', '2849.76428571429', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7621.96879855408', '973.642927489177', '2144.49820845356', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '60686.4108215043', '77997.387393092', '19609.9784893433', '11362.5674675792', '5766.28926982214', '10515.5448155273', '7297.7904260604', '10722.1573418341', '5789.68837557632', '138.748590091457', '1022.68662822134', '97315.0939876831', '35579.0358408108', '34825.7467126247', '4944.98031230289', '15842.4996783334', '23606.5309530604', '110221.933531746', '353862.052218711', '38613.5105346815', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '54394.2254189883', '1536.66355989742', '3683.23997604278', '4924.69596465935', '2682.21710361675', '1789.0625', '26492.8638857143', '28166.6666666667', '7630.95238095238', '6681.52836219022', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7172.41677055213', '973.642927489177', '2018.01336652667', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '839.237393798126', '903.511904761905', '6000', '5194.24603174603', '57107.0601605383', '76003.4720543822', '18453.3605823491', '10692.3908526699', '5426.18724319273', '10707.3106726239', '6867.35879183604', '15990.5519623986', '5957.10981264076', '175.900132772141', '962.367456117852', '93520.3432912985', '33035.3420454979', '38125.7980130705', '5450.77107760126', '14908.0917783213', '22214.1920253476', '110221.933531746', '360326.743502004', '40035.6897539701', '37640.1563256627', '9644.19596953188', '2598.62244897959', '3305.34861111111', '14984.1353741497', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '155', '4352', '12405', '52930.1148897274', '1495.30171899157', '3584.09948108803', '4792.13962876659', '2610.02079467183', '1789.0625', '27374.7753771429', '29250', '7630.95238095238', '6681.52836219022', '3958.46785714286', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6979.35931209723', '973.642927489177', '1963.69519956386', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '875.927413848966', '903.511904761905', '6000', '5194.24603174603', '55569.929197975', '76324.7560585053', '17956.6578658245', '10404.5874707892', '5280.13244021862', '11634.4604930044', '6682.51247335479', '15788.3613880577', '6419.05608946658', '127.050672849629', '936.463744562686', '92893.0117746028', '31712.8404896963', '30446.6062125195', '7023.21887019779', '14506.8158344927', '21616.2603112216', '110221.933531746', '315995.833493933', '12276.3812488326', '37397.2515637579', '9644.19596953188', '2514.79591836735', '3305.34861111111', '12245.425170068', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '56618.0783500019', '1599.48849646627', '3833.82551988049', '5126.03718187495', '2791.8768390307', '1789.0625', '27055.7861142857', '21666.6666666667', '7630.95238095238', '6681.52836219022', '3817.94642857143', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7465.65378118664', '973.642927489177', '2100.51780344817', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '887.150536336825', '903.511904761905', '6000', '5194.24603174603', '59441.8245981482', '80660.3948394988', '19207.8075792868', '11129.5384460788', '5648.03142448317', '10781.8329468397', '7148.12381532722', '14671.3236518449', '5983.75158862097', '135.903066993282', '1001.71287691417', '101369.115090163', '37076.6787651153', '28917.3039728152', '7419.97320919913', '15517.5940433442', '23122.3968148293', '110221.933531746', '306242.361984652', '12276.3812488326', '37154.3468018531', '9644.19596953188', '2514.79591836735', '3305.34861111111', '11309.056462585', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '77447', '150', '4352', '12405', '56773.2990003339', '1603.87355600653', '3844.33610073731', '5140.09041095274', '2799.53087730311', '980', '26492.8638857143', '19933.3333333333', '7630.95238095238', '6681.52836219022', '3783.28214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7486.12115960781', '973.642927489177', '2106.27645420049', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '930.315883486662', '903.511904761905', '6000', '5194.24603174603', '59604.7866579695', '80830.6319237781', '19260.4665262309', '11160.0505059339', '5663.51572095441', '11405.3286562656', '7167.72067307308', '12644.9295752356', '6272.38771891707', '2197.44486438813', '1004.4591114868', '103632.582263307', '36713.3884370762', '32546.4442965702', '7519.286784713', '15560.1361272366', '23185.7877594785', '110221.933531746', '287191.508283397', '12480.9876029798', '36668.5372780436', '9644.19596953188', '2556.70918367347', '3305.34861111111', '9445.33265306123', '5577.03244937929', '22676.7161292582', '10199.5107142857', '77447', '152.5', '4352', '12405', '57553.4984260234', '1625.91457263422', '3897.16637255109', '5210.72741209995', '2838.00305385672', '980', '26933.8196314286', '16466.6666666667', '7630.95238095238', '6681.52836219022', '3766.88214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7588.99817278498', '973.642927489177', '2135.22167508506', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '716.66936898174', '903.511904761905', '6000', '5194.24603174603', '60423.8974219683', '87720.2903836365', '19525.1508969981', '11313.4159990215', '5741.34582402534', '12327.0049382153', '7266.22211038786', '10911.217108014', '6713.7230108801', '138.148400303123', '1018.26275572995', '107050.921461599', '36746.5002355644', '10955.4018688694', '11791.3396844336', '15773.9692051779', '23504.4153293507', '110221.933531746', '316111.406854026', '11457.9558322438', '37397.2515637579', '9644.19596953188', '2347.14285714286', '3305.34861111111', '12209.3707482993', '5577.03244937929', '22676.7161292582', '10199.5107142857', '77447', '140', '4352', '12405', '178545.57118', '5044', '12090', '16165', '8804.20634920635', '980', '24729.0409028571', '21666.6666666667', '7630.95238095238', '6681.52836219022', '3606.23214285714', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '23543', '973.642927489177', '6624', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '346.134429310144', '903.511904761905', '6000', '5194.24603174603', '187450.2779704', '251220.286284236', '60571.9776315789', '35097.090129779', '17811.1130952381', '13684.0454293535', '22541.6666666667', '13682.690194458', '8000.47258099758', '428.571428571429', '3158.90971539827', '325330.271997668', '112534.239887474', '25749.5290179439', '24340.0031864186', '48934.8591925172', '72916.6666666667', '110221.933531746', '337704.939749493', '25444.9458917571', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '10199.5107142857', '82868.29', '150', '4352', '12405', '58448.3266327088', '1543.17187717249', '3698.83980868665', '4945.55380541106', '2693.57724800134', '980', '26492.8638857143', '25350', '7630.95238095238', '6681.52836219022', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '7202.79450917368', '973.642927489177', '2026.56037160797', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '741.501174332529', '903.511904761905', '6000', '5194.24603174603', '57348.9288921665', '86396.3337798019', '18531.5171343723', '10737.6769347469', '5449.16907805515', '9205.41192818236', '6896.44450130782', '14913.9789138403', '5176.12993988627', '131.118036465319', '966.443424926562', '97443.2457843945', '33981.359709097', '9902.67025391068', '13147.9201160085', '14971.232854736', '22308.2770375022', '110221.933531746', '340971.062728216', '35769.1520961043', '37275.7991828055', '9644.19596953188', '2347.14285714286', '3305.34861111111', '13327.243537415', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '140', '4352', '12405', '55598.847314522', '1467.93899024927', '3518.51355910262', '4704.44761645111', '2562.25967053928', '1789.0625', '24729.0409028571', '26000', '7630.95238095238', '6681.52836219022', '3588.9', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6851.64307046758', '973.642927489177', '1927.76127506169', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '556.948106597588', '903.511904761905', '6000', '5194.24603174603', '54553.0475348559', '84935.7894804607', '17628.0665507338', '10214.1925150268', '5183.51058133214', '11144.6624977311', '6560.22827224469', '14179.3295024515', '6139.27597916325', '124.725755374074', '919.327267626949', '122110.609523602', '32315.8697722833', '26954.1150074217', '13378.6201306907', '14241.3536461249', '21220.7014351723', '110221.933531746', '310470.025447268', '27839.8305830724', '36668.5372780436', '9644.19596953188', '1760.35714285714', '3305.34861111111', '10529.7027210884', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '105', '4352', '12405', '55374.9632389754', '1462.02792950494', '3504.3452949474', '4685.50386210296', '2551.94202610317', '1789.0625', '18555.6604628571', '20583.3333333333', '7630.95238095238', '6681.52836219022', '2761.23928571429', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6824.0530420965', '973.642927489177', '1919.99861321188', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '54333.3746602277', '81612.3408414609', '17557.0822844403', '10173.062254974', '5162.63774797962', '8367.55008808023', '6533.81170584003', '10604.8046274643', '4666.80151137412', '124.223512759568', '915.625343119897', '116281.967691197', '32176.8654031078', '27411.6962413761', '11790.3569457926', '14184.0069123417', '21135.2504347875', '110221.933531746', '349450.923923758', '38613.5105346815', '37518.7039447103', '9644.19596953188', '2514.79591836735', '3305.34861111111', '14431.8380952381', '5577.03244937929', '22676.7161292582', '15000', '10199.5107142857', '82868.29', '150', '4352', '12405', '55375.0098232068', '1462.02915943708', '3504.34824298064', '4685.50780378677', '2551.94417292641', '1789.0625', '26492.8638857143', '28166.6666666667', '7630.95238095238', '6696.20693361879', '3835.27857142857', '2449.72371031746', '1115.97321428571', '184.52380952381', '3473.64087301587', '10483.4523809524', '1908.78968253968', '59.5238095238095', '1147.81746031746', '2452.38095238095', '1134.28571428571', '3177.71403426553', '49.6031746031746', '585.040178571429', '357.142857142857', '2571.42857142857', '4519.70238095238', '3595.2380952381', '1114.38353174603', '148.809523809524', '3520.71428571429', '276.785714285714', '110.714285714286', '6824.05878283649', '973.642927489177', '1920.00022841222', '2468.59277116402', '915.353387445887', '385.770833333333', '3950.97197420635', '630.033333333333', '559.642857142857', '275.62003968254', '903.511904761905', '6000', '5194.24603174603', '54333.4203682219', '89233.4894167979', '17557.0970543496', '10173.0708130707', '5162.64209105269', '11857.0902887865', '6533.81720241427', '15023.4774651534', '6515.54912734613', '684.955222962362', '915.626113390437', '115039.434277474', '32167.931789496', '37555.3308281799', '14737.64994823', '14184.0188446487', '21135.2682148336', '110221.933531746', '664713.698986505', '234365.043650841', '68147.0842959184', '15272.3326530612', '9904.76190476191', '24227.3724084872', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '201476', '7253', '10502', '119621.448693383', '3379.36462507455', '8100.02345700859', '10830.1802466951', '5898.61686922377', '195443.763922353', '14048.6252181508', '5313', '16491.0486805106', '22396.3431161177', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '15773.2714845619', '1962.36300294278', '4437.92848463399', '5568.13410714286', '4249.38095238095', '13822.7042744535', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '34259.0773620887', '2386.90476190476', '12500', '8571.66666666667', '125587.39855939', '154274.920368885', '40581.8395081215', '23514.2475867622', '11933.0383678132', '16402.1799781173', '15102.4010554234', '27000.7356972727', '8363.01761884538', '287.133054130046', '2116.39725337455', '205714.372652916', '74607.8723983312', '58104.7959355154', '9843.36264805038', '32785.2363378662', '48852.4987929592', '339975.892857143', '667356.771741416', '164753.91228403', '59239.9609591837', '15321.8027210884', '9904.76190476191', '17418.630952381', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '202071', '7253', '10502', '120742.029887303', '3411.02159368361', '8175.90227351999', '10931.6344294004', '5953.87350761086', '141331.021514604', '14048.6252181508', '5313', '14063.2237130223', '16241.5893858336', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '15921.0312014459', '1980.74588578495', '4479.50179154644', '5568.13410714286', '4249.38095238095', '9820.31351575292', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '19788.1980734218', '2386.90476190476', '12500', '8571.66666666667', '126763.867148895', '162923.631824924', '40961.9991422356', '23734.5226621999', '12044.823825416', '21965.2325446377', '15243.8762406063', '22396.8119127615', '12093.7006842229', '289.822838479971', '2136.22308717693', '203275.123357034', '74318.7166872646', '72745.2203859107', '10329.2453594989', '33092.3595141838', '49310.1357136063', '339975.892857143', '681849.176050335', '230388.228764259', '73465.9753537415', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '203857', '7253', '10502', '124151.345761012', '3507.33644010258', '8406.76002395722', '11240.3040353406', '6121.9892455896', '201413.300511344', '14048.6252181508', '5313', '17670.2670873174', '25281.2650220501', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16370.5832294479', '2036.67494707781', '4605.98663347333', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '43323.9971126686', '2386.90476190476', '12500', '8571.66666666667', '130343.217809861', '173473.07118316', '42118.6170492298', '24404.6992771092', '12384.9258520454', '24438.7528133354', '15674.3078748306', '36497.4136556074', '13596.7227107034', '401.480819608812', '2196.54225928042', '213454.211108104', '75401.0584953043', '87019.699151426', '12441.0368840947', '34026.7674141959', '50702.474641319', '339975.892857143', '681849.176050335', '238293.097735825', '70103.3789387755', '15642.4231292517', '9904.76190476191', '26759.5487123421', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '125615.456290273', '3548.69828100843', '8505.90051891197', '11372.8603712334', '6194.18555453452', '208005.801198272', '14048.6252181508', '5313', '18005.6114802898', '26227.618517459', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16563.6406879028', '2060.69335152135', '4660.30480043614', '5568.13410714286', '4249.38095238095', '13935.9632450324', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '46056.1334187491', '2386.90476190476', '12500', '8571.66666666667', '131880.348772425', '181136.373471081', '42615.3197657545', '24692.5026589899', '12530.9806550195', '27611.276993535', '15859.1541933119', '37469.4486110307', '15233.9110034256', '301.5207557218', '2222.44597083558', '220456.692462405', '75261.936171368', '72256.8681334593', '16667.7296061862', '34428.0433580245', '51300.4063554451', '339975.892857143', '681849.176050335', '200541.10040728', '66051.4477891157', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '121927.492829998', '3444.51150353373', '8256.17448011951', '11038.962818125', '6012.32951017565', '203084.199941317', '14048.6252181508', '5313', '17670.2670873174', '22288.2348488053', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16077.3462188134', '2000.19313914558', '4523.48219655183', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '42518.597310259', '2386.90476190476', '12500', '8571.66666666667', '128008.453372252', '173702.81719315', '41364.1700522921', '23967.5516837002', '12163.0816707549', '23218.7650593406', '15393.5428513394', '31594.814968969', '12886.0577783641', '292.668361578146', '2157.1968384841', '218299.214906835', '79844.9296768403', '62273.6496108611', '15978.9727350111', '33417.265149173', '49794.2698518374', '339975.892857143', '681849.176050335', '199414.793676829', '65408.1125680272', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '204452', '7253', '10502', '121772.272179666', '3440.12644399347', '8245.66389926269', '11024.9095890473', '6004.67547190324', '204264.975631773', '14048.6252181508', '5313', '17670.2670873174', '22479.2045086321', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16056.8788403922', '1997.64677923411', '4517.72354579951', '5568.13410714286', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '38405.6180190511', '2386.90476190476', '12500', '8571.66666666667', '127845.49131243', '173372.516383429', '41311.5111053481', '23937.0396238451', '12147.5973742837', '24463.1333722768', '15373.9459935936', '27121.9364215429', '13453.5585913349', '4713.26942132616', '2154.45060391147', '222280.107660731', '78746.044498333', '69808.4230289133', '16128.0153358651', '33374.7230652806', '49730.8789071882', '339975.892857143', '681849.176050335', '200269.884653868', '61066.9860340136', '15642.4231292517', '9904.76190476191', '26327.9430879495', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '204452', '7253', '10502', '120992.072753977', '3418.08542736578', '8192.83362744891', '10954.2725879001', '5966.20329534963', '214298.826517727', '14048.6252181508', '5313', '17837.9392838036', '20452.3148903922', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '15954.001827215', '1984.84778286169', '4488.77832491494', '5568.13410714286', '4249.38095238095', '13711.1896443061', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '33188.7863756482', '2386.90476190476', '12500', '8571.66666666667', '127026.380548432', '184410.332062419', '41046.8267345809', '23783.6741307575', '12069.7672712128', '25914.495540879', '15275.4445562788', '22938.1499000299', '14113.9511097931', '290.423028268306', '2140.64695966832', '225048.228727752', '77250.4774087738', '23031.0374906411', '24788.391114045', '33160.8899873393', '49412.2513373159', '339975.892857143', '366028.833336847', '-4.09272615797818e-12', '9904.76190476191', '0', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '204452', '7253', '10502', '0', '0', '0', '0', '0', '6044.02671829736', '14048.6252181508', '5313', '0', '0', '0', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '64.26735218509', '2032.36607142857', '6119.04761904762', '535.677248677249', '5727.74476190476', '516.77380952381', '849.464285714286', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '0', '0', '685.384839285714', '4249.38095238095', '0', '4293.37880079365', '146.703869047619', '540.476190476191', '892.857142857143', '0', '2386.90476190476', '12500', '8571.66666666667', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '339975.892857143', '681849.176050335', '233818.967680489', '68033.1458843537', '15642.4231292517', '9904.76190476191', '25896.3374635569', '14956.6510862939', '37736.1374592636', '6369.04761904762', '19723', '218763.64', '7253', '10502', '132595.434529891', '3500.82812282751', '8391.16019131335', '11219.4461945889', '6110.62910120501', '192851.295043976', '14048.6252181508', '5313', '19932.1718492222', '23576.1861370386', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '6119.04761904762', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16340.2054908263', '2032.89563278385', '4597.43962839203', '6166.86569047619', '4249.38095238095', '13486.4160435797', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '2678.57142857143', '39797.6150769079', '2386.90476190476', '12500', '8571.66666666667', '130101.349078233', '195998.073500217', '42040.4604972066', '24359.4131950321', '12361.9440171829', '20883.3283168951', '15645.2221653588', '33833.7404777577', '11742.5294803618', '297.45339210611', '2192.46629047171', '221059.015050641', '77089.8572487571', '22465.1233143894', '29827.2727618319', '33963.6263377812', '50608.3896291645', '339975.892857143', '750516.845492729', '245434.615879252', '67440.6793469388', '15878.8108843537', '9904.76190476191', '25098.9399092971', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135444.913848078', '3576.06100975073', '8571.48644089738', '11460.5523835489', '6241.94667866707', '172957.127424538', '14048.6252181508', '5313', '19261.4830632776', '24296.6426976578', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '0', '16691.3569295324', '2076.58261252179', '4696.23872493832', '6166.86569047619', '4249.38095238095', '18939.7365295324', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '2678.57142857143', '38601.6011468131', '2386.90476190476', '12500', '8571.66666666667', '132897.230435544', '206912.935149911', '42943.9110808452', '24882.8976147522', '12627.602513906', '27149.6249433363', '15981.438394422', '34542.4079031479', '14955.9522589266', '303.845673197355', '2239.58244777132', '297474.889961264', '78725.0169499354', '65663.1919791232', '32591.791710298', '34693.5055463923', '51695.9652314944', '339975.892857143', '750516.845492729', '190986.8495273', '65280.6122210885', '17347.5013605442', '9904.76190476191', '31281.3052721088', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135668.797923625', '3581.97207049506', '8585.6547050526', '11479.496137897', '6252.26432310318', '124047.663019295', '14048.6252181508', '5313', '16914.0723124714', '18639.1038089576', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16718.9469579035', '2080.01510596353', '4704.00138678812', '6166.86569047619', '4249.38095238095', '42614.407191448', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '31771.4947801088', '2386.90476190476', '12500', '8571.66666666667', '133116.903310172', '199950.438430287', '43014.8953471387', '24924.027874805', '12648.4753472585', '20500.5185667834', '16007.8549608266', '25981.7977632593', '11433.6753320073', '304.347915811861', '2243.28437227837', '284891.110604921', '78833.4004187174', '67158.7240982131', '28886.4038974257', '34750.8522801755', '51781.4162318791', '339975.892857143', '750516.845492729', '262988.886659884', '72648.2061972789', '17347.5013605442', '9904.76190476191', '26891.7213313897', '14956.6510862939', '37736.1374592636', '25000', '6369.04761904762', '19723', '224930.64', '7253', '10502', '135668.751339393', '3581.97084056292', '8585.65175701936', '11479.4921962132', '6252.26217627994', '189665.149684985', '14048.6252181508', '5313', '19932.1718492222', '25997.9836046333', '16583.6768677249', '16654', '3473.64087301587', '7290.99206349206', '2594.9503968254', '321.33676092545', '2032.36607142857', '8547.61904761905', '1339.19312169312', '7513.45904761905', '516.77380952381', '1230.41666666667', '906.746031746032', '3500', '3084.46428571429', '2738.09523809524', '1681.66865079365', '284.722222222222', '16718.9412171635', '2080.01439175432', '4703.99977158778', '6166.86569047619', '4249.38095238095', '20292.5748530705', '1265.92857142857', '4293.37880079365', '733.519345238095', '2702.38095238095', '892.857142857143', '46740.644265984', '2386.90476190476', '12500', '8571.66666666667', '133116.857602178', '218622.012447218', '43014.8805772294', '24924.0193167084', '12648.4710041854', '29049.8663410433', '16007.8494642524', '36807.5136235677', '15963.0926878332', '1678.14001513288', '2243.28360200783', '281846.566764389', '78811.4196816402', '92010.5451152755', '36107.236324417', '34750.8403478685', '51781.3984518331', '339975.892857143'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#636efa', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Cost', \n  hovertextsrc: 'sumon23:205:7190d1', \n  hovertextn  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Cost<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace2 = {\n  mode: 'markers', \n  name: 'Review type=KPI', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:71af0d', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:937cfc', \n  y: ['400000', '170000', '115000', '313000', '110000', '10000', '100000', '150000', '63000', '35000', '50000', '0', '0', '0', '10000', '280000', '355000', '144000', '110000', '443000', '120000', '35000', '45000', '80000', '25000', '35000', '70350', '70787', '0', '0', '10000', '25000', '735022', '170000', '130000', '470000', '120000', '40000', '80000', '225000', '100000', '25000', '120000', '100000', '0', '0', '30000', '30000', '802000', '130000', '90000', '433000', '125000', '40000', '110000', '180000', '76000', '25000', '250000', '100000', '0', '0', '40000', '30000', '576000', '45000', '115000', '440000', '120000', '0', '92640', '270000', '40000', '25000', '250000', '90000', '0', '0', '30000', '20000', '436500', '35000', '115000', '430000', '160000', '0', '90000', '200000', '40000', '15000', '250000', '80000', '0', '0', '20000', '15000', '260000', '20000', '135000', '173319', '240000', '0', '85000', '250000', '15000', '15000', '250000', '100000', '25000', '45000', '0', '20000', '330000', '20000', '115000', '0', '95000', '0', '0', '0', '0', '0', '100000', '0', '0', '0', '0', '0', '610430', '60000', '75000', '550674', '256712', '0', '46910', '132400', '0', '20000', '179290', '79392', '45000', '85000', '50000', '0', '496400', '110000', '110000', '430659', '184984', '0', '52040', '232400', '0', '50000', '179290', '159392', '75000', '110000', '50000', '0', '406400', '70000', '60000', '457274', '55000', '0', '50000', '70000', '0', '50000', '179290', '144392', '50000', '65000', '30000', '0', '781400', '120000', '130000', '548426', '80000', '0', '35000', '72400', '0', '50000', '179290', '159392', '85000', '120000', '30000', '0', '204476.333333333', '172500', '104166.666666667', '242250', '66166.6666666667', '8000', '63833.3333333333', '112500', '58800', '20416.6666666667', '30000', '0', '0', '0', '8666.66666666667', '294583.333333333', '186387.5', '156000', '88833.3333333333', '341283.333333333', '74000', '28000', '25000', '56666.6666666667', '23333.3333333333', '20416.6666666667', '42210', '58989.1666666667', '0', '0', '8666.66666666667', '25000', '382508.461666667', '172666.666666667', '105000', '376166.666666667', '86500', '30083.3333333333', '43333.3333333333', '162500', '93333.3333333333', '14583.3333333333', '72000', '83333.3333333333', '0', '0', '26000', '32666.6666666667', '403756.333333333', '130833.333333333', '72833.3333333333', '355450', '90416.6666666667', '32000', '65666.6666666667', '145000', '70933.3333333333', '14583.3333333333', '158666.666666667', '83333.3333333333', '0', '0', '34666.6666666667', '31666.6666666667', '295875.666666667', '45833.3333333333', '103833.333333333', '340166.666666667', '93750', '0', '55600', '185833.333333333', '37333.3333333333', '14583.3333333333', '158666.666666667', '75000', '0', '0', '26000', '20833.3333333333', '230989.583333333', '35416.6666666667', '103000', '332666.666666667', '123333.333333333', '0', '54500', '145833.333333333', '37333.3333333333', '8750', '158666.666666667', '66666.6666666667', '0', '0', '17333.3333333333', '15416.6666666667', '123359', '21666.6666666667', '112500', '133933.216666667', '160250', '0', '51000', '183333.333333333', '14000', '8750', '158666.666666667', '83333.3333333333', '28333.3333333333', '37500', '0', '20000', '176211.666666667', '20000', '95500', '0', '64416.6666666667', '0', '0', '0', '0', '0', '66666.6666666667', '0', '0', '0', '0', '0', '314111.675', '66666.6666666667', '62250', '425861.3', '181676.666666667', '0', '32212.5', '99300', '0', '11666.6666666667', '114007.333333333', '66160', '45500', '65833.3333333333', '43333.3333333333', '0', '235545.666666667', '110000', '94166.6666666667', '308931.9', '123093.333333333', '0', '28016.6666666667', '174300', '0', '29166.6666666667', '114007.333333333', '132826.666666667', '79500', '85416.6666666667', '43333.3333333333', '0', '190737.333333333', '77500', '50833.3333333333', '343696.733333333', '45083.3333333333', '0', '33500', '52500', '0', '29166.6666666667', '114007.333333333', '120326.666666667', '51166.6666666667', '48750', '26000', '0', '400984.833333333', '131666.666666667', '110833.333333333', '413933.7', '65166.6666666667', '0', '19333.3333333333', '54300', '0', '29166.6666666667', '114007.333333333', '132826.666666667', '90833.3333333333', '93750', '26000', '0', '9063.66725768322', '7646.27659574468', '4665.92011944756', '10738.0319148936', '2932.91962174941', '358.342665173572', '2829.49172576832', '5039.19372900336', '2606.3829787234', '904.994089834516', '1343.7849944009', '0', '0', '0', '388.204553938037', '13195.2220977977', '8261.85726950355', '6914.89361702128', '3979.09667786487', '15447.3649464313', '3280.14184397163', '1254.1993281075', '1108.15602836879', '2538.26054497947', '1034.27895981087', '904.994089834516', '1890.70548712206', '2614.76802600473', '0', '0', '388.204553938037', '1119.82082866741', '16955.1623079196', '7653.66430260047', '4703.24748040314', '16847.6654846336', '3834.21985815603', '1347.51773049645', '1920.80378250591', '7278.83538633819', '4137.1158392435', '653.228816722658', '3225.08398656215', '3693.85342789598', '0', '0', '1164.61366181411', '1463.23254945875', '18085.390070922', '5860.39567002613', '3262.41134751773', '16090.991398823', '4050.01866368048', '1513.00236406619', '2941.39604329974', '6494.960806271', '3177.30496453901', '653.228816722658', '7107.12952594252', '3732.73609555804', '0', '0', '1603.45359235276', '1433.52950052814', '13115.0561465721', '2031.61938534279', '4650.98917506532', '15078.3096926714', '4155.58510638298', '0', '2464.5390070922', '8324.00149309444', '1654.8463356974', '646.424349881797', '7107.12952594252', '3324.46808510638', '0', '0', '1164.61366181411', '933.184023889511', '10238.8999704492', '1569.88770685579', '4613.66181410974', '14745.8628841608', '5466.90307328605', '0', '2415.78014184397', '6532.28816722658', '1654.8463356974', '387.854609929078', '7107.12952594252', '2955.08274231678', '0', '0', '776.409107876073', '690.556177678238', '5468.04078014184', '960.401891252955', '5039.19372900336', '5936.75605791962', '7103.28014184397', '0', '2260.63829787234', '8212.0194102277', '620.567375886525', '387.854609929078', '7107.12952594252', '3693.85342789598', '1255.91016548463', '1662.23404255319', '0', '895.856662933931', '7810.80082742317', '886.524822695036', '4277.71556550952', '0', '2855.34869976359', '0', '0', '0', '0', '0', '2986.18887644644', '0', '0', '0', '0', '0', '13923.3898492908', '2955.08274231678', '2788.35386338186', '18876.8306737589', '8053.04373522459', '0', '1427.85904255319', '4447.92833146697', '0', '517.139479905437', '5106.71145949981', '2932.62411347518', '2016.84397163121', '2918.14420803783', '1941.02276969018', '0', '10440.8540189125', '4875.8865248227', '4217.99178798059', '13693.789893617', '5456.26477541371', '0', '1241.87352245863', '7807.39081746921', '0', '1292.84869976359', '5106.71145949981', '5887.70685579196', '3523.93617021277', '3786.19976359338', '1941.02276969018', '0', '8454.66903073286', '3435.28368794326', '2276.96901829041', '15234.7842789598', '1998.37470449173', '0', '1484.92907801418', '2351.62374020157', '0', '1292.84869976359', '5106.71145949981', '5333.62884160757', '2268.02600472813', '2160.90425531915', '1164.61366181411', '0', '17774.1504137116', '5836.28841607565', '4964.5390070922', '18348.125', '2888.59338061466', '0', '856.973995271868', '2432.25083986562', '0', '1292.84869976359', '5106.71145949981', '5887.70685579196', '4026.30023640662', '4155.58510638298', '1164.61366181411', '0', '1529700', '1320000', '567500', '1824400', '415000', '87000', '536500', '765000', '478100', '280000', '350000', '0', '0', '0', '95000', '1725500', '1236400', '1155300', '533000', '2550900', '480000', '304500', '225500', '424000', '191500', '280000', '492450', '566296', '0', '0', '95000', '140000', '2784352.94', '1417500', '643000', '2667500', '517500', '323250', '390000', '1177500', '766000', '200000', '840000', '800000', '0', '0', '285000', '186000', '3002100', '1080000', '441000', '2461900', '550000', '348000', '573000', '942000', '598800', '200000', '1532000', '800000', '0', '0', '380000', '206000', '2125950', '378750', '544500', '2498000', '551250', '0', '485136', '1317000', '316000', '200000', '1532000', '720000', '0', '0', '300000', '131000', '1483010', '293750', '524500', '2393000', '710000', '0', '475500', '1040000', '316000', '120000', '1532000', '640000', '0', '0', '200000', '93500', '829430', '150000', '610500', '877758.8', '1008750', '0', '445000', '1295000', '116500', '120000', '1532000', '800000', '237500', '360000', '0', '112000', '1134500', '150000', '524500', '0', '467500', '0', '0', '0', '0', '0', '575000', '0', '0', '0', '0', '0', '2092468.4', '517500', '355500', '2765504.8', '1102276', '0', '269221.5', '675240', '0', '160000', '1084486.5', '635136', '402500', '620000', '500000', '0', '1983892', '915000', '560000', '2162424.5', '743882', '0', '228446', '1185240', '0', '400000', '1084486.5', '1275136', '687500', '797500', '500000', '0', '1898436', '665000', '316250', '2566044', '267500', '0', '280500', '357000', '0', '400000', '1084486.5', '1155136', '450000', '452500', '300000', '0', '3426544', '1130000', '680000', '3217185.6', '407500', '0', '161000', '369240', '0', '400000', '1084486.5', '1275136', '782500', '877500', '300000', '0', '919510', '844000', '321500', '916000', '233000', '37500', '320000', '382500', '278250', '115500', '142500', '0', '0', '0', '56500', '896000', '742900', '746400', '307750', '1286300', '266000', '131250', '134250', '214000', '111750', '115500', '200497.5', '290226.7', '0', '0', '56500', '67500', '1532446.2', '860000', '364500', '1350000', '296000', '141250', '232000', '592500', '447000', '82500', '342000', '410000', '0', '0', '169500', '97000', '1675140', '655000', '258000', '1235300', '312500', '150000', '341500', '474000', '352200', '82500', '739500', '410000', '0', '0', '226000', '107000', '1219150', '230000', '321500', '1229000', '317500', '0', '289176', '683500', '186000', '82500', '739500', '369000', '0', '0', '172500', '67000', '852250', '177500', '326500', '1194000', '412500', '0', '283500', '522500', '186000', '49500', '739500', '328000', '0', '0', '115000', '47000', '479190', '100000', '376500', '461293.2', '565500', '0', '265250', '650000', '68250', '49500', '739500', '410000', '125000', '180000', '0', '54000', '650600', '100000', '321500', '0', '248500', '0', '0', '0', '0', '0', '300000', '0', '0', '0', '0', '0', '1208946', '302500', '214500', '1449887.2', '626951.2', '0', '160856.5', '337620', '0', '66000', '527370', '325507.2', '210000', '312000', '287500', '0', '1189256', '550000', '320000', '1179257', '423798.4', '0', '134386', '592620', '0', '165000', '527370', '653507.2', '360000', '402250', '287500', '0', '1064080', '385000', '175500', '1315605.7', '153500', '0', '167500', '178500', '0', '165000', '527370', '592007.2', '235000', '228750', '172500', '0', '1996430', '660000', '379000', '1600435.4', '229000', '0', '95250', '184620', '0', '165000', '527370', '653507.2', '410000', '442250', '172500', '0', '431452.5', '71632', '114237.5', '672433.5', '105404.5', '43368', '102549.5', '92039.5', '72127', '5145', '0', '22999', '0', '0', '13774', '116309.5', '641947.25', '209766', '176376.25', '627374.75', '165402.25', '41284', '98804.75', '122544.75', '70583.5', '15435', '58971.5', '11499.5', '0', '0', '12767', '123144.75', '710425.962', '162726', '157821.25', '694210.75', '204602.25', '55984', '125264.75', '181494.75', '87473.5', '25970', '117771.5', '60554.891', '0', '0', '28447', '85754.75', '658643.068', '151900', '104740', '481278', '133280', '39200', '83300', '177600', '78914', '29890', '125145', '90323.739', '0', '0', '29400', '31500', '637742', '81830', '72150', '342902', '106820', '19600', '77733.6', '222200', '60516', '26460', '151995', '143550', '0', '0', '30380', '24600', '627058', '52920', '111220', '429240', '160720', '0', '148293.6', '291400', '55020', '23030', '244080', '137610', '0', '0', '38220', '21690', '322714', '8330', '79590', '52430', '82810', '0', '17640', '88900', '7860', '17885', '150555', '15840', '0', '0', '3920', '2960', '176248', '1960', '0', '196490', '0', '0', '0', '148200', '0', '10045', '100185', '0', '0', '0', '0', '0', '106705.855', '56840', '111720', '298575.522', '197483.328', '0', '49410.13', '37807.6', '4417.5', '7350', '99630', '29700', '7350', '13230', '0', '7920', '265395.74', '93100', '176395', '429698.836', '361306.4', '0', '90815.62', '205276', '10307.5', '11760', '152135.76', '96779.232', '21070', '69090', '24500', '11880', '415491.54', '88200', '118987.5', '362865.776', '195023.92', '0', '49545.37', '182457', '8.17401701880272e-13', '41160', '334206.5', '119308.464', '42630', '70070', '41160', '0', '728693.451', '104860', '103057.5', '612490.543', '108288.432', '0', '47339.88', '97317', '0', '76930', '344163.02', '192642.12', '80360', '138180', '67620', '0', '124121.528833333', '13575.3925', '82371.137', '0', '1458.12333333333', '0', '67993.558', '118361.331833333', '716.272166666667', '77896.9203333333', '17826.8613333333', '0', '0', '1885.42383333333', '7115.02416666667', '0', '0', '0', '0', '0', '0', '56458.5826666666', '17190.2', '63497.3988333333', '4806', '0', '0', '105594.866666667', '75604.3676666667', '14060.4843333333', '43584.4255', '4655.1555', '0', '0', '1703.638', '0', '1000', '5167', '0', '0', '0', '0', '112529.182666667', '18500', '52898.858', '0', '0', '0', '170000', '50548', '1907.90066666667', '87433.9898333333', '3538.86683333333', '0', '0', '3648.2045', '0', '5500', '38500', '0', '0', '3166', '20000', '164594.574166667', '23045.8333333333', '38649', '6039.16666666667', '3129.66666666667', '3825', '149700', '55000', '11500', '66800', '4000', '4350', '8433', '0', '7166.66666666667', '2400', '53333.3333333333', '4250', '0', '13500', '', '101040.293333333', '24995.8333333333', '37283.3333333333', '6039.16666666667', '2342.5', '6705', '158000', '55000', '11500', '78700', '16000', '3500', '0', '0', '7166.66666666667', '8000', '24833.3333333333', '4250', '0', '14833.3333333333', '', '87755.0016666667', '22829.1666666667', '37183.3333333333', '6039.16666666667', '2342.5', '9585', '183000', '40000', '11500', '98700', '9500', '7500', '6151', '3333.33333333333', '3333.33333333333', '2400', '0', '4250', '27083.3333333333', '14833.3333333333', '', '163239.426333333', '30700', '72475', '6039.16666666667', '4842.5', '14911', '123800', '20000', '4900', '50200', '11100', '7500', '9276', '0', '8750', '3500', '0', '5000', '23166.6666666667', '14833.3333333333', '', '149399.927666667', '31783.3333333333', '71975', '6039.16666666667', '4842.5', '8636', '150360', '20000', '4900', '55300', '8500', '7500', '0', '4600', '6583.33333333333', '7000', '5166.66666666667', '3333.33333333333', '13583.3333333333', '14833.3333333333', '', '118165.6015', '33158.3333333333', '54975', '6039.16666666667', '4842.5', '12850', '154564', '40000', '4900', '78700', '3500', '7500', '0', '0', '7166.66666666667', '3500', '40333.3333333333', '3333.33333333333', '0', '14833.3333333333', '', '121041.036833333', '33158.3333333333', '46975', '6039.16666666667', '4842.5', '14880', '124700', '80000', '18600', '55300', '11500', '7500', '9276', '0', '0', '5500', '15166.6666666667', '5916.66666666667', '12083.3333333333', '22500', '', '95941.4563333333', '21204.1666666667', '32278.75', '5556.03333333333', '4455.1', '18988.8', '84370', '18400', '15612', '58084', '14300', '7500', '0', '3333.33333333333', '14333.3333333333', '9000', '0', '9416.66666666667', '12083.3333333333', '22500', '', '129774.079', '45841.6666666667', '45570', '7247', '5811', '22464', '123720', '48000', '22320', '66360', '13800', '9000', '0', '0', '6666.66666666667', '7000', '7500', '12916.6666666667', '12083.3333333333', '22500', '', '2526655', '146761', '2008694', '0', '6118', '0', '822533', '961695', '18091', '1853278', '266751', '0', '0', '10392', '32278', '0', '0', '0', '0', '0', '0', '1271076', '185840', '1439963', '22680', '0', '0', '1326600', '859630', '178784', '1129698', '31617', '0', '0', '8844', '0', '3000', '30000', '0', '0', '0', '0', '2950220', '200000', '1262885', '0', '0', '0', '2661428.57142857', '602159', '50674', '2303977.57142857', '17671', '0', '0', '23049', '0', '25000', '150000', '0', '0', '27000', '120000', '3195014', '292000', '1038292.15567042', '70000', '51000', '15000', '1697864.48629904', '643086.784855957', '260000', '1603199.84668321', '72666.6666666667', '86989.3048128342', '49998.023715415', '0', '40000', '17000', '230000', '25000', '0', '90000', '', '2056370', '310000', '1015276.6798419', '70000', '38000', '62084.8708487085', '1841435.91487047', '643086.784855957', '260000', '1908871.94204431', '264891.774891775', '82352.9411764706', '0', '0', '40000', '60000', '90000', '25000', '0', '100000', '', '1789798', '290000', '1012667.98418972', '70000', '38000', '109169.741697417', '2186370.97980553', '467699.479895241', '260000', '2266411.98032353', '99367.9653679654', '109019.607843137', '36468.3794466403', '20000', '20000', '17000', '0', '25000', '175000', '100000', '', '3380621', '420000', '1503070.33188389', '70000', '48000', '226174.682408879', '1682900.11559122', '233849.739947621', '106000', '1203349.82064714', '129844.155844156', '109019.607843137', '54996.04743083', '0', '45000', '25000', '0', '30000', '150000', '100000', '', '2695182', '430000', '1495753.25871316', '70000', '48000', '136005.928853755', '2073590.31413613', '233849.739947621', '106000', '1339349.82064714', '215367.965367965', '109019.607843137', '0', '27000', '35000', '50000', '20000', '20000', '85000', '100000', '', '2415261', '450000', '1312569.69003537', '70000', '48000', '260000', '2543920.89481199', '467699.479895241', '106000', '1908871.94204431', '74891.7748917749', '109019.607843137', '0', '0', '40000', '25000', '190000', '20000', '0', '100000', '', '2736120', '450000', '1270464.42687747', '70000', '48000', '284169.741697417', '2032094.92078602', '935398.959790483', '399000', '1339349.82064714', '133939.393939394', '109019.607843137', '54996.04743083', '0', '0', '40000', '85000', '35000', '75000', '150000', '', '1847540', '275000', '880329.545454545', '64400', '44160', '336190.405904059', '1345045.9645067', '215141.760751811', '329580', '1422167.05785907', '235418.528138528', '109019.607843137', '0', '20000', '80000', '65000', '0', '55000', '75000', '150000', '', '2637290', '610000', '1242818.18181818', '84000', '57600', '421505.535055351', '1940124.29455361', '561239.37587429', '478800', '1607219.78477657', '160727.272727273', '130823.529411765', '0', '0', '40000', '50000', '50000', '75000', '75000', '150000', '', '738475.068221499', '65268.015762', '444356.76916671', '0', '8311.303', '0', '319706.349176095', '620173.168847333', '5803.50754666667', '495453.7405607', '126393.644605', '0', '0', '34298.389908', '97383.532765', '0', '0', '0', '0', '0', '0', '332550.7379114', '83620.55868', '341768.415930929', '30699.54', '0', '0', '466890.74', '398158.276574333', '78798.0631926667', '262483.3884466', '31808.1719195', '0', '0', '32849.180079', '0', '8760', '21701.4', '0', '0', '0', '0', '639853.7129454', '88800', '293142.888747714', '0', '0', '0', '789000', '268672.8', '11968.9991666667', '584798.5261586', '33400.041228', '0', '0', '46588.298925', '0', '48000', '164400', '0', '0', '17096.4', '93600', '1012256.631125', '145188.75', '255083.4', '41324.5', '20655.8', '45900', '776943', '316800', '82800', '480960', '30900', '22410', '40478.4', '0', '66318.9', '21000', '272000', '27750', '0', '85050', '0', '621397.804', '157473.75', '246070', '41324.5', '15460.5', '66636', '820020', '316800', '82800', '566640', '113700', '16800', '0', '0', '67510', '69600', '126650', '27750', '0', '93450', '0', '539693.26025', '143823.75', '245410', '41324.5', '15460.5', '87372', '954831.78', '230400', '82800', '710640', '66600', '36000', '29524.8', '41000', '31400', '21000', '0', '27750', '178750', '93450', '0', '1028408.3859', '194839.0236', '496816.125', '41324.5', '31960.5', '113908.8', '649950', '117600', '35280', '384030', '79080', '36000', '44524.8', '0', '82425', '30600', '0', '33375', '155005.85', '93717', '0', '941219.5443', '209770', '496627.5', '41324.5', '31960.5', '58846.8', '789390', '117852', '35280', '423045', '62400', '36000', '0', '56580', '62015', '61200', '26350', '22250', '93725', '95675', '0', '744443.28945', '218845', '379327.5', '41324.5', '31960.5', '94050', '811461', '237600', '35280', '602055', '26700', '36000', '0', '0', '67510', '30600', '209959.2', '22250', '0', '95675', '0', '762558.53205', '228792.5', '324127.5', '41324.5', '31960.5', '108635.904', '658416', '480000', '133920', '424929.624', '81900', '36000', '46528.416', '0', '0', '48000', '81900', '38875', '83375', '145125', '0', '604431.1749', '146308.75', '222723.375', '38018.54', '29403.66', '136719.36', '445473.6', '110400', '112949.6976', '447827.64', '101304', '36000', '0', '41460', '135020', '78600', '0', '61000', '83375', '145125', '0', '818962.68486372', '316307.5', '314433', '49589.4', '38352.6', '161740.8', '653241.6', '288000', '164052', '511635.6', '98280', '46283.4', '0', '0', '62800', '61200', '40500', '83125', '83375', '145125', '0', '2256841.18455', '220040.0374', '1445342.76697185', '0', '24933.909', '0', '939365.9043', '1783800.08668333', '15236.276', '1338415.99455333', '411694.86075', '0', '0', '68186.29', '187274.23', '0', '0', '0', '0', '0', '0', '1037743.73755', '285806', '1097635.85245714', '82233.9', '0', '0', '1665672.22', '1302934.60346667', '204899.8846', '731671.9897', '89822.61945', '0', '0', '65388.75', '0', '13950', '135000', '0', '0', '0', '0', '2263232.59925', '300000', '935001.585878572', '0', '0', '0', '2827714.28571429', '873314.376666667', '34391.9802', '1659814.85932857', '98010.97', '0', '0', '118469.5', '0', '109500', '621000', '0', '0', '58500', '300000', '3061389.72', '445500', '724682.547582852', '137250', '89170', '142500', '2068149.44244237', '773608.125748597', '219000', '1252961.40945299', '115000', '132834.22459893', '162993.557312253', '0', '200000', '75000', '820000', '116750', '0', '189000', '', '1969707.2', '517500', '714063.833992095', '137250', '66100', '208691.881918819', '2186756.58529952', '773608.125748597', '219000', '1475542.13122305', '421928.571428571', '86470.5882352941', '0', '0', '200000', '252000', '363000', '116750', '0', '209000', '', '1729840.24', '437500', '712733.399209486', '137250', '66100', '274883.763837638', '2491847.49439043', '562624.091453525', '219000', '1855225.73696058', '227642.857142857', '150470.588235294', '118886.916996047', '96400', '92000', '75000', '0', '116750', '617500', '209000', '', '3215285.76', '610000', '1335727.9068381', '137250', '108100', '362403.526683488', '1737377.1605358', '281312.045726762', '91400', '941791.302553479', '273357.142857143', '150470.588235294', '179287.114624506', '0', '247000', '109500', '0', '135750', '528500', '209000', '', '2757672.72', '650000', '1327313.27269176', '137250', '108100', '202023.71541502', '2082881.03964099', '281312.045726762', '91400', '1036991.30255348', '252142.857142857', '150470.588235294', '0', '132900', '185000', '219000', '77000', '90500', '307000', '209000', '', '2301128.52', '605000', '1017178.48450177', '137250', '108100', '327500', '2281898.06962671', '562624.091453525', '91400', '1475542.13122305', '101428.571428571', '150470.588235294', '0', '0', '200000', '109500', '638000', '90500', '0', '209000', '', '2258894.36', '605000', '855073.221343873', '137250', '108100', '350883.763837638', '1849333.00469164', '1125248.18290705', '345600', '1036991.30255348', '285500', '150470.588235294', '179287.114624506', '0', '0', '172500', '255000', '162000', '272500', '315000', '', '1719822.48', '377500', '625033.977272727', '126270', '99452', '442022.656826568', '1212262.91221867', '258807.082068621', '287952', '1089540.00921907', '376231.428571429', '150470.588235294', '0', '96400', '400000', '282000', '0', '259750', '272500', '315000', '', '2365762.64', '827500', '882400.909090909', '164700', '129720', '528090.774907749', '1782687.91731828', '675148.90974423', '414720', '1244389.56306417', '342600', '180564.705882353', '0', '0', '184000', '219000', '135000', '357500', '272500', '315000', '', '100538.438355', '10996.067925', '66720.62097', '0', '1181.0799', '0', '55074.78198', '95872.678785', '580.180455', '63096.50547', '14439.75768', '0', '0', '1527.193305', '5763.169575', '0', '0', '0', '0', '0', '0', '69314.5424383333', '16503.386575', '67083.409085', '3892.86', '277.043433333333', '0', '98450.61802', '83728.1908583334', '11525.0840216667', '50103.7995183334', '7157.77960833333', '0', '0', '1738.17730833333', '1351.85459166667', '810', '4185.27', '0', '0', '0', '0', '101875.768666667', '18251.138', '54912.5807583333', '913.14', '0', '0', '157763.024666667', '55308.7098566667', '4216.89156333333', '79102.57261', '3750.96168', '0', '0', '3278.736865', '0', '4645', '32166.73', '0', '0', '2564.46', '16200', '154702.149781667', '22182.125', '41356.47302', '4891.725', '2535.03', '3098.25', '153557', '54154.12', '9677.50112666667', '70720.4580683333', '3912.38469833333', '3523.5', '6830.73', '693.158855', '5805', '2989', '50515', '3442.5', '0', '11536.54', '3800', '113115.606691667', '24625.3333333333', '37542.81', '6039.16666666667', '2492.06166666667', '6157.8', '156423', '55000', '11500', '76439', '13720', '3661.5', '1602.27', '0', '7166.66666666667', '6936', '30248.3333333333', '4250', '0', '14580', '0', '90279.2070833334', '23240.8333333333', '37202.3333333333', '6039.16666666667', '2342.5', '9037.8', '178250', '42850', '11500', '94900', '10735', '6740', '4982.31', '2700', '4061.66666666667', '3464', '4718.33333333333', '4250', '21937.5', '14833.3333333333', '0', '148897.385646667', '29204.5416666667', '65769.5833333333', '6039.16666666667', '4367.5', '13899.06', '135048', '23800', '6154', '59415', '10796', '7500', '8682.25', '633.333333333333', '7720.83333333333', '3291', '0', '4857.5', '23910.8333333333', '14833.3333333333', '0', '152029.432413333', '31577.5', '72070', '6039.16666666667', '4842.5', '9828.25', '145313.6', '20000', '4900', '54331', '8994', '7500', '1762.44', '3726', '6995', '6335', '4185', '3650', '15404.1666666667', '14833.3333333333', '0', '124100.123471667', '32897.0833333333', '58205', '6039.16666666667', '4842.5', '12049.34', '153765.24', '36200', '4900', '74254', '4450', '7500', '0', '874', '7055.83333333333', '4165', '33651.6666666667', '3333.33333333333', '2580.83333333333', '14833.3333333333', '0', '120494.70412', '33158.3333333333', '48495', '6039.16666666667', '4842.5', '14494.3', '130374.16', '72400', '15997', '59746', '9980', '7500', '7513.56', '0', '1361.66666666667', '5120', '19948.3333333333', '5425.83333333333', '9787.5', '21043.3333333333', '0', '100710.376628333', '23475.4583333333', '35071.0375', '5647.82866666667', '4528.706', '18208.128', '92032.7', '30104', '16179.72', '57555.04', '13768', '7500', '1762.44', '2700', '11610', '8335', '2881.66666666667', '8751.66666666667', '12083.3333333333', '22500', '0', '123345.880693333', '41160.5416666667', '43044.6625', '6925.71633333333', '5553.379', '21803.712', '116243.5', '42376', '21045.48', '64787.56', '13895', '8715', '0', '633.333333333333', '8123.33333333333', '7380', '6075', '12251.6666666667', '12083.3333333333', '22500', '0', '2046590.55', '118876.41', '1627042.14', '0', '4955.58', '0', '666251.73', '778972.95', '14653.71', '1501155.18', '216068.31', '0', '0', '8417.52', '26145.18', '0', '0', '0', '0', '0', '0', '1509636.01', '178414.99', '1548021.89', '18370.8', '1162.42', '0', '1230827.27', '879022.35', '148252.33', '1267178.2', '76292.46', '0', '0', '9138.12', '6132.82', '2430', '24300', '0', '0', '0', '0', '2631182.64', '197309.6', '1296529.82', '4309.2', '0', '0', '2407811.14285714', '651078.49', '75014.9', '2080864.45285714', '20320.74', '0', '0', '20350.05', '0', '20820', '127200', '0', '0', '21870', '97200', '3148503.14', '274520', '1080964.79609304', '56700', '41310', '12150', '1880941.66247365', '635310.505733325', '220228.06', '1736347.61438482', '62217.49', '70461.3368983957', '40498.3992094862', '4379.31', '32400', '18520', '214800', '20250', '0', '78030', '22800', '2272712.36', '306580', '1019649.62024932', '70000', '40470', '53138.7453874539', '1814157.3434419', '643086.784855957', '260000', '1850794.2439257', '228369.004329004', '83233.8502673797', '9499.62450592885', '0', '40000', '51830', '116600', '25000', '0', '98100', '0', '1840446.68', '293800', '1013163.63636364', '70000', '38000', '100223.616236162', '2120833.31746787', '501023.067837777', '260000', '2198479.37305047', '130817.489177489', '103952.941176471', '29539.3873517787', '16200', '23800', '25170', '17100', '25000', '141750', '100000', '0', '3078364.63', '395300', '1409893.885822', '70000', '46100', '203943.743673702', '1778559.57979194', '278281.190537669', '135260', '1405331.63098566', '124053.67965368', '109019.607843137', '51475.790513834', '3800', '40250', '23480', '0', '29050', '154750', '100000', '0', '2825415.41', '428100', '1497143.5026156', '70000', '48000', '153137.992029229', '1999359.17641259', '233849.739947621', '106000', '1313509.82064714', '199118.441558442', '109019.607843137', '10449.2490118577', '21870', '36900', '45250', '16200', '21900', '97350', '100000', '0', '2468445.99', '446200', '1347374.56808415', '70000', '48000', '236441.126482213', '2454558.08448358', '423268.029305193', '106000', '1800662.73897885', '101582.251082251', '109019.607843137', '0', '5130', '39050', '29750', '157700', '20000', '16150', '100000', '0', '2675156.79', '450000', '1278464.42687747', '70000', '48000', '279577.490774908', '2129341.85585096', '846536.058610387', '343330', '1447559.0237126', '122720.346320346', '109019.607843137', '44546.7984189723', '0', '7600', '37150', '104950', '32150', '60750', '140500', '0', '2016370.2', '308250', '954455.172924901', '65464', '44889.6', '326306.479704797', '1475585.26619977', '351990.628569159', '342769.8', '1406431.78278881', '216137.492640693', '109019.607843137', '10449.2490118577', '16200', '64800', '60250', '16150', '51200', '75000', '150000', '0', '2487237.5', '546350', '1173945.34090909', '80276', '55046.4', '405295.660516605', '1827059.4118447', '495480.829001019', '450448.2', '1572059.76666225', '174918.611255411', '126680.784313726', '0', '3800', '47600', '52850', '40500', '71200', '75000', '150000', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#EF553B', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=KPI', \n  hovertextsrc: 'sumon23:205:003a11', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=KPI<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace3 = {\n  mode: 'markers', \n  name: 'Review type=Sales', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:13bff4', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:db9028', \n  y: ['1762496.58511521', '640148.95', '541234.446860465', '3734802.115', '418735.25675', '426328.3', '493989.125', '442179.835', '520268.525', '41160', '0', '180653.225', '0', '0', '139504.37', '743170.62', '2334572.44255761', '1694573.475', '845656.473430233', '3545533.4575', '647917.628375', '383684.15', '513407.5625', '619207.4175', '522816.6625', '123480', '412800.5', '90326.6125', '0', '0', '125612.185', '766399.31', '2754906.50679761', '1394154.475', '767512.473430233', '3897706.2575', '840242.628375', '499446.65', '629194.5625', '937492.4175', '654850.0625', '207760', '824400.5', '482769.7405', '0', '0', '274572.185', '536729.31', '2478685.76248', '1259055', '506610', '2730407.4', '583345', '328912.5', '421694', '929280', '611082.2', '239120', '830439', '722589.912', '0', '0', '279300', '209916', '2352028', '688327.5', '345843', '1939126', '485957.5', '170520', '406178.64', '1115180', '477194.8', '211680', '960753', '1148400', '0', '0', '303800', '165690', '2091925.72', '445777.5', '508626', '2390612', '718707.5', '0', '778970.64', '1385395', '434714', '184240', '1528992', '1100880', '0', '0', '382200', '138222', '1084900.18', '66762.5', '362817', '284935', '390897.5', '0', '93198', '461230', '62102', '143080', '879411', '126720', '0', '0', '39200', '18928', '561880.32', '14700', '0', '1028804', '0', '0', '0', '767580', '0', '80360', '587985', '0', '0', '0', '0', '0', '403199.5174', '433650', '514647', '1479925.7144', '856944.144', '0', '266782.9745', '194778.76', '34313.25', '58800', '593118', '237600', '69825', '105840', '0', '44352', '1034463.7772', '798700', '835722', '2200346.6856', '1564643.5', '0', '471935.513', '1048867.6', '80064.25', '94080', '923656.656', '774233.856', '195265', '524790', '245000', '66528', '1665774.7596', '738675', '591193.5', '1839785.213', '813901.76', '0', '247725.6005', '930530.7', '6.34922669995319e-12', '329280', '2042297.15', '954467.712', '387835', '505435', '411600', '0', '3039111.12321', '996170', '535825.5', '3405456.488', '522230.436', '0', '243448.562', '496316.7', '0', '615440', '2103207.962', '1541136.96', '729120', '999600', '676200', '0', '1828041.3594855', '178232.430294', '1170727.6412472', '0', '20196.46629', '0', '760886.382483', '1444878.0702135', '12341.38356', '1084116.9555882', '333472.8372075', '0', '0', '55230.8949', '151692.1263', '0', '0', '0', '0', '0', '0', '1269372.25248', '273310.467106', '1163700.16621494', '66609.459', '4737.44271', '0', '1527674.020017', '1394299.04527783', '168863.798966', '846953.350622134', '150978.345297', '0', '0', '65920.2826', '35582.1037', '11299.5', '109350', '0', '0', '0', '0', '2030389.715527', '297303.14', '965902.0965285', '15624.441', '0', '0', '2606926.29322857', '954942.219758667', '66788.482036', '1483467.71409914', '96455.1833955', '0', '0', '108384.1575', '0', '91345.5', '528660', '0', '0', '47385', '243000', '2909739.8670575', '417855', '764643.164859039', '111172.5', '72227.7', '115425', '2212466.76266404', '792552.31342303', '183924.476238', '1330263.56492935', '111772.0843', '107595.721925134', '132024.781422925', '22509.205', '162000', '81555', '782190', '94567.5', '0', '164205', '57000', '2177126.8788', '503820', '716081.389574339', '137250', '70483.3', '196115.424354244', '2164221.22815666', '773608.125748597', '219000', '1433251.79408674', '363612.142857143', '95279.679144385', '30968.7758893281', '0', '200000', '218370', '449830', '116750', '0', '205200', '0', '1775414.9624', '452700', '712986.181818182', '137250', '66100', '262307.306273063', '2433880.22166315', '602711.057969588', '219000', '1783085.85187045', '264557.142857143', '138310.588235294', '96298.4027667984', '78084', '112520', '108630', '68970', '116750', '500175', '209000', '0', '2933051.1112', '577225', '1217358.95038866', '137250', '100120', '345774.771742777', '1880726.52396818', '334761.334414847', '115644', '1115343.84509083', '264671.428571429', '150470.588235294', '167811.077075099', '18316', '217550', '102945', '0', '132140', '545410', '209000', '0', '2844619.1976', '642400', '1328912.05317956', '137250', '108100', '232495.879556029', '2017235.302611', '281312.045726762', '91400', '1018903.30255348', '256173.571428571', '150470.588235294', '34064.5517786561', '107649', '196780', '198195', '62370', '99097.5', '349085', '209000', '0', '2387871.918', '613550', '1076104.09425787', '137250', '108100', '303659.505928854', '2244084.83392942', '509174.80276544', '91400', '1392217.47377584', '130064.285714286', '150470.588235294', '0', '25251', '197150', '130305', '531410', '90500', '58330', '209000', '0', '2266918.8504', '605000', '885873.221343874', '137250', '108100', '346440.848708487', '1931520.36702931', '1018349.60553088', '297302', '1120315.9600007', '250526.428571429', '150470.588235294', '145222.56284585', '0', '38000', '160530', '327770', '148415', '220725', '294860', '0', '1822246.1372', '420725', '668741.433646245', '128356.2', '101095.12', '424706.267158672', '1333306.22978854', '423430.891227923', '298905.12', '1079555.7549526', '358992.457142857', '150470.588235294', '34064.5517786561', '78084', '324000', '261195', '48450', '241177.5', '272500', '315000', '0', '2243034.0096', '742000', '833501.192045454', '157398.3', '123969.08', '511737.832472325', '1674307.16634936', '596043.962485864', '390634.08', '1214968.1478336', '348989.971428571', '174846.823529412', '0', '18316', '225040', '230970', '109350', '338927.5', '272500', '315000', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#00cc96', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Sales', \n  hovertextsrc: 'sumon23:205:5c7d28', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Sales<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace4 = {\n  mode: 'markers', \n  name: 'Review type=VA', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:c2bf8a', \n  x: ['2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:cafc4f', \n  y: ['997203.172510155', '362788.03525', '297317.549512791', '1805415.67505', '242370.2796', '147372.09735', '290346.76275', '214948.63315', '288323.9015', '16978.5', '0', '92428.3939', '0', '0', '84617.90225', '385215.1549', '1374610.38625508', '1086669.017625', '482147.774756395', '1748820.237525', '365695.1398', '147186.048675', '303884.381375', '307513.066575', '297160.75075', '50935.5', '168068.775', '46214.19695', '0', '0', '75530.951125', '395520.57745', '1520670.64145508', '829517.017625', '430864.274756395', '1936137.437525', '477415.1398', '198023.548675', '372533.381375', '468860.566575', '374651.05075', '85701', '335648.775', '247341.30005', '0', '0', '164122.951125', '276535.57745', '1376988.2028', '763420', '299152', '1374205', '332024', '142712.5', '251125', '467580', '357696.3', '98637', '373875.75', '370327.3299', '0', '0', '166110', '107982', '1350008.8', '417970', '202528.5', '955980.2', '279055', '68600', '242097.24', '571422.5', '280738.2', '87318', '451307.25', '588555', '0', '0', '174685', '85530', '1207720.36', '270725', '315973', '1193444', '416745', '0', '464361.24', '695882.5', '255885', '75999', '723924', '564201', '0', '0', '219765', '70029', '617023.68', '42875', '222474', '144207', '224910', '0', '55566', '231595', '36555', '59020.5', '442829.25', '64944', '0', '0', '22540', '9266', '330438.64', '9800', '0', '551691', '0', '0', '0', '385260', '0', '33148.5', '294837.75', '0', '0', '0', '0', '0', '229500.081', '286650', '317226', '732719.4616', '479058.6528', '0', '159151.7795', '97634.38', '20102.625', '24255', '293692.5', '121770', '36750', '52920', '0', '21384', '623026.6046', '467950', '503314', '1137714.6536', '873346.6', '0', '280366.583', '524678.8', '46906.125', '38808', '451729.53', '396794.8512', '102410', '263473', '140875', '32076', '970311.468', '441000', '342205.5', '969876.306', '463603.112', '0', '146947.5455', '465265.35', '3.71973285506755e-12', '135828', '990665.25', '489164.7024', '202860', '254824.5', '236670', '0', '1794862.1322', '576730', '300247.5', '1717317.32515', '296528.2432', '0', '144778.242', '248158.35', '0', '253869', '1021054.56', '789832.692', '381220', '503916', '388815', '0', '598164.805259415', '52867.09276722', '359928.983025035', '0', '6732.15543', '0', '258962.142832637', '502340.26676634', '4700.8411128', '401317.529854167', '102378.85213005', '0', '0', '27781.69582548', '78880.66153965', '0', '0', '0', '0', '0', '0', '409676.360670319', '80133.57552558', '361260.203045727', '24866.6274', '1579.14757', '0', '438925.705743458', '440341.106106203', '64929.0976199267', '306747.755348279', '49779.411729745', '0', '0', '33124.52994651', '18502.87122535', '7095.6', '17578.134', '0', '0', '0', '0', '581466.14768894', '87815.9061492', '302381.738912525', '5832.9126', '0', '0', '727799.2406', '293275.040549123', '24666.5213316067', '523558.64999332', '33097.586059385', '0', '0', '43977.86634426', '0', '40544.4', '137287.266', '0', '0', '13848.084', '75816', '941500.076670876', '134474.8875', '262314.702862066', '33472.845', '16731.198', '37179', '779233.83', '307655.832', '69342.1098416667', '500689.319970134', '31375.00783332', '18152.1', '32787.504', '8851.77679575', '53718.309', '26130', '251556', '22477.5', '0', '72138.816', '17784', '695660.98115375', '155139.6', '247782.546', '41324.5', '16447.607', '62696.16', '811835.37', '316800', '82800', '550360.8', '97968', '17865.9', '7690.896', '0', '67283.691', '60366', '154266.5', '27750', '0', '91854', '0', '555217.1235625', '146417.25', '245535.4', '41324.5', '15460.5', '83432.16', '929217.5418', '246816', '82800', '683280', '75549', '32352', '23915.088', '33210', '38260.9', '30234', '24063.5', '27750', '144787.5', '93450', '0', '935552.5120265', '185146.121616', '449048.96125', '41324.5', '28825.5', '108866.808', '707877.5382', '139032', '44308.8', '446085.9', '76708.8', '36000', '41674.8', '7790', '72730.25', '28776', '0', '32306.25', '159517.2385', '93666.27', '0', '957785.424204', '206933.114484', '496663.33875', '41324.5', '31960.5', '69308.58', '762896.4', '117804.12', '35280', '415632.15', '65569.2', '36000', '8459.712', '45829.8', '65892.9', '55386', '21343.5', '24363.75', '105368.3615', '95302.98', '0', '781830.7778715', '217120.75', '401614.5', '41324.5', '31960.5', '87361.392', '807267.51', '214847.88', '35280', '568043.1', '33483', '36000', '0', '10750.2', '66465.95', '36414', '175073.452', '22250', '17807.75', '95675', '0', '759116.635956', '226902.475', '334615.5', '41324.5', '31960.5', '105864.58224', '687494.55', '433944', '115178.4', '458583.44544', '71412', '36000', '37688.01696', '0', '12826.9', '44694', '106231.248', '35716.25', '67533.75', '135729.5', '0', '634475.3727585', '161980.6625', '241990.15875', '38646.6724', '29889.4596', '131383.50336', '485932.656', '180624', '116934.055056', '443477.01696', '97617.24', '36000', '8840.39904', '33582.6', '109366.2', '72786', '15561', '56796.25', '83375', '145125', '0', '778201.697970613', '284007.7375', '297008.17125', '47390.9366', '36652.3014', '156986.7264', '613765.68', '254256', '154342.562544', '499512.0876', '98854.56', '44329.554', '0', '7877.4', '76521.8', '64506', '32805', '78921.25', '83375', '145125', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#ab63fa', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=VA', \n  hovertextsrc: 'sumon23:205:203a94', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Lingerie', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Activewear', 'Lingerie'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=VA<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace5 = {\n  mode: 'markers', \n  name: 'Review type=Net Profit/(Loss) after Tax', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:ccbf1d', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:207c3e', \n  y: ['656506.447985846', '2324430.21040714', '2789125.25716008', '1648719.41000399', '1132768.21335753', '1779562.33253512', '-2227591.46823751', '-1779151.37668471', '-1678009.73429829', '932634.351742139', '1320190.66795535', '3111042.73470144', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-682886.242997647', '-710626.929479647', '-189637.192875224', '508638.027690582', '454496.682794292', '465269.986729009', '586591.723070918', '546497.899589698', '504116.561150697', '543943.644278494', '-22735.3433983356', '539986.061236932', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#FFA15A', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Net Profit/(Loss) after Tax', \n  hovertextsrc: 'sumon23:205:25610a', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Net Profit/(Loss) after Tax<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace6 = {\n  mode: 'markers', \n  name: 'Review type=EBITDA', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:7f5fb2', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:cada9c', \n  y: ['1734598.74357878', '3580511.78157838', '4104380.17866117', '2847975.23718251', '2290669.58480627', '3014360.25782268', '-1162830.80440727', '-737294.236065078', '-620177.270478738', '2184906.54112075', '2591787.97715963', '4587473.74070199', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-34301.4242246228', '-58834.540073767', '467004.711364368', '1197498.27023728', '1131972.24651649', '1147367.52184411', '1289459.99982777', '1233897.22494098', '1198475.56286767', '1242344.60229636', '633221.02562791', '1241999.28252684', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#19d3f3', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=EBITDA', \n  hovertextsrc: 'sumon23:205:b914af', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=EBITDA<br>Month=%{x}<br>Amount USD =%{y}'\n};\ntrace7 = {\n  mode: 'markers', \n  name: 'Review type=Cash Profit/(Loss) after Tax', \n  type: 'scattergl', \n  xsrc: 'sumon23:205:f2eacc', \n  x: ['2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00', '2019-07-01 00:00:00', '2019-08-01 00:00:00', '2019-09-01 00:00:00', '2019-10-01 00:00:00', '2019-11-01 00:00:00', '2019-12-01 00:00:00', '2020-01-01 00:00:00', '2020-02-01 00:00:00', '2020-03-01 00:00:00', '2020-04-01 00:00:00', '2020-05-01 00:00:00', '2020-06-01 00:00:00'], \n  ysrc: 'sumon23:205:713fe5', \n  y: ['1106704.27437474', '2774628.03679603', '3239323.08354897', '2098917.23639288', '1582966.03974642', '2229760.15892401', '-1777393.64184862', '-1328953.55029582', '-1227811.9079094', '1382832.17813103', '1770388.49434424', '3561240.56109033', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '-502025.242997647', '-529765.929479647', '-8776.19287522364', '689499.027690582', '635357.682794292', '646130.986729009', '767452.723070918', '727358.899589698', '684977.561150697', '724804.644278494', '158125.656601664', '720847.061236932', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], \n  xaxis: 'x', \n  yaxis: 'y', \n  marker: {\n    color: '#FF6692', \n    symbol: 'circle'\n  }, \n  hoverlabel: {namelength: 0}, \n  showlegend: true, \n  legendgroup: 'Review type=Cash Profit/(Loss) after Tax', \n  hovertextsrc: 'sumon23:205:8f1e73', \n  hovertext: ['Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'Sweater', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL', 'SQBL'], \n  hovertemplate: '<b>%{hovertext}</b><br><br>Review type=Cash Profit/(Loss) after Tax<br>Month=%{x}<br>Amount USD =%{y}'\n};\nexport const RevenueData = [trace1, trace2, trace3, trace4, trace5, trace6, trace7];\nexport const Revenuelayout = {\n  xaxis: {\n    title: {text: 'Month'}, \n    anchor: 'y', \n    domain: [0.0, 0.98]\n  }, \n  yaxis: {\n    title: {text: 'Amount USD '}, \n    anchor: 'x', \n    domain: [0.0, 1.0]\n  }, \n  height: 600, \n  legend: {tracegroupgap: 0}, \n  margin: {t: 60}, \n  template: {\n    data: {\n      bar: [\n        {\n          type: 'bar', \n          marker: {line: {\n              color: '#E5ECF6', \n              width: 0.5\n            }}, \n          error_x: {color: '#2a3f5f'}, \n          error_y: {color: '#2a3f5f'}\n        }\n      ], \n      table: [\n        {\n          type: 'table', \n          cells: {\n            fill: {color: '#EBF0F8'}, \n            line: {color: 'white'}\n          }, \n          header: {\n            fill: {color: '#C8D4E3'}, \n            line: {color: 'white'}\n          }\n        }\n      ], \n      carpet: [\n        {\n          type: 'carpet', \n          aaxis: {\n            gridcolor: 'white', \n            linecolor: 'white', \n            endlinecolor: '#2a3f5f', \n            minorgridcolor: 'white', \n            startlinecolor: '#2a3f5f'\n          }, \n          baxis: {\n            gridcolor: 'white', \n            linecolor: 'white', \n            endlinecolor: '#2a3f5f', \n            minorgridcolor: 'white', \n            startlinecolor: '#2a3f5f'\n          }\n        }\n      ], \n      mesh3d: [\n        {\n          type: 'mesh3d', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      contour: [\n        {\n          type: 'contour', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      heatmap: [\n        {\n          type: 'heatmap', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      scatter: [\n        {\n          type: 'scatter', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      surface: [\n        {\n          type: 'surface', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      barpolar: [\n        {\n          type: 'barpolar', \n          marker: {line: {\n              color: '#E5ECF6', \n              width: 0.5\n            }}\n        }\n      ], \n      heatmapgl: [\n        {\n          type: 'heatmapgl', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      histogram: [\n        {\n          type: 'histogram', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      parcoords: [\n        {\n          line: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}, \n          type: 'parcoords'\n        }\n      ], \n      scatter3d: [\n        {\n          line: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}, \n          type: 'scatter3d', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scattergl: [\n        {\n          type: 'scattergl', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      choropleth: [\n        {\n          type: 'choropleth', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      scattergeo: [\n        {\n          type: 'scattergeo', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      histogram2d: [\n        {\n          type: 'histogram2d', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ], \n      scatterpolar: [\n        {\n          type: 'scatterpolar', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      contourcarpet: [\n        {\n          type: 'contourcarpet', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }\n        }\n      ], \n      scattercarpet: [\n        {\n          type: 'scattercarpet', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scattermapbox: [\n        {\n          type: 'scattermapbox', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scatterpolargl: [\n        {\n          type: 'scatterpolargl', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      scatterternary: [\n        {\n          type: 'scatterternary', \n          marker: {colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }}\n        }\n      ], \n      histogram2dcontour: [\n        {\n          type: 'histogram2dcontour', \n          colorbar: {\n            ticks: '', \n            outlinewidth: 0\n          }, \n          colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }\n      ]\n    }, \n    layout: {\n      geo: {\n        bgcolor: 'white', \n        showland: true, \n        lakecolor: 'white', \n        landcolor: '#E5ECF6', \n        showlakes: true, \n        subunitcolor: 'white'\n      }, \n      font: {color: '#2a3f5f'}, \n      polar: {\n        bgcolor: '#E5ECF6', \n        radialaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        angularaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }\n      }, \n      scene: {\n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }, \n        zaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          gridwidth: 2, \n          linecolor: 'white', \n          zerolinecolor: 'white', \n          showbackground: true, \n          backgroundcolor: '#E5ECF6'\n        }\n      }, \n      title: {x: 0.05}, \n      xaxis: {\n        ticks: '', \n        gridcolor: 'white', \n        linecolor: 'white', \n        automargin: true, \n        zerolinecolor: 'white', \n        zerolinewidth: 2\n      }, \n      yaxis: {\n        ticks: '', \n        gridcolor: 'white', \n        linecolor: 'white', \n        automargin: true, \n        zerolinecolor: 'white', \n        zerolinewidth: 2\n      }, \n      mapbox: {style: 'light'}, \n      ternary: {\n        aaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        baxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        caxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white'\n        }, \n        bgcolor: '#E5ECF6'\n      }, \n      colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n      hovermode: 'closest', \n      colorscale: {\n        diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n        sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n        sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n      }, \n      hoverlabel: {align: 'left'}, \n      plot_bgcolor: '#E5ECF6', \n      paper_bgcolor: 'white', \n      shapedefaults: {line: {color: '#2a3f5f'}}, \n      annotationdefaults: {\n        arrowhead: 0, \n        arrowcolor: '#2a3f5f', \n        arrowwidth: 1\n      }\n    }\n  }\n};\n","import React, { Component } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\n\nimport {\n  Form,\n  Input,\n  Select,\n  Row,\n  Col,\n  Card,\n  Modal,\n  Drawer,\n  Button,\n  Icon\n} from \"antd\";\n\n/* import {\n  Scatter,40\n  Contrast,\n  ActualBar,\n  DoubleLine,\n  BarBasic\n} from \"../components/charts\"; */\nimport Plotly from \"./plotly\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport { dataChart, layoutChart } from \"./DataScatter\";\nimport { dataArea, layoutArea } from \"./DataArea\";\nimport{BusinessData,BusinessLayout} from \"./BusinessData\";\nimport { RevenueData, Revenuelayout } from \"./RevenueScatter\";\nconst Plot = createPlotlyComponent(Plotly);\nconst { Option } = Select;\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n      return (\n        <Modal\n          visible={visible}\n          title=\"Create a new collection\"\n          okText=\"Create\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"Project ID\">\n              {getFieldDecorator(\"projectId\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Project Name\">\n              {getFieldDecorator(\"projectName\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the project name of collection!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <div className=\"hr-modal-inside-ng\">\n              <hr />\n            </div>\n            <p>Project Site Address</p>\n            <Form.Item label=\"Address 1\">\n              {getFieldDecorator(\"address_1\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the address of collection!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Address 2\">\n              {getFieldDecorator(\"address 2\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n              {getFieldDecorator(\"city\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Description\" className=\"mb-0\">\n              {getFieldDecorator(\"description\")(<Input type=\"textarea\" />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      modalVisible: false,\n      drawerVisible: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      console.log(\"Received values of form: \", values);\n      form.resetFields();\n      this.setState({ modalVisible: false });\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <h1 className=\"page-heading\">Dashboard</h1>\n            </Col>\n            <Col>\n              <ul className=\"button-actions\">\n                <li>\n                  {/* <div>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                      Start Project\n                    </Button>\n                    <Modal\n                      title=\"New project - Project Details \"\n                      visible={this.state.visible}\n                      onOk={this.handleOk}\n                      onCancel={this.handleCancel}\n                    >\n                      <p>Some contents...</p>\n                      <p>Some contents...</p>\n                      <p>Some contents...</p>\n                    </Modal>\n                  </div> */}\n                  <div>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                      Start Project\n                    </Button>\n                    <CollectionCreateForm\n                      wrappedComponentRef={this.saveFormRef}\n                      visible={this.state.modalVisible}\n                      onCancel={this.handleCancel}\n                      onCreate={this.handleCreate}\n                    />\n                  </div>\n                </li>\n                <li>\n                  <a href=\"\">\n                    <Button type=\"primary\" ghost>\n                      Create New Proposal\n                    </Button>\n                  </a>\n                </li>\n              </ul>\n            </Col>\n          </Row>\n        </div>\n\n        <div id=\"content\">\n          <Row gutter={24} type=\"flex\">\n            <Col xs={24} sm={24} md={12} lg={6} className=\"c-mb\">\n              <Link to='/bid-requests'>\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n                    <div className=\"card-statistics-icon\">\n                      <Icon type=\"unordered-list\" />\n                    </div>\n                    <div className=\"card-statistics-content\">\n                      <h4 className=\"statistics-number\">51240</h4>\n                      <span className=\"statistics-label\">Change Orders</span>\n                    </div>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6} className=\"c-mb\">\n              <Link to='/request-for-proposal'>\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n                    <div className=\"card-statistics-icon\">\n                      <Icon type=\"border-outer\" />\n                    </div>\n                    <div className=\"card-statistics-content\">\n                      <h4 className=\"statistics-number\">85974</h4>\n                      <span className=\"statistics-label\">Request for Proposals</span>\n                    </div>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6} className=\"c-mb\">\n              <Link to='/proposals'>\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n                    <div className=\"card-statistics-icon\">\n                      <Icon type=\"solution\" />\n                    </div>\n                    <div className=\"card-statistics-content\">\n                      <h4 className=\"statistics-number\">35208</h4>\n                      <span className=\"statistics-label\">Proposals</span>\n                    </div>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={6} className=\"c-mb\">\n              <Link to='/projects'>\n                <Card\n                  bordered={false}\n                  className=\"mi-card mi-card-boxshadow card-statistics\"\n                  style={{ minHeight: \"100%\" }}\n                >\n                  <div className=\"card-statistics-block\">\n                    <div className=\"card-statistics-icon\">\n                      <Icon type=\"deployment-unit\" />\n                    </div>\n                    <div className=\"card-statistics-content\">\n                      <h4 className=\"statistics-number\">12543</h4>\n                      <span className=\"statistics-label\">Projects</span>\n                    </div>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n          </Row>\n          <Row gutter={24}>\n            <Col xs={24} sm={24} md={24} lg={24} xl={12} className=\"c-mb\">\n              <Card\n                title=\"Expense in BDT by category over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                {/* <ActualBar /> */}\n\n\n                <Plot\n                  data={dataChart}\n                  layout={layoutChart}\n                  style={{ width: '100% !important' }}\n                  responsive={true}\n                />\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={24} xl={12} className=\"c-mb\">\n              <Card\n                title=\"Expense in BDT by description over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n\n                <Plot style={{ width: '100% !important' }}\n                  data={dataArea}\n                  layout={layoutArea}\n\n                  responsive={true}\n                />\n                {/* <DoubleLine /> */}\n              </Card>\n            </Col>\n\n            <Col xs={24} sm={24} md={24} lg={24} xl={12} className=\"c-mb\">\n              <Card\n                title=\"Revenue in USD by Business-Segment over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                {/* <ActualBar /> */}\n\n                \n                <Plot\n                  data={RevenueData}\n                  layout={Revenuelayout}\n                  style={{ width: '100% !important' }}\n                  responsive={true}\n                />\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={24} xl={12} className=\"c-mb\">\n              <Card\n                title=\"Revenue in USD by Business-Segment over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                {/* <ActualBar /> */}\n\n                 \n                <Plot\n                  data={BusinessData}\n                  layout={BusinessLayout}\n                  style={{ width: '100% !important' }}\n                  responsive={true}\n                />\n              </Card>\n            </Col>\n            {/* <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Revenue in USD by customer\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <BarBasic />\n              </Card>\n            </Col>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost in BDT by P&L heading\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <Contrast />\n              </Card>\n            </Col>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost by Activity\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <Scatter />\n              </Card>\n            </Col> */}\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Task’s\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Task’s yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                  <div>\n                    <Button type=\"primary\" onClick={this.showDrawer}>\n                      Add New Task{\" \"}\n                    </Button>\n                    <Drawer\n                      title=\"Add New Task\"\n                      width={400}\n                      placement=\"right\"\n                      closable={false}\n                      onClose={this.onClose}\n                      visible={this.state.drawerVisible}\n                      className=\"new-task-drawer\"\n                    >\n                      <div>\n                        <Form>\n                          <Form.Item label=\"Task Name\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <Form.Item label=\"Priority\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <Form.Item label=\"Type\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <div>\n                            <hr />\n                          </div>\n                          <p>\n                            <small>Assigned To</small>\n                          </p>\n\n                          <Button type=\"primary\" ghost>\n                            Add or invite users\n                          </Button>\n                          <div>\n                            <hr />\n                          </div>\n                          <Form.Item label=\"Proposal / Project\">\n                            <Select defaultValue=\"lucy\">\n                              <Option value=\"jack\">Jack</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                              <Option value=\"disabled\" disabled>\n                                Disabled\n                              </Option>\n                              <Option value=\"Yiminghe\">yiminghe</Option>\n                            </Select>\n                          </Form.Item>\n                          <Form.Item label=\"Due Date\"></Form.Item>\n                          <Form.Item label=\"Status\">\n                            <Select defaultValue=\"Draft\">\n                              <Option value=\"draft\">Draft</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                              <Option value=\"disabled\" disabled>\n                                Disabled\n                              </Option>\n                              <Option value=\"Yiminghe\">yiminghe</Option>\n                            </Select>\n                          </Form.Item>\n                          <Form.Item label=\"Description\">\n                            <Input type=\"textarea\" />\n                          </Form.Item>\n                          <Form.Item>\n                            <Button\n                              type=\"primary\"\n                              ghost\n                              style={{ marginRight: \"8px\" }}\n                            >\n                              Save\n                            </Button>\n                            <Button type=\"primary\">Add Next Task</Button>\n                          </Form.Item>\n                        </Form>\n                      </div>\n                    </Drawer>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"My Projects\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Projects yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                  <div>\n                    <Button type=\"primary\">Start New Project </Button>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Recently Added\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Task’s yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Row, Col, Card, Input, Table, Button, Tag, Divider } from \"antd\";\n\nconst { Search } = Input;\n\nconst columns = [\n    {\n      title: 'Order Number',\n      dataIndex: 'oNumber',\n      key: 'oNumber',\n    },\n    {\n      title: 'Confirmation Date',\n      dataIndex: 'confDate',\n      key: 'confDate',\n    },\n    {\n      title: 'Customer',\n      dataIndex: 'customer',\n      key: 'customer',\n    },\n    {\n      title: 'Salesperson',\n      dataIndex: 'salePer',\n      key: 'salePer',\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      key: 'total',\n    },\n    {\n      title: 'Invoice Status',\n      key: 'invoStatus',\n      dataIndex: 'tags',\n      render: tags => (\n        <span>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </span>\n      ),\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <a>Edit {record.name}</a>\n          <Divider type=\"vertical\" />\n          <a>Delete</a>\n        </span>\n      ),\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '2',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '3',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '4',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '5',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '6',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '7',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '8',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '9',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '10',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n  ];\n\nclass BidRequests extends Component {\n    render () {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Bid Requests</h1>\n                        </Col>\n                        <Col>\n                            <ul className=\"button-actions\">\n                                <li>\n                                    <Search\n                                        placeholder=\"Search...\"\n                                        style={{ width: 300 }}\n                                    />\n                                </li>\n                            </ul>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Card\n                        bordered={false}\n                        className=\"mi-card mi-card-boxshadow card-filled-table\"\n                    >\n                        <Table columns={columns} dataSource={data} /> \n                    </Card>\n                    <div className=\"button-iocn-foo-fixed-xl\">\n                      <Button type=\"primary\" shape=\"circle\" size=\"large\" icon=\"plus\"  />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default BidRequests;","import React, { Component } from \"react\";\nimport { Row, Col, Card, Input, Table, Button, Tag, Divider } from \"antd\";\n\nconst { Search } = Input;\n\nconst columns = [\n    {\n      title: 'Order Number',\n      dataIndex: 'oNumber',\n      key: 'oNumber',\n    },\n    {\n      title: 'Confirmation Date',\n      dataIndex: 'confDate',\n      key: 'confDate',\n    },\n    {\n      title: 'Customer',\n      dataIndex: 'customer',\n      key: 'customer',\n    },\n    {\n      title: 'Salesperson',\n      dataIndex: 'salePer',\n      key: 'salePer',\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      key: 'total',\n    },\n    {\n      title: 'Invoice Status',\n      key: 'invoStatus',\n      dataIndex: 'tags',\n      render: tags => (\n        <span>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </span>\n      ),\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <a>Edit {record.name}</a>\n          <Divider type=\"vertical\" />\n          <a>Delete</a>\n        </span>\n      ),\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '2',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '3',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '4',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '5',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '6',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '7',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '8',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '9',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '10',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n  ];\n\nclass RequestProposal extends Component {\n    render () {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Request for Proposal</h1>\n                        </Col>\n                        <Col>\n                            <ul className=\"button-actions\">\n                                <li>\n                                    <Search\n                                        placeholder=\"Search...\"\n                                        style={{ width: 300 }}\n                                    />\n                                </li>\n                            </ul>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Card\n                        bordered={false}\n                        className=\"mi-card mi-card-boxshadow card-filled-table\"\n                    >\n                        <Table columns={columns} dataSource={data} /> \n                    </Card>\n                    <div className=\"button-iocn-foo-fixed-xl\">\n                      <Button type=\"primary\" shape=\"circle\" size=\"large\" icon=\"plus\"  />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default RequestProposal;","\nimport { Chart, Tooltip, Axis, Legend, Bar, Line} from \"viser-react\";\nimport * as React from \"react\";\n\n\nclass ChartHistoryGroupColumn extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    \n    return (\n      <Chart forceFit height={400} data={this.props.chartData}>\n        <Tooltip />\n        <Axis />\n        <Legend />\n        <Bar\n          position=\"keySelect*average\"\n          color=\"name\"\n          adjust={[{ type: \"dodge\", marginRatio: 1 / 32 }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default ChartHistoryGroupColumn;\n","import { Chart, Tooltip, Axis, Legend, Coord, Guide, Pie } from 'viser-react';\nimport * as React from 'react';\nconst DataSet = require('@antv/data-set');\n\nconst sourceData = [\n  { item: 'Groceries', count: 40 },\n  { item: 'Shopping', count: 21 },\n  { item: 'Utility Bill', count: 17 },\n  { item: 'Food', count: 13 },\n  { item: 'Mokka', count: 9 }\n];\n\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst dv = new DataSet.View().source(sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst data = dv.rows;\n\nclass ChartBreakdownDonut extends React.Component {\n  render() {\n    return (\n      <Chart width={400} height={400} data={data} scale={scale}>\n        <Tooltip showTitle={true} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n    );\n  }\n}\nexport default ChartBreakdownDonut;\n\n\n\n\n\n\n","import React, { Component } from \"react\";\n\nimport { Row, Col, Card, Button, Icon, Progress } from \"antd\";\n\nimport ChartHistoryGroupColumn from \"../components/charts/ChartHistoryGroupColumn\";\nimport ChartBreakdownDonut from \"../components/charts/ChartBreakdownDonut\";\nconst DataSet = require(\"@antv/data-set\");\nconst sourceDataDaily = [\n  {\n    name: \"Recieved\",\n    \"1AM\": 18.9,\n    \"2AM\": 28.8,\n    \"3AM\": 39.3,\n    \"4AM\": 75.4,\n    \"5AM\": 26.4,\n    \"6AM\": 11.4,\n    \"7AM\": 35.4,\n    \"8AM\": 50.4,\n    \"9AM\": 62.4,\n    \"10AM\": 25.4,\n    \"11AM\": 67.4,\n    \"12PM\": 98.4,\n    \"1PM\": 60.9,\n    \"2PM\": 45.8,\n    \"3PM\": 33.3,\n    \"4PM\": 65.4,\n    \"5PM\": 89.4,\n    \"6PM\": 75.4,\n    \"7PM\": 19.4,\n    \"8PM\": 12.4,\n    \"9PM\": 36.4,\n    \"10PM\": 20.4,\n    \"11PM\": 19.4,\n    \"12PM\": 95.4,\n  },\n  {\n    name: \"Sent\",\n    \"1AM\": 90.9,\n    \"2AM\": 71.8,\n    \"3AM\": 99.3,\n    \"4AM\": 25.4,\n    \"5AM\": 65.4,\n    \"6AM\": 85.4,\n    \"7AM\": 47.4,\n    \"8AM\": 36.4,\n    \"9AM\": 22.4,\n    \"10AM\": 33.4,\n    \"11AM\": 88.4,\n    \"12PM\": 44.4,\n    \"1PM\": 66.9,\n    \"2PM\": 67.8,\n    \"3PM\": 20.3,\n    \"4PM\": 19.4,\n    \"5PM\": 37.4,\n    \"6PM\": 86.4,\n    \"7PM\": 54.4,\n    \"8PM\": 77.4,\n    \"9PM\": 44.4,\n    \"10PM\": 25.4,\n    \"11PM\": 37.4,\n    \"12PM\": 46.4,\n  }\n];\nconst sourceDataWeekly = [\n  {\n    name: \"Recieved\",\n    \"Sat.\": 98.9,\n    \"Sun.\": 28.8,\n    \"Mon.\": 69.3,\n    \"Tue.\": 81.4,\n    \"Wed.\": 47,\n    \"Thu.\": 20.3,\n    \"Fri.\": 24\n  },\n  {\n    name: \"Sent\",\n    \"Sat.\": 18.4,\n    \"Sun.\": 33.2,\n    \"Mon.\": 54.5,\n    \"Tue.\": 99.7,\n    \"Wed.\": 52.6,\n    \"Thu.\": 45.5,\n    \"Fri.\": 67.4\n  }\n];\nconst sourceDataMonthly = [\n  {\n    name: \"Recieved\",\n    \"Jan.\": 69.9,\n    \"Feb.\": 25.8,\n    \"Mar.\": 70.3,\n    \"Apr.\": 67.4,\n    \"May.\": 65,\n    \"Jun.\": 45.3,\n    \"Jul.\": 82,\n    \"Sep.\": 72.6,\n    \"Oct.\": 65.6,\n    \"Nov.\": 45.6,\n    \"Dec.\": 90.6\n  },\n  {\n    name: \"Sent\",\n    \"Jan.\": 48.9,\n    \"Feb.\": 38.8,\n    \"Mar.\": 40.3,\n    \"Apr.\": 31.4,\n    \"May.\": 47,\n    \"Jun.\": 40.3,\n    \"Jul.\": 24,\n    \"Sep.\": 38.6,\n    \"Oct.\": 38.6,\n    \"Nov.\": 38.6,\n    \"Dec.\": 38.6\n  }\n];\nclass BankPersonal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n    this.onChangeChart = this.onChangeChart.bind(this);\n  }\n  componentDidMount() {\n    const dv = new DataSet.View().source(sourceDataDaily);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"1AM\",\"2AM\",\"3AM\",\"4AM\",\"5AM\",\"6AM\",\"7AM\",\"8AM\",\"9AM\",\"10AM\",\"11AM\",\"12PM\",\"1PM\",\"2PM\",\"3PM\",\"4PM\",\"5PM\",\"6PM\",\"7PM\",\"8PM\",\"9PM\",\"10PM\",\"11PM\",\"12PM\"],\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data = dv.rows;\n    this.setState({ chartData: data, selectedKey: \"daily\" });\n  }\n\n  onChangeChart(value) {\n    if (value === \"daily\") {\n      const dv = new DataSet.View().source(sourceDataDaily);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"1AM\",\"2AM\",\"3AM\",\"4AM\",\"5AM\",\"6AM\",\"7AM\",\"8AM\",\"9AM\",\"10AM\",\"11AM\",\"12PM\",\"1PM\",\"2PM\",\"3PM\",\"4PM\",\"5PM\",\"6PM\",\"7PM\",\"8PM\",\"9PM\",\"10PM\",\"11PM\",\"12PM\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    } else if (value === \"weekly\") {\n      const dv = new DataSet.View().source(sourceDataWeekly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Sat.\",\"Sun.\",\"Mon.\",\"Tue.\",\"Wed.\",\"Thu.\",\"Fri.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    } else if (value === \"monthly\") {\n      \n\n      const dv = new DataSet.View().source(sourceDataMonthly);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Jan.\",\"Feb.\",\"Mar.\",\"Apr.\",\"May.\",\"Jun.\",\"Jul.\",\"Sep.\",\"Oct.\",\"Nov.\",\"Dec.\"],\n        key: \"keySelect\",\n        value: \"average\"\n      });\n      const data = dv.rows;\n      this.setState({ chartData: data, selectedKey: value });\n    }\n    console.log(\"Selected :\" + value);\n    console.log(this.state.chartData);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <h1 className=\"page-heading\">Bank Personal</h1>\n            </Col>\n          </Row>\n        </div>\n        <div id=\"content\">\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={12} lg={12} xl={6} className=\"c-mb\">\n              <Card\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow card-statistics-deposit\"\n              >\n                <div className=\"card-statistics-block\">\n                  <h2 className=\"statistics-number\">\n                    <span className=\"price-sign\">$</span>\n                    25,523\n                  </h2>\n                  <div className=\"statistics-label\">\n                    <span>Deposits:</span> <span>$15,000</span>\n                  </div>\n                  <div className=\"statistics-deposit-suffix\">+5.2% ($653)</div>\n                  <div className=\"my-5\">\n                    <Button type=\"primary\" shape=\"round\" size=\"large\" block>\n                      Add Funds\n                    </Button>\n                  </div>\n                  <div className=\"card-statistics-deposit-footer\">\n                    <div className=\"card-statistics-deposit-footer-block\">\n                      <ul className=\"me\">\n                        <li>\n                          <div className=\"statistics-label\">\n                            <span>Goal:</span> <span>$55,000</span>\n                          </div>\n                          <Progress\n                            strokeColor={{\n                              from: \"#108ee9\",\n                              to: \"#87d068\"\n                            }}\n                            percent={77}\n                          />\n                        </li>\n                        <li>\n                          <div className=\"statistics-label\">\n                            <span>Duration:</span> <span>4year</span>\n                          </div>\n                          <Progress\n                            strokeColor={{\n                              from: \"#108ee9\",\n                              to: \"#92278f\"\n                            }}\n                            percent={57}\n                          />\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={12} xl={11} className=\"c-mb\">\n              <Card\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow card-statistics-accounts\"\n              >\n                <div>\n                  <div className=\"ant-card-head-title p-0 mb-1\">\n                    Bank Accounts\n                  </div>\n                  <ul>\n                    <li>\n                      <div className=\"card-b-float\">\n                        <div className=\"card-b-float-icon\">\n                          <Icon type=\"bank\" />\n                        </div>\n                        <div className=\"card-b-float-block\">\n                          <div className=\"card-b-float-block-cell\">\n                            <h4 className=\"card-b-float-title\">Checking</h4>\n                            <span>...5263</span>\n                          </div>\n                          <div className=\"card-b-float-block-cell\">\n                            <h5 className=\"card-b-float-title\">$523.00</h5>\n                            <span>Balance</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div className=\"card-b-float\">\n                        <div className=\"card-b-float-icon\">\n                          <Icon type=\"bank\" />\n                        </div>\n                        <div className=\"card-b-float-block\">\n                          <div className=\"card-b-float-block-cell\">\n                            <h4 className=\"card-b-float-title\">Savings</h4>\n                            <span>...6879</span>\n                          </div>\n                          <div className=\"card-b-float-block-cell\">\n                            <h5 className=\"card-b-float-title\">$895.00</h5>\n                            <span>Balance</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n\n                  <div className=\"ant-card-head-title p-0 mt-3 mb-1\">\n                    Credit Cards\n                  </div>\n                  <ul>\n                    <li>\n                      <div className=\"card-b-float\">\n                        <div className=\"card-b-float-icon\">\n                          <Icon type=\"credit-card\" />\n                        </div>\n                        <div className=\"card-b-float-block\">\n                          <div className=\"card-b-float-block-cell\">\n                            <h4 className=\"card-b-float-title\">Visa</h4>\n                            <span>...9263</span>\n                          </div>\n                          <div className=\"card-b-float-block-cell\">\n                            <h5 className=\"card-b-float-title\">$730.00</h5>\n                            <span>Balance</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                    <li>\n                      <div className=\"card-b-float\">\n                        <div className=\"card-b-float-icon\">\n                          <Icon type=\"credit-card\" />\n                        </div>\n                        <div className=\"card-b-float-block\">\n                          <div className=\"card-b-float-block-cell\">\n                            <h4 className=\"card-b-float-title\">Mastercard</h4>\n                            <span>...4279</span>\n                          </div>\n                          <div className=\"card-b-float-block-cell\">\n                            <h5 className=\"card-b-float-title\">$495.00</h5>\n                            <span>Balance</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={12} xl={7} className=\"c-mb\">\n              <Card\n                title=\"Recent Transactions\"\n                extra={<a href=\"#\">View all</a>}\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n              >\n                <ul className=\"transaction-lists\">\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Starbucks</span>\n                      <span>$5.10</span>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Whole Foods</span>\n                      <span>$20.50</span>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Universal Studios</span>\n                      <span>$16.25</span>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Eastsa</span>\n                      <span>$3.15</span>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Peet's Coffee</span>\n                      <span>$11.36</span>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"transaction-item\">\n                      <span>Target</span>\n                      <span>$30.22</span>\n                    </div>\n                  </li>\n                </ul>\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={{span:24, order:5}} lg={24} xl={{span: 16, order: 4}} className=\"c-mb\">\n              <Card\n                title=\"History\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n              >\n                <div>\n                  <ul className=\"history-filters\">\n                    <li\n                      className={\n                        this.state.selectedKey === \"daily\" ? \"active\" : null\n                      }\n                    >\n                      <span onClick={() => this.onChangeChart(\"daily\")}>\n                        Daily\n                      </span>\n                    </li>\n                    <li\n                      className={\n                        this.state.selectedKey === \"weekly\" ? \"active\" : null\n                      }\n                    >\n                      <span onClick={() => this.onChangeChart(\"weekly\")}>\n                        Weekly\n                      </span>\n                    </li>\n                    <li\n                      className={\n                        this.state.selectedKey === \"monthly\" ? \"active\" : null\n                      }\n                    >\n                      <span onClick={() => this.onChangeChart(\"monthly\")}>\n                        Monthly\n                      </span>\n                    </li>\n                  </ul>\n                  <ChartHistoryGroupColumn chartData={this.state.chartData} />\n                </div>\n              </Card>\n            </Col>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:8, order: 5}} className=\"c-mb\">\n              <Card\n                title=\"Breakdown\"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n              >\n                <div>\n                  <ChartBreakdownDonut />\n                </div>\n              </Card>\n            </Col>\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n            \n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BankPersonal;\n\n","import { Chart, Tooltip, Axis, Legend, Pie, Coord } from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 240 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n\nconst columns = [{title: 'Order Number',dataIndex: 'oNumber',key: 'oNumber',}]\n\nconst data = [\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  }]\n\n\n\n\n      return (\n        <Modal visible={visible}\n          title=\"Create a new collection\"\n          okText=\"\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        style={{overflowY:\"scroll\", maxHeight:\"500%\", marginTop:\"50px\", marginBottom:\"50px\"}}>\n         <Table columns={columns} dataSource={data} />\n        </Modal>\n      );\n    }\n  }\n);\n\nconst DataSet = require('@antv/data-set');\nconst scale = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\nconst scale1 = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\n\n\n\nconst sourceData12 = [\n  { item: 'A', count: 40 },\n  { item: 'B', count: 21 },\n  { item: 'C', count: 17 },\n  { item: 'D', count: 13 },\n  { item: 'E', count: 9 }\n];\n\n\n\n\nclass AnalyticalTest extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\noptions2: {\n            plotOptions: {\n              bar: {\n                horizontal: true,\n                dataLabels: {\n                  position: 'top',\n                },\n              }\n            },\n            dataLabels: {\n              enabled: false,\n              offsetX: -6,\n              style: {\n                fontSize: '12px',\n                colors: ['#fff']\n              }\n            },\n            stroke: {\n              show: true,\n              width: 1,\n              colors: ['#fff']\n            },\n\n            xaxis: {\n              categories: [\"\"],\n            }\n          },\n\n          series2:[],\n\n\n          series2:[],\n\n\n\n\n    books:[],\n     intHeader:[],\n     filter:[],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     l:[],\n     sourceData :[\n  { item: 'A', count: 20 }\n],\n\nsourceData_donut:[{ item: 'B', count: 2 }]\n\n      }\n\n\n   }\n\n showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n\n\n\n\n   componentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n\n\n  }\n\n   async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/sqd_api\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n\n      this.setState({books:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/intHeader\", { firstName: 'Mokka Ravi', lastName: 'Flintstone' });\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\n\n\n\nhandleSubmit = (e) => {\n     this.setState({value_x: e.target.value});\n };\n\nhandleSubmit1 = (e) => {\n    this.setState({value_y: e.target.value});\n  };\n\n\nhandleSubmit12 = (e) => {\n    e.preventDefault();\n\n     this.loadData(\n         {A:this.state.value_x, B:this.state.value_y}\n  );\n  };\n\n\nasync loadData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n const promise = await axios.post(Host.loginURL +\"/data\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n        }\n\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n//\n//      const d = [{'name': 'Actual','data': [this.state.Actual]}, {'name': 'Budget','data': [this.state.Budget]}]\n//      this.setState({c:['test']})\n     const d = [{'name': 'Actual','data': [1, 23]}, {'name': 'Budget','data': [1, 2,4,5]}]\n      this.setState({chart_data:chart_list})\n      console.log(data);\n    }\n\n}\n\n\nhandleSubmitDonut = (e) => {\n    e.preventDefault();\n    this.setState({value_donut: e.target.value});\n     this.DonutCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync DonutCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData_donut:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n\n\n\n\n\n\n   handleSubmitPie = (e) => {\n    e.preventDefault();\n    this.setState({value_pie: e.target.value});\n     this.PieCheckbox(\n         {Column:e.target.value }\n  );\n  };\nasync PieCheckbox(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var chart_list = []\n      var ct_list1 = []\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            }\n            else{}\n\n\n        }\n        const sd = [{ item: 'D', count: 8000}, { item: '2019/2001', count: 800}]\n         console.log(chart_list);\n      this.setState({sourceData:chart_list})\n      const d_data = [this.state.SQBL, this.state.SQBL-1, this.state.SQBL-2, this.state.SQCL, this.state.SQCL-1,\n                       this.state.SQBL-2]\n      this.setState({donut_data:value_list})\n\n    }\n\n}\n\n\n  render() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\n\n\n\n\n\n    return (\n\n    <div>\n        <div id=\"content\">\n           <Row type=\"flex\" gutter={24}>\n\n\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n            <Card\n                title=\"Group Bar chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n               <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_x} onChange={this.handleSubmit}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Xaxis</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n\n                   <select class=\"custom-select\"  value={this.state.value_y} onChange={this.handleSubmit1}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option  value=\"\" >Yaxis</option>\n                         {this.state.intHeader.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n\n\n    <React.Fragment>\n    <button onClick={this.handleSubmit12} className='btn btn-info' style={{marginLeft:\"10px\"}}\n      type='button'>OK</button>\n    </React.Fragment>\n   <React.Fragment>\n        <button onClick={this.showModal} className='btn btn-primary' style={{marginLeft:\"10px\"}}\n          type='button'>Table View</button>\n          <CollectionCreateForm\n              wrappedComponentRef={this.saveFormRef}\n              visible={this.state.modalVisible}\n              onCancel={this.handleCancel}\n              onCreate={this.handleCreate}\n          />\n    </React.Fragment>\n\n\n\n                  <ReactApexChart options={this.state.options2} series={this.state.chart_data} type=\"bar\" width=\"420\" height=\"350\" />\n             </div>\n         </Card>\n      </Col>\n\n\n  <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:12, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Donut chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n         <div id=\"chart\">\n        <select class=\"custom-select\"  value={this.state.value_donut} onChange={this.handleSubmitDonut}\n                    style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                     <option  value=\"\" >Xaxis</option>\n                     {this.state.books.map((value,index)=>\n                              {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                              style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                              )}\n\n\n                             </select>\n\n        <Chart forceFit height={400} data={don_data} scale={scale1}>\n        <Tooltip showTitle={false} />\n        <Axis />\n        <Legend dataKey=\"item\" />\n        <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n                             </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n\n\n </Row>\n\n\n<Row type=\"flex\" gutter={24}>\n\n\n\n\n    <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n\n        <Card\n                title=\"Pie chart \"\n                style={{ minHeight: \"100%\" }}\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n                     <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_pie} onChange={this.handleSubmitPie}\n                                style={{ width:\"110px\", marginLeft:\"800px\" }}>\n                                 <option  value=\"\" >Xaxis</option>\n                                 {this.state.books.map((value,index)=>\n                                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                          )}\n\n\n                                         </select>\n\n                    <Chart forceFit height={400} data={pie_data} scale={scale} >\n                        <Tooltip showTitle={false} />\n                        <Coord type=\"theta\" />\n                        <Axis />\n                        <Legend dataKey=\"item\" />\n                                        <Pie\n                      position=\"percent\"\n                      color=\"item\"\n                      style={{ stroke: '#fff', lineWidth: 1 }}\n                      label={['percent', {\n                        formatter: (val, item) => {\n                          return item.point.item + ': ' + val;\n                        }\n                      }]}\n                    />\n                   </Chart>\n                                         </div>\n\n\n        </Card>\n\n\n      </Col>\n\n\n </Row>\n\n\n  <Row type=\"flex\" gutter={24}>\n\n     </Row>\n\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\nexport default AnalyticalTest;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Select from 'react-select';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\nconst options = [\n  { value: 'a', label: 'Financial' },\n  { value: 'b', label: 'Operational' },\n  { value: 'c', label: 'Management' },\n];\n\n\nclass App extends React.Component {\n  state = {\n    selectedOptions: [],\n  }\n\n  handleChange = (selectedOptions) => {\n    this.setState({ selectedOptions });\n  }\n\n  handleSubmit = (event) => {\n\n        var x;\n        var userRights= []\n        for(var x=0; x<Object.keys(this.state.selectedOptions).length; x++){\n                userRights.push(this.state.selectedOptions[x]['value'])\n            }\n\n        alert(userRights)\n      }\n\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n    <div>\n    <form onSubmit={this.handleSubmit}>\n      <React.Fragment>\n      <Select\n        isMulti\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n      </React.Fragment>\n\n      <React.Fragment>\n      <ReactMultiSelectCheckboxes options={options} />\n      </React.Fragment>\n      <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n </div>\n\n    );\n  }\n}\n\nexport default App;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Operational\"\n\nconst DataSet = require('@antv/data-set');\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n\n\n\n\n\n             books:[],\n             intHeader:[],\n             filter:[],\n             select_group:\"Group\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Status\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAnalytical();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAnalytical()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({books:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({ loading: false })\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({value_bar: e.target.value});\n        this.setState({loading:true})\n         this.BarCheckbox(\n             {Column:e.target.value, Menu:Menu_name}\n      );\n };\n\n\nasync BarCheckbox(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n       <div id=\"chart\">\n                    <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_group}</option>\n                         {this.state.books.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    Table View</button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n               <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n            </div>\n    );\n  }\n}\nexport default LineChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Modal , Layout, Menu, Breadcrumb, Icon, Tree} from 'antd';\nimport LineChart from './chart';\n\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\nconst DataSet = require(\"@antv/data-set\");\n\nclass ChartDashboard extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Open Modal with async logic\n        </Button>\n        <Modal\n          title=\"Title\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <p>{ModalText}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChartDashboard;\n\n\n","import React, {Component} from \"react\";\n\nimport {\n    Row,\n    Col,\n    Card,\n    Table, \n    Divider, \n    Tag,\n    Input\n} from \"antd\";\n\nconst { Search } = Input;\n\n\nconst columns = [\n  {\n    title: 'Order Number',\n    dataIndex: 'oNumber',\n    key: 'oNumber',\n  },\n  {\n    title: 'Confirmation Date',\n    dataIndex: 'confDate',\n    key: 'confDate',\n  },\n  {\n    title: 'Customer',\n    dataIndex: 'customer',\n    key: 'customer',\n  },\n  {\n    title: 'Salesperson',\n    dataIndex: 'salePer',\n    key: 'salePer',\n  },\n  {\n    title: 'Total',\n    dataIndex: 'total',\n    key: 'total',\n  },\n  {\n    title: 'Invoice Status',\n    key: 'invoStatus',\n    dataIndex: 'tags',\n    render: tags => (\n      <span>\n        {tags.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a>Edit {record.name}</a>\n        <Divider type=\"vertical\" />\n        <a>Delete</a>\n      </span>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n  {\n    key: '1',\n    oNumber: 'DVO524',\n    confDate: '05/07/2019',\n    customer: 'Jone Deo',\n    salePer: 'SQBL',\n    total: '$26300',\n    tags: ['Success'],\n  },\n];\n\nclass Operations extends Component {\n    render () {\n        return(\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Operations</h1>\n                        </Col>\n                        <Col>\n                            <ul className=\"button-actions\">\n                                {/* <li>\n                                    <a href=\"\">\n                                        <Button type=\"primary\" ghost>\n                                        Create New Proposal\n                                        </Button>\n                                    </a>\n                                </li> */}\n                            </ul>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Row type=\"flex\" gutter={24}>\n                        <Col span={24} className=\"c-mb\">\n                            <Card\n                                //title=\"Sales\"\n                                bordered={false}\n                                className=\"mi-card mi-card-boxshadow\"\n                            >\n                                <div>\n                                    <Row type=\"flex\" justify=\"end\" className=\"table-filters\">\n                                        <Col className=\"mb-3\">\n                                            <Search\n                                                placeholder=\"input search text\"\n                                                onSearch={value => console.log(value)}\n                                                style={{ width: 300 }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <div>\n                                        <Table columns={columns} dataSource={data} />\n                                    </div>\n                                </div>\n                            </Card> \n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Operations;","import React, {Component} from \"react\";\n\nimport {\n    Row,\n    Col,\n    Card,\n    Table, \n    Divider, \n    Tag,\n    Input\n} from \"antd\";\n\nconst { Search } = Input;\n\n\nconst columns = [\n    {\n      title: 'Order Number',\n      dataIndex: 'oNumber',\n      key: 'oNumber',\n    },\n    {\n      title: 'Confirmation Date',\n      dataIndex: 'confDate',\n      key: 'confDate',\n    },\n    {\n      title: 'Customer',\n      dataIndex: 'customer',\n      key: 'customer',\n    },\n    {\n      title: 'Salesperson',\n      dataIndex: 'salePer',\n      key: 'salePer',\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n      key: 'total',\n    },\n    {\n      title: 'Invoice Status',\n      key: 'invoStatus',\n      dataIndex: 'tags',\n      render: tags => (\n        <span>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </span>\n      ),\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <a>Edit {record.name}</a>\n          <Divider type=\"vertical\" />\n          <a>Delete</a>\n        </span>\n      ),\n    },\n  ];\n  \n  const data = [\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n    {\n      key: '1',\n      oNumber: 'DVO524',\n      confDate: '05/07/2019',\n      customer: 'Jone Deo',\n      salePer: 'SQBL',\n      total: '$26300',\n      tags: ['Success'],\n    },\n  ];\n\nclass Finance extends Component {\n    render () {\n        return(\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Finance</h1>\n                        </Col>\n                        <Col>\n                            <ul className=\"button-actions\">\n                                {/* <li>\n                                    <a href=\"\">\n                                        <Button type=\"primary\" ghost>\n                                        Create New Proposal\n                                        </Button>\n                                    </a>\n                                </li> */}\n                            </ul>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Row type=\"flex\" gutter={24}>\n                        <Col span={24} className=\"c-mb\">\n                            <Card\n                                //title=\"Sales\"\n                                bordered={false}\n                                className=\"mi-card mi-card-boxshadow\"\n                            >\n                                <div>\n                                    <Row type=\"flex\" justify=\"end\" className=\"table-filters\">\n                                        <Col className=\"mb-3\">\n                                            <Search\n                                                placeholder=\"input search text\"\n                                                onSearch={value => console.log(value)}\n                                                style={{ width: 300 }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <div>\n                                        <Table columns={columns} dataSource={data} />\n                                    </div>\n                                </div>\n                            </Card> \n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Finance;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Host } from  \"../../../Host\";\nimport {\n    Form,\n    Input,\n    Divider,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Card,\n    Modal,\n    Drawer,\n    Checkbox,\n    Button,\n    Radio\n} from \"antd\";\n\nclass FormAccountSetting extends Component {\n constructor(props) {\n    super(props);\n    this.state = {\n     User_Name:'',\n     User_Email:'',\n     Account_type:'',\n     profile_up_data :JSON.parse(sessionStorage.getItem(\"session_data\")),\n    }\n }\n\n handleSubmit = (e) => {\n    const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    e.preventDefault();\n     const first_nam = e.target.fname.value;\n     const last_nam = e.target.lname.value;\n     const officePhone = e.target.officePhone.value;\n     const cellPhone = e.target.cellPhone.value;\n     const homePhone = e.target.homePhone.value;\n     const address = e.target.address_1.value +' ' + e.target.address_2.value +' ' + e.target.city.value\n                      +' '+ e.target.state.value +'-' +e.target.zipCode.value;\n     const req_data =   {'username':profile_data[\"username\"], 'email':profile_data[\"email\"],'first_nam':first_nam,\n                        'last_nam':last_nam, 'office_number' : officePhone, 'cell_number':cellPhone,\n                         'home_number':homePhone, 'address':address, 'flog_value':'profileUpdate'}\n     this.ProfileUpdateAPI(req_data);\n};\n async ProfileUpdateAPI(req_data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(req_data),\n    }\n    try{\n     const promise = await axios.post(Host.loginURL+\"/signup_api\", options);\n     const status = promise.status;\n     if(status==200)\n    {\n      const data = promise.data.data;\n      console.log(data)\n      const p = JSON.parse(sessionStorage.getItem(\"session_data\"));\n      const session_data = promise.data.data;\n      sessionStorage.setItem(\"session_data\",JSON.stringify(session_data));\n      this.setState({profile_up_data:data})\n      await window.location.reload();\n     }\n\n  }\n  catch(err){this.setState({msg: \"Profile data update\"});}\n//  this.setState({msg: \"Username & Password is Invalid\"});\n}\n\n    render () {\n\n        const formItemLayout = {\n            labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            },\n            wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n            },\n        };\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <Form {...formItemLayout}  onSubmit={this.handleSubmit}>\n                \n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Contact Information</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"First Name\">\n                    {getFieldDecorator('fname' ,{initialValue:this.state.profile_up_data['first_name']})\n                    (<Input name=\"first_name\" />)}\n                </Form.Item>\n                <Form.Item label=\"Last Name\">\n                    {getFieldDecorator('lname',{initialValue:this.state.profile_up_data['last_name']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Office Phone\">\n                    {getFieldDecorator('officePhone',{initialValue:this.state.profile_up_data['office_number']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Cell Phone\">\n                    {getFieldDecorator('cellPhone',{initialValue:this.state.profile_up_data['cell_number']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Home Phone\">\n                    {getFieldDecorator('homePhone',{initialValue:this.state.profile_up_data['home_number']})(<Input />)}\n\n                </Form.Item>\n\n\n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Address</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"Address 1\">\n                    {getFieldDecorator('address_1',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Address 2\">\n                    {getFieldDecorator('address_2',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                    {getFieldDecorator('city',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"State\">\n                    {getFieldDecorator('state',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Zip Code\">\n                    {getFieldDecorator('zipCode',{initialValue:this.state.profile_up_data['address']})(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Update\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\nconst WrappedAccountForm = Form.create()(FormAccountSetting);\nexport default WrappedAccountForm;","import React, { Component } from \"react\";\nimport { Row, Col, Card, Avatar, Tabs, Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { WrappedAccountForm } from \"../components/Form\";\nimport { PageLayout } from  \"../Layout/PageLayout\";\nimport { Host } from  \"../../Host\";\nimport swal from 'sweetalert';\nimport axios from \"axios\";\nconst { TabPane } = Tabs;\n\n\n\n\n\nclass AccountSetting extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n     userName:'',\n     userId:'',\n     errorMsg:'',\n     Account_type:''\n    }\n }\n\ncomponentWillMount() {\n    const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({User_Name:profile_data['first_name'] + \"  \" + profile_data['last_name']});\n    this.setState({userId:profile_data['user_id']});\n    this.setState({userName:profile_data['username']});\n}\n\n handleSubmitChangePwd = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n     const password = e.target.pwd.value;\n     const new_pwd = e.target.npwd.value;\n     const conf_pwd = e.target.cpwd.value;\n      if(password == ''){\n     return false\n    }\n    else if(new_pwd == ''){\n     return false\n    }\n    else if(conf_pwd == ''){\n     return false\n    }\n    else if(new_pwd != conf_pwd){\n     this.setState({errorMsg:'NewPassword and ConfirmPassword does not match'})\n    }\n\n    else{\n       const req_data = {'userId':this.state.userId,'userName':this.state.userName,\n                         'password':new_pwd, 'flog_value':'change password'}\n     this.ChangePasswordAPI(req_data);\n    }\n   });\n};\n\n async ChangePasswordAPI(req_data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(req_data),\n    }\n    try{\n     const promise = await axios.post(Host.loginURL+\"/signup_api\", options);\n     const status = promise.status;\n     if(status==200)\n    {\n      const data = promise.data.data;\n      swal({\n            title:\"\",\n            text:'Your password has been changed successfully!',\n            icon: \"success\",\n        })\n        .then((willDelete) => {\n         this.props.history.push(\"/\");\n        });\n\n     }\n  }\n  catch(err){this.setState({msg: \"Your Password Not Changed\"});}\n}\n\n  render() {\n        const formItemLayout = {\n            labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            },\n            wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n            },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        const profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n        const data = this.props.location.data;\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <h1 className=\"page-heading\">My Account</h1>\n            </Col>\n          </Row>\n        </div>\n        <div id=\"content\">\n          <Row gutter={24} type=\"flex\">\n            <Col span={8} className=\"c-mb\">\n              <Card\n                bordered={false}\n                extra={\n                  <div className=\"card-userinfo-header\">\n                    <div>\n                      <div>\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                      </div>\n                    </div>\n                    <div>\n                      <h5 className=\"username\">{this.state.User_Name}</h5>\n                      <span>{profile_data['email']}</span>\n                    </div>\n                  </div>\n                }\n                className=\"mi-card mi-card-boxshadow mi-card-userinfo\"\n              >\n                <div>\n                  <table className=\"userinfo-table\">\n                    <tbody>\n                      <tr>\n                        <td>Account type</td>\n                        <td>: {profile_data['account_type']}</td>\n                      </tr>\n                      <tr>\n                        <td>Company</td>\n                        <td>: {profile_data['company']}</td>\n                      </tr>\n                      <tr>\n                        <td>Title</td>\n                        <td>: {profile_data['title']}</td>\n                      </tr>\n                      <tr>\n                        <td>Office number</td>\n                        <td>: {profile_data['office_number']}</td>\n                      </tr>\n                      <tr>\n                        <td>Cell number</td>\n                        <td>: {profile_data['cell_number']}</td>\n                      </tr>\n                      <tr>\n                        <td>Home number</td>\n                        <td>: {profile_data['home_number']}</td>\n                      </tr>\n                      <tr>\n                        <td>Email</td>\n                        <td>: {profile_data['email']}</td>\n                      </tr>\n                      <tr>\n                        <td>Address</td>\n                        <td>\n                          : {profile_data['address']}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </Card>\n            </Col>\n\n            <Col span={16} className=\"c-mb\">\n              <Card\n                bordered={false}\n                className=\"mi-card mi-card-boxshadow mi-card-user-setting\"\n              >\n                <Tabs defaultActiveKey=\"1\">\n                  <TabPane tab=\"Profile\" key=\"1\">\n                    <div className=\"tabpane-inside-gutters\">\n                      <Row type=\"flex\" justify=\"\">\n                        <Col span={16}>\n                          <WrappedAccountForm />\n                        </Col>\n                      </Row>\n                    </div>\n                  </TabPane>\n                  <TabPane tab=\"Change Password\" key=\"2\">\n                    <div className=\"tabpane-inside-gutters\">\n                    <Row type=\"flex\" justify=\"\">\n                        <Col span={16}>\n                 <Form {...formItemLayout}  onSubmit={this.handleSubmitChangePwd}>\n                        <Form.Item label=\"CurrentPassword\">\n                            {getFieldDecorator('pwd', {rules:[{required: true,\n                            message: \"Please input your CurrentPassword!\"}]} )\n                            (<Input type=\"password\" name=\"password\" />)}\n                        </Form.Item>\n                        <Form.Item label=\"NewPassword\">\n                            {getFieldDecorator('npwd', {rules:[{required: true,\n                            message: \"Please input your New Password!\"}]}\n                            )(<Input  type=\"password\" name=\"new password\"/>)}\n                        </Form.Item>\n                        <Form.Item label=\"ConfirmPassword\">\n                            {getFieldDecorator('cpwd', {rules:[{required: true,\n                            message: \"Please input your Confirm Password!\"}]}\n                            )(<Input  type=\"password\" name=\"confirm password\"/>)}\n                        </Form.Item>\n                            <p style={{ color: \"red\", textAlign:'center' }}>{this.state.errorMsg}</p>\n                         <Form.Item {...tailFormItemLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Save\n                            </Button>\n                        </Form.Item>\n\n                  </Form>\n                        </Col>\n                    </Row>\n                    </div>\n                  </TabPane>\n                  <TabPane tab=\"Notifications\" key=\"3\">\n                    <div className=\"tabpane-inside-gutters\"></div>\n                  </TabPane>\n                </Tabs>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nconst WrappedAccountSetting = Form.create()(AccountSetting);\nexport default WrappedAccountSetting;\n","import React, {Component} from \"react\";\n\nimport {\n    Row,\n    Col,\n    Card,\n    Calendar, Badge\n} from \"antd\";\n\n\nfunction getListData(value) {\n    let listData;\n    switch (value.date()) {\n      case 8:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'success', content: 'This is usual event.' },\n        ];\n        break;\n      case 10:\n        listData = [\n          { type: 'warning', content: 'This is warning event.' },\n          { type: 'success', content: 'This is usual event.' },\n          { type: 'error', content: 'This is error event.' },\n        ];\n        break;\n      case 15:\n        listData = [\n          { type: 'warning', content: 'This is warning event' },\n          { type: 'success', content: 'This is very long usual event。。....' },\n          { type: 'error', content: 'This is error event 1.' },\n          { type: 'error', content: 'This is error event 2.' },\n          { type: 'error', content: 'This is error event 3.' },\n          { type: 'error', content: 'This is error event 4.' },\n        ];\n        break;\n      default:\n    }\n    return listData || [];\n  }\n  \n  function dateCellRender(value) {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events\">\n        {listData.map(item => (\n          <li key={item.content}>\n            <Badge status={item.type} text={item.content} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  \n  function getMonthData(value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n  \n  function monthCellRender(value) {\n    const num = getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>Backlog number</span>\n      </div>\n    ) : null;\n  }\n\nclass CalendarPage extends Component {\n    render () {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <Row type=\"flex\" justify=\"space-between\">\n                        <Col>\n                            <h1 className=\"page-heading\">Calendar</h1>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"content\">\n                    <Row type=\"flex\" gutter={24}>\n                        <Col md={24}>\n                            <Card \n                              style={{minHeight: '100%'}}\n                              bordered={false}\n                              className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                            >\n                                <div>\n                                    <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\nexport default CalendarPage;","var  trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116, trace117, trace118, trace119, trace120, trace121, trace122, trace123, trace124, trace125, trace126, trace127, trace128, trace129, trace130, trace131, trace132, trace133, trace134, trace135, trace136;\n\n\ntrace1 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:425279', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c87349', \n    y: [22932.549977827, 15288.3666518847, 22083.1962749446, 22932.549977827, 21233.8425720621, 22083.1962749446, 21233.8425720621, 21233.8425720621, 21233.8425720621, 20384.4888691796, 14439.0129490022, 22083.1962749446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace2 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0f37f3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0a6879', \n    y: [229325.49977827, 152883.666518847, 220831.962749446, 229325.49977827, 212338.425720621, 220831.962749446, 212338.425720621, 212338.425720621, 212338.425720621, 203844.888691796, 144390.129490022, 220831.962749446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace3 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2e0c77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d318d5', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 139829.371493738, 137170.186130577, 129079.739031383, 125605.344395292, 134357.033703167, 134725.378704549, 136576.824101274, 423696, 129626.43768249, 123306.875180938, 122810.346078415, 122810.449392715, 283866.628506262, 286525.813869423, 294616.260968617, 298090.655604708, 289338.966296833, 288970.621295451, 287119.175898726, 0, 294069.56231751, 300389.124819062, 300885.653921585, 300885.550607285], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace4 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1c9dc0', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:a9f4f7', \n    y: [0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace5 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1d2e3e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:339d55', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace6 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9acaae', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6b9dc9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace7 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ac9611', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:37e82b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace8 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:73eb8e', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:a00fde', \n    y: [0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace9 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5fc7f0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8f445b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace10 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:908923', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:38560a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace11 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:7b2e0c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9864fa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace12 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:d5d6ff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1dc36c', \n    y: [518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 335158.029611278, 328784.209024321, 309392.157987594, 301064.356411395, 322041.343669961, 322924.232461934, 327361.975294292, 1015560, 310702.543929679, 295555.13896462, 294365.004775582, 294365.252410373, 680401.970388722, 686775.790975679, 706167.842012406, 714495.643588605, 693518.656330039, 692635.767538066, 688198.024705708, 0, 704857.456070322, 720004.86103538, 721194.995224418, 721194.747589627], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace13 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:88707d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:40fddb', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 18313759.5010242, 18313759.5010242, 18313759.5010242, 4489996.83222118, 4404608.95033818, 4144820.31324015, 4033255.62019112, 4314277.10265343, 4326104.86009597, 4385555.77428892, 13605107.97912, 4162375.10294867, 3959450.52916369, 3943506.71082552, 3943510.02830364, 9115111.14689882, 9200499.02878182, 9460287.66587985, 9571852.35892888, 9290830.87646657, 9279003.11902404, 9219552.20483108, 0, 9442732.87617133, 9645657.44995631, 9661601.26829448, 9661597.95081636], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace14 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c62213', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:161e2b', \n    y: [161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 448124.859277611, 439602.707930368, 413674.461031386, 402539.728816393, 430587.123277496, 431767.59452003, 437701.102616396, 1357860, 415426.519654529, 395173.599781893, 393582.324416648, 393582.655518088, 909735.140722389, 918257.292069633, 944185.538968614, 955320.271183607, 927272.876722504, 926092.40547997, 920158.897383604, 0, 942433.480345471, 962686.400218107, 964277.675583352, 964277.344481912], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace15 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:044f3e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e532c3', \n    y: [1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace16 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:773613', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9a8b6c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Photo Shoot<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace17 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:eac99a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6d9612', \n    y: [475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 495483.817014797, 500125.374639313, 514247.096629526, 520311.5865809, 505035.678854754, 504392.739639872, 501161.076809369, 0, 513292.844501221, 524323.521008034, 525190.203140667, 525190.022807515], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace18 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:10da05', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:084d15', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Testing & Audit <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace19 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1a380b', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:27fc6b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace20 = {\n    line: {color: '#636efa'}, \n    mode: 'lines', \n    name: 'Category=Front end', \n    type: 'scatter', \n    xsrc: 'sumon23:122:444ab6', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5087b8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Front end', \n    orientation: 'v', \n    hovertemplate: 'Category=Front end<br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace21 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ebf7fe', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:efa3ae', \n    y: [1608960.74423044, 0, 1072640.49615363, 0, 1549369.60555524, 0, 1608960.74423044, 0, 1489778.46688004, 0, 1549369.60555524, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1430187.32820484, 0, 1013049.35747843, 0, 1549369.60555524, 0, 720202.382362438, 0, 480134.921574959, 0, 693528.220052718, 0, 720202.382362438, 0, 666854.057742998, 0, 693528.220052718, 0, 666854.057742998, 0, 666854.057742998, 0, 666854.057742998, 0, 640179.895433278, 0, 453460.759265239, 0, 693528.220052718, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace22 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8345c7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d42154', \n    y: [39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 30135735.9214807, 25298938.4880667, 29724412.3863718, 30267446.4541684, 26543650.0134904, 25724358.4067107, 24124086.6958053, 26553358.1757382, 28367214.9389574, 28641569.2691702, 26079482.1375705, 29353877.6095957, 55835950.7148664, 56057968.826279, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 30762800.0082777, 57275330.7882282, 63043415.0213892, 63043415.0213892, 63043415.0213892], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace23 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:97feb1', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d12534', \n    y: [10726404.9615363, 0, 7150936.64102418, 0, 10329130.7037016, 0, 10726404.9615363, 0, 9931856.44586692, 0, 10329130.7037016, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9534582.18803224, 0, 6753662.38318951, 0, 10329130.7037016, 0, 4801349.21574959, 0, 3200899.47716639, 0, 4623521.46701812, 0, 4801349.21574959, 0, 4445693.71828665, 0, 4623521.46701812, 0, 4445693.71828665, 0, 4445693.71828665, 0, 4445693.71828665, 0, 4267865.96955519, 0, 3023071.72843492, 0, 4623521.46701812, 0, 3362997.93933349, 2287830.4495513, 3243534.88491325, 3362997.93933349, 1031216.02490194, 1031216.02490194, 1048402.95865031, 962468.289908477, 2137375.45490759, 3004608.77607276, 2338545.76897808, 3243534.88491325, 19686663.6666706, 13839328.6318585, 19352611.2161978, 20016620.2098093, 16845452.4342116, 16750842.6688536, 16822670.3109249, 16378.0079825834, 19640793.2851611, 20616507.7338572, 16042895.3602932, 22091066.4794303], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace24 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0d90b0', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18a0ea', \n    y: [2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 2140320, 546000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 1187676, 126000, 3039523.13135566, 2947705.13135566, 3151571.13135566, 3161773.13135566, 3141369.13135566, 3120965.13135566, 3080157.13135566, 3141369.13135566, 3151571.13135566, 3131167.13135566, 3080157.13135566, 3151571.13135566, 7954761.4005913, 6463094.26706087, 8318940.60797681, 7780223.42233043, 7131068.81797101, 7312133.85440704, 6269752.85049241, 7647843.37942797, 8587163.79945083, 8556167.67741496, 10880117.3201905], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace25 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1fde67', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:67b750', \n    y: [1146600, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace26 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fd9f81', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:634f4c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace27 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0e4162', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a3ff6b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 134400, 0, 218284.285714286, 13020, 154911.428571429, 9240, 211242.857142857, 12600, 218284.285714286, 13020, 211242.857142857, 12600, 211242.857142857, 12600, 214763.571428571, 12810, 197160, 11760, 211242.857142857, 12600, 197160, 11760, 147870, 8820, 211242.857142857, 12600], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace28 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:afbc2a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:523d94', \n    y: [1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Maternity Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace29 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:981aed', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5dfd37', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1228576, 830575.428571429, 1212274.4, 1258667.37142857, 1028615.71428571, 949960.742857143, 793407.942857143, 1025587.14285714, 1212274.4, 1119488.45714286, 884495.028571429, 1212274.4, 2428752.78571429, 1703589.81292517, 2555960.51020408, 2645760.52721088, 2521450.51020408, 2452430.51020408, 2342035.51870748, 0, 2555960.51020408, 2482320.47619048, 2106776.07142857, 2670750.51020408], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Food Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace30 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:70976d', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b9e693', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace31 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:47a0ef', \n    x: ['2019-07-01T00:00:00'], \n    ysrc: 'sumon23:122:411fc2', \n    y: [235200], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace32 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9e7823', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4c852c', \n    y: [522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 522494.565981553, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0, 100800, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace33 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6251a0', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:cf5a69', \n    y: [378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 378000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace34 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:65f3b1', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:cf770a', \n    y: [277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 277126.383329814, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 141768.233016474, 0, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace35 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f7b6a3', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:97ae5f', \n    y: [2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 586143.180781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1215156.28299835, 603920.550781995, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 1904844.15485769, 365568, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252, 3169835.54657814, 609252], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace36 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:830b85', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:227b02', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Capitalization<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace37 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b60f8f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c79baa', \n    y: [22557834.602987, 22557834.602987, 22557834.602987, 20919834.602987, 20919834.602987, 20919834.602987, 19638834.602987, 19638834.602987, 20524882.484747, 20524882.484747, 20524882.484747, 20524882.484747, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9017587.39664606, 9291085.39664606, 9291085.39664606, 9291085.39664606, 9291085.39664606, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 5809860, 6216550.2, 6216550.2, 6216550.2, 6216550.2, 18272100, 18572064, 18572064, 18572064, 18572064, 18572064, 18572064, 18572064, 19872108.48, 19872108.48, 19872108.48, 19872108.48], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace38 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:64b6eb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e60c8c', \n    y: [733129.624597079, 733129.624597079, 733129.624597079, 679894.624597079, 679894.624597079, 679894.624597079, 638262.124597079, 638262.124597079, 667058.680754279, 667058.680754279, 667058.680754279, 667058.680754279, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 293071.590390997, 301960.275390997, 301960.275390997, 301960.275390997, 301960.275390997, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 1042020, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168, 882168], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace39 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:41fa5b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ef4f87', \n    y: [4409374.25364134, 2789909.4797758, 4321492.11643394, 4489240.88784013, 4015814.76627071, 3284560.35719498, 3484329.25744528, 3121222.73049681, 4014533.22508098, 4142919.46999126, 4416627.10286536, 3000121.08413271, 2502587.6123425, 1743690.98807963, 2544870.49781418, 2662995.27166689, 2068260.5719009, 1638712.7090145, 1845099.22882579, 1905665.95220836, 2607349.10491958, 2643208.5138882, 2001265.19895564, 2472748.13154685, 150281.25, 150281.25, 150281.25, 150281.25, 150281.25, 82320, 82320, 82320, 82320, 150281.25, 150281.25, 150281.25, 17929276.1694776, 13383805.8072267, 18430717.2429529, 18984487.3006549, 18571072.7950706, 18670257.9530689, 19513101.4274891, 507698.244336978, 17711508.783694, 16040398.7036612, 11932003.6936207, 17443872.5735388], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Electricity Meter Reading<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace40 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cc6014', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c47869', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2299481.13168, 1632756.04416, 2225400.5664, 2299481.13168, 2272686.0336, 2225400.5664, 2262440.84904, 2077239.43584, 2225400.5664, 2077239.43584, 1558675.47888, 2225400.5664], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Gas Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace41 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6a34be', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9cbd08', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2808000, 1872000, 2704000, 2808000, 2080000, 1913600, 1580800, 2080000, 2433600, 2496000, 1976000, 2704000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Generator fuel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace42 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:487914', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ff1919', \n    y: [1490000, 1490000, 1490000, 1490000, 1490000, 1490000, 0, 0, 0, 0, 0, 0, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Generator Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace43 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:e93350', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f4168a', \n    y: [713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace44 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c46025', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9cc476', \n    y: [770896.996705107, 745896.996705107, 770896.996705107, 770896.996705107, 770896.996705107, 735896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 562481.382423978, 1705156.68598511, 1501219.3887161, 1804211.03215689, 1832379.96116656, 1804211.03215689, 1804211.03215689, 1818295.49666172, 0, 2032761.03215689, 1976423.17413754, 1779240.67106982, 2032761.03215689], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Consumables<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace45 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ac0d4d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:bd5051', \n    y: [75000, 70000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 332511.3, 239380.2, 322163.4, 332511.3, 320707.5, 317795.7, 316418.1, 302923.5, 322163.4, 301467.6, 231944.1, 322163.4, 2091552.18270353, 1516532.3495633, 2368195.82941798, 2457196.12480318, 2084301.22084974, 2105916.4334555, 1919459.40985666, 0, 2205499.34796037, 2276821.33897514, 1742612.23423136, 2436584.21461623], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Needles<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace46 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b6b205', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4ff47e', \n    y: [725000, 630000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 0, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Spare Parts<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace47 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5b0b25', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:beaddf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Chemical ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace48 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1b2c94', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:38126b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=CSR Projects<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace49 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:733f82', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4b7ba0', \n    y: [217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=T&D<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace50 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:34a1d8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1b650a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Annual Trip<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace51 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8d8642', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:273b2c', \n    y: [291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Fire & All Risk Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace52 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0661fb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5cf27b', \n    y: [207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Group Insurance - Workers & staff<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace53 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5637a8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:13d76a', \n    y: [437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Security Sercvices Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace54 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f6e724', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6bd41e', \n    y: [145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Telephone, Fax & Email , Internet<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace55 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:694d13', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8ccac1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 5398.45758354756, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Postage & Courier Charges Local<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace56 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8de7eb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:181239', \n    y: [533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=WFX,FR & Kormee Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace57 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:41a51e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18de04', \n    y: [465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 718000, 718000, 718000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Vehicle  Hire -  staff <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace58 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3c3f9e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7cf904', \n    y: [252175, 151305, 252175, 252175, 252175, 252175, 252175, 252175, 252175, 201740, 151305, 252175, 108075, 64845, 108075, 108075, 108075, 108075, 108075, 108075, 108075, 86460, 64845, 108075, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 44996.8888888889, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Adhoc Hiring<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace59 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:dd155a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5d6718', \n    y: [382982.25, 263802, 369740, 382982.25, 356497.75, 369740, 356497.75, 356497.75, 356497.75, 343255.5, 250559.75, 369740, 164135.25, 113058, 158460, 164135.25, 152784.75, 158460, 152784.75, 152784.75, 152784.75, 147109.5, 107382.75, 158460, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 751413.2, 751413.2, 751413.2, 751413.2], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Vehicle Fuel Expenses Factory<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace60 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fc662a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6d3d43', \n    y: [0, 0, 0, 0, 0, 2100, 0, 0, 0, 0, 79940, 37870, 0, 0, 0, 0, 0, 900, 0, 0, 0, 0, 34260, 16230, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Lisence & Tax Token<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace61 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b975c1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:3df8c3', \n    y: [127281, 82908, 123648, 127281, 120015, 123648, 120015, 120015, 120015, 110544, 79275, 123648, 54549, 35532, 52992, 54549, 51435, 52992, 51435, 51435, 51435, 47376, 33975, 52992, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 123355, 123355, 123355, 123355], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Driver OT<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace62 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:218e14', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:de3b63', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Genarator Fuel Transpsort<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace63 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b64f76', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d8f351', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Foreign Travel-Operation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace64 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3c71d3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:49bdcc', \n    y: [96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Annual Trip Expact<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace65 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:61ddf7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1e5e0c', \n    y: [46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Expact VISA<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace66 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f3b174', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7ef159', \n    y: [478520, 436613.333333333, 473863.703703704, 478520, 469207.407407407, 473863.703703704, 469207.407407407, 469207.407407407, 469207.407407407, 464551.111111111, 431957.037037037, 473863.703703704, 69060, 46040, 66502.2222222222, 69060, 63944.4444444444, 66502.2222222222, 63944.4444444444, 63944.4444444444, 63944.4444444444, 61386.6666666667, 43482.2222222222, 66502.2222222222, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Factory Maintenance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace67 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8132b3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b4afaf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Equipment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace68 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:3af169', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:70172d', \n    y: [218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Electrical<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace69 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:46c3b5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0cc254', \n    y: [91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Computer<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace70 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a259ab', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5c0c86', \n    y: [58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Vehicle<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace71 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:38017e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:bcf0c7', \n    y: [428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - Plant & Machinery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace72 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:71c835', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:3ab903', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Repair Maintenance - ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace73 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:bef4ae', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:c4fa7f', \n    y: [261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=AC Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace74 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1740f6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9570d8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Industrial Fans<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace75 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cd29f2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00'], \n    ysrc: 'sumon23:122:818f1b', \n    y: [35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Machine Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace76 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a073d1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:0c45e2', \n    y: [481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=House Rent/Office Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace77 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0bd9ca', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ba7f5e', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Table & Chair<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace78 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:ebef01', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:639ee1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=TV Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace79 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:d7ee73', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4c4935', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Refrigerator<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace80 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b3dac8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:09e362', \n    y: [130000, 78000, 130000, 130000, 130000, 130000, 130000, 130000, 130000, 104000, 78000, 130000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 164838.492247193, 166382.654405936, 171080.695554536, 173098.241527794, 168016.223688229, 167802.329455666, 166727.213760382, 0, 170763.233153844, 174432.93945183, 174721.268900936, 174721.208907363], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Buyer QC entertainment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace81 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:726fdf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f27509', \n    y: [90000, 54000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 72000, 54000, 90000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Buyer Visit Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace82 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:01fda5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:08f107', \n    y: [244069.516318536, 239427.958694021, 225306.236703807, 219241.746752434, 234517.654478579, 235160.593693461, 238392.256523965, 739553.333333333, 226260.488832113, 215229.8123253, 214363.130192666, 214363.310525818], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace83 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:26fd40', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b2b09b', \n    y: [455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 119545.614444444, 605609.686666667, 605609.686666667, 605609.686666667, 605609.686666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Printing & Stationery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace84 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:512d20', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:329cb2', \n    y: [369724.5, 321183, 364331, 369724.5, 358937.5, 405413.75, 402321.875, 407634.375, 414275, 415833.90625, 379016.7578125, 452663.603515625, 71865, 47910, 69203.3333333333, 71865, 66541.6666666667, 69203.3333333333, 66541.6666666667, 66541.6666666667, 66541.6666666667, 63880, 45248.3333333333, 69203.3333333333, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Entertainment & Daily Tea Coffee Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace85 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:1957e6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:df3e61', \n    y: [546750, 364500, 526500, 546750, 506250, 526500, 506250, 506250, 506250, 486000, 8032500, 526500, 176850, 117900, 170300, 176850, 163750, 170300, 163750, 163750, 163750, 157200, 4777000, 170300, 1966492.34693878, 1312276.09329446, 1907623.03206997, 1980993.14868805, 1834252.9154519, 1687512.68221574, 1394032.21574344, 1907623.03206997, 2127264.13994169, 1684084.11078717, 2304536.1516035], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Tifin Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace86 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:cf444b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e9eb0f', \n    y: [421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 886156.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 479586.666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Welfare<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace87 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:12a895', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8dce64', \n    y: [65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Medical Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace88 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5b1eaf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:ceecfe', \n    y: [54000, 36000, 52000, 54000, 50000, 52000, 50000, 50000, 50000, 48000, 34000, 52000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Child Care Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace89 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c8f11b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d650a9', \n    y: [80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Best Line Gift<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace90 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:303488', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b21d79', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Compliance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace91 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:899890', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9dbfd1', \n    y: [72750, 43650, 72750, 72750, 72750, 72750, 72750, 72750, 72750, 58200, 43650, 72750, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 12323.125, 61615.625, 61615.625, 61615.625, 61615.625], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Convayance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace92 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6e124b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a6c3a7', \n    y: [210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Casual Labour<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace93 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:072bdb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:32f7e1', \n    y: [126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Mobile Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace94 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8a246b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:46bd53', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 225000, 225000, 75000, 75000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Facility Expeses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace95 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:193ed9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1d03eb', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Legal Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace96 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9e4cbb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:25eaaa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70495.9410790425, 73577.9027633131, 74520.6450522933, 78146.5342128796, 60200.2269944661, 29075.2920620521, 62286.0986439324, 46783.6409541974, 3597203.12301931, 2077760.79770928, 4549019.69683021, 4835894.00896865, 4464452.7175772, 4032589.89200036, 3484822.56944306, 0, 4178749.58307533, 4053168.12041538, 3336006.95191142, 4907767.64792832], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Washing Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace97 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:15e210', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d496e7', \n    y: [16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Accomodation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace98 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9f9594', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:91c23a', \n    y: [276750, 184500, 266500, 276750, 256250, 266500, 256250, 256250, 256250, 246000, 174250, 266500, 205875, 137250, 198250, 205875, 190625, 198250, 190625, 190625, 190625, 183000, 129625, 198250], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Meal<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace99 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c36a37', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:73f946', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=VAT Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace100 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c7433e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:424e15', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Air Freight<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace101 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:27688b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1eccc0', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Discount<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace102 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:9c01b5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:979cdf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Claims<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace103 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2daa2e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e207fe', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Inspection charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace104 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:af5e17', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f6e1cf', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Demmurage Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace105 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:684e45', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f2cc47', \n    y: [1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 1146600, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 678672, 0, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 1282875.94285714, 1287031.42857143, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1333820.11428571, 1457190.11428571, 1457190.11428571], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace106 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0370ef', \n    x: ['2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:80a482', \n    y: [235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 235200, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000, 84000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace107 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:83d47a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:77829c', \n    y: [1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Subcontract<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace108 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:526c85', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e9f893', \n    y: [856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Provision for Resignation Benefit<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace109 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:322820', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:2b056c', \n    y: [436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=HR Event & activities<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace110 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:0a3651', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:d460e6', \n    y: [9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Depreciation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace111 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:aea68b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:4d5f8d', \n    y: [1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Winding Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace112 = {\n    line: {color: '#EF553B'}, \n    mode: 'lines', \n    name: 'Category=Manufacturing', \n    type: 'scatter', \n    xsrc: 'sumon23:122:f649af', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:da39c6', \n    y: [1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Manufacturing', \n    orientation: 'v', \n    hovertemplate: 'Category=Manufacturing<br>Description=Winding  Consumable<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace113 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2f118a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:915bb3', \n    y: [1652245.58475172, 1641506.49941012, 1670355.6205427, 1670355.6205427, 1670355.6205427, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1666076.15994459, 714612.613960769, 709967.852964984, 722445.384182673, 722445.384182673, 722445.384182673, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 720594.475000298], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Salary ( Station common)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace114 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c0a999', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:491c21', \n    y: [1600084.51832467, 1587789.28409258, 1620818.79176776, 1620818.79176776, 1620818.79176776, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1615919.21524266], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace115 = {\n    line: {color: '#00cc96'}, \n    mode: 'lines', \n    name: 'Category=Station', \n    type: 'scatter', \n    xsrc: 'sumon23:122:945f26', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6827d8', \n    y: [446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Station', \n    orientation: 'v', \n    hovertemplate: 'Category=Station<br>Description=Winding Utility<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace116 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:76cfff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:44d502', \n    y: [8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5196481.87052486, 5097658.50900636, 4796993.05348522, 4667874.0526299, 4993113.26624445, 5006802.07926944, 5075607.38344534, 15745823.3495136, 4817310.02694198, 4582455.99292789, 4564003.47145913, 4564007.31093064, 10549341.4789887, 10648164.8405072, 10948830.2960284, 11077949.2968837, 10752710.0832691, 10739021.2702441, 10670215.9660682, 0, 10928513.3225716, 11163367.3565857, 11181819.8780545, 11181816.0385829], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=BSC Common<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace117 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:68c71c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:989cec', \n    y: [7542638.22161732, 7992605.73721689, 8259132.87861216, 8398021.42547909, 8266939.13907942, 8249411.63557159, 8464358.37926181, 8048972.03593794, 8737907.74420371, 9033845.10426946, 8724980.13052805, 9346054.27171425, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6383497.35697776, 6551780.54101973, 6384291.65256811, 6411279.50891445, 6775473.1665179, 6789773.08159736, 7368504.39222547, 21102504.0478758, 7257292.03750336, 7134606.3163587, 6855436.63068271, 7495613.11101102, 12959093.3109863, 13685585.0732936, 14571737.9793854, 15215455.3715708, 14591036.6442246, 14563291.3762081, 15490467.8932432, 0, 16463838.1740182, 17380686.5525925, 16795836.8281441, 18364249.0455663], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Q Collection Expenses (Singapore)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace118 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2d6b15', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:6a6750', \n    y: [2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1679171.60237042, 1647238.19310484, 1550082.28891733, 1508359.26072926, 1613455.83666009, 1617879.1882034, 1640112.67534784, 5088046.12105263, 1556647.43928728, 1480757.59026164, 1474794.91189298, 1474796.15256536, 3408874.51868221, 3440807.92794779, 3537963.83213531, 3579686.86032337, 3474590.28439254, 3470166.93284924, 3447933.4457048, 0, 3531398.68176536, 3607288.53079099, 3613251.20915965, 3613249.96848727], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Q Collection Expenses (Bangladesh)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace119 = {\n    line: {color: '#ab63fa'}, \n    mode: 'lines', \n    name: 'Category=Support services ', \n    type: 'scatter', \n    xsrc: 'sumon23:122:79b34e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:86a571', \n    y: [587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Support services ', \n    orientation: 'v', \n    hovertemplate: 'Category=Support services <br>Description=Birichina CHO Direct <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace120 = {\n    line: {color: '#FFA15A'}, \n    mode: 'lines', \n    name: 'Category=Design Center', \n    type: 'scatter', \n    xsrc: 'sumon23:122:c92427', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:e801a6', \n    y: [1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 972958.773613414, 954455.667276649, 898160.831624269, 873985.347546289, 934881.229470619, 937444.242498445, 950326.943917804, 2948155.57090144, 901964.862518739, 857992.171262254, 854537.229417818, 854537.948297935, 1975196.79728802, 1993699.90362479, 2049994.73927717, 2074170.22335515, 2013274.34143082, 2010711.32840299, 1997828.62698363, 0, 2046190.7083827, 2090163.39963918, 2093618.34148362, 2093617.6226035], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Design Center', \n    orientation: 'v', \n    hovertemplate: 'Category=Design Center<br>Description=UK Office Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace121 = {\n    line: {color: '#19d3f3'}, \n    mode: 'lines', \n    name: 'Category=Import Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a7c4e2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:196fd0', \n    y: [1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 493758.277103692, 484368.29866506, 455799.728428189, 443531.124978364, 474434.639656586, 475735.32056017, 482273.049218128, 1496133.5, 457730.202556633, 435414.8888319, 433661.570830288, 433661.935648426, 1002375.22289631, 1011765.20133494, 1040333.77157181, 1052602.37502164, 1021698.86034341, 1020398.17943983, 1013860.45078187, 0, 1038403.29744337, 1060718.6111681, 1062471.92916971, 1062471.56435157], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Import Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Import Expenses<br>Description=C& F Charges - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace122 = {\n    line: {color: '#19d3f3'}, \n    mode: 'lines', \n    name: 'Category=Import Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:4842e1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:b5b211', \n    y: [1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 624898.311344436, 613014.395789073, 576858.138514228, 561331.047761802, 600442.400487487, 602088.536538138, 610362.65727258, 1893500, 579301.338109857, 551059.174868554, 548840.183290563, 548840.645002799, 1268601.68865556, 1280485.60421093, 1316641.86148577, 1332168.9522382, 1293057.59951251, 1291411.46346186, 1283137.34272742, 0, 1314198.66189014, 1342440.82513145, 1344659.81670944, 1344659.3549972], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Import Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Import Expenses<br>Description=Transport - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace123 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:aeb87d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8f4793', \n    y: [1677739.81850432, 1587722.62816896, 1299648.33739565, 2076128.47117164, 1617002.18682339, 2333067.02849418, 2354723.38202931, 2748608.26003403, 2886152.93322663, 1763933.93967844, 1299424.83242869, 1785380.76199099, 719031.350787566, 680452.554929554, 556992.144598134, 889769.344787845, 693000.937210026, 999885.86935465, 1009167.16372685, 1177974.96858601, 1236922.68566856, 755971.688433617, 556896.356755153, 765163.183710423, 678679.802839185, 883305.764504294, 899414.096500405, 977294.681412369, 905673.967534534, 958047.607126306, 1035468.41481008, 1149459.8160657, 773254.601967319, 936151.649809413, 702874.207398739, 995995.584258069, 1377783.11816186, 1845079.53374957, 2052855.23632017, 2319347.26745694, 1950376.26498461, 2054903.20327125, 2176817.62543384, 0, 1754199.57861919, 2280568.49524025, 1722043.55960981, 2440188.77264763], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=C& F Charges - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace124 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6fa5c6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:8eb87f', \n    y: [1089403.20614105, 1036164.4651338, 1017666.27571308, 1326795.57761849, 1241431.92719414, 1272876.37659969, 1332495.57022356, 1300476.60897125, 1419772.81453305, 1434657.40866167, 1056859.0018641, 1452100.71639039, 466887.088346166, 444070.485057343, 436142.68959132, 568626.676122212, 532042.254511775, 545518.447114151, 571069.530095812, 557347.118130534, 608474.063371309, 614853.175140714, 452939.572227471, 622328.878453023, 1117220.6379875, 900661.216714062, 1343206.36484148, 1326222.35659685, 1232391.18675497, 1062174.08431979, 916542.237073173, 1149345.97633447, 1252774.22876258, 1191063.67820593, 890803.588707002, 1261972.10707289, 2268061.79857091, 1881332.20067197, 3065782.74707102, 3147433.68332658, 2653964.4573934, 2278242.65940961, 1926804.59160251, 0, 2842034.20013165, 2901562.26386442, 2182471.01211378, 3091831.14437969], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Transport - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace125 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:b52341', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:719362', \n    y: [1259409.88819286, 1194264.33560202, 1026569.08647076, 1573004.07831, 1249111.76982545, 1780836.23120121, 1767465.45648945, 2040596.61406134, 2141845.54093323, 1360231.12490562, 1019426.95675037, 1389966.37384633, 539747.094939797, 511827.572400865, 439958.179916039, 674144.60499, 535333.615639479, 763215.527657663, 757485.195638336, 874541.406026289, 917933.803257099, 582956.196388122, 436897.26717873, 595699.874505569, 346040.048107684, 486333.823548411, 500397.224261824, 539200.711515193, 502635.133444161, 526880.568389034, 563952.732913928, 672039.696803797, 434794.914950447, 515699.182249713, 392011.326955426, 547306.126697075, 702493.479983012, 1015870.85747473, 1142124.70769909, 1279648.52428775, 1082428.85338259, 1130098.92167213, 1185571.89322262, 0, 986372.476350392, 1256299.98974983, 960428.727888611, 1340899.78577799], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Documentation Chrages & Misc Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace126 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:127397', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5b648f', \n    y: [0, 0, 0, 0, 0, 280000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120000, 0, 0, 0, 0, 0, 0, 11880.8234530762, 11654.8815676824, 14775.6111528598, 10672.2565193688, 11415.8576274357, 184585.368608603, 11604.4656254623, 36000, 11013.9150630868, 10476.9634514222, 10434.7750718037, 57536.2387288384, 24119.1765469238, 24345.1184323176, 33724.3888471402, 25327.7434806312, 24584.1423725643, 395914.631391397, 24395.5343745377, 0, 24986.0849369132, 25523.0365485778, 25565.2249281963, 140963.761271162], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Custom & VAT service charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace127 = {\n    line: {color: '#FF6692'}, \n    mode: 'lines', \n    name: 'Category=Outward Expenses', \n    type: 'scatter', \n    xsrc: 'sumon23:122:8bd53e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:9e4346', \n    y: [432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 87571.0468099923, 85905.6767705923, 80838.8663138996, 78662.9545432656, 84143.8816607902, 84374.5653648909, 85534.0714813156, 265348.416093455, 81181.2476938312, 77223.4904806637, 76912.5288220713, 76912.5935247967, 177777.369283462, 179442.739322862, 184509.549779555, 186685.461550189, 181204.534432664, 180973.850728564, 179814.344612139, 0, 184167.168399623, 188124.925612791, 188435.887271383, 188435.822568658], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Outward Expenses', \n    orientation: 'v', \n    hovertemplate: 'Category=Outward Expenses<br>Description=Marine Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace128 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:bbf0bd', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:1959b4', \n    y: [26345317.4533711, 26286344.78057, 26443688.2500088, 26750235.1744672, 27043710.34799, 27339839.0407889, 28188645.2100924, 28124326.6401811, 28059380.7024324, 27993801.2681649, 27927582.1487396, 27860717.0949725, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7584511.23210952, 7263509.74746615, 6997360.17711525, 6966666.96498879, 7619195.85308483, 7806122.6827214, 8080141.4534435, 24495659.4297901, 7318034.95057534, 9431655.53572762, 9059401.97906665, 8955543.12658645, 15397263.1738764, 15172269.5772978, 15971027.7345011, 16533518.8002639, 16408000.321108, 16743245.7286413, 16986509.7575964, 0, 16601639.0900993, 22976551.3708359, 22195557.4237167, 21941076.9845297], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - Term Loan<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace129 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:a4b05f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:18e328', \n    y: [10453741.5853845, 10025464.8528619, 9795521.7551532, 9667393.299376, 9306132.17215348, 9156697.64801144, 9592902.12776383, 8902775.65939242, 9464147.20163676, 9436113.66565703, 9120015.19634, 9528458.9009511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3530378.7887179, 3462583.09143366, 3257731.78654968, 3169431.15202398, 3389602.29974493, 3347436.50457805, 3341266.00287915, 10203584.0360386, 3072176.07256655, 2875279.92524695, 2816764.4005748, 2816119.47014271, 7166997.27244541, 7232762.93741485, 7435564.75550766, 7521796.26232712, 7299536.15775942, 7179870.75468753, 7024189.84712751, 0, 6969515.54924982, 7004498.48467384, 6901079.80046603, 6899491.54603491], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - WC<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace130 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2e8093', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:47d37e', \n    y: [5776611.71136482, 5573373.3770077, 6476297.81245559, 9004041.58579832, 8325392.37272467, 8554809.5313783, 8943367.22219713, 8644887.35672514, 8736023.30946739, 8784806.16312224, 7044055.12975788, 9252103.69135721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 676817.173598667, 2006924.04376777, 2064596.14240516, 2403585.82444489, 3173057.79829852, 2575717.0080632, 1913241.65538662, 3278053.26626029, 1136788.92422352, 2147059.10071133, 3195355.68500536, 3848249.83961438, 1374001.80757586, 4192132.13334332, 4712308.84451781, 5704267.42317678, 6833205.81033459, 5524620.16628314, 4022119.9387561, 0, 2578910.80994323, 5230472.37431883, 7828629.3907275, 9428210.52762515], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Bank Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace131 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:2b3fd4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a98160', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest on IDBP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace132 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:6be012', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:f6a28d', \n    y: [404048.917905421, 415505.20019154, 459144.2955772, 569151.797061948, 603484.937736964, 611214.586929408, 976361.510345334, 2043884.95181965, 1035020.15068679, 1055735.60698053, 967306.767568972, 1273152.63007536, 820256.880597881, 867921.587118999, 1047967.5324966, 1350729.4067907, 1299609.72825799, 1310985.8040716, 2052559.89860853, 0, 2348038.93514219, 2571888.18187022, 2369903.99096286, 3119223.42114693], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - WC(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace133 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:5c9b09', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:662e37', \n    y: [1356568.31979069, 1330769.97298001, 1252279.70937899, 1218572.53009739, 1303477.89964091, 1307051.43468788, 1325013.41323494, 4110528.17217144, 1257583.55979783, 1196273.70627449, 1191456.5806367, 1191457.58295049, 2753959.85238076, 2779758.19919144, 2858248.46279246, 2891955.64207406, 2807050.27253053, 2803476.73748357, 2785514.7589365, 0, 2852944.61237362, 2914254.46589696, 2919071.59153474, 2919070.58922095], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest - Term Loan(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace134 = {\n    line: {color: '#B6E880'}, \n    mode: 'lines', \n    name: 'Category=Finance', \n    type: 'scatter', \n    xsrc: 'sumon23:122:904941', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:5ad15c', \n    y: [2021390.10139143, 1982948.60005708, 1865992.1301292, 1815765.86614261, 1942281.33244566, 1947606.1717962, 1974370.88766546, 6125000, 1873895.27115018, 1782538.92055447, 1775361.03652215, 1775362.53004602, 4103609.89860857, 4142051.39994292, 4259007.8698708, 4309234.13385739, 4182718.66755434, 4177393.8282038, 4150629.11233454, 0, 4251104.72884982, 4342461.07944553, 4349638.96347785, 4349637.46995398], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Finance', \n    orientation: 'v', \n    hovertemplate: 'Category=Finance<br>Description=Interest on EDF<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace135 = {\n    line: {color: '#FF97FF'}, \n    mode: 'lines', \n    name: 'Category=Product development', \n    type: 'scatter', \n    xsrc: 'sumon23:122:890860', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:a24dd5', \n    y: [652657.195296801, 640245.379078543, 602483.008726379, 586266.182216168, 627114.917619678, 628834.177407056, 637475.846513938, 1977612, 605034.738770589, 575538.017919277, 573220.455536106, 573220.937758265, 1324954.8047032, 1337366.62092146, 1375128.99127362, 1391345.81778383, 1350497.08238032, 1348777.82259294, 1340136.15348606, 0, 1372577.26122941, 1402073.98208072, 1404391.54446389, 1404391.06224174], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    stackgroup: '1', \n    legendgroup: 'Category=Product development', \n    orientation: 'v', \n    hovertemplate: 'Category=Product development<br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace136 = {\n    line: {color: '#FF97FF'}, \n    mode: 'lines', \n    name: 'Category=Product development', \n    type: 'scatter', \n    xsrc: 'sumon23:122:fc65b3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:122:7cadb3', \n    y: [222440.69723746, 218210.462631195, 205340.171686721, 199813.101393303, 213735.297072603, 214321.260651328, 217266.541750322, 674016, 206209.860421153, 196156.694379828, 195366.815411023, 195366.97976351, 451575.30276254, 455805.537368805, 468675.828313279, 474202.898606697, 460280.702927397, 459694.739348672, 456749.458249678, 0, 467806.139578847, 477859.305620173, 478649.184588977, 478649.02023649], \n    xaxis: 'x', \n    yaxis: 'y', \n    hoverlabel: {namelength: 0}, \n    showlegend: false, \n    stackgroup: '1', \n    legendgroup: 'Category=Product development', \n    orientation: 'v', \n    hovertemplate: 'Category=Product development<br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  export const dataChart = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116, trace117, trace118, trace119, trace120, trace121, trace122, trace123, trace124, trace125, trace126, trace127, trace128, trace129, trace130, trace131, trace132, trace133, trace134, trace135, trace136];\n  export const layoutChart = {\n    xaxis: {\n      title: {text: 'Month'}, \n      anchor: 'y', \n      domain: [0.0, 0.98]\n    }, \n    yaxis: {\n      title: {text: 'Amount BDT'}, \n      anchor: 'x', \n      domain: [0.0, 1.0]\n    }, \n    height: 600, \n    legend: {tracegroupgap: 0}, \n    margin: {t: 60}, \n    template: {\n      data: {\n        bar: [\n          {\n            type: 'bar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}, \n            error_x: {color: '#2a3f5f'}, \n            error_y: {color: '#2a3f5f'}\n          }\n        ], \n        table: [\n          {\n            type: 'table', \n            cells: {\n              fill: {color: '#EBF0F8'}, \n              line: {color: 'white'}\n            }, \n            header: {\n              fill: {color: '#C8D4E3'}, \n              line: {color: 'white'}\n            }\n          }\n        ], \n        carpet: [\n          {\n            type: 'carpet', \n            aaxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }, \n            baxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }\n          }\n        ], \n        mesh3d: [\n          {\n            type: 'mesh3d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        contour: [\n          {\n            type: 'contour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        heatmap: [\n          {\n            type: 'heatmap', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatter: [\n          {\n            type: 'scatter', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        surface: [\n          {\n            type: 'surface', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        barpolar: [\n          {\n            type: 'barpolar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}\n          }\n        ], \n        heatmapgl: [\n          {\n            type: 'heatmapgl', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        histogram: [\n          {\n            type: 'histogram', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        parcoords: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'parcoords'\n          }\n        ], \n        scatter3d: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'scatter3d', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattergl: [\n          {\n            type: 'scattergl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        choropleth: [\n          {\n            type: 'choropleth', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattergeo: [\n          {\n            type: 'scattergeo', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2d: [\n          {\n            type: 'histogram2d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatterpolar: [\n          {\n            type: 'scatterpolar', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        contourcarpet: [\n          {\n            type: 'contourcarpet', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattercarpet: [\n          {\n            type: 'scattercarpet', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattermapbox: [\n          {\n            type: 'scattermapbox', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterpolargl: [\n          {\n            type: 'scatterpolargl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterternary: [\n          {\n            type: 'scatterternary', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2dcontour: [\n          {\n            type: 'histogram2dcontour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ]\n      }, \n      layout: {\n        geo: {\n          bgcolor: 'white', \n          showland: true, \n          lakecolor: 'white', \n          landcolor: '#E5ECF6', \n          showlakes: true, \n          subunitcolor: 'white'\n        }, \n        font: {color: '#2a3f5f'}, \n        polar: {\n          bgcolor: '#E5ECF6', \n          radialaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          angularaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }\n        }, \n        scene: {\n          xaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          yaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          zaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }\n        }, \n        title: {x: 0.05}, \n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        mapbox: {style: 'light'}, \n        ternary: {\n          aaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          baxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          caxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          bgcolor: '#E5ECF6'\n        }, \n        colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n        hovermode: 'closest', \n        colorscale: {\n          diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n          sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n          sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }, \n        hoverlabel: {align: 'left'}, \n        plot_bgcolor: '#E5ECF6', \n        paper_bgcolor: 'white', \n        shapedefaults: {line: {color: '#2a3f5f'}}, \n        annotationdefaults: {\n          arrowhead: 0, \n          arrowcolor: '#2a3f5f', \n          arrowwidth: 1\n        }\n      }\n    }\n  };\n\n","\nvar trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116;\ntrace1 = {\n    mode: 'markers', \n    name: 'Description=Overtime - Extra', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c767bc', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4d42f5', \n    y: [22932.549977827, 15288.3666518847, 22083.1962749446, 22932.549977827, 21233.8425720621, 22083.1962749446, 21233.8425720621, 21233.8425720621, 21233.8425720621, 20384.4888691796, 14439.0129490022, 22083.1962749446, 1608960.74423044, 0, 1072640.49615363, 0, 1549369.60555524, 0, 1608960.74423044, 0, 1489778.46688004, 0, 1549369.60555524, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1489778.46688004, 0, 1430187.32820484, 0, 1013049.35747843, 0, 1549369.60555524, 0, 720202.382362438, 0, 0, 480134.921574959, 0, 0, 693528.220052718, 0, 0, 720202.382362438, 0, 0, 666854.057742998, 0, 0, 693528.220052718, 0, 0, 666854.057742998, 0, 0, 666854.057742998, 0, 0, 666854.057742998, 0, 0, 640179.895433278, 0, 0, 453460.759265239, 0, 0, 693528.220052718, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Overtime - Extra', \n    hovertextsrc: 'sumon23:120:16e39f', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Overtime - Extra<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace2 = {\n    mode: 'markers', \n    name: 'Description=Wages', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:19cee5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:150852', \n    y: [39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 39334340.9172113, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 17581774.5821272, 30135735.9214807, 25298938.4880667, 29724412.3863718, 30267446.4541684, 26543650.0134904, 25724358.4067107, 24124086.6958053, 26553358.1757382, 28367214.9389574, 28641569.2691702, 26079482.1375705, 29353877.6095957, 55835950.7148664, 56057968.826279, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 57275330.7882282, 30762800.0082777, 57275330.7882282, 63043415.0213892, 63043415.0213892, 63043415.0213892], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Wages', \n    hovertextsrc: 'sumon23:120:e14a99', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace3 = {\n    mode: 'markers', \n    name: 'Description=Overtime - Normal (Buyer)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0c48b8', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0345c4', \n    y: [10726404.9615363, 0, 7150936.64102418, 0, 229325.49977827, 152883.666518847, 220831.962749446, 229325.49977827, 212338.425720621, 10329130.7037016, 0, 220831.962749446, 212338.425720621, 212338.425720621, 212338.425720621, 203844.888691796, 10726404.9615363, 0, 144390.129490022, 220831.962749446, 9931856.44586692, 0, 10329130.7037016, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9931856.44586692, 0, 9534582.18803224, 0, 6753662.38318951, 0, 10329130.7037016, 0, 4801349.21574959, 0, 0, 3200899.47716639, 0, 0, 4623521.46701812, 0, 0, 4801349.21574959, 0, 0, 4445693.71828665, 0, 0, 4623521.46701812, 0, 0, 4445693.71828665, 0, 0, 4445693.71828665, 0, 0, 4445693.71828665, 0, 0, 4267865.96955519, 0, 0, 3023071.72843492, 0, 0, 4623521.46701812, 0, 0, 3362997.93933349, 2287830.4495513, 3243534.88491325, 3362997.93933349, 1031216.02490194, 1031216.02490194, 1048402.95865031, 962468.289908477, 2137375.45490759, 3004608.77607276, 2338545.76897808, 3243534.88491325, 19686663.6666706, 13839328.6318585, 19352611.2161978, 20016620.2098093, 16845452.4342116, 16750842.6688536, 16822670.3109249, 16378.0079825834, 19640793.2851611, 20616507.7338572, 16042895.3602932, 22091066.4794303], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Overtime - Normal (Buyer)', \n    hovertextsrc: 'sumon23:120:e39389', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Overtime - Normal (Buyer)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace4 = {\n    mode: 'markers', \n    name: 'Description=Incentive', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a874d5', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:67faa3', \n    y: [2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 2140320, 546000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 1187676, 126000, 0, 3039523.13135566, 139829.371493738, 2947705.13135566, 137170.186130577, 3151571.13135566, 129079.739031383, 3161773.13135566, 125605.344395292, 3141369.13135566, 134357.033703167, 3120965.13135566, 134725.378704549, 3080157.13135566, 136576.824101274, 3141369.13135566, 423696, 3151571.13135566, 129626.43768249, 3131167.13135566, 123306.875180938, 3080157.13135566, 122810.346078415, 3151571.13135566, 122810.449392715, 7954761.4005913, 283866.628506262, 6463094.26706087, 286525.813869423, 8318940.60797681, 294616.260968617, 7780223.42233043, 298090.655604708, 7131068.81797101, 289338.966296833, 7312133.85440704, 288970.621295451, 6269752.85049241, 287119.175898726, 0, 7647843.37942797, 294069.56231751, 8587163.79945083, 300389.124819062, 8556167.67741496, 300885.653921585, 10880117.3201905, 300885.550607285], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Incentive', \n    hovertextsrc: 'sumon23:120:b410c8', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Incentive<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace5 = {\n    mode: 'markers', \n    name: 'Description=Attendance Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:71c50c', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:120:e82042', \n    y: [1146600, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Attendance Bonus', \n    hovertextsrc: 'sumon23:120:e4c807', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Attendance Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace6 = {\n    mode: 'markers', \n    name: 'Description=Daily Allowance ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:827b0d', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:bbb1ff', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Daily Allowance ', \n    hovertextsrc: 'sumon23:120:446809', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Daily Allowance <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace7 = {\n    mode: 'markers', \n    name: 'Description=Night Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c1cdf2', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:eda70d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 134400, 0, 0, 218284.285714286, 13020, 154911.428571429, 9240, 211242.857142857, 12600, 218284.285714286, 13020, 211242.857142857, 12600, 211242.857142857, 12600, 214763.571428571, 12810, 197160, 11760, 211242.857142857, 12600, 197160, 11760, 147870, 8820, 211242.857142857, 12600], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Night Allowance', \n    hovertextsrc: 'sumon23:120:c287fb', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Night Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace8 = {\n    mode: 'markers', \n    name: 'Description=Maternity Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:935e79', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:17fd2e', \n    y: [1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 1092000, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 226800, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 277649.283333333, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000, 832000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Maternity Allowance', \n    hovertextsrc: 'sumon23:120:c89984', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Maternity Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace9 = {\n    mode: 'markers', \n    name: 'Description=Food Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8d2abb', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ec5a18', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1228576, 830575.428571429, 1212274.4, 1258667.37142857, 1028615.71428571, 949960.742857143, 793407.942857143, 1025587.14285714, 1212274.4, 1119488.45714286, 884495.028571429, 1212274.4, 2428752.78571429, 1703589.81292517, 2555960.51020408, 2645760.52721088, 2521450.51020408, 2452430.51020408, 2342035.51870748, 0, 2555960.51020408, 2482320.47619048, 2106776.07142857, 2670750.51020408], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Food Allowance', \n    hovertextsrc: 'sumon23:120:273443', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Food Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace10 = {\n    mode: 'markers', \n    name: 'Description=Friday /Holiday allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:06d836', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0a4083', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Friday /Holiday allowance', \n    hovertextsrc: 'sumon23:120:2adddb', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Friday /Holiday allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace11 = {\n    mode: 'markers', \n    name: 'Description=Additional Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:972d42', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00'], \n    ysrc: 'sumon23:120:c15240', \n    y: [235200, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Additional Allowance', \n    hovertextsrc: 'sumon23:120:33c973', \n    hovertext: ['Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Additional Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace12 = {\n    mode: 'markers', \n    name: 'Description=Thursday Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:be5db7', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:cfcf89', \n    y: [522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 522494.565981553, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0, 100800, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Thursday Allowance', \n    hovertextsrc: 'sumon23:120:d48885', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Thursday Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace13 = {\n    mode: 'markers', \n    name: 'Description=Shift Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:34102f', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3e1503', \n    y: [378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 378000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Shift Allowance', \n    hovertextsrc: 'sumon23:120:70a7ba', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Shift Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace14 = {\n    mode: 'markers', \n    name: 'Description=Provision for Earned Leave', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ba464a', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:de599a', \n    y: [277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 277126.383329814, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 141768.233016474, 0, 0, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 468470.72574786, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869, 1256358.69124869], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Earned Leave', \n    hovertextsrc: 'sumon23:120:f66265', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Earned Leave<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace15 = {\n    mode: 'markers', \n    name: 'Description=Provision for EID Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:414091', \n    x: ['2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9ae6e8', \n    y: [2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1466259.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1359789.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1276524.24919416, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 2205699.78568628, 1334117.36150856, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 518477.82, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 586143.180781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1215156.28299835, 603920.550781995, 0, 1904844.15485769, 365568, 335158.029611278, 1904844.15485769, 365568, 328784.209024321, 1904844.15485769, 365568, 309392.157987594, 1904844.15485769, 365568, 301064.356411395, 1904844.15485769, 365568, 322041.343669961, 1904844.15485769, 365568, 322924.232461934, 1904844.15485769, 365568, 327361.975294292, 1904844.15485769, 365568, 1015560, 1904844.15485769, 365568, 310702.543929679, 1904844.15485769, 365568, 295555.13896462, 1904844.15485769, 365568, 294365.004775582, 1904844.15485769, 365568, 294365.252410373, 3169835.54657814, 609252, 680401.970388722, 3169835.54657814, 609252, 686775.790975679, 3169835.54657814, 609252, 706167.842012406, 3169835.54657814, 609252, 714495.643588605, 3169835.54657814, 609252, 693518.656330039, 3169835.54657814, 609252, 692635.767538066, 3169835.54657814, 609252, 688198.024705708, 3169835.54657814, 609252, 0, 3169835.54657814, 609252, 704857.456070322, 3169835.54657814, 609252, 720004.86103538, 3169835.54657814, 609252, 721194.995224418, 3169835.54657814, 609252, 721194.747589627], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for EID Bonus', \n    hovertextsrc: 'sumon23:120:045c99', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for EID Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace16 = {\n    mode: 'markers', \n    name: 'Description=Capitalization', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0ecaf3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fe52e8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Capitalization', \n    hovertextsrc: 'sumon23:120:66ac02', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Capitalization<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace17 = {\n    mode: 'markers', \n    name: 'Description=Salary', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7a72e0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:288904', \n    y: [22557834.602987, 22557834.602987, 22557834.602987, 20919834.602987, 20919834.602987, 20919834.602987, 19638834.602987, 19638834.602987, 20524882.484747, 20524882.484747, 20524882.484747, 20524882.484747, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9017587.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 9291085.39664606, 0, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 17395897.2010242, 18313759.5010242, 18313759.5010242, 18313759.5010242, 5809860, 4489996.83222118, 5809860, 4404608.95033818, 5809860, 4144820.31324015, 5809860, 4033255.62019112, 5809860, 4314277.10265343, 5809860, 4326104.86009597, 5809860, 4385555.77428892, 5809860, 13605107.97912, 6216550.2, 4162375.10294867, 6216550.2, 3959450.52916369, 6216550.2, 3943506.71082552, 6216550.2, 3943510.02830364, 18272100, 9115111.14689882, 18572064, 9200499.02878182, 18572064, 9460287.66587985, 18572064, 9571852.35892888, 18572064, 9290830.87646657, 18572064, 9279003.11902404, 18572064, 9219552.20483108, 18572064, 0, 19872108.48, 9442732.87617133, 19872108.48, 9645657.44995631, 19872108.48, 9661601.26829448, 19872108.48, 9661597.95081636], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Salary', \n    hovertextsrc: 'sumon23:120:915681', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Salary<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace18 = {\n    mode: 'markers', \n    name: 'Description=Salary ( Station common)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5c8a9d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:791116', \n    y: [1652245.58475172, 1641506.49941012, 1670355.6205427, 1670355.6205427, 1670355.6205427, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1694925.28107718, 1666076.15994459, 714612.613960769, 709967.852964984, 722445.384182673, 722445.384182673, 722445.384182673, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 733072.006217986, 720594.475000298], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Salary ( Station common)', \n    hovertextsrc: 'sumon23:120:2558b8', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Salary ( Station common)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace19 = {\n    mode: 'markers', \n    name: 'Description=Provision for Gratuity', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0af547', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6d251d', \n    y: [733129.624597079, 733129.624597079, 733129.624597079, 679894.624597079, 679894.624597079, 679894.624597079, 638262.124597079, 638262.124597079, 667058.680754279, 667058.680754279, 667058.680754279, 667058.680754279, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 161074.82, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 293071.590390997, 0, 301960.275390997, 0, 301960.275390997, 0, 301960.275390997, 0, 301960.275390997, 0, 1042020, 448124.859277611, 1042020, 439602.707930368, 1042020, 413674.461031386, 1042020, 402539.728816393, 1042020, 430587.123277496, 1042020, 431767.59452003, 1042020, 437701.102616396, 1042020, 1357860, 1042020, 415426.519654529, 1042020, 395173.599781893, 1042020, 393582.324416648, 1042020, 393582.655518088, 882168, 909735.140722389, 882168, 918257.292069633, 882168, 944185.538968614, 882168, 955320.271183607, 882168, 927272.876722504, 882168, 926092.40547997, 882168, 920158.897383604, 882168, 0, 882168, 942433.480345471, 882168, 962686.400218107, 882168, 964277.675583352, 882168, 964277.344481912], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Gratuity', \n    hovertextsrc: 'sumon23:120:66a15d', \n    hovertext: ['Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Gratuity<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace20 = {\n    mode: 'markers', \n    name: 'Description=Electricity Meter Reading', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7e42bf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ac713d', \n    y: [4409374.25364134, 2789909.4797758, 4321492.11643394, 4489240.88784013, 4015814.76627071, 3284560.35719498, 3484329.25744528, 3121222.73049681, 4014533.22508098, 4142919.46999126, 4416627.10286536, 3000121.08413271, 2502587.6123425, 1743690.98807963, 2544870.49781418, 2662995.27166689, 2068260.5719009, 1638712.7090145, 1845099.22882579, 1905665.95220836, 2607349.10491958, 2643208.5138882, 2001265.19895564, 2472748.13154685, 150281.25, 150281.25, 150281.25, 150281.25, 150281.25, 82320, 82320, 82320, 82320, 150281.25, 150281.25, 150281.25, 17929276.1694776, 13383805.8072267, 18430717.2429529, 18984487.3006549, 18571072.7950706, 18670257.9530689, 19513101.4274891, 507698.244336978, 17711508.783694, 16040398.7036612, 11932003.6936207, 17443872.5735388], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Electricity Meter Reading', \n    hovertextsrc: 'sumon23:120:84d619', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Electricity Meter Reading<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace21 = {\n    mode: 'markers', \n    name: 'Description=Gas Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:35331c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8e37e9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2299481.13168, 1632756.04416, 2225400.5664, 2299481.13168, 2272686.0336, 2225400.5664, 2262440.84904, 2077239.43584, 2225400.5664, 2077239.43584, 1558675.47888, 2225400.5664], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Gas Charges', \n    hovertextsrc: 'sumon23:120:00cf58', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Gas Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace22 = {\n    mode: 'markers', \n    name: 'Description=Generator fuel', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:943b23', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5c3c5e', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2808000, 1872000, 2704000, 2808000, 2080000, 1913600, 1580800, 2080000, 2433600, 2496000, 1976000, 2704000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Generator fuel', \n    hovertextsrc: 'sumon23:120:56053a', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Generator fuel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace23 = {\n    mode: 'markers', \n    name: 'Description=Generator Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:669ec8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:255082', \n    y: [1490000, 1490000, 1490000, 1490000, 1490000, 1490000, 0, 0, 0, 0, 0, 0, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 350000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000, 641000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Generator Rent', \n    hovertextsrc: 'sumon23:120:bf5714', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Generator Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace24 = {\n    mode: 'markers', \n    name: 'Description=Station OH', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:203b4d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:38b1c9', \n    y: [713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 713128.081610064, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 308434.973100427, 1600084.51832467, 1587789.28409258, 1620818.79176776, 1620818.79176776, 1620818.79176776, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1648948.72291784, 1615919.21524266], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Station OH', \n    hovertextsrc: 'sumon23:120:d6383a', \n    hovertext: ['Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH', 'Station OH'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Station OH<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace25 = {\n    mode: 'markers', \n    name: 'Description=Consumables', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:35e9c0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ef7f60', \n    y: [770896.996705107, 745896.996705107, 770896.996705107, 770896.996705107, 770896.996705107, 735896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 745896.996705107, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 135506.668863262, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 561248.382423978, 562481.382423978, 1705156.68598511, 1501219.3887161, 1804211.03215689, 1832379.96116656, 1804211.03215689, 1804211.03215689, 1818295.49666172, 0, 2032761.03215689, 1976423.17413754, 1779240.67106982, 2032761.03215689], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Consumables', \n    hovertextsrc: 'sumon23:120:3a9295', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Consumables<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace26 = {\n    mode: 'markers', \n    name: 'Description=Needles', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8aa5d1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2dd0f0', \n    y: [75000, 70000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 41037.7358490566, 332511.3, 239380.2, 322163.4, 332511.3, 320707.5, 317795.7, 316418.1, 302923.5, 322163.4, 301467.6, 231944.1, 322163.4, 2091552.18270353, 1516532.3495633, 2368195.82941798, 2457196.12480318, 2084301.22084974, 2105916.4334555, 1919459.40985666, 0, 2205499.34796037, 2276821.33897514, 1742612.23423136, 2436584.21461623], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Needles', \n    hovertextsrc: 'sumon23:120:ad3260', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Needles<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace27 = {\n    mode: 'markers', \n    name: 'Description=Spare Parts', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:13401e', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:92490c', \n    y: [725000, 630000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 725000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 205776.791666667, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889, 0, 1393028.85688889, 1393028.85688889, 1393028.85688889, 1393028.85688889], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Spare Parts', \n    hovertextsrc: 'sumon23:120:98f6e8', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Spare Parts<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace28 = {\n    mode: 'markers', \n    name: 'Description=Chemical ETP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7c5280', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:93ea9f', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75, 93741.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Chemical ETP', \n    hovertextsrc: 'sumon23:120:b42a36', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Chemical ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace29 = {\n    mode: 'markers', \n    name: 'Description=CSR Projects', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:98a1ad', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2e4c10', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=CSR Projects', \n    hovertextsrc: 'sumon23:120:38610f', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=CSR Projects<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace30 = {\n    mode: 'markers', \n    name: 'Description=T&D', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4736c5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f12ae6', \n    y: [217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 217475, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 68800, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500, 15500], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=T&D', \n    hovertextsrc: 'sumon23:120:24f748', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=T&D<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace31 = {\n    mode: 'markers', \n    name: 'Description=Annual Trip', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:95509b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2160dc', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Annual Trip', \n    hovertextsrc: 'sumon23:120:485f3a', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Annual Trip<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace32 = {\n    mode: 'markers', \n    name: 'Description=Fire & All Risk Insurance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6410b7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a1250d', \n    y: [291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 291830, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333, 291785.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Fire & All Risk Insurance', \n    hovertextsrc: 'sumon23:120:d5b7ad', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Fire & All Risk Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace33 = {\n    mode: 'markers', \n    name: 'Description=Group Insurance - Workers & staff', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:162f20', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e91b09', \n    y: [207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 207137.066675, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375, 41882.1375], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Group Insurance - Workers & staff', \n    hovertextsrc: 'sumon23:120:7b1621', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Group Insurance - Workers & staff<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace34 = {\n    mode: 'markers', \n    name: 'Description=Security Sercvices Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d0cee4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8657a1', \n    y: [437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 437421.366666667, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 173500.8, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 880610, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333, 612443.333333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Security Sercvices Charges', \n    hovertextsrc: 'sumon23:120:e9d047', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Security Sercvices Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace35 = {\n    mode: 'markers', \n    name: 'Description=Telephone, Fax & Email , Internet', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:eea175', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d6eab6', \n    y: [145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 145570.833333333, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 67182.5, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 160338.333333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333, 217975.833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Telephone, Fax & Email , Internet', \n    hovertextsrc: 'sumon23:120:464894', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Telephone, Fax & Email , Internet<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace36 = {\n    mode: 'markers', \n    name: 'Description=Postage & Courier Charges Local', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:61feb4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f6f49a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378, 5398.45758354756, 26992.2879177378, 26992.2879177378, 26992.2879177378, 26992.2879177378], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Postage & Courier Charges Local', \n    hovertextsrc: 'sumon23:120:266b71', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Postage & Courier Charges Local<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace37 = {\n    mode: 'markers', \n    name: 'Description=WFX,FR & Kormee Charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:77a1c4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:abb4ba', \n    y: [533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 533442.5, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 111730, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 96416.6666666667, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75, 170718.75], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=WFX,FR & Kormee Charges', \n    hovertextsrc: 'sumon23:120:b5797d', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=WFX,FR & Kormee Charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace38 = {\n    mode: 'markers', \n    name: 'Description=Vehicle  Hire -  staff ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b7a0d2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ad6533', \n    y: [465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 465463.917525773, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 199484.536082474, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 206000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 514000, 718000, 718000, 718000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Vehicle  Hire -  staff ', \n    hovertextsrc: 'sumon23:120:6e8fe5', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Vehicle  Hire -  staff <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace39 = {\n    mode: 'markers', \n    name: 'Description=Adhoc Hiring', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4ec3e2', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4188a2', \n    y: [252175, 151305, 252175, 252175, 252175, 252175, 252175, 252175, 252175, 201740, 151305, 252175, 108075, 64845, 108075, 108075, 108075, 108075, 108075, 108075, 108075, 86460, 64845, 108075, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 95280, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222, 44996.8888888889, 112492.222222222, 112492.222222222, 112492.222222222, 112492.222222222], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Adhoc Hiring', \n    hovertextsrc: 'sumon23:120:5b8355', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Adhoc Hiring<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace40 = {\n    mode: 'markers', \n    name: 'Description=Vehicle Fuel Expenses Factory', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:784fb6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6f858f', \n    y: [382982.25, 263802, 369740, 382982.25, 356497.75, 369740, 356497.75, 356497.75, 356497.75, 343255.5, 250559.75, 369740, 164135.25, 113058, 158460, 164135.25, 152784.75, 158460, 152784.75, 152784.75, 152784.75, 147109.5, 107382.75, 158460, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 266927.978878305, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 601413.2, 751413.2, 751413.2, 751413.2, 751413.2], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Vehicle Fuel Expenses Factory', \n    hovertextsrc: 'sumon23:120:5d5109', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Vehicle Fuel Expenses Factory<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace41 = {\n    mode: 'markers', \n    name: 'Description=Lisence & Tax Token', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5dcbcc', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:362f82', \n    y: [0, 0, 0, 0, 0, 2100, 0, 0, 0, 0, 79940, 37870, 0, 0, 0, 0, 0, 900, 0, 0, 0, 0, 34260, 16230, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 4166.66666666667, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409, 43409], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Lisence & Tax Token', \n    hovertextsrc: 'sumon23:120:38fddd', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Lisence & Tax Token<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace42 = {\n    mode: 'markers', \n    name: 'Description=Driver OT', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7c0b77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:678bcb', \n    y: [127281, 82908, 123648, 127281, 120015, 123648, 120015, 120015, 120015, 110544, 79275, 123648, 54549, 35532, 52992, 54549, 51435, 52992, 51435, 51435, 51435, 47376, 33975, 52992, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 49143.375, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 91355, 123355, 123355, 123355, 123355], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Driver OT', \n    hovertextsrc: 'sumon23:120:895394', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Driver OT<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace43 = {\n    mode: 'markers', \n    name: 'Description=Genarator Fuel Transpsort', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:bea12a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:53e17c', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Genarator Fuel Transpsort', \n    hovertextsrc: 'sumon23:120:abb0ef', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Genarator Fuel Transpsort<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace44 = {\n    mode: 'markers', \n    name: 'Description=Foreign Travel-Operation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:05c79f', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:4eb01f', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667, 76166.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Foreign Travel-Operation', \n    hovertextsrc: 'sumon23:120:c38434', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Foreign Travel-Operation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace45 = {\n    mode: 'markers', \n    name: 'Description=Annual Trip Expact', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2066f9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:1f6711', \n    y: [96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 96250, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 13750, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Annual Trip Expact', \n    hovertextsrc: 'sumon23:120:dee3eb', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Annual Trip Expact<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace46 = {\n    mode: 'markers', \n    name: 'Description=Expact VISA', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ff692c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e2bcd7', \n    y: [46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 46708.3333333333, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667, 4916.66666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Expact VISA', \n    hovertextsrc: 'sumon23:120:d0cfde', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Expact VISA<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace47 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Factory Maintenance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:3bb11a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:156c1a', \n    y: [478520, 436613.333333333, 473863.703703704, 478520, 469207.407407407, 473863.703703704, 469207.407407407, 469207.407407407, 469207.407407407, 464551.111111111, 431957.037037037, 473863.703703704, 69060, 46040, 66502.2222222222, 69060, 63944.4444444444, 66502.2222222222, 63944.4444444444, 63944.4444444444, 63944.4444444444, 61386.6666666667, 43482.2222222222, 66502.2222222222, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 216000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000, 294000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Factory Maintenance', \n    hovertextsrc: 'sumon23:120:bd8b06', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Factory Maintenance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace48 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Equipment', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:cac786', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5b89c1', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 379655, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095, 259095], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Equipment', \n    hovertextsrc: 'sumon23:120:87d84b', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Equipment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace49 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Electrical', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9f6230', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ddc203', \n    y: [218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 218400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 302000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000, 230000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Electrical', \n    hovertextsrc: 'sumon23:120:a1f1b3', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Electrical<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace50 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Computer', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4916a0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6adba0', \n    y: [91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 91863.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 67318.3333333333, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 93608.2166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667, 141260.166666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Computer', \n    hovertextsrc: 'sumon23:120:f2a72d', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Computer<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace51 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Vehicle', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e32050', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:6fa85d', \n    y: [58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 58800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667, 23916.6666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Vehicle', \n    hovertextsrc: 'sumon23:120:a1b357', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Vehicle<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace52 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - Plant & Machinery', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:41d9ab', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:1d0919', \n    y: [428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 428809.666666667, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956, 134054.827672956], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - Plant & Machinery', \n    hovertextsrc: 'sumon23:120:d4eb22', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - Plant & Machinery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace53 = {\n    mode: 'markers', \n    name: 'Description=Repair Maintenance - ETP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:49f1e7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0a2306', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Repair Maintenance - ETP', \n    hovertextsrc: 'sumon23:120:aa4f0d', \n    hovertext: ['Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance', 'Repair & Maintenance'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Repair Maintenance - ETP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace54 = {\n    mode: 'markers', \n    name: 'Description=AC Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7232f7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:961022', \n    y: [261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 261500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 62500, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740, 295740], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=AC Rent', \n    hovertextsrc: 'sumon23:120:151756', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=AC Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace55 = {\n    mode: 'markers', \n    name: 'Description=Industrial Fans', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fe9732', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:331093', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Industrial Fans', \n    hovertextsrc: 'sumon23:120:4a49d0', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Industrial Fans<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace56 = {\n    mode: 'markers', \n    name: 'Description=Machine Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d1a9c3', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00'], \n    ysrc: 'sumon23:120:9a77dc', \n    y: [35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 35227.896760022, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 14772.103239978, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 23250, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Machine Rent', \n    hovertextsrc: 'sumon23:120:beb957', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Machine Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace57 = {\n    mode: 'markers', \n    name: 'Description=House Rent/Office Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c216c5', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:08212e', \n    y: [481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 481950, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550, 206550], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=House Rent/Office Rent', \n    hovertextsrc: 'sumon23:120:9deaf0', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=House Rent/Office Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace58 = {\n    mode: 'markers', \n    name: 'Description=Table & Chair', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:eee9ba', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:45b209', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300, 9300], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Table & Chair', \n    hovertextsrc: 'sumon23:120:c5ebfb', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Table & Chair<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace59 = {\n    mode: 'markers', \n    name: 'Description=TV Rent', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:7b99c9', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:e2ddfa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=TV Rent', \n    hovertextsrc: 'sumon23:120:9d530c', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=TV Rent<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace60 = {\n    mode: 'markers', \n    name: 'Description=Refrigerator', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4dea81', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fa793b', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Refrigerator', \n    hovertextsrc: 'sumon23:120:7d214c', \n    hovertext: ['Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates', 'Rent & Rates'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Refrigerator<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace61 = {\n    mode: 'markers', \n    name: 'Description=Development sample courier', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2ce2a8', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:16c626', \n    y: [1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 1680000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 652657.195296801, 640245.379078543, 602483.008726379, 586266.182216168, 627114.917619678, 628834.177407056, 637475.846513938, 1977612, 605034.738770589, 575538.017919277, 573220.455536106, 573220.937758265, 1324954.8047032, 1337366.62092146, 1375128.99127362, 1391345.81778383, 1350497.08238032, 1348777.82259294, 1340136.15348606, 0, 1372577.26122941, 1402073.98208072, 1404391.54446389, 1404391.06224174], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Development sample courier', \n    hovertextsrc: 'sumon23:120:0c70e7', \n    hovertext: ['Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier', 'Development Sample Courier'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Development sample courier<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace62 = {\n    mode: 'markers', \n    name: 'Description=Photo Shoot', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:db7f39', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:97692d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Photo Shoot', \n    hovertextsrc: 'sumon23:120:7e9e00', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Photo Shoot<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace63 = {\n    mode: 'markers', \n    name: 'Description=Buyer QC entertainment', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:32bcff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f66398', \n    y: [130000, 78000, 130000, 130000, 130000, 130000, 130000, 130000, 130000, 104000, 78000, 130000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 81786.0059090909, 164838.492247193, 166382.654405936, 171080.695554536, 173098.241527794, 168016.223688229, 167802.329455666, 166727.213760382, 0, 170763.233153844, 174432.93945183, 174721.268900936, 174721.208907363], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Buyer QC entertainment', \n    hovertextsrc: 'sumon23:120:7e8afe', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Buyer QC entertainment<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace64 = {\n    mode: 'markers', \n    name: 'Description=Buyer Visit Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:05e785', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8ce675', \n    y: [90000, 54000, 90000, 90000, 90000, 90000, 90000, 90000, 90000, 72000, 54000, 90000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Buyer Visit Expenses', \n    hovertextsrc: 'sumon23:120:ad4abe', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Buyer Visit Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace65 = {\n    mode: 'markers', \n    name: 'Description=Foreign Travel', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:92a85d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b6d933', \n    y: [475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 475328.333333333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244069.516318536, 222440.69723746, 239427.958694021, 218210.462631195, 225306.236703807, 205340.171686721, 219241.746752434, 199813.101393303, 234517.654478579, 213735.297072603, 235160.593693461, 214321.260651328, 238392.256523965, 217266.541750322, 739553.333333333, 674016, 226260.488832113, 206209.860421153, 215229.8123253, 196156.694379828, 214363.130192666, 195366.815411023, 214363.310525818, 195366.97976351, 495483.817014797, 451575.30276254, 500125.374639313, 455805.537368805, 514247.096629526, 468675.828313279, 520311.5865809, 474202.898606697, 505035.678854754, 460280.702927397, 504392.739639872, 459694.739348672, 501161.076809369, 456749.458249678, 0, 0, 513292.844501221, 467806.139578847, 524323.521008034, 477859.305620173, 525190.203140667, 478649.184588977, 525190.022807515, 478649.02023649], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Foreign Travel', \n    hovertextsrc: 'sumon23:120:b7bee9', \n    hovertext: ['Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel', 'Salaries', 'Foreign Travel'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Foreign Travel<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace66 = {\n    mode: 'markers', \n    name: 'Description=Testing & Audit ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fa3daf', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7d3cfa', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Testing & Audit ', \n    hovertextsrc: 'sumon23:120:7e86e4', \n    hovertext: ['Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses ', 'Selling Expenses '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Testing & Audit <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace67 = {\n    mode: 'markers', \n    name: 'Description=Printing & Stationery', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:bf144a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:663f2e', \n    y: [455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 455455.656781988, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 237299.676551345, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 207361.792777778, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 549728.072222222, 119545.614444444, 605609.686666667, 605609.686666667, 605609.686666667, 605609.686666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Printing & Stationery', \n    hovertextsrc: 'sumon23:120:1b6d45', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Printing & Stationery<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace68 = {\n    mode: 'markers', \n    name: 'Description=Entertainment & Daily Tea Coffee Exp', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:d81185', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8798fc', \n    y: [369724.5, 321183, 364331, 369724.5, 358937.5, 405413.75, 402321.875, 407634.375, 414275, 415833.90625, 379016.7578125, 452663.603515625, 71865, 47910, 69203.3333333333, 71865, 66541.6666666667, 69203.3333333333, 66541.6666666667, 66541.6666666667, 66541.6666666667, 63880, 45248.3333333333, 69203.3333333333, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 76889.6845454545, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948, 356948], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Entertainment & Daily Tea Coffee Exp', \n    hovertextsrc: 'sumon23:120:6d3c57', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Entertainment & Daily Tea Coffee Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace69 = {\n    mode: 'markers', \n    name: 'Description=Tifin Expense', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:c9c9aa', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9e71c7', \n    y: [546750, 364500, 526500, 546750, 506250, 526500, 506250, 506250, 506250, 486000, 8032500, 526500, 176850, 117900, 170300, 176850, 163750, 170300, 163750, 163750, 163750, 157200, 4777000, 170300, 1966492.34693878, 1312276.09329446, 1907623.03206997, 1980993.14868805, 1834252.9154519, 1687512.68221574, 1394032.21574344, 1907623.03206997, 2127264.13994169, 1684084.11078717, 2304536.1516035], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Tifin Expense', \n    hovertextsrc: 'sumon23:120:6859f7', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Tifin Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace70 = {\n    mode: 'markers', \n    name: 'Description=Welfare', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f85304', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:5b022b', \n    y: [421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 421156.666666667, 886156.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 149586.666666667, 479586.666666667], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Welfare', \n    hovertextsrc: 'sumon23:120:3cdfcf', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Welfare<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace71 = {\n    mode: 'markers', \n    name: 'Description=Medical Expense', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:4fa5aa', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:493372', \n    y: [65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 65000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 32404.75, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338, 190338], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Medical Expense', \n    hovertextsrc: 'sumon23:120:d8b27a', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Medical Expense<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace72 = {\n    mode: 'markers', \n    name: 'Description=Child Care Exp', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b6fd2a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7abd0c', \n    y: [54000, 36000, 52000, 54000, 50000, 52000, 50000, 50000, 50000, 48000, 34000, 52000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Child Care Exp', \n    hovertextsrc: 'sumon23:120:b9cd58', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Child Care Exp<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace73 = {\n    mode: 'markers', \n    name: 'Description=Best Line Gift', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a32d33', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:7d86b6', \n    y: [80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Best Line Gift', \n    hovertextsrc: 'sumon23:120:7f4722', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Best Line Gift<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace74 = {\n    mode: 'markers', \n    name: 'Description=Compliance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:abb04b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:9ddc96', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1144381.64583333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333, 1229810.48593333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Compliance', \n    hovertextsrc: 'sumon23:120:7b8eb0', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Compliance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace75 = {\n    mode: 'markers', \n    name: 'Description=Convayance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9662d7', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a58706', \n    y: [72750, 43650, 72750, 72750, 72750, 72750, 72750, 72750, 72750, 58200, 43650, 72750, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 52922.8, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 61615.625, 12323.125, 61615.625, 61615.625, 61615.625, 61615.625], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Convayance', \n    hovertextsrc: 'sumon23:120:2ec3f8', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Convayance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace76 = {\n    mode: 'markers', \n    name: 'Description=Casual Labour', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6bd7ed', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d5e309', \n    y: [210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 210000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 42000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000, 802000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Casual Labour', \n    hovertextsrc: 'sumon23:120:f53fc1', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Casual Labour<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace77 = {\n    mode: 'markers', \n    name: 'Description=Mobile Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:cbbdea', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f53de1', \n    y: [126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 126000, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100, 2100], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Mobile Allowance', \n    hovertextsrc: 'sumon23:120:7382d5', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Mobile Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace78 = {\n    mode: 'markers', \n    name: 'Description=Facility Expeses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5bff24', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:f9d754', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 47010, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 75000, 225000, 225000, 75000, 75000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Facility Expeses', \n    hovertextsrc: 'sumon23:120:0bece6', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Facility Expeses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace79 = {\n    mode: 'markers', \n    name: 'Description=Legal Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e700b4', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b27a11', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333, 65152.0833333333], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Legal Expenses', \n    hovertextsrc: 'sumon23:120:4daefc', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Legal Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace80 = {\n    mode: 'markers', \n    name: 'Description=Washing Charge', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:3f7da6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ae2fc4', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70495.9410790425, 73577.9027633131, 74520.6450522933, 78146.5342128796, 60200.2269944661, 29075.2920620521, 62286.0986439324, 46783.6409541974, 3597203.12301931, 2077760.79770928, 4549019.69683021, 4835894.00896865, 4464452.7175772, 4032589.89200036, 3484822.56944306, 0, 4178749.58307533, 4053168.12041538, 3336006.95191142, 4907767.64792832], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Washing Charge', \n    hovertextsrc: 'sumon23:120:81ad1d', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Washing Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace81 = {\n    mode: 'markers', \n    name: 'Description=Accomodation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:110603', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d96c27', \n    y: [16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 75895, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500, 300500], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Accomodation', \n    hovertextsrc: 'sumon23:120:ac2314', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Accomodation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace82 = {\n    mode: 'markers', \n    name: 'Description=Meal', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:48ba03', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:72ecc9', \n    y: [276750, 184500, 266500, 276750, 256250, 266500, 256250, 256250, 256250, 246000, 174250, 266500, 205875, 137250, 198250, 205875, 190625, 198250, 190625, 190625, 190625, 183000, 129625, 198250], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Meal', \n    hovertextsrc: 'sumon23:120:6274ff', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Meal<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace83 = {\n    mode: 'markers', \n    name: 'Description=VAT Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:561068', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:38f926', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 504000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000, 1050000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=VAT Expense ', \n    hovertextsrc: 'sumon23:120:aeb905', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=VAT Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace84 = {\n    mode: 'markers', \n    name: 'Description=BSC Common', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:6ac3ff', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:921a87', \n    y: [8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8607986.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 8416236.60476625, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5196481.87052486, 5097658.50900636, 4796993.05348522, 4667874.0526299, 4993113.26624445, 5006802.07926944, 5075607.38344534, 15745823.3495136, 4817310.02694198, 4582455.99292789, 4564003.47145913, 4564007.31093064, 10549341.4789887, 10648164.8405072, 10948830.2960284, 11077949.2968837, 10752710.0832691, 10739021.2702441, 10670215.9660682, 0, 10928513.3225716, 11163367.3565857, 11181819.8780545, 11181816.0385829], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=BSC Common', \n    hovertextsrc: 'sumon23:120:c3ad0f', \n    hovertext: ['BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common', 'BSC Common'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=BSC Common<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace85 = {\n    mode: 'markers', \n    name: 'Description=Q Collection Expenses (Singapore)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:ea0c3d', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:bd0bb5', \n    y: [7542638.22161732, 7992605.73721689, 8259132.87861216, 8398021.42547909, 8266939.13907942, 8249411.63557159, 8464358.37926181, 8048972.03593794, 8737907.74420371, 9033845.10426946, 8724980.13052805, 9346054.27171425, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6383497.35697776, 6551780.54101973, 6384291.65256811, 6411279.50891445, 6775473.1665179, 6789773.08159736, 7368504.39222547, 21102504.0478758, 7257292.03750336, 7134606.3163587, 6855436.63068271, 7495613.11101102, 12959093.3109863, 13685585.0732936, 14571737.9793854, 15215455.3715708, 14591036.6442246, 14563291.3762081, 15490467.8932432, 0, 16463838.1740182, 17380686.5525925, 16795836.8281441, 18364249.0455663], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Q Collection Expenses (Singapore)', \n    hovertextsrc: 'sumon23:120:7f5343', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Q Collection Expenses (Singapore)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace86 = {\n    mode: 'markers', \n    name: 'Description=Q Collection Expenses (Bangladesh)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f042c6', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:410b6d', \n    y: [2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 2739717.14210526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1679171.60237042, 1647238.19310484, 1550082.28891733, 1508359.26072926, 1613455.83666009, 1617879.1882034, 1640112.67534784, 5088046.12105263, 1556647.43928728, 1480757.59026164, 1474794.91189298, 1474796.15256536, 3408874.51868221, 3440807.92794779, 3537963.83213531, 3579686.86032337, 3474590.28439254, 3470166.93284924, 3447933.4457048, 0, 3531398.68176536, 3607288.53079099, 3613251.20915965, 3613249.96848727], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Q Collection Expenses (Bangladesh)', \n    hovertextsrc: 'sumon23:120:310f48', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Q Collection Expenses (Bangladesh)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace87 = {\n    mode: 'markers', \n    name: 'Description=UK Office Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f68a55', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:322334', \n    y: [1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 1587468.38433154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 972958.773613414, 954455.667276649, 898160.831624269, 873985.347546289, 934881.229470619, 937444.242498445, 950326.943917804, 2948155.57090144, 901964.862518739, 857992.171262254, 854537.229417818, 854537.948297935, 1975196.79728802, 1993699.90362479, 2049994.73927717, 2074170.22335515, 2013274.34143082, 2010711.32840299, 1997828.62698363, 0, 2046190.7083827, 2090163.39963918, 2093618.34148362, 2093617.6226035], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=UK Office Expense ', \n    hovertextsrc: 'sumon23:120:b00a9a', \n    hovertext: ['Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office', 'Q Collection Expenses & UK Office'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=UK Office Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace88 = {\n    mode: 'markers', \n    name: 'Description=Birichina CHO Direct ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:afb033', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b26465', \n    y: [587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 587416.666666667, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Birichina CHO Direct ', \n    hovertextsrc: 'sumon23:120:dca1d2', \n    hovertext: ['Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct ', 'Birichina CHO Direct '], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Birichina CHO Direct <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace89 = {\n    mode: 'markers', \n    name: 'Description=C& F Charges - Inward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2a341b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:03a727', \n    y: [1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 1698785.599, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 728050.971, 493758.277103692, 484368.29866506, 455799.728428189, 443531.124978364, 474434.639656586, 475735.32056017, 482273.049218128, 1496133.5, 457730.202556633, 435414.8888319, 433661.570830288, 433661.935648426, 1002375.22289631, 1011765.20133494, 1040333.77157181, 1052602.37502164, 1021698.86034341, 1020398.17943983, 1013860.45078187, 0, 1038403.29744337, 1060718.6111681, 1062471.92916971, 1062471.56435157], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=C& F Charges - Inward', \n    hovertextsrc: 'sumon23:120:1de855', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=C& F Charges - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace90 = {\n    mode: 'markers', \n    name: 'Description=C& F Charges - Outward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2ca76b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3d5488', \n    y: [1677739.81850432, 1587722.62816896, 1299648.33739565, 2076128.47117164, 1617002.18682339, 2333067.02849418, 2354723.38202931, 2748608.26003403, 2886152.93322663, 1763933.93967844, 1299424.83242869, 1785380.76199099, 719031.350787566, 680452.554929554, 556992.144598134, 889769.344787845, 693000.937210026, 999885.86935465, 1009167.16372685, 1177974.96858601, 1236922.68566856, 755971.688433617, 556896.356755153, 765163.183710423, 678679.802839185, 883305.764504294, 899414.096500405, 977294.681412369, 905673.967534534, 958047.607126306, 1035468.41481008, 1149459.8160657, 773254.601967319, 936151.649809413, 702874.207398739, 995995.584258069, 1377783.11816186, 1845079.53374957, 2052855.23632017, 2319347.26745694, 1950376.26498461, 2054903.20327125, 2176817.62543384, 0, 1754199.57861919, 2280568.49524025, 1722043.55960981, 2440188.77264763], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=C& F Charges - Outward', \n    hovertextsrc: 'sumon23:120:497b1a', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=C& F Charges - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace91 = {\n    mode: 'markers', \n    name: 'Description=Transport - Inward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:fdb698', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:90835d', \n    y: [1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 1012200, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 433800, 624898.311344436, 613014.395789073, 576858.138514228, 561331.047761802, 600442.400487487, 602088.536538138, 610362.65727258, 1893500, 579301.338109857, 551059.174868554, 548840.183290563, 548840.645002799, 1268601.68865556, 1280485.60421093, 1316641.86148577, 1332168.9522382, 1293057.59951251, 1291411.46346186, 1283137.34272742, 0, 1314198.66189014, 1342440.82513145, 1344659.81670944, 1344659.3549972], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Transport - Inward', \n    hovertextsrc: 'sumon23:120:bf0e74', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Transport - Inward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace92 = {\n    mode: 'markers', \n    name: 'Description=Transport - Outward', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:464e76', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:0f1322', \n    y: [1089403.20614105, 1036164.4651338, 1017666.27571308, 1326795.57761849, 1241431.92719414, 1272876.37659969, 1332495.57022356, 1300476.60897125, 1419772.81453305, 1434657.40866167, 1056859.0018641, 1452100.71639039, 466887.088346166, 444070.485057343, 436142.68959132, 568626.676122212, 532042.254511775, 545518.447114151, 571069.530095812, 557347.118130534, 608474.063371309, 614853.175140714, 452939.572227471, 622328.878453023, 1117220.6379875, 900661.216714062, 1343206.36484148, 1326222.35659685, 1232391.18675497, 1062174.08431979, 916542.237073173, 1149345.97633447, 1252774.22876258, 1191063.67820593, 890803.588707002, 1261972.10707289, 2268061.79857091, 1881332.20067197, 3065782.74707102, 3147433.68332658, 2653964.4573934, 2278242.65940961, 1926804.59160251, 0, 2842034.20013165, 2901562.26386442, 2182471.01211378, 3091831.14437969], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Transport - Outward', \n    hovertextsrc: 'sumon23:120:62f44e', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Transport - Outward<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace93 = {\n    mode: 'markers', \n    name: 'Description=Documentation Chrages & Misc Expenses', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b1b21a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:8a10a1', \n    y: [1259409.88819286, 1194264.33560202, 1026569.08647076, 1573004.07831, 1249111.76982545, 1780836.23120121, 1767465.45648945, 2040596.61406134, 2141845.54093323, 1360231.12490562, 1019426.95675037, 1389966.37384633, 539747.094939797, 511827.572400865, 439958.179916039, 674144.60499, 535333.615639479, 763215.527657663, 757485.195638336, 874541.406026289, 917933.803257099, 582956.196388122, 436897.26717873, 595699.874505569, 346040.048107684, 486333.823548411, 500397.224261824, 539200.711515193, 502635.133444161, 526880.568389034, 563952.732913928, 672039.696803797, 434794.914950447, 515699.182249713, 392011.326955426, 547306.126697075, 702493.479983012, 1015870.85747473, 1142124.70769909, 1279648.52428775, 1082428.85338259, 1130098.92167213, 1185571.89322262, 0, 986372.476350392, 1256299.98974983, 960428.727888611, 1340899.78577799], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Documentation Chrages & Misc Expenses', \n    hovertextsrc: 'sumon23:120:aa639f', \n    hovertext: ['Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)', 'Logistic Expenses (Outward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Documentation Chrages & Misc Expenses<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace94 = {\n    mode: 'markers', \n    name: 'Description=Custom & VAT service charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9b5f80', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:431462', \n    y: [0, 0, 0, 0, 0, 280000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120000, 0, 0, 0, 0, 0, 0, 11880.8234530762, 11654.8815676824, 14775.6111528598, 10672.2565193688, 11415.8576274357, 184585.368608603, 11604.4656254623, 36000, 11013.9150630868, 10476.9634514222, 10434.7750718037, 57536.2387288384, 24119.1765469238, 24345.1184323176, 33724.3888471402, 25327.7434806312, 24584.1423725643, 395914.631391397, 24395.5343745377, 0, 24986.0849369132, 25523.0365485778, 25565.2249281963, 140963.761271162], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Custom & VAT service charges', \n    hovertextsrc: 'sumon23:120:e24f0a', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Custom & VAT service charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace95 = {\n    mode: 'markers', \n    name: 'Description=Marine Insurance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:534e87', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:fb21a4', \n    y: [432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 432343.231234687, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 185289.956243437, 87571.0468099923, 85905.6767705923, 80838.8663138996, 78662.9545432656, 84143.8816607902, 84374.5653648909, 85534.0714813156, 265348.416093455, 81181.2476938312, 77223.4904806637, 76912.5288220713, 76912.5935247967, 177777.369283462, 179442.739322862, 184509.549779555, 186685.461550189, 181204.534432664, 180973.850728564, 179814.344612139, 0, 184167.168399623, 188124.925612791, 188435.887271383, 188435.822568658], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Marine Insurance', \n    hovertextsrc: 'sumon23:120:3f9088', \n    hovertext: ['Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)', 'Logistic Expenses (Inward)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Marine Insurance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace96 = {\n    mode: 'markers', \n    name: 'Description=Air Freight', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:130f56', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:19e755', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Air Freight', \n    hovertextsrc: 'sumon23:120:a78e2e', \n    hovertext: ['Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight', 'Air Freight'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Air Freight<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace97 = {\n    mode: 'markers', \n    name: 'Description=Discount', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:09eb77', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:2f7ee9', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Discount', \n    hovertextsrc: 'sumon23:120:662713', \n    hovertext: ['Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Discount<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace98 = {\n    mode: 'markers', \n    name: 'Description=Claims', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:2b3049', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:399a1d', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Claims', \n    hovertextsrc: 'sumon23:120:09f1ef', \n    hovertext: ['Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims', 'Claims'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Claims<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace99 = {\n    mode: 'markers', \n    name: 'Description=Inspection charges', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:662706', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ee5bf8', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Inspection charges', \n    hovertextsrc: 'sumon23:120:6d17ff', \n    hovertext: ['Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges', 'Inspection charges'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Inspection charges<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace100 = {\n    mode: 'markers', \n    name: 'Description=Demmurage Expense ', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:aa9f1c', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:c5acd5', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Demmurage Expense ', \n    hovertextsrc: 'sumon23:120:a1374c', \n    hovertext: ['Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount', 'Discount'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Demmurage Expense <br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace101 = {\n    mode: 'markers', \n    name: 'Description=Interest - Term Loan', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:1a69a1', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b210e5', \n    y: [26345317.4533711, 26286344.78057, 26443688.2500088, 26750235.1744672, 27043710.34799, 27339839.0407889, 28188645.2100924, 28124326.6401811, 28059380.7024324, 27993801.2681649, 27927582.1487396, 27860717.0949725, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7584511.23210952, 7263509.74746615, 6997360.17711525, 6966666.96498879, 7619195.85308483, 7806122.6827214, 8080141.4534435, 24495659.4297901, 7318034.95057534, 9431655.53572762, 9059401.97906665, 8955543.12658645, 15397263.1738764, 15172269.5772978, 15971027.7345011, 16533518.8002639, 16408000.321108, 16743245.7286413, 16986509.7575964, 0, 16601639.0900993, 22976551.3708359, 22195557.4237167, 21941076.9845297], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - Term Loan', \n    hovertextsrc: 'sumon23:120:cb09d8', \n    hovertext: ['Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan', 'Interest - Term Loan'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - Term Loan<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace102 = {\n    mode: 'markers', \n    name: 'Description=Interest - WC', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:be41cd', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b2f69c', \n    y: [10453741.5853845, 10025464.8528619, 9795521.7551532, 9667393.299376, 9306132.17215348, 9156697.64801144, 9592902.12776383, 8902775.65939242, 9464147.20163676, 9436113.66565703, 9120015.19634, 9528458.9009511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3530378.7887179, 3462583.09143366, 3257731.78654968, 3169431.15202398, 3389602.29974493, 3347436.50457805, 3341266.00287915, 10203584.0360386, 3072176.07256655, 2875279.92524695, 2816764.4005748, 2816119.47014271, 7166997.27244541, 7232762.93741485, 7435564.75550766, 7521796.26232712, 7299536.15775942, 7179870.75468753, 7024189.84712751, 0, 6969515.54924982, 7004498.48467384, 6901079.80046603, 6899491.54603491], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - WC', \n    hovertextsrc: 'sumon23:120:8dfa38', \n    hovertext: ['Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC', 'Interest - WC'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - WC<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace103 = {\n    mode: 'markers', \n    name: 'Description=Bank Charge', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:535772', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:debb45', \n    y: [5776611.71136482, 5573373.3770077, 6476297.81245559, 9004041.58579832, 8325392.37272467, 8554809.5313783, 8943367.22219713, 8644887.35672514, 8736023.30946739, 8784806.16312224, 7044055.12975788, 9252103.69135721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 676817.173598667, 2006924.04376777, 2064596.14240516, 2403585.82444489, 3173057.79829852, 2575717.0080632, 1913241.65538662, 3278053.26626029, 1136788.92422352, 2147059.10071133, 3195355.68500536, 3848249.83961438, 1374001.80757586, 4192132.13334332, 4712308.84451781, 5704267.42317678, 6833205.81033459, 5524620.16628314, 4022119.9387561, 0, 2578910.80994323, 5230472.37431883, 7828629.3907275, 9428210.52762515], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Bank Charge', \n    hovertextsrc: 'sumon23:120:321a73', \n    hovertext: ['Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge', 'Bank Charge'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Bank Charge<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace104 = {\n    mode: 'markers', \n    name: 'Description=Interest on IDBP', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:b67773', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:3a1d2a', \n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest on IDBP', \n    hovertextsrc: 'sumon23:120:acbf4e', \n    hovertext: ['Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP', 'Interest on IDBP'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest on IDBP<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace105 = {\n    mode: 'markers', \n    name: 'Description=Attendence Bonus', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:5786fa', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:55df64', \n    y: [1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 1146600, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 678672, 0, 0, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 810112.461440678, 1282875.94285714, 1287031.42857143, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1313963.54285714, 1333820.11428571, 1457190.11428571, 1457190.11428571], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Attendence Bonus', \n    hovertextsrc: 'sumon23:120:da737d', \n    hovertext: ['Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Salaries', 'Salaries', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Attendence Bonus<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace106 = {\n    mode: 'markers', \n    name: 'Description=Additonal Allowance', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:a2b5ac', \n    x: ['2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:b8a263', \n    y: [235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 235200, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0, 84000, 0], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Additonal Allowance', \n    hovertextsrc: 'sumon23:120:1b8aaf', \n    hovertext: ['Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries', 'Direct Wages', 'Salaries'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Additonal Allowance<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace107 = {\n    mode: 'markers', \n    name: 'Description=Subcontract', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:00f824', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:d5847d', \n    y: [1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 1260000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000, 2100000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF6692', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Subcontract', \n    hovertextsrc: 'sumon23:120:750731', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Subcontract<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace108 = {\n    mode: 'markers', \n    name: 'Description=Provision for Resignation Benefit', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:175834', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:616bfa', \n    y: [856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 856758.9, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000, 535000], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#B6E880', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Provision for Resignation Benefit', \n    hovertextsrc: 'sumon23:120:16f44c', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Provision for Resignation Benefit<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace109 = {\n    mode: 'markers', \n    name: 'Description=HR Event & activities', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:0c9806', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:33882c', \n    y: [436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 436316.666666667, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020, 720020], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FF97FF', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=HR Event & activities', \n    hovertextsrc: 'sumon23:120:82a826', \n    hovertext: ['Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses', 'Other Operation Expenses'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=HR Event & activities<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace110 = {\n    mode: 'markers', \n    name: 'Description=Interest - WC(QCPL)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:f7211b', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a11773', \n    y: [404048.917905421, 415505.20019154, 459144.2955772, 569151.797061948, 603484.937736964, 611214.586929408, 976361.510345334, 2043884.95181965, 1035020.15068679, 1055735.60698053, 967306.767568972, 1273152.63007536, 820256.880597881, 867921.587118999, 1047967.5324966, 1350729.4067907, 1299609.72825799, 1310985.8040716, 2052559.89860853, 0, 2348038.93514219, 2571888.18187022, 2369903.99096286, 3119223.42114693], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FECB52', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - WC(QCPL)', \n    hovertextsrc: 'sumon23:120:dc0e6f', \n    hovertext: ['Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)', 'Interest - WC(QCPL)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - WC(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace111 = {\n    mode: 'markers', \n    name: 'Description=Interest - Term Loan(QCPL)', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:9a5927', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:18977c', \n    y: [1356568.31979069, 1330769.97298001, 1252279.70937899, 1218572.53009739, 1303477.89964091, 1307051.43468788, 1325013.41323494, 4110528.17217144, 1257583.55979783, 1196273.70627449, 1191456.5806367, 1191457.58295049, 2753959.85238076, 2779758.19919144, 2858248.46279246, 2891955.64207406, 2807050.27253053, 2803476.73748357, 2785514.7589365, 0, 2852944.61237362, 2914254.46589696, 2919071.59153474, 2919070.58922095], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#636efa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest - Term Loan(QCPL)', \n    hovertextsrc: 'sumon23:120:849de2', \n    hovertext: ['Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)', 'Interest - Term Loan(QCPL)'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest - Term Loan(QCPL)<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace112 = {\n    mode: 'markers', \n    name: 'Description=Interest on EDF', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:e6e36a', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:31c5fc', \n    y: [2021390.10139143, 1982948.60005708, 1865992.1301292, 1815765.86614261, 1942281.33244566, 1947606.1717962, 1974370.88766546, 6125000, 1873895.27115018, 1782538.92055447, 1775361.03652215, 1775362.53004602, 4103609.89860857, 4142051.39994292, 4259007.8698708, 4309234.13385739, 4182718.66755434, 4177393.8282038, 4150629.11233454, 0, 4251104.72884982, 4342461.07944553, 4349638.96347785, 4349637.46995398], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#EF553B', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Interest on EDF', \n    hovertextsrc: 'sumon23:120:0df330', \n    hovertext: ['Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF', 'Interest on EDF'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Interest on EDF<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace113 = {\n    mode: 'markers', \n    name: 'Description=Depreciation', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:289c86', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00', '2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:ec7c00', \n    y: [9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 9276963.99999999, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25, 31270053.25], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#00cc96', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Depreciation', \n    hovertextsrc: 'sumon23:120:7de8ae', \n    hovertext: ['Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation', 'Depreciation'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Depreciation<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace114 = {\n    mode: 'markers', \n    name: 'Description=Winding Wages', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:46af01', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a9bd79', \n    y: [1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732, 1908732], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#ab63fa', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding Wages', \n    hovertextsrc: 'sumon23:120:87ab72', \n    hovertext: ['Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages', 'Direct Wages'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding Wages<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace115 = {\n    mode: 'markers', \n    name: 'Description=Winding Utility', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8c2bd0', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:81408b', \n    y: [446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292, 446292], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#FFA15A', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding Utility', \n    hovertextsrc: 'sumon23:120:1a6319', \n    hovertext: ['Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility', 'Utility'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding Utility<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  trace116 = {\n    mode: 'markers', \n    name: 'Description=Winding  Consumable', \n    type: 'scattergl', \n    xsrc: 'sumon23:120:8e8f19', \n    x: ['2019-07-01T00:00:00', '2019-08-01T00:00:00', '2019-09-01T00:00:00', '2019-10-01T00:00:00', '2019-11-01T00:00:00', '2019-12-01T00:00:00', '2020-01-01T00:00:00', '2020-02-01T00:00:00', '2020-03-01T00:00:00', '2020-04-01T00:00:00', '2020-05-01T00:00:00', '2020-06-01T00:00:00'], \n    ysrc: 'sumon23:120:a49172', \n    y: [1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936, 1398936], \n    xaxis: 'x', \n    yaxis: 'y', \n    marker: {\n      color: '#19d3f3', \n      symbol: 'circle'\n    }, \n    hoverlabel: {namelength: 0}, \n    showlegend: true, \n    legendgroup: 'Description=Winding  Consumable', \n    hovertextsrc: 'sumon23:120:3c18b6', \n    hovertext: ['Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables', 'Needles & Consumables'], \n    hovertemplate: '<b>%{hovertext}</b><br><br>Description=Winding  Consumable<br>Month=%{x}<br>Amount BDT=%{y}'\n  };\n  export const dataArea = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace8, trace9, trace10, trace11, trace12, trace13, trace14, trace15, trace16, trace17, trace18, trace19, trace20, trace21, trace22, trace23, trace24, trace25, trace26, trace27, trace28, trace29, trace30, trace31, trace32, trace33, trace34, trace35, trace36, trace37, trace38, trace39, trace40, trace41, trace42, trace43, trace44, trace45, trace46, trace47, trace48, trace49, trace50, trace51, trace52, trace53, trace54, trace55, trace56, trace57, trace58, trace59, trace60, trace61, trace62, trace63, trace64, trace65, trace66, trace67, trace68, trace69, trace70, trace71, trace72, trace73, trace74, trace75, trace76, trace77, trace78, trace79, trace80, trace81, trace82, trace83, trace84, trace85, trace86, trace87, trace88, trace89, trace90, trace91, trace92, trace93, trace94, trace95, trace96, trace97, trace98, trace99, trace100, trace101, trace102, trace103, trace104, trace105, trace106, trace107, trace108, trace109, trace110, trace111, trace112, trace113, trace114, trace115, trace116];\n  export const layoutArea = {\n    title: {text: 'Description of BDT expenses'}, \n    xaxis: {\n      title: {text: 'Month'}, \n      anchor: 'y', \n      domain: [0.0, 0.98]\n    }, \n    yaxis: {\n      title: {text: 'Amount BDT'}, \n      anchor: 'x', \n      domain: [0.0, 1.0]\n    }, \n    height: 600, \n    legend: {tracegroupgap: 0}, \n    template: {\n      data: {\n        bar: [\n          {\n            type: 'bar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}, \n            error_x: {color: '#2a3f5f'}, \n            error_y: {color: '#2a3f5f'}\n          }\n        ], \n        table: [\n          {\n            type: 'table', \n            cells: {\n              fill: {color: '#EBF0F8'}, \n              line: {color: 'white'}\n            }, \n            header: {\n              fill: {color: '#C8D4E3'}, \n              line: {color: 'white'}\n            }\n          }\n        ], \n        carpet: [\n          {\n            type: 'carpet', \n            aaxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }, \n            baxis: {\n              gridcolor: 'white', \n              linecolor: 'white', \n              endlinecolor: '#2a3f5f', \n              minorgridcolor: 'white', \n              startlinecolor: '#2a3f5f'\n            }\n          }\n        ], \n        mesh3d: [\n          {\n            type: 'mesh3d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        contour: [\n          {\n            type: 'contour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        heatmap: [\n          {\n            type: 'heatmap', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatter: [\n          {\n            type: 'scatter', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        surface: [\n          {\n            type: 'surface', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        barpolar: [\n          {\n            type: 'barpolar', \n            marker: {line: {\n                color: '#E5ECF6', \n                width: 0.5\n              }}\n          }\n        ], \n        heatmapgl: [\n          {\n            type: 'heatmapgl', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        histogram: [\n          {\n            type: 'histogram', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        parcoords: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'parcoords'\n          }\n        ], \n        scatter3d: [\n          {\n            line: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}, \n            type: 'scatter3d', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattergl: [\n          {\n            type: 'scattergl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        choropleth: [\n          {\n            type: 'choropleth', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattergeo: [\n          {\n            type: 'scattergeo', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2d: [\n          {\n            type: 'histogram2d', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ], \n        scatterpolar: [\n          {\n            type: 'scatterpolar', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        contourcarpet: [\n          {\n            type: 'contourcarpet', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }\n          }\n        ], \n        scattercarpet: [\n          {\n            type: 'scattercarpet', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scattermapbox: [\n          {\n            type: 'scattermapbox', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterpolargl: [\n          {\n            type: 'scatterpolargl', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        scatterternary: [\n          {\n            type: 'scatterternary', \n            marker: {colorbar: {\n                ticks: '', \n                outlinewidth: 0\n              }}\n          }\n        ], \n        histogram2dcontour: [\n          {\n            type: 'histogram2dcontour', \n            colorbar: {\n              ticks: '', \n              outlinewidth: 0\n            }, \n            colorscale: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n          }\n        ]\n      }, \n      layout: {\n        geo: {\n          bgcolor: 'white', \n          showland: true, \n          lakecolor: 'white', \n          landcolor: '#E5ECF6', \n          showlakes: true, \n          subunitcolor: 'white'\n        }, \n        font: {color: '#2a3f5f'}, \n        polar: {\n          bgcolor: '#E5ECF6', \n          radialaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          angularaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }\n        }, \n        scene: {\n          xaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          yaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }, \n          zaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            gridwidth: 2, \n            linecolor: 'white', \n            zerolinecolor: 'white', \n            showbackground: true, \n            backgroundcolor: '#E5ECF6'\n          }\n        }, \n        title: {x: 0.05}, \n        xaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        yaxis: {\n          ticks: '', \n          gridcolor: 'white', \n          linecolor: 'white', \n          automargin: true, \n          zerolinecolor: 'white', \n          zerolinewidth: 2\n        }, \n        mapbox: {style: 'light'}, \n        ternary: {\n          aaxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          baxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          caxis: {\n            ticks: '', \n            gridcolor: 'white', \n            linecolor: 'white'\n          }, \n          bgcolor: '#E5ECF6'\n        }, \n        colorway: ['#636efa', '#EF553B', '#00cc96', '#ab63fa', '#FFA15A', '#19d3f3', '#FF6692', '#B6E880', '#FF97FF', '#FECB52'], \n        hovermode: 'closest', \n        colorscale: {\n          diverging: [['0', '#8e0152'], ['0.1', '#c51b7d'], ['0.2', '#de77ae'], ['0.3', '#f1b6da'], ['0.4', '#fde0ef'], ['0.5', '#f7f7f7'], ['0.6', '#e6f5d0'], ['0.7', '#b8e186'], ['0.8', '#7fbc41'], ['0.9', '#4d9221'], ['1', '#276419']], \n          sequential: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']], \n          sequentialminus: [['0.0', '#0d0887'], ['0.1111111111111111', '#46039f'], ['0.2222222222222222', '#7201a8'], ['0.3333333333333333', '#9c179e'], ['0.4444444444444444', '#bd3786'], ['0.5555555555555556', '#d8576b'], ['0.6666666666666666', '#ed7953'], ['0.7777777777777778', '#fb9f3a'], ['0.8888888888888888', '#fdca26'], ['1.0', '#f0f921']]\n        }, \n        hoverlabel: {align: 'left'}, \n        plot_bgcolor: '#E5ECF6', \n        paper_bgcolor: 'white', \n        shapedefaults: {line: {color: '#2a3f5f'}}, \n        annotationdefaults: {\n          arrowhead: 0, \n          arrowcolor: '#2a3f5f', \n          arrowwidth: 1\n        }\n      }\n    }\n  }","import React, { Component } from \"react\";\n\nimport {Link} from 'react-router-dom';\n\n\nimport {\n  Form,\n  Input,\n  Select,\n  Row,\n  Col,\n  Card,\n  Modal,\n  Drawer,\n  Button,\n  Icon\n} from \"antd\";\n\n/* import {\n  Scatter,\n  Contrast,\n  ActualBar,\n  DoubleLine,\n  BarBasic\n} from \"../components/charts\"; */\nimport Plotly from \"./plotly\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport{dataChart, layoutChart} from \"./DataScatter\";\nimport{dataArea, layoutArea} from \"./DataArea\";\nconst Plot = createPlotlyComponent(Plotly);\nconst { Option } = Select;\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n\n      return (\n        <Modal\n          visible={visible}\n          title=\"Create a new collection\"\n          okText=\"Create\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"Project ID\">\n              {getFieldDecorator(\"projectId\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Project Name\">\n              {getFieldDecorator(\"projectName\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the project name of collection!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <div className=\"hr-modal-inside-ng\">\n              <hr />\n            </div>\n            <p>Project Site Address</p>\n            <Form.Item label=\"Address 1\">\n              {getFieldDecorator(\"address_1\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the address of collection!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Address 2\">\n              {getFieldDecorator(\"address 2\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n              {getFieldDecorator(\"city\")(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Description\" className=\"mb-0\">\n              {getFieldDecorator(\"description\")(<Input type=\"textarea\" />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nclass ManagementHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      modalVisible: false,\n      drawerVisible: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ modalVisible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      console.log(\"Received values of form: \", values);\n      form.resetFields();\n      this.setState({ modalVisible: false });\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      drawerVisible: false\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col>\n              <h1 className=\"page-heading\">Dashboard</h1>\n            </Col>\n            <Col>\n              <ul className=\"button-actions\">\n                <li>\n                  {/* <div>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                      Start Project\n                    </Button>\n                    <Modal\n                      title=\"New project - Project Details \"\n                      visible={this.state.visible}\n                      onOk={this.handleOk}\n                      onCancel={this.handleCancel}\n                    >\n                      <p>Some contents...</p>\n                      <p>Some contents...</p>\n                      <p>Some contents...</p>\n                    </Modal>\n                  </div> */}\n                  <div>\n                    <Button type=\"primary\" onClick={this.showModal}>\n                      Start Project\n                    </Button>\n                    <CollectionCreateForm\n                      wrappedComponentRef={this.saveFormRef}\n                      visible={this.state.modalVisible}\n                      onCancel={this.handleCancel}\n                      onCreate={this.handleCreate}\n                    />\n                  </div>\n                </li>\n                <li>\n                  <a href=\"\">\n                    <Button type=\"primary\" ghost>\n                      Create New Proposal\n                    </Button>\n                  </a>\n                </li>\n              </ul>\n            </Col>\n          </Row>\n        </div>\n\n        <div id=\"content\">\n          <Row gutter={24} type=\"flex\">\n            <Col span={6} className=\"c-mb\">\n                <Link to='/bid-requests'>\n                  <Card\n                    bordered={false}\n                    className=\"mi-card mi-card-boxshadow card-statistics\"\n                    style={{minHeight: \"100%\"}}\n                  >\n                    <div className=\"card-statistics-block\">\n                      <div className=\"card-statistics-icon\">\n                        <Icon type=\"unordered-list\" />\n                      </div>\n                      <div className=\"card-statistics-content\">\n                        <h4 className=\"statistics-number\">51240</h4>\n                        <span className=\"statistics-label\">Change Orders</span>\n                      </div>\n                    </div>\n                  </Card>\n                </Link>\n            </Col>\n            <Col span={6} className=\"c-mb\">\n                <Link to='/request-for-proposal'>\n                  <Card\n                    bordered={false}\n                    className=\"mi-card mi-card-boxshadow card-statistics\"\n                    style={{minHeight: \"100%\"}}\n                  >\n                    <div className=\"card-statistics-block\">\n                      <div className=\"card-statistics-icon\">\n                        <Icon type=\"border-outer\" />\n                      </div>\n                      <div className=\"card-statistics-content\">\n                        <h4 className=\"statistics-number\">85974</h4>\n                        <span className=\"statistics-label\">Request for Proposals</span>\n                      </div>\n                    </div>\n                  </Card>\n                </Link>\n            </Col>\n            <Col span={6} className=\"c-mb\">\n                <Link to='/proposals'>\n                  <Card\n                    bordered={false}\n                    className=\"mi-card mi-card-boxshadow card-statistics\"\n                    style={{minHeight: \"100%\"}}\n                  >\n                    <div className=\"card-statistics-block\">\n                      <div className=\"card-statistics-icon\">\n                        <Icon type=\"solution\" />\n                      </div>\n                      <div className=\"card-statistics-content\">\n                        <h4 className=\"statistics-number\">35208</h4>\n                        <span className=\"statistics-label\">Proposals</span>\n                      </div>\n                    </div>\n                  </Card>\n                </Link>\n            </Col>\n            <Col span={6} className=\"c-mb\">\n                <Link to='/projects'>\n                  <Card\n                    bordered={false}\n                    className=\"mi-card mi-card-boxshadow card-statistics\"\n                    style={{minHeight: \"100%\"}}\n                  >\n                    <div className=\"card-statistics-block\">\n                      <div className=\"card-statistics-icon\">\n                        <Icon type=\"deployment-unit\" />\n                      </div>\n                      <div className=\"card-statistics-content\">\n                        <h4 className=\"statistics-number\">12543</h4>\n                        <span className=\"statistics-label\">Projects</span>\n                      </div>\n                    </div>\n                  </Card>\n                </Link>\n            </Col>\n          </Row>\n          <Row gutter={24}>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost in BDT by category over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                {/* <ActualBar /> */}\n\n\n                <Plot\n        data={dataChart}\n        layout={layoutChart}\n        style={{width:'100% !important'}}\n        responsive={true}\n      />\n              </Card>\n            </Col>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost in BDT by description over time\"\n                extra={\n                  <Select defaultValue=\"select factory\">\n                    <Option value=\"select factory\">Select factory</Option>\n                  </Select>\n                }\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n\n<Plot style={{width:'100% !important'}}\n        data={dataArea}\n        layout={layoutArea}\n\n        responsive={true}\n      />\n                {/* <DoubleLine /> */}\n              </Card>\n            </Col>\n            {/* <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Revenue in USD by customer\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <BarBasic />\n              </Card>\n            </Col>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost in BDT by P&L heading\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <Contrast />\n              </Card>\n            </Col>\n            <Col span={12} className=\"c-mb\">\n              <Card\n                title=\"Cost by Activity\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{minHeight: \"100%\"}}\n              >\n                <Scatter />\n              </Card>\n            </Col> */}\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Task’s\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Task’s yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                  <div>\n                    <Button type=\"primary\" onClick={this.showDrawer}>\n                      Add New Task{\" \"}\n                    </Button>\n                    <Drawer\n                      title=\"Add New Task\"\n                      width={400}\n                      placement=\"right\"\n                      closable={false}\n                      onClose={this.onClose}\n                      visible={this.state.drawerVisible}\n                      className=\"new-task-drawer\"\n                    >\n                      <div>\n                        <Form>\n                          <Form.Item label=\"Task Name\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <Form.Item label=\"Priority\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <Form.Item label=\"Type\">\n                            <Input placeholder=\"Task Name\" />\n                          </Form.Item>\n                          <div>\n                            <hr />\n                          </div>\n                          <p>\n                            <small>Assigned To</small>\n                          </p>\n\n                          <Button type=\"primary\" ghost>\n                            Add or invite users\n                          </Button>\n                          <div>\n                            <hr />\n                          </div>\n                          <Form.Item label=\"Proposal / Project\">\n                            <Select defaultValue=\"lucy\">\n                              <Option value=\"jack\">Jack</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                              <Option value=\"disabled\" disabled>\n                                Disabled\n                              </Option>\n                              <Option value=\"Yiminghe\">yiminghe</Option>\n                            </Select>\n                          </Form.Item>\n                          <Form.Item label=\"Due Date\"></Form.Item>\n                          <Form.Item label=\"Status\">\n                            <Select defaultValue=\"Draft\">\n                              <Option value=\"draft\">Draft</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                              <Option value=\"disabled\" disabled>\n                                Disabled\n                              </Option>\n                              <Option value=\"Yiminghe\">yiminghe</Option>\n                            </Select>\n                          </Form.Item>\n                          <Form.Item label=\"Description\">\n                            <Input type=\"textarea\" />\n                          </Form.Item>\n                          <Form.Item>\n                            <Button\n                              type=\"primary\"\n                              ghost\n                              style={{ marginRight: \"8px\" }}\n                            >\n                              Save\n                            </Button>\n                            <Button type=\"primary\">Add Next Task</Button>\n                          </Form.Item>\n                        </Form>\n                      </div>\n                    </Drawer>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"My Projects\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Projects yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                  <div>\n                    <Button type=\"primary\">Start New Project </Button>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n            <Col span={8} className=\"c-mb\">\n              <Card\n                title=\"Recently Added\"\n                bordered={false}\n                className=\"mi-card mi-card-header-borderless mi-card-boxshadow\"\n                style={{ minHeight: \"100%\" }}\n              >\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/images/rocket-todo.svg\"\n                    alt=\"\"\n                    className=\"img-fluid\"\n                    style={{ marginBottom: \"24px\" }}\n                  />\n                  <h5>No Task’s yet.</h5>\n                  <p>Create a new one by clicking on the button below.</p>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManagementHome;\n","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"\",\n             select_amount:\"Amount\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Status\",\n             value_yl : \"Amount_USD\",\n\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Status\", B:\"Amount_USD\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_xl:\"\"})\n    this.setState({value_xl:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_yl:\"\"})\n  this.setState({value_yl:value});\n  console.log(`selected ${value}`);\n}\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.LineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync LineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      this.setState({select_unit_list:keys_list})\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n//=================================================== Line Chart Table Data Download ===================================\n\nhandleDownload = (e) => {\n    e.preventDefault();\n     this.lineChart_TableDownload(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync lineChart_TableDownload(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n const promise = await axios.post(Host.loginURL +\"/download_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n    }\n}\n\n\n\n\n\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n          formatter: function formatter(val) {\n                     if (val < 100000) {\n                         return Math.round((val/1000) * 10)/10+'k';\n                     }\n                    else if (val >= 1000000){\n                        return val=(val/1000000)+\"M\";\n                    }\n                     else{\n                         return val;\n                     }\n          }\n},\n{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <Card\n            title={this.state.value_xl}\n            style={{ minHeight: \"100%\" }}\n            bordered={false}\n            className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n       <div id=\"chart\">\n           {/* <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>Group</option>\n                 {this.state.books.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>{this.state.select_amount}</option>\n                 {this.state.intHeader.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select> */}\n           <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount_USD\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n           {/*<React.Fragment>\n                <button  className='btn btn-info'style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment> */}\n\n            <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n         <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_line\"\n                style={{marginLeft:\"10px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n              <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                     {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                      <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                    </div>\n                    <div>\n                    <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n\n                    </div>\n                    <div class=\"modal-body\">\n                     <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                      <CSVLink data={this.state.download_lineChart_table}>\n                      <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                      </CSVLink>;\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n              <Chart forceFit width={800} height={400} data={this.state.line_chart_source_data}\n                                                       scale={line_chart_source_scale}>\n                <Tooltip />\n                <Axis />\n                <Legend />\n                <Line position=\"name*value\"/>\n                <Point position=\"name*value\" shape=\"circle\"/>\n              </Chart>\n          </div>\n        </div>\n     </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_bar : \"Status\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Status', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.BarChartData({Column:this.state.value_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_bar:\"\"})\n  this.setState({value_bar:value});\n  this.BarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync BarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n       this.setState({loading:false})\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n    <Card\n        title={this.state.value_bar}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n          <div id=\"chart\">\n                   {/* <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_group}</option>\n                         {this.state.Headers.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    <Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button> */}\n\n                      <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Status\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModalBar\"\n                 style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                               <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n               <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n               <Chart forceFit width={800} height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n            </div>\n       </div>\n    </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass VerticalChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_v_bar : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Status', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n\n    }\n  }\n\n\n\n//========================================== Vertical bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.VerticalBarChartData({Column:this.state.value_v_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_v_bar:\"\"})\n  this.setState({value_v_bar:value});\n  this.VerticalBarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync VerticalBarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n             keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({select_unit_list:keys_list})\n\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n      this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_v_bar}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n       <div id=\"chart\">\n            <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Status\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                    mode=\"multiple\"\n                    style={{ width: '12%', marginLeft:'5px' }}\n                    placeholder=\"Select Unit\"\n                    defaultValue={[]}\n                    onChange={this.handleChange}\n                  >\n                    {children}\n             </Select>,\n       <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Vertical\"\n        style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Vertical\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Vertical Bar Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.vertical_table_columns} dataSource={this.state.vertical_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_verticalChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n           <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit width={800} height={400} data={vertical_bar_data} scale={vertical_scale}>\n            <Tooltip />\n            <Axis />\n            <Bar position=\"name*value\" />\n            </Chart>\n\n    </div>\n\n  </div>\n</Card>\n\n    );\n  }\n}\nexport default VerticalChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass DonutChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_donut : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\" , {Column:'Status', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n\n//========================================== Donut Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.DonutChartData({Column:this.state.value_donut, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_donut:\"\"})\n  this.setState({value_donut:value});\n  this.DonutChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync DonutChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n     this.setState({loading:false})\n    }\n\n}\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst donut_data = dv1.rows;\n\nconst scale_donut = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_donut}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n      <div id=\"chart\">\n        <Select\n               showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                   <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" style={{marginLeft:\"10px\"}}>\n                     <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_donutChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                 <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n\n                <Chart forceFit height={400} data={donut_data} scale={scale_donut}>\n                <Tooltip showTitle={false} />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n     </div>\n\n   </div>\n</Card>\n\n    );\n  }\n}\nexport default DonutChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass PieChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Status\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_pie : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name} );\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Status', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict);\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n//===============================================Pie Chart ==============================================================\n onBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.PieChartData({Column:this.state.value_pie, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_pie:\"\"})\n  this.setState({value_pie:value});\n  this.PieChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync PieChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n     this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n\n\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%',\n    }];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n\n  <Card\n    title={this.state.value_pie}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n     <div id=\"chart\">\n        <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Status\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\"\n             style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_pieChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit height={400} data={pie_data} scale={pie_scale} >\n                <Tooltip showTitle={false} />\n                <Coord type=\"theta\" />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                                <Pie\n              position=\"percent\"\n              color=\"item\"\n              style={{ stroke: '#fff', lineWidth: 1 }}\n              label={['percent', {\n                formatter: (val, item) => {\n                  return item.point.item + ': ' + val;\n                }\n              }]}\n            />\n           </Chart>\n      </div>\n  </div>\n</Card>\n\n\n    );\n  }\n}\nexport default PieChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Management\"\nconst DataSet = require('@antv/data-set');\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_x : \"Status\",\n     value_y : \"Amount_USD\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadGroupBarChartData({A:\"Status\", B:\"Amount_USD\", start_date:\"\", end_date:\"\", unit_value:[],  Menu:Menu_name});\n\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadGroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_x:\"\"})\n    this.setState({value_x:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_y:\"\"})\n  this.setState({value_y:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_x, B:this.state.value_y,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync GroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n  <Card\n    title={this.state.value_x}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n      <div id=\"chart\">\n         <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount_USD\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n        style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Group Bar TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_group_barChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n      {this.state.group_bar_display == true?\n      <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                      type=\"bar\" width=\"900\" height=\"350\" />:null\n       }\n   </div>\n\n </div>\n </Card>\n    );\n  }\n}\nexport default GroupBarChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Management\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_mx : \"Status\",\n     value_mz : \"Status\",\n     value_my : \"Amount_USD\",\n     loading:true,\n     mix_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadMixedChartData({A:\"Status\", B:\"Amount_USD\", C:\"Status\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name})\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_mx:\"\"})\n    this.setState({value_mx:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_my:\"\"})\n  this.setState({value_my:value});\n  console.log(`selected ${value}`);\n}\nonChange_Zaxis= (value) => {\n  this.setState({value_mz:\"\"})\n  this.setState({value_mz:value});\n  console.log(`selected ${value}`);\n}\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.MixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my,C:this.state.value_mz,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync MixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n\n    }\n\n}\n\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n\n\n <Card\n    title={this.state.value_mx}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n   <div id=\"chart\">\n        <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount_USD\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100, marginLeft:'5px'}}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Zaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ width:350, marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\"\n       style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Mixed Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_mixedChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n      {this.state.mix_display == true?\n      <ReactApexChart options={this.state.mixed_chart_options}\n      series={this.state.mixed_chart_series} type=\"line\" width=\"940\" height=\"350\" />:null\n      }\n   </div>\n  </div>\n </Card>\n\n    );\n  }\n}\nexport default MixedChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nconst DataSet = require('@antv/data-set');\nconst Menu_Name = \"Management\"\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_ax : \"Status\",\n     value_ay : \"Amount_USD\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({A:\"Status\", B:\"Amount_USD\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_Name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_ax:\"\"})\n    this.setState({value_ax:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_ay:\"\"})\n  this.setState({value_ay:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.StackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_Name}\n  );\n  };\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n        this.setState({select_unit_list:keys_list})\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n     <Card\n        title={this.state.value_ax}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n        <div>\n        <div id=\"chart\">\n               <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Status\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount_USD\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\"data-target=\"#myModal_Stacked\"\n          style={{marginLeft:\"10px\"}}>\n        <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                 <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_areaChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n         {this.state.area_display == true?\n        <ReactApexChart options={this.state.area_chart_options}\n        series={this.state.area_chart_series} type=\"area\" width=\"900\" height=\"350\" />:null\n        }\n\n     </div>\n  </div>\n</Card>\n    );\n  }\n}\nexport default AreaChart;","import React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress,Table } from \"antd\";\n\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport VerticalChart from \"./VerticalChart\";\nimport DonutChart from \"./DonutChart\";\nimport PieChart from \"./PieChart\";\nimport GroupBarChart from \"./GroupBarChart\";\nimport MixedChart from \"./MixedChart\";\nimport AreaChart from \"./AreaChart\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\nclass ManagementCharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n\n  }\n  render() {\n    return (\n      <div>\n        <div id=\"content\">\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <LineChart />\n            </Col>\n          </Row>\n\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <BarChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <VerticalChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <GroupBarChart />\n            </Col>\n\n          </Row>\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <PieChart />\n            </Col>\n          </Row>\n\n           <Row type=\"flex\" gutter={24}>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <MixedChart />\n            </Col>\n          </Row>\n\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <DonutChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <AreaChart />\n            </Col>\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n          </Row>\n\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManagementCharts;\n\n","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_xl:\"\"})\n    this.setState({value_xl:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_yl:\"\"})\n  this.setState({value_yl:value});\n  console.log(`selected ${value}`);\n}\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.LineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync LineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      this.setState({select_unit_list:keys_list})\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n//=================================================== Line Chart Table Data Download ===================================\n\nhandleDownload = (e) => {\n    e.preventDefault();\n     this.lineChart_TableDownload(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync lineChart_TableDownload(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n const promise = await axios.post(Host.loginURL +\"/download_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n    }\n}\n\n\n\n\n\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n          formatter: function formatter(val) {\n                     if (val < 100000) {\n                         return Math.round((val/1000) * 10)/10+'k';\n                     }\n                    else if (val >= 1000000){\n                        return val=(val/1000000)+\"M\";\n                    }\n                     else{\n                         return val;\n                     }\n          }\n},\n{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <Card\n            title={this.state.value_xl}\n            style={{ minHeight: \"100%\" }}\n            bordered={false}\n            className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n       <div id=\"chart\">\n           {/* <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>Group</option>\n                 {this.state.books.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>{this.state.select_amount}</option>\n                 {this.state.intHeader.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select> */}\n           <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n           {/*<React.Fragment>\n                <button  className='btn btn-info'style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment> */}\n\n            <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n         <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_line\"\n                style={{marginLeft:\"10px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n              <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                     {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                      <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                    </div>\n                    <div>\n                    <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n\n                    </div>\n                    <div class=\"modal-body\">\n                     <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                      <CSVLink data={this.state.download_lineChart_table}>\n                      <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                      </CSVLink>;\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n              <Chart forceFit width={800} height={400} data={this.state.line_chart_source_data}\n                                                       scale={line_chart_source_scale}>\n                <Tooltip />\n                <Axis />\n                <Legend />\n                <Line position=\"name*value\"/>\n                <Point position=\"name*value\" shape=\"circle\"/>\n              </Chart>\n          </div>\n        </div>\n     </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"Group\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_bar : \"Group\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.BarChartData({Column:this.state.value_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_bar:\"\"})\n  this.setState({value_bar:value});\n  this.BarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync BarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n       this.setState({loading:false})\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n    <Card\n        title={this.state.value_bar}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n          <div id=\"chart\">\n                   {/* <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_group}</option>\n                         {this.state.Headers.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    <Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button> */}\n\n                      <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModalBar\"\n                 style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                               <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n               <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n               <Chart forceFit width={800} height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n            </div>\n       </div>\n    </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass VerticalChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_v_bar : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n\n    }\n  }\n\n\n\n//========================================== Vertical bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.VerticalBarChartData({Column:this.state.value_v_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_v_bar:\"\"})\n  this.setState({value_v_bar:value});\n  this.VerticalBarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync VerticalBarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n             keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({select_unit_list:keys_list})\n\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n      this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_v_bar}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n       <div id=\"chart\">\n            <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                    mode=\"multiple\"\n                    style={{ width: '12%', marginLeft:'5px' }}\n                    placeholder=\"Select Unit\"\n                    defaultValue={[]}\n                    onChange={this.handleChange}\n                  >\n                    {children}\n             </Select>,\n       <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Vertical\"\n        style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Vertical\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Vertical Bar Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.vertical_table_columns} dataSource={this.state.vertical_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_verticalChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n           <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit width={800} height={400} data={vertical_bar_data} scale={vertical_scale}>\n            <Tooltip />\n            <Axis />\n            <Bar position=\"name*value\" />\n            </Chart>\n\n    </div>\n\n  </div>\n</Card>\n\n    );\n  }\n}\nexport default VerticalChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass DonutChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_donut : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\" , {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n\n//========================================== Donut Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.DonutChartData({Column:this.state.value_donut, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_donut:\"\"})\n  this.setState({value_donut:value});\n  this.DonutChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync DonutChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n     this.setState({loading:false})\n    }\n\n}\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst donut_data = dv1.rows;\n\nconst scale_donut = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_donut}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n      <div id=\"chart\">\n        <Select\n               showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                   <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" style={{marginLeft:\"10px\"}}>\n                     <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_donutChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                 <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n\n                <Chart forceFit height={400} data={donut_data} scale={scale_donut}>\n                <Tooltip showTitle={false} />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n     </div>\n\n   </div>\n</Card>\n\n    );\n  }\n}\nexport default DonutChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass PieChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_pie : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name} );\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict);\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n//===============================================Pie Chart ==============================================================\n onBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.PieChartData({Column:this.state.value_pie, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_pie:\"\"})\n  this.setState({value_pie:value});\n  this.PieChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync PieChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n     this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n\n\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%',\n    }];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n\n  <Card\n    title={this.state.value_pie}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n     <div id=\"chart\">\n        <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\"\n             style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_pieChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit height={400} data={pie_data} scale={pie_scale} >\n                <Tooltip showTitle={false} />\n                <Coord type=\"theta\" />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                                <Pie\n              position=\"percent\"\n              color=\"item\"\n              style={{ stroke: '#fff', lineWidth: 1 }}\n              label={['percent', {\n                formatter: (val, item) => {\n                  return item.point.item + ': ' + val;\n                }\n              }]}\n            />\n           </Chart>\n      </div>\n  </div>\n</Card>\n\n\n    );\n  }\n}\nexport default PieChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Management\"\nconst DataSet = require('@antv/data-set');\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_x : \"Group\",\n     value_y : \"Amount\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadGroupBarChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[],  Menu:Menu_name});\n\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadGroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_x:\"\"})\n    this.setState({value_x:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_y:\"\"})\n  this.setState({value_y:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_x, B:this.state.value_y,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync GroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n  <Card\n    title={this.state.value_x}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n      <div id=\"chart\">\n         <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n        style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Group Bar TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_group_barChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n      {this.state.group_bar_display == true?\n      <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                      type=\"bar\" width=\"900\" height=\"350\" />:null\n       }\n   </div>\n\n </div>\n </Card>\n    );\n  }\n}\nexport default GroupBarChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Operational\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_mx : \"Group\",\n     value_mz : \"Group\",\n     value_my : \"Amount\",\n     loading:true,\n     mix_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadMixedChartData({A:\"Group\", B:\"Amount\", C:\"Group\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name})\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_mx:\"\"})\n    this.setState({value_mx:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_my:\"\"})\n  this.setState({value_my:value});\n  console.log(`selected ${value}`);\n}\nonChange_Zaxis= (value) => {\n  this.setState({value_mz:\"\"})\n  this.setState({value_mz:value});\n  console.log(`selected ${value}`);\n}\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.MixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my,C:this.state.value_mz,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync MixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n\n    }\n\n}\n\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n\n\n <Card\n    title={this.state.value_mx}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n   <div id=\"chart\">\n        <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100, marginLeft:'5px'}}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Zaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ width:350, marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\"\n       style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Mixed Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_mixedChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n      {this.state.mix_display == true?\n      <ReactApexChart options={this.state.mixed_chart_options}\n      series={this.state.mixed_chart_series} type=\"line\" width=\"940\" height=\"350\" />:null\n      }\n   </div>\n  </div>\n </Card>\n\n    );\n  }\n}\nexport default MixedChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nconst DataSet = require('@antv/data-set');\nconst Menu_Name = \"Operational\"\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_ax : \"Group\",\n     value_ay : \"Amount\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_Name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_ax:\"\"})\n    this.setState({value_ax:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_ay:\"\"})\n  this.setState({value_ay:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.StackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_Name}\n  );\n  };\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n        this.setState({select_unit_list:keys_list})\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n     <Card\n        title={this.state.value_ax}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n        <div>\n        <div id=\"chart\">\n               <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\"data-target=\"#myModal_Stacked\"\n          style={{marginLeft:\"10px\"}}>\n        <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                 <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_areaChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n         {this.state.area_display == true?\n        <ReactApexChart options={this.state.area_chart_options}\n        series={this.state.area_chart_series} type=\"area\" width=\"900\" height=\"350\" />:null\n        }\n\n     </div>\n  </div>\n</Card>\n    );\n  }\n}\nexport default AreaChart;","import React, { Component } from \"react\";\nimport { Row, Col, Card, Button, Icon, Progress,Table } from \"antd\";\n\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport VerticalChart from \"./VerticalChart\";\nimport DonutChart from \"./DonutChart\";\nimport PieChart from \"./PieChart\";\nimport GroupBarChart from \"./GroupBarChart\";\nimport MixedChart from \"./MixedChart\";\nimport AreaChart from \"./AreaChart\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n\nclass OperationalAllCharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n    };\n\n  }\n  render() {\n    return (\n      <div>\n        <div id=\"content\">\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <LineChart />\n            </Col>\n          </Row>\n\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <BarChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <VerticalChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <GroupBarChart />\n            </Col>\n\n          </Row>\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <PieChart />\n            </Col>\n          </Row>\n\n           <Row type=\"flex\" gutter={24}>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <MixedChart />\n            </Col>\n          </Row>\n\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <DonutChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <AreaChart />\n            </Col>\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n          </Row>\n\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default OperationalAllCharts;\n\n","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAllChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_xl:\"\"})\n    this.setState({value_xl:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_yl:\"\"})\n  this.setState({value_yl:value});\n  console.log(`selected ${value}`);\n}\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.LineChartData(\n         {A:this.state.value_xl, B:this.state.value_yl,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync LineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      this.setState({select_unit_list:keys_list})\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n//=================================================== Line Chart Table Data Download ===================================\n\nhandleDownload = (e) => {\n    e.preventDefault();\n     this.lineChart_TableDownload(\n         {A:this.state.value_xl, B:this.state.value_yl}\n  );\n  };\n\n\nasync lineChart_TableDownload(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n const promise = await axios.post(Host.loginURL +\"/download_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n    }\n}\n\n\n\n\n\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n          formatter: function formatter(val) {\n                     if (val < 100000) {\n                         return Math.round((val/1000) * 10)/10+'k';\n                     }\n                    else if (val >= 1000000){\n                        return val=(val/1000000)+\"M\";\n                    }\n                     else{\n                         return val;\n                     }\n          }\n},\n{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <Card\n            title={this.state.value_xl}\n            style={{ minHeight: \"100%\" }}\n            bordered={false}\n            className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n       <div id=\"chart\">\n           {/* <select class=\"custom-select\"  value={this.state.value_xl} onChange={this.handleSubmitLineChart}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>Group</option>\n                 {this.state.books.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select>\n           <select class=\"custom-select\"  value={this.state.value_yl} onChange={this.handleSubmitLineChart1}\n                style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                 <option>{this.state.select_amount}</option>\n                 {this.state.intHeader.map((value,index)=>\n                          {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                          style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                          )}\n           </select> */}\n           <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n           {/*<React.Fragment>\n                <button  className='btn btn-info'style={{marginLeft:\"10px\"}}\n                  type='button'>OK</button>\n            </React.Fragment> */}\n\n            <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n         <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_line\"\n                style={{marginLeft:\"10px\"}}>\n            <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n              <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                     {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                      <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                    </div>\n                    <div>\n                    <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n\n                    </div>\n                    <div class=\"modal-body\">\n                     <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                    </div>\n                    <div class=\"modal-footer\">\n                      <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                      <CSVLink data={this.state.download_lineChart_table}>\n                      <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                      </CSVLink>;\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n              <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n              <Chart forceFit width={800} height={400} data={this.state.line_chart_source_data}\n                                                       scale={line_chart_source_scale}>\n                <Tooltip />\n                <Axis />\n                <Legend />\n                <Line position=\"name*value\"/>\n                <Point position=\"name*value\" shape=\"circle\"/>\n              </Chart>\n          </div>\n        </div>\n     </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass LineChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n             Headers:[],\n             intHeader:[],\n             filter:[],\n             start_date:'',\n             end_date:'',\n             select_unit:[],\n             select_unit_list:'',\n             select_group:\"Group\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_bar : \"Group\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.BarChartData({Column:this.state.value_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_bar:\"\"})\n  this.setState({value_bar:value});\n  this.BarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync BarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n       this.setState({loading:false})\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n    <Card\n        title={this.state.value_bar}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n      <div>\n          <div id=\"chart\">\n                   {/* <select class=\"custom-select\"  value={this.state.value_bar} onChange={this.handleSubmitBarChart}\n                        style={{ width:\"110px\", marginLeft:\"20px\" }}>\n                         <option>{this.state.select_group}</option>\n                         {this.state.Headers.map((value,index)=>\n                                  {return   <option class=\"btn btn-custom btn-block btn-detail\"\n                                  style={{ cursor: \"pointer;\", fontSize: \"14px\"}} key={index}> {value} </option> }\n                                  )}\n                   </select>\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\" style={{marginLeft:\"3px\"}}>\n                    <Icon type=\"table\"  style={{fontSize:'21px'}}/>  </button> */}\n\n                      <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModalBar\"\n                 style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                               <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_barChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n\n               <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n               <Chart forceFit width={800} height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n            </div>\n       </div>\n    </Card>\n    );\n  }\n}\nexport default LineChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass VerticalChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_v_bar : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n\n    }\n  }\n\n\n\n//========================================== Vertical bar Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.VerticalBarChartData({Column:this.state.value_v_bar, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_v_bar:\"\"})\n  this.setState({value_v_bar:value});\n  this.VerticalBarChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync VerticalBarChartData(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n             keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({select_unit_list:keys_list})\n\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n      this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_v_bar}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n       <div id=\"chart\">\n            <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                    mode=\"multiple\"\n                    style={{ width: '12%', marginLeft:'5px' }}\n                    placeholder=\"Select Unit\"\n                    defaultValue={[]}\n                    onChange={this.handleChange}\n                  >\n                    {children}\n             </Select>,\n       <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Vertical\"\n        style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Vertical\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Vertical Bar Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.vertical_table_columns} dataSource={this.state.vertical_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_verticalChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n           <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit width={800} height={400} data={vertical_bar_data} scale={vertical_scale}>\n            <Tooltip />\n            <Axis />\n            <Bar position=\"name*value\" />\n            </Chart>\n\n    </div>\n\n  </div>\n</Card>\n\n    );\n  }\n}\nexport default VerticalChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass DonutChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_donut : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\" , {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n\n//========================================== Donut Chart ================================================================\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.DonutChartData({Column:this.state.value_donut, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_donut:\"\"})\n  this.setState({value_donut:value});\n  this.DonutChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync DonutChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n     this.setState({loading:false})\n    }\n\n}\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst donut_data = dv1.rows;\n\nconst scale_donut = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n<Card\n    title={this.state.value_donut}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n   <div>\n      <div id=\"chart\">\n        <Select\n               showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n                   <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" style={{marginLeft:\"10px\"}}>\n                     <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n                      <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n                          <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                            </div>\n                            <div class=\"modal-footer\">\n                              <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                              <CSVLink data={this.state.download_donutChart_table}>\n                              <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                              </CSVLink>;\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                 <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n\n                <Chart forceFit height={400} data={donut_data} scale={scale_donut}>\n                <Tooltip showTitle={false} />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n        <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n          label={['percent', {\n            formatter: (val, item) => {\n              return item.point.item + ': ' + val;\n            }\n          }]}\n        />\n      </Chart>\n     </div>\n\n   </div>\n</Card>\n\n    );\n  }\n}\nexport default DonutChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\";\nconst { Option } = Select;\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nclass PieChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_pie : \"Group\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadAllHeaders();\n     this.loadIntHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadAllHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name} );\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict);\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n//===============================================Pie Chart ==============================================================\n onBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n  this.PieChartData({Column:this.state.value_pie, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:value, Menu:Menu_name});\n}\n\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_pie:\"\"})\n  this.setState({value_pie:value});\n  this.PieChartData({Column:value, start_date:this.state.start_date, end_date:this.state.end_date,\n                            unit_value:this.state.select_unit, Menu:Menu_name});\n}\n\nasync PieChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n\n            if (key != \"label\"){\n            ct_list1.push(key)\n            keys_list.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({select_unit_list:keys_list})\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n     this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n\n\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%',\n    }];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n\n  <Card\n    title={this.state.value_pie}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n     <div id=\"chart\">\n        <Select\n                        showSearch\n                        style={{ width: 100 }}\n                        defaultValue=\"Group\"\n                        placeholder=\"Select a option\"\n                        optionFilterProp=\"children\"\n                        onChange={this.onChange_Xaxis}\n                        onFocus={this.onFocus}\n                        onBlur={this.onBlur}\n                        onSearch={this.onSearch}\n                        filterOption={(input, option) =>\n                          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\"\n             style={{marginLeft:\"10px\"}}> <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\" ghost data-dismiss=\"modal\">Close</Button>\n                  <CSVLink data={this.state.download_pieChart_table}>\n                  <Button type=\"primary\" ><Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n            <Chart forceFit height={400} data={pie_data} scale={pie_scale} >\n                <Tooltip showTitle={false} />\n                <Coord type=\"theta\" />\n                <Axis />\n                <Legend dataKey=\"item\" />\n                                <Pie\n              position=\"percent\"\n              color=\"item\"\n              style={{ stroke: '#fff', lineWidth: 1 }}\n              label={['percent', {\n                formatter: (val, item) => {\n                  return item.point.item + ': ' + val;\n                }\n              }]}\n            />\n           </Chart>\n      </div>\n  </div>\n</Card>\n\n\n    );\n  }\n}\nexport default PieChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst Menu_name = \"Operational\"\nconst DataSet = require('@antv/data-set');\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_x : \"Group\",\n     value_y : \"Amount\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadGroupBarChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[],  Menu:Menu_name});\n\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadGroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_x:\"\"})\n    this.setState({value_x:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_y:\"\"})\n  this.setState({value_y:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.GroupBarChartData(\n         {A:this.state.value_x, B:this.state.value_y,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync GroupBarChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n  <Card\n    title={this.state.value_x}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n      <div id=\"chart\">\n         <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\"\n        style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Group Bar TableData</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_group_barChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n      {this.state.group_bar_display == true?\n      <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                      type=\"bar\" width=\"900\" height=\"350\" />:null\n       }\n   </div>\n\n </div>\n </Card>\n    );\n  }\n}\nexport default GroupBarChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n      Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_mx : \"Group\",\n     value_mz : \"Group\",\n     value_my : \"Amount\",\n     loading:true,\n     mix_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadMixedChartData({A:\"Group\", B:\"Amount\", C:\"Group\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_name})\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_mx:\"\"})\n    this.setState({value_mx:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_my:\"\"})\n  this.setState({value_my:value});\n  console.log(`selected ${value}`);\n}\nonChange_Zaxis= (value) => {\n  this.setState({value_mz:\"\"})\n  this.setState({value_mz:value});\n  console.log(`selected ${value}`);\n}\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.MixedChartData(\n         {A:this.state.value_mx, B:this.state.value_my,C:this.state.value_mz,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_name}\n  );\n  };\n\n\nasync MixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n       this.setState({select_unit_list:keys_list})\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n\n    }\n\n}\n\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n\n\n <Card\n    title={this.state.value_mx}\n    style={{ minHeight: \"100%\" }}\n    bordered={false}\n    className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n    <div>\n   <div id=\"chart\">\n        <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100, marginLeft:'5px'}}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Zaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ width:350, marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\"\n       style={{marginLeft:\"10px\"}}><Icon type=\"table\"  style={{fontSize:'25px'}}/>  </Button>\n          <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Mixed Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                  <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_mixedChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n      {this.state.mix_display == true?\n      <ReactApexChart options={this.state.mixed_chart_options}\n      series={this.state.mixed_chart_series} type=\"line\" width=\"940\" height=\"350\" />:null\n      }\n   </div>\n  </div>\n </Card>\n\n    );\n  }\n}\nexport default MixedChart;","import { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport * as React from 'react';\nimport { Row, Col, Card, Button, Icon, Progress, Form , Modal, Table, Select, DatePicker} from \"antd\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport FinancialCharts from \"./FinancialCharts\";\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\nconst { Option } = Select;\n\nconst DataSet = require('@antv/data-set');\nconst Menu_Name = \"Financial\"\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     Headers:[],\n     intHeader:[],\n     filter:[],\n     start_date:'',\n     end_date:'',\n     select_unit:[],\n     select_unit_list:'',\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_ax : \"Group\",\n     value_ay : \"Amount\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\n\ncomponentWillMount() {\n    this.loadHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({A:\"Group\", B:\"Amount\", start_date:\"\", end_date:\"\", unit_value:[], Menu:Menu_Name});\n  }\n\n async loadHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({Headers:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_Name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n      this.setState({select_unit_list:keys_list})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\n\nonChangeDate = (date, dateString) => {\n  console.log(date, dateString);\n  this.setState({start_date:dateString[0]})\n  this.setState({end_date:dateString[1]})\n}\n\n\n\nhandleChange = (value) => {\nconsole.log(value)\n this.setState({select_unit:value})\n  this.setState({value})\n}\n\n\nonChange_Xaxis= (value) => {\n  this.setState({value_ax:\"\"})\n    this.setState({value_ax:value});\n  console.log(`selected ${value}`);\n}\n\nonChange_Yaxis= (value) => {\n  this.setState({value_ay:\"\"})\n  this.setState({value_ay:value});\n  console.log(`selected ${value}`);\n}\n\n\n\n\nhandleSubmitOK = (e) => {\n    e.preventDefault();\n    this.setState({loading:true})\n     this.StackedAreaChartData(\n         {A:this.state.value_ax, B:this.state.value_ay,\n            start_date:this.state.start_date, end_date:this.state.end_date,\n            unit_value:this.state.select_unit,  Menu:Menu_Name}\n  );\n  };\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n        this.setState({select_unit_list:keys_list})\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\nconst children = [];\nvar x = this.state.select_unit_list\nfor (let i = 0; i < x.length; i++) {\n  children.push(<Option key={x[i]}>{x[i]}</Option>);\n}\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n     <Card\n        title={this.state.value_ax}\n        style={{ minHeight: \"100%\" }}\n        bordered={false}\n        className=\"mi-card mi-card-header-borderless mi-card-boxshadow\" >\n        <div>\n        <div id=\"chart\">\n               <Select\n                showSearch\n                style={{ width: 100 }}\n                defaultValue=\"Group\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Xaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.Headers.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <Select\n                showSearch\n                style={{ width: 100 , marginLeft:'5px' }}\n                defaultValue=\"Amount\"\n                placeholder=\"Select a option\"\n                optionFilterProp=\"children\"\n                onChange={this.onChange_Yaxis}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) =>\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {this.state.intHeader.map((value,index)=>\n                <Option value={value} key={index}>{value}</Option>\n                )}\n             </Select>\n\n             <RangePicker style={{ marginLeft:'5px' }} onChange={this.onChangeDate} />\n\n              <Select\n                mode=\"multiple\"\n                style={{ width: '12%', marginLeft:'5px' }}\n                placeholder=\"Select Unit\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>,\n       <Button type=\"primary\" onClick={this.handleSubmitOK} style={{marginLeft:\"10px\"}} ghost>Ok</Button>\n        <Button type=\"primary\" data-toggle=\"modal\"data-target=\"#myModal_Stacked\"\n          style={{marginLeft:\"10px\"}}>\n        <Icon type=\"table\"  style={{fontSize:'25px'}}/> </Button>\n          <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                 {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                  <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                </div>\n                <div class=\"modal-body\">\n                 <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                 style={{overflowY:\"scroll\"}}/>\n\n                </div>\n                <div class=\"modal-footer\">\n                 <Button type=\"primary\"  data-dismiss=\"modal\" ghost>Close</Button>\n                  <CSVLink data={this.state.download_areaChart_table}>\n                  <Button type=\"primary\" > <Icon type=\"download\" /> Download </Button>\n                  </CSVLink>;\n                </div>\n              </div>\n\n            </div>\n          </div>\n        <RingLoader\n          css={override}\n          size={150} // or 150px\n          color={\"#123abc\"}\n          loading={this.state.loading}\n         />\n         {this.state.area_display == true?\n        <ReactApexChart options={this.state.area_chart_options}\n        series={this.state.area_chart_series} type=\"area\" width=\"900\" height=\"350\" />:null\n        }\n\n     </div>\n  </div>\n</Card>\n    );\n  }\n}\nexport default AreaChart;","import React, { Component } from \"react\";\nimport AppRouter from \"../../router\";\nimport { Row, Col, Card, Button, Icon, Progress,Table } from \"antd\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport VerticalChart from \"./VerticalChart\";\nimport DonutChart from \"./DonutChart\";\nimport PieChart from \"./PieChart\";\nimport GroupBarChart from \"./GroupBarChart\";\nimport MixedChart from \"./MixedChart\";\nimport AreaChart from \"./AreaChart\";\nconst DataSet = require(\"@antv/data-set\");\n\n\n{/* console.log(Host.loginURL);*/}\n\nclass FinancialAllCharts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      selectedKey: \"daily\"\n\n    };\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div id=\"content\">\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <LineChart />\n            </Col>\n          </Row>\n\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <BarChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <VerticalChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n           <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <GroupBarChart />\n            </Col>\n\n          </Row>\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <PieChart />\n            </Col>\n          </Row>\n\n           <Row type=\"flex\" gutter={24}>\n\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <MixedChart />\n            </Col>\n          </Row>\n\n\n\n           <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <DonutChart />\n            </Col>\n          </Row>\n\n          <Row type=\"flex\" gutter={24}>\n            <Col xs={24} sm={24} md={{span: 12, order: 4}} lg={12} xl={{span:24, order: 5}} className=\"c-mb\">\n                  <AreaChart />\n            </Col>\n          </Row>\n          <Row type=\"flex\" gutter={24}>\n          </Row>\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default FinancialAllCharts;\n\n","import React, { Component } from \"react\";\nimport { Row, Col, Card, Avatar, Tabs, Form, Icon, Input, Button, Checkbox, Typography} from \"antd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Select from 'react-select';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { Host } from  \"../../Host\";\n\nimport swal from 'sweetalert';\nimport axios from \"axios\";\n\nconst { TabPane } = Tabs;\nconst options = [\n  { value: 'Financial', label: 'Financial' },\n  { value: 'Operational', label: 'Operational' },\n  { value: 'Management', label: 'Management' },\n];\n\nclass AddUser extends Component {\n\n   constructor(props) {\n    super(props);\n    this.state = {\n     userName:'',\n     userId:'',\n     errorMsg:'',\n     Account_type:'',\n     selectedOptions: [],\n    }\n }\n\n componentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    if(profile_data != null){\n        this.setState({userId:profile_data['user_id']})\n    }\n  }\n\nhandleChange = (selectedOptions) => {\n    this.setState({ selectedOptions });\n  }\n\n\n  handleSubmitCreateUser = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n    e.preventDefault();\n      var i;\n        var userRights= []\n        for(var i=0; i <Object.keys(this.state.selectedOptions).length; i++){\n                userRights.push(this.state.selectedOptions[i]['value'])\n            }\n\n        const req_data = {\n                'first_name' : e.target.fname.value,\n                'last_name' : e.target.lname.value,\n                'username' : e.target.username.value,\n                'user_rights' : userRights.toString(),\n                'password' : e.target.password.value,\n                'account_type' :'sqd',\n                'company' : 'bluescheme',\n                'title' :  'create',\n                'office_number' : e.target.officePhone.value,\n                'cell_number' : e.target.cellPhone.value,\n                'home_number' : e.target.homePhone.value,\n                'email' : e.target.email.value,\n                'address1' : e.target.address_1.value,\n                'address2' : e.target.address_2.value,\n                'city' : e.target.city.value,\n                'state' : e.target.state.value,\n                'zip_code' : e.target.zipCode.value,\n                'admin_id':this.state.userId,\n                'category':'user',\n                'flog_value': 'addUser'}\n    this.UserCreateAPI(req_data);\n\n   });\n};\n\nasync UserCreateAPI(req_data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(req_data),\n    }\n    try{\n     const promise = await axios.post(Host.loginURL+\"/signup_api\", options);\n     const status = promise.status;\n     if(status==200)\n    {\n      const data = promise.data.data;\n      swal({\n            title:\"\",\n            text:'user created successfully!',\n            icon: \"success\",\n        })\n     }\n     await window.location.reload();\n  }\n  catch(err){this.setState({msg: \"Your Password Not Changed\"});}\n}\n\n\n    render () {\n\n    const { selectedOption } = this.state;\n\n        const formItemLayout = {\n            labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n            },\n            wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n            },\n        };\n        const { getFieldDecorator } = this.props.form;\n   return(\n     <div>\n        <div id=\"content\">\n          <Row gutter={24} type=\"flex\">\n            <Col span={16} className=\"c-mb\">\n              <Card\n                bordered={false}\n                className=\"mi-card mi-card-boxshadow mi-card-user-setting\"\n              >\n                    <div className=\"tabpane-inside-gutters\">\n                    <Row type=\"flex\" justify=\"\">\n                        <Col span={16}>\n\n                         <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                                <Col>\n                                  <h3 lassName=\"page-heading\" ></h3>\n                                </Col>\n                          </Row>\n                      </div>\n             <Form  {...formItemLayout}  onSubmit={this.handleSubmitCreateUser}>\n\n                <Row>\n                    <Col span={16} offset={8}>\n                       <div class=\"ant-card-head-wrapper\">\n                        <h5 class=\"ant-card-head-title\">Create User</h5>\n                       </div>\n                    </Col>\n                </Row>\n                <Form.Item label=\"First Name\">\n                    {getFieldDecorator('fname', {rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Last Name\">\n                    {getFieldDecorator('lname',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Username\">\n                    {getFieldDecorator('username', {rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"UserRights\">\n                    {getFieldDecorator('user_rights',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (\n                  <Select\n                        isMulti\n                        value={selectedOption}\n                        onChange={this.handleChange}\n                        options={options}\n                         />\n                    )}\n\n                </Form.Item>\n                <Form.Item label=\"Password\">\n                    {getFieldDecorator('password',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Office Phone\">\n                    {getFieldDecorator('officePhone',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Cell Phone\">\n                    {getFieldDecorator('cellPhone',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Home Phone\">\n                    {getFieldDecorator('homePhone',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input  value='hi'/>)}\n                </Form.Item>\n                <Form.Item label=\"Email\">\n                    {getFieldDecorator('email',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input  value='hi'/>)}\n                </Form.Item>\n\n                <Row>\n                    <Col span={16} offset={8}>\n                        <h6 className=\"mb-3\">Address</h6>\n                    </Col>\n                </Row>\n                <Form.Item label=\"Address 1\">\n                    {getFieldDecorator('address_1',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Address 2\">\n                    {getFieldDecorator('address_2',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                    {getFieldDecorator('city',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                <Form.Item label=\"State\">\n                    {getFieldDecorator('state',{rules:[{required: true,\n                        message: \"Please input your !\"}]} )\n                    (<Input />)}\n                </Form.Item>\n                    <Form.Item label=\"Zip Code\">\n                        {getFieldDecorator('zipCode',{rules:[{required: true,\n                            message: \"Please input your !\"}]} )\n                        (<Input />)}\n                    </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n\n            </Form>\n                      </Col>\n                    </Row>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nconst WrappedAddUser = Form.create()(AddUser);\nexport default WrappedAddUser;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst options = [\n  { label: 'Apple', value: 'Apple' },\n];\n\n\nclass LineChart extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n            checked: true,\n            filterHeaders:[],\n            intHeader:[],\n             filter:[],\n             selected_Xaxis: [{'checkedValue':'Group'}],\n             selected_Yaxis: [{'checkedValue':'Amount'}],\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n    };\n\n  }\n\n\n onSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.LineChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadLineChartData({ValueX:this.state.selected_Xaxis, ValueY:this.state.selected_Yaxis,  Menu:Menu_name});\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadLineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n }\n}\n// =================================================== Line Chart ======================================================\nasync LineChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n\n     this.setState({line_table_columns:[]})\n      this.setState({line_table_data:[]})\n      this.setState({download_lineChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      const table_dict = data\n      var l_data = [data];\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = []\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({download_lineChart_table:[table_dict]})\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n      this.setState({loading:false})\n    }\n}\n\n\n\n\n  render() {\n     const line_chart_source_scale = [{\n      dataKey: 'value',\n      min: 0,\n              formatter: function formatter(val) {\n                         if (val < 100000) {\n                             return Math.round((val/1000) * 10)/10+'k';\n                         }\n                        else if (val >= 1000000){\n                            return val=(val/1000000)+\"M\";\n                        }\n                         else{\n                             return val;\n                         }\n              }\n    },\n    {\n      dataKey: 'year',\n      min: 0,\n      max: 1,\n    }];\n\n    const override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      loading: true;\n      color: \"red\";\n      css: \"\";\n    `;\n\n\n\n    return (\n\n       <div>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_line\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_line\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Line Chart TableData</h4>\n\n                                            </div>\n                                            <div>\n                                            <h5 class=\"modal-title\" style={{marginLeft:\"160px\"}}></h5>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.line_table_columns} dataSource={this.state.line_table_data} style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_lineChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > <Icon type='download' /> Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                      css={override}\n                      size={150} // or 150px\n                      color={\"#123abc\"}\n                      loading={this.state.loading}\n                          />\n                      <Chart forceFit width={800} height={300} data={this.state.line_chart_source_data}\n                                                               scale={line_chart_source_scale}>\n                        <Tooltip />\n                        <Axis />\n                        <Legend />\n                        <Line position=\"name*value\"/>\n                        <Point position=\"name*value\" shape=\"circle\"/>\n                      </Chart>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n\n\n    );\n  }\n}\nexport default LineChart;\n\n\n","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport LineChart from './LineChart';\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst options = [\n  { label: 'Apple', value: 'Apple' },\n];\n\n\nclass AllCharts extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n            checked: false,\n            filterHeaders:[],\n            intHeader:[],\n             filter:[],\n             select_group:\"Group\",\n             select_amount:\"Amount\",\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             loading:true,\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Group\",\n             value_yl : \"Amount\",\n             download_lineChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n    };\n\n  }\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\nonChange = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n}\n\n\n\n  render() {\n    return (\n     <div>\n          <Layout>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <a href=\"\">\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"\">\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"\">\n                                    <Button type=\"primary\" ghost>\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                  </a>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange}\n                                               key={index} value={this.state.checkVal}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange}\n                                          checked={this.state.checked} key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n\n                         )}\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n          </Layout>,\n\n    </div>\n\n\n    );\n  }\n}\nexport default AllCharts;\n\n\n","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport LineChart from './LineChart';\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass BarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n            filterHeaders:[],\n            intHeader:[],\n             selected_Xaxis: [{'checkedValue':'Group'}],\n             select_group:\"Group\",\n             select_amount_USD:\"Amount_USD\",\n             chart_data:[],\n             donut_data:[],\n             pie_data:[],\n             bar_data:[],\n             ve_bar_data:[],\n             line_data:[{name:\"\", 'A':1, 'B':12}],\n             field_list:[\"A\",\"B\"],\n             chartData: [],\n             sourceData :[],\n             line_chart_source_data:[{name: 'A', value: 13000000}],\n             sourceData_donut:[],\n\n             table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n             load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             line_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             line_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             bar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             bar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n             mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n             mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n             value_xl : \"Status\",\n             value_yl : \"Amount_USD\",\n             download_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n   }\n}\n\n// ============================= Loading all charts ====================================================================\n\n\n\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.HorizontalBar_FilterCount({Column:this.state.selected_Xaxis,  Menu:Menu_name})\n  }\n}\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n//========================================== Bar Chart ================================================================\nhandleSubmitBarChart = (e) => {\n        e.preventDefault();\n        this.setState({loading:true})\n        this.setState({value_bar: e.target.value});\n         this.Select_Count(\n             {Column:e.target.value, Menu:Menu_name}\n      );\n };\n\n\nasync HorizontalBar_FilterCount(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({bar_data : []})\n\n    this.setState({bar_table_columns:[]})\n    this.setState({bar_table_data:[]})\n   this.setState({download_barChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Bar_chart_list = []\n      var ct_list1 = []\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n            }\n            else{}\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:Bar_chart_list})\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({download_barChart_table:[table_dict]})\n       this.setState({loading:false})\n    }\n\n}\n\n\n//=================================================== Line Chart Table Data Download ===================================\nrender() {\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                 return Math.round((val/1000) * 10)/10+'k';\n              }\n            else if (val >= 1000000){\n               return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                return val;\n            }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n\n       <div>\n          <Layout>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                       <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModalBar\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                  <div class=\"modal fade\" id=\"myModalBar\" role=\"dialog\">\n                                    <div class=\"modal-dialog\">\n                                      <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                         {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                          <h4 class=\"modal-title\">Bar Chart Table Data</h4>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                         <Table columns={this.state.bar_table_columns} dataSource={this.state.bar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                          <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                          <CSVLink data={this.state.download_barChart_table}>\n                                          <button type=\"button\" class=\"btn btn-primary\" > <Icon type='download' /> Download </button>\n                                          </CSVLink>;\n                                        </div>\n                                      </div>\n\n                                    </div>\n                                  </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n              />\n               <Chart forceFit height={400} data={basic_bar_data} scale={line_chart_source_scale}>\n                    <Coord type=\"rect\" direction=\"LB\" />\n                    <Tooltip />\n                    <Axis dataKey=\"country\" label={{ offset: 12 }} />\n                    <Bar position=\"name*value\" />\n                 </Chart>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n          </Layout>,\n\n    </div>\n\n    );\n  }\n}\nexport default BarChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport LineChart from './LineChart';\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass VerticalChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      filterHeaders:[],\n      intHeader:[],\n      selected_Xaxis: [{'checkedValue':'Group'}],\n      select_group:\"Group\",\n      select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     vertical_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     vertical_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_verticalChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.VerticalBar_FilterCount({Column:this.state.selected_Xaxis,  Menu:Menu_name})\n  }\n}\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\n\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n\n    }\n  }\n\n\n\n//========================================== Vertical bar Chart ================================================================\n\n\nasync VerticalBar_FilterCount(data){\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({ve_bar_data : []})\n\n    this.setState({vertical_table_columns:[]})\n      this.setState({vertical_table_data:[]})\n\n\n this.setState({download_verticalChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var Ve_Bar_chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            data_dict['value']=value;\n            Ve_Bar_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n\n\n            }\n            else{}\n        }\n     table_data_list.push(table_data_dict)\n     this.setState({ve_bar_data:Ve_Bar_chart_list})\n     this.setState({vertical_table_columns:table_column_list})\n     this.setState({vertical_table_data:table_data_list})\n\n     this.setState({download_verticalChart_table:[table_dict]})\n      this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n\n <div>\n          <Layout>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                       <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Vertical\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                   <div class=\"modal fade\" id=\"myModal_Vertical\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Vertical Bar Chart Table Data</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.vertical_table_columns} dataSource={this.state.vertical_table_data} style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_verticalChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                  css={override}\n                  size={150} // or 150px\n                  color={\"#123abc\"}\n                  loading={this.state.loading}\n                      />\n                    <Chart forceFit height={400} data={vertical_bar_data} scale={vertical_scale}>\n                    <Tooltip />\n                    <Axis />\n                    <Bar position=\"name*value\" />\n                    </Chart>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n          </Layout>,\n\n    </div>\n\n\n    );\n  }\n}\nexport default VerticalChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass GroupBarChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n        group_bar_options: {\n                    plotOptions: {\n                      bar: {\n                        horizontal: true,\n                        dataLabels: {\n                          position: 'top',\n                        },\n                      }\n                    },\n                    dataLabels: {\n                      enabled: false,\n                      offsetX: -6,\n                      style: {\n                        fontSize: '12px',\n                        colors: ['#fff']\n                      }\n                    },\n                    stroke: {\n                      show: true,\n                      width: 1,\n                      colors: ['#fff']\n                    },\n\n                    xaxis: {\n                      categories: [\"\"],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    },\n                    yaxis: {\n                      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n                      labels: {\n                            formatter: function(val) {\n                               if (val < 100000) {\n                                            return Math.round((val/1000) * 10)/10+'k';\n                                        }\n                                else if (val >= 1000000){\n\n                                return val=(val/1000000)+\"M\";\n\n                                }\n                                 else {\n                                            return val;\n                                        }\n\n                            }\n                        }\n                    }\n                  },\n\n       checked: true,\n        filterHeaders:[],\n        intHeader:[],\n         filter:[],\n         selected_Xaxis: [{'checkedValue':'Group'}],\n         selected_Yaxis: [{'checkedValue':'Amount'}],\n         select_group:\"Group\",\n         select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     group_bar_display:false,\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     Gbar_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     Gbar_table_data : [{ key: '1', oNumber: 'DVO524',}],\n     download_group_barChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.GroupBarData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\n\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadAllChartData({ValueX:this.state.selected_Xaxis, ValueY:this.state.selected_Yaxis,  Menu:Menu_name});\n\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/int_Header_api\",{Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAllChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({loading:false})\n       this.setState({group_bar_display:true})\n }\n}\n\n\n//================================================ Group Bar Chart ====================================================================\n\nasync GroupBarData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({chart_data : []})\n    this.setState({Gbar_table_columns:[]})\n      this.setState({Gbar_table_data:[]})\n\n      this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n//            keys_list.push(key)\n            var value = data[key]\n//            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=[value];\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n\n      table_data_list.push(table_data_dict)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({chart_data:chart_list})\n\n      this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n      this.setState({download_group_barChart_table:[table_dict]})\n      this.setState({group_bar_display:true})\n      this.setState({loading:false})\n\n    }\n\n}\n\n\n\nrender() {\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n  return (\n   <div>\n\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_GroupBar\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_GroupBar\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Group Bar TableData</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.Gbar_table_columns} dataSource={this.state.Gbar_table_data} style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_group_barChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > <Icon type='download' /> Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                        <RingLoader\n                      css={override}\n                      size={150} // or 150px\n                      color={\"#123abc\"}\n                      loading={this.state.loading}\n                      />\n                  {this.state.group_bar_display == true?\n                  <ReactApexChart options={this.state.group_bar_options} series={this.state.chart_data}\n                                                                  type=\"bar\" width=\"420\" height=\"350\" />:null\n                   }\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n    );\n  }\n}\nexport default GroupBarChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport LineChart from './LineChart';\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst vertical_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                  return Math.round((val/1000) * 10)/10+'k';\n                    }\n            else if (val >= 1000000){\n\n            return val=(val/1000000)+\"M\";\n\n            }\n             else {\n                      return val;\n                    }\n  }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\nclass DonutChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n      filterHeaders:[],\n      intHeader:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     donut_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     donut_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     download_donutChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n      }\n}\n\n\n// ============================= Loading all charts ====================================================================\n\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.DonutChart_FilterCount({Column:this.state.selected_Xaxis,  Menu:Menu_name})\n  }\n}\n\ncomponentWillMount() {\n     this.loadFilterHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\n\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\" , {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n\n\n//========================================== Donut Chart ================================================================\n\n\nasync DonutChart_FilterCount(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData_donut : []})\n    this.setState({donut_table_columns:[]})\n     this.setState({donut_table_data:[]})\n     this.setState({download_donutChart_table:[]})\n\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData_donut:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({donut_table_columns:table_column_list})\n     this.setState({donut_table_data:table_data_list})\n\n     this.setState({download_donutChart_table:[table_dict]})\n     this.setState({loading:false})\n    }\n\n}\n\nrender() {\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst donut_data = dv1.rows;\n\nconst scale_donut = [{\n  dataKey: 'percent',\n  min: 0,\n  formatter: '.0%',\n}];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n\n    <div>\n          <Layout>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                       <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Donut\" >\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                  <div class=\"modal fade\" id=\"myModal_Donut\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Donut Chart TableData</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.donut_table_columns} dataSource={this.state.donut_table_data} style={{overflowY:\"scroll\"}}/>\n\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_donutChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                          <RingLoader\n                              css={override}\n                              size={150} // or 150px\n                              color={\"#123abc\"}\n                              loading={this.state.loading}\n                          />\n\n                            <Chart forceFit height={400} data={donut_data} scale={scale_donut}>\n                            <Tooltip showTitle={false} />\n                            <Axis />\n                            <Legend dataKey=\"item\" />\n                            <Coord type=\"theta\" radius={0.75} innerRadius={0.6} />\n                         <Pie position=\"percent\" color=\"item\" style={{ stroke: '#fff', lineWidth: 1 }}\n                          label={['percent', {\n                            formatter: (val, item) => {\n                              return item.point.item + ': ' + val;\n                            }\n                          }]}\n                        />\n                      </Chart>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n          </Layout>,\n\n    </div>\n\n    );\n  }\n}\nexport default DonutChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nimport LineChart from './LineChart';\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass PieChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\n      filterHeaders:[],\n      intHeader:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     select_group:\"Group\",\n     select_amount_USD:\"Amount_USD\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     pie_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     pie_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_pieChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n\n// ============================= Loading all charts ====================================================================\n\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.PieChart_FilterCount({Column:this.state.selected_Xaxis,  Menu:Menu_name})\n  }\n}\n\ncomponentWillMount() {\n     this.loadFilterHeaders();\n     this.loadAll_count_view();\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadAll_count_view()\n  {\n    this.setState({table_columns : []})\n    this.setState({table_data : []})\n\n    this.setState({download_barChart_table:[]})\n    this.setState({download_verticalChart_table:[]})\n    this.setState({download_donutChart_table:[]})\n    this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/load_count_api\", {Column:'Group', Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data\n      var i;\n      var keys_list =[];\n      var bar_value_list =[];\n      var load_chart_list = [];\n      var load_donut_chart_list = [];\n      var ct_list1 = [];\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value_bar != value){bar_value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n\n            var load_data_dict = {};\n            if (key != \"label\"){\n            data_dict['name']=key;\n            load_data_dict['item']=key;\n            data_dict['value']=value;\n            load_data_dict['count']=value;\n            load_chart_list.push(data_dict)\n            load_donut_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict);\n            }\n            else{}\n        }\n      table_data_list.push(table_data_dict)\n      this.setState({bar_data:load_chart_list})\n      this.setState({ve_bar_data:load_chart_list})\n      this.setState({sourceData:load_donut_chart_list})\n      this.setState({sourceData_donut:load_donut_chart_list})\n\n      this.setState({bar_table_columns:table_column_list})\n      this.setState({bar_table_data:table_data_list})\n\n      this.setState({vertical_table_columns:table_column_list})\n      this.setState({vertical_table_data:table_data_list})\n\n      this.setState({donut_table_columns:table_column_list})\n      this.setState({donut_table_data:table_data_list})\n\n      this.setState({pie_table_columns:table_column_list})\n      this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_barChart_table:[table_dict]})\n    this.setState({download_verticalChart_table:[table_dict]})\n    this.setState({download_donutChart_table:[table_dict]})\n    this.setState({download_pieChart_table:[table_dict]})\n    this.setState({loading:false})\n    }\n  }\n\n//===============================================Pie Chart ==============================================================\n\nasync PieChart_FilterCount(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n\n    this.setState({sourceData : []})\n\n    this.setState({pie_table_columns:[]})\n     this.setState({pie_table_data:[]})\n\n     this.setState({download_pieChart_table:[]})\n    const promise = await axios.post(Host.loginURL +\"/count_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n\n      var table_dict = data;\n      this.setState(data);\n      console.log(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var chart_list = []\n      var ct_list1 = []\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n\n            keys_list.push(key)\n            if (key != \"label\"){\n            ct_list1.push(key)\n\n            }\n            else{}\n\n            var value = data[key]\n            if (this.state.value != value){value_list.push(value)}\n            else {\n            }\n\n            var data_dict = {};\n            if (key != \"label\"){\n            data_dict['item']=key;\n            data_dict['count']=value;\n            chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            }\n            else{}\n\n\n        }\n\n      table_data_list.push(table_data_dict)\n      this.setState({sourceData:chart_list})\n      this.setState({donut_data:value_list})\n      this.setState({pie_table_columns:table_column_list})\n     this.setState({pie_table_data:table_data_list})\n\n     this.setState({download_pieChart_table:[table_dict]})\n     this.setState({loading:false})\n\n    }\n\n}\n\nrender() {\n    const dv = new DataSet.View().source(this.state.sourceData);\n    dv.transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent',\n      align: 'left'\n    });\n    const pie_data = dv.rows;\n\n\n    const pie_scale = [{\n      dataKey: 'percent',\n      min: 0,\n      formatter: '.0%',\n    }];\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n\n    return (\n    <div>\n          <Layout>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                       <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Pie\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                  <div class=\"modal fade\" id=\"myModal_Pie\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Pie Chart TableData</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.pie_table_columns} dataSource={this.state.pie_table_data} style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_pieChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                          <RingLoader\n                              css={override}\n                              size={150} // or 150px\n                              color={\"#123abc\"}\n                              loading={this.state.loading}\n                          />\n                        <Chart forceFit height={400} data={pie_data} scale={pie_scale} >\n                            <Tooltip showTitle={false} />\n                            <Coord type=\"theta\" />\n                            <Axis />\n                            <Legend dataKey=\"item\" />\n                                            <Pie\n                          position=\"percent\"\n                          color=\"item\"\n                          style={{ stroke: '#fff', lineWidth: 1 }}\n                          label={['percent', {\n                            formatter: (val, item) => {\n                              return item.point.item + ': ' + val;\n                            }\n                          }]}\n                        />\n                       </Chart>\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n          </Layout>,\n\n    </div>\n\n    );\n  }\n}\nexport default PieChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass MixedChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\nmixed_chart_options:  {\n            dataLabels: {\n              enabled: false\n            },\n\n            stroke: {\n              width:4\n            },\n            title: {\n              text: '',\n              align: 'left',\n              offsetX: 110\n            },\n            xaxis: {\n              categories: [],\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            yaxis: [\n              {\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#008FFB'\n                },\n                 labels: {\n                   style: {\n                    color: '#008FFB',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#008FFB',\n                  }\n                },\n                tooltip: {\n                  enabled: true\n                }\n              },\n\n              {\n                seriesName: 'Income',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#00E396'\n                },\n                   labels: {\n                   style: {\n                    color: '#00E396',\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#00E396',\n                  }\n                },\n              },\n              {\n                seriesName: 'Revenue',\n                opposite: true,\n                axisTicks: {\n                  show: true,\n                },\n                axisBorder: {\n                  show: true,\n                  color: '#FEB019'\n                },\n                 labels: {\n                   style: {\n                    color: '#FEB019',\n\n                  },\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                },\n                title: {\n                  text: \"\",\n                  style: {\n                    color: '#FEB019',\n                  }\n                }\n              },\n            ],\n\n\n            tooltip: {\n              fixed: {\n                enabled: true,\n                position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n                offsetY: 30,\n                offsetX: 60\n              },\n            },\n            legend: {\n              horizontalAlign: 'left',\n              offsetX: 40\n            }\n          },\nmixed_chart_series: [{\nname: 'Status',\ntype: 'column',\ndata: [10]\n}, {\nname: 'A',\ntype: 'column',\ndata: [20]\n},\n\n{\nname: 'B',\ntype: 'column',\ndata: [30]\n},\n{\nname: 'C',\ntype: 'column',\ndata: [150]\n},\n\n\n{\nname: 'LINE',\ntype: 'line',\ndata: [40, 20]\n},\n\n],\n\n     checked: true,\n    filterHeaders:[],\n    intHeader:[],\n     filter:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     selected_Yaxis: [{'checkedValue':'Amount'}],\n     selected_Zaxis: [{'checkedValue':'Group'}],\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     mix_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n\n     mix_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     mix_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_mixedChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }],\n\n   }\n }\n// ============================= Loading all charts ====================================================================\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.MixedChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, ValueZ:this.state.selected_Zaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\nonChange_Zaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Zaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.MixedChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, ValueZ:this.state.selected_Zaxis, Menu:Menu_name})\n  }\n}\n\n\n\n\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadMixedChartData({ValueX:this.state.selected_Xaxis,\n                              ValueY:this.state.selected_Yaxis,\n                              ValueZ:this.state.selected_Zaxis,\n                              Menu:Menu_name});\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadMixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n    }\n\n}\n\n//=================================================Mixed chart==========================================================\n\n\nasync MixedChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({mixed_chart_series : []})\n\n    this.setState({mix_table_columns:[]})\n     this.setState({mix_table_data:[]})\n\n     this.setState({download_mixedChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/mixed_dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n\n      const sum_data = promise.data.data[\"sum_data\"];\n      const count_data = promise.data.data[\"count_data\"];\n      var table_dict = sum_data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n      var max_chart_list = [];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {}\n\n      for (i = 0; i < Object.keys(sum_data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(sum_data)[i]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['type']='column';\n            data_dict['data']=[value];\n            max_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n        }\n      table_data_list.push(table_data_dict)\n      var j;\n      var c_keys_list =[];\n      var c_value_list =[];\n      var max_chart_count_list ={};\n      for (j = 0; j < Object.keys(count_data).length; j++) {\n            console.log(data[j])\n            var key = Object.keys(sum_data)[j]\n//            keys_list.push(key)\n            var value = sum_data[key]\n            c_value_list.push(value)\n            var data_dict = {};\n            max_chart_count_list['name']=count_data[\"label\"];\n            max_chart_count_list['type']='line';\n            max_chart_count_list['data']=c_value_list;\n\n        }\n\n       max_chart_list.push(max_chart_count_list)\n      const g_data = [this.state.Actual, this.state.Budget]\n      this.setState({g:g_data})\n      const m = [{name: \"SQBL\", data: [1000000], type: \"column\"},]\n      this.setState({mixed_chart_series:max_chart_list})\n      this.setState({mix_table_columns:table_column_list})\n     this.setState({mix_table_data:table_data_list})\n\n     this.setState({download_mixedChart_table:[table_dict]})\n     this.setState({mix_display:true})\n     this.setState({loading:false})\n\n    }\n\n}\n\n\nrender() {\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n    return (\n   <div>\n\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Mixed\">\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_Mixed\" role=\"dialog\">\n                                    <div class=\"modal-dialog\">\n                                      <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                         {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                          <h4 class=\"modal-title\">Mixed Table Data</h4>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                         <Table columns={this.state.mix_table_columns} dataSource={this.state.mix_table_data}\n                                         style={{overflowY:\"scroll\"}}/>\n\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                          <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                          <CSVLink data={this.state.download_mixedChart_table}>\n                                          <button type=\"button\" class=\"btn btn-primary\" > Download </button>\n                                          </CSVLink>;\n                                        </div>\n                                      </div>\n\n                                    </div>\n                                  </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n\n                           <SubMenu key=\"subC\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Zaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Zaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                           </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                              css={override}\n                              size={150} // or 150px\n                              color={\"#123abc\"}\n                              loading={this.state.loading}\n                             />\n                          {this.state.mix_display == true?\n                          <ReactApexChart options={this.state.mixed_chart_options}\n                          series={this.state.mixed_chart_series} type=\"line\" width=\"420\" height=\"350\" />:null\n                          }\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n\n    );\n  }\n}\nexport default MixedChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card, Button, Layout, Menu, Breadcrumb, Icon, Tree, Checkbox, Table} from 'antd';\nimport { Chart, Tooltip, Axis, Legend, Pie, Coord, Line, Bar, Point} from 'viser-react';\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { CSVLink } from \"react-csv\";\nimport { css } from \"@emotion/core\";\nimport { RingLoader} from \"react-spinners\";\nconst DataSet = require('@antv/data-set');\nconst Menu_name = \"Financial\"\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nclass AreaChart extends React.Component {\n\n constructor(props) {\n    super(props);\n   this.state = {\n\narea_chart_options :{\n            chart: {\n              stacked: true,\n\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n\n            },\n            xaxis: {\n\n                labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n             yaxis: {\n\n              labels: {\n                    formatter: function(val) {\n                       if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"10M\";\n\n                        }\n                        else if (val >= 10000000){\n\n                        return val=(val/10000000)+\"100M\";\n\n                        }\n\n                        else if (val >= 1000000000){\n\n                        return val=(val/1000000000)+\"1B\";\n\n                        }\n                         else {\n                                    return val;\n                                }\n\n                    }\n                }\n            },\n            fill: {\n              type: 'gradient',\n              gradient: {\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n              }\n            },\n            legend: {\n              position: 'bottom',\n              horizontalAlign: 'left'\n            },\n\n          },\n\narea_chart_series:[{\n            name: 'series1',\n            data: [31, 40]\n          },\n          {\n            name: 'series1',\n            data: [35, 19]\n          }],\n\n     checked: true,\n    filterHeaders:[],\n    intHeader:[],\n     filter:[],\n     selected_Xaxis: [{'checkedValue':'Group'}],\n     selected_Yaxis: [{'checkedValue':'Amount'}],\n     select_group:\"Group\",\n     select_amount:\"Amount\",\n     chart_data:[],\n     donut_data:[],\n     pie_data:[],\n     bar_data:[],\n     ve_bar_data:[],\n     line_data:[{name:\"\", 'A':1, 'B':12}],\n     field_list:[\"A\",\"B\"],\n     chartData: [],\n     sourceData :[],\n     line_chart_source_data:[{name: 'A', value: 13000000}],\n     sourceData_donut:[],\n\n     value_xl : \"Status\",\n     value_yl : \"Amount_USD\",\n     loading:true,\n     area_display:false,\n     table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     load_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     load_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n\n     area_table_columns : [{ title: 'Order Number',dataIndex: 'oNumber', key: 'oNumber',}],\n     area_table_data : [{ key: '1', oNumber: 'DVO524',}],\n\n     download_areaChart_table :[{ firstname: \"Ravi\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" }]\n\n    }\n }\n\n\n// ============================= Loading all charts ====================================================================\nonSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n\n  showModal = () => {\n    alert('hi')\n  };\n\n\nonChange_Xaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  this.setState({selected_Xaxis:[]})\n  const selectedOptions = {'checkedValue':checkedValue.target.value}\n  this.state.selected_Xaxis.push(selectedOptions)\n  if(checkedValue.target.checked == true){\n        this.StackedAreaChartData( {ValueX:this.state.selected_Xaxis,\n                                  ValueY:this.state.selected_Yaxis, Menu:Menu_name})\n  }\n}\n\n\nonChange_Yaxis = (checkedValue) => {\n  this.setState({checkVal:checkedValue});\n  const selectedOptions = {'checkedValue':'Amount'}\n  this.state.selected_Yaxis.push(selectedOptions)\n\n}\n\ncomponentWillMount() {\n    this.loadFilterHeaders();\n     this.loadIntHeaders();\n     this.loadAreaChartData({ValueX:this.state.selected_Xaxis, ValueY:this.state.selected_Yaxis,  Menu:Menu_name});\n  }\n\n async loadFilterHeaders()\n  {\n    const promise = await axios.post(Host.loginURL +\"/header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({filterHeaders:data});\n    }\n  }\n\nasync loadIntHeaders()\n  {\n    const promise = await axios.post(Host.loginURL + \"/int_Header_api\", {Menu:Menu_name});\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      console.log(data);\n      this.setState({intHeader:data});\n      const d = [{'name': 'Actual','data': []}, {'name': 'Budget','data': []}]\n      const dou = [1,3,4]\n      this.setState({donut_data:dou})\n      this.setState({chart_data:d})\n       console.log(this.state.chart_data);\n\n    }\n  }\n\nasync loadAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({load_table_columns : []})\n    this.setState({load_table_data : []})\n    this.setState({line_data : []})\n    this.setState({field_list : []})\n    this.setState({line_chart_source_data : []})\n    this.setState({chart_data:[]})\n    this.setState({area_chart_series:[]})\n\n     this.setState({download_lineChart_table:[]})\n     this.setState({download_group_barChart_table:[]})\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var l_data = [data];\n      var table_dict = [data]\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var line_value_list =[];\n      var line_chart_list = [];\n      var load_bar_chart_list = [];\n       var table_column_list = [];\n       var table_data_list = [];\n       var table_data_dict = {}\n       var area_list = [];\n       var area_chart_data = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            line_value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['value']=value;\n            line_chart_list.push(data_dict)\n            var load_data_dict = {};\n            load_data_dict['name']=key;\n            load_data_dict['data']=[value];\n            load_bar_chart_list.push(load_data_dict)\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n            var area_dict = {}\n            area_list.push(value);\n            area_dict['name']=key;\n            area_dict['data'] = area_list;\n            area_chart_data.push(area_dict);\n\n\n        }\n       table_data_list.push(table_data_dict)\n\n\n      this.setState({line_chart_source_data:line_chart_list})\n      this.setState({field_list:keys_list})\n      this.setState({chart_data:load_bar_chart_list})\n      this.setState({area_chart_series:area_chart_data})\n\n\n      this.setState({line_table_columns:table_column_list})\n      this.setState({line_table_data:table_data_list})\n\n       this.setState({Gbar_table_columns:table_column_list})\n      this.setState({Gbar_table_data:table_data_list})\n\n       this.setState({mix_table_columns:table_column_list})\n      this.setState({mix_table_data:table_data_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n       this.setState({download_lineChart_table:table_dict})\n       this.setState({download_group_barChart_table:table_dict})\n       this.setState({download_areaChart_table:table_dict})\n       this.setState({area_display:true})\n        this.setState({loading:false})\n }\n}\n\n//==========================================================Stacked Area chart==========================================\n\n\nasync StackedAreaChartData(data){\n\n    const headers  = new Headers()\n    headers.append('Content-Type', 'application/json');\n    const options = {\n    method : 'POST',\n    headers,\n    body:JSON.stringify(data),\n    }\n    this.setState({area_chart_series : []})\n    this.setState({download_areaChart_table : []})\n\n const promise = await axios.post(Host.loginURL +\"/dataView_api\", options);\n    const status = promise.status;\n    if(status===200)\n    {\n      const data = promise.data.data;\n      var table_dict = data;\n      this.setState(data);\n      var i;\n      var keys_list =[];\n      var value_list =[];\n\n      var table_column_list = [];\n      var table_data_list = [];\n      var table_data_dict = {};\n\n      var SArea_chart_list = [];\n      for (i = 0; i < Object.keys(data).length; i++) {\n            console.log(data[i])\n            var key = Object.keys(data)[i]\n            keys_list.push(key)\n            var value = data[key]\n            value_list.push(value)\n            var data_dict = {};\n            data_dict['name']=key;\n            data_dict['data']=value_list;\n            SArea_chart_list.push(data_dict)\n\n            var column_dict = {}\n            column_dict['title'] =key;\n            column_dict['dataIndex'] =key;\n            column_dict['key'] =key;\n            table_data_dict[key] = value;\n            table_column_list.push(column_dict)\n\n        }\n        table_data_list.push(table_data_dict)\n      this.setState({area_chart_series:SArea_chart_list})\n\n       this.setState({area_table_columns:table_column_list})\n      this.setState({area_table_data:table_data_list})\n\n\n      this.setState({download_areaChart_table : [table_dict]})\n      this.setState({area_display:true})\n        this.setState({loading:false})\n    }\n\n}\n\nrender() {\n\n\nconst dv = new DataSet.View().source(this.state.sourceData);\ndv.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent',\n  align: 'left'\n});\nconst pie_data = dv.rows;\n\n\nconst dv1 = new DataSet.View().source(this.state.sourceData_donut);\ndv1.transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst don_data = dv1.rows;\n\nconst dv12 = new DataSet.View().source(this.state.line_data);\n    dv12.transform({\n      type: \"fold\",\n      fields:this.state.field_list,\n      key: \"keySelect\",\n      value: \"average\"\n    });\n    const data1233 = dv12.rows;\n\n\n\nconst bar_dv = new DataSet.View().source(this.state.bar_data);\nbar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst basic_bar_data = bar_dv.rows;\n\n\n\n\n\nconst line_chart_source_scale = [{\n  dataKey: 'value',\n  min: 0,\n  formatter: function formatter(val) {\n             if (val < 100000) {\n                                    return Math.round((val/1000) * 10)/10+'k';\n                                }\n                        else if (val >= 1000000){\n\n                        return val=(val/1000000)+\"M\";\n\n                        }\n\n                         else {\n                                    return val;\n                                }\n        }\n},{\n  dataKey: 'year',\n  min: 0,\n  max: 1,\n}];\n\n\n\nconst ve_bar_dv = new DataSet.View().source(this.state.ve_bar_data);\nve_bar_dv.transform({\n  type: 'sort',\n  callback(a, b) {\n    return a.value - b.value > 0;\n  },\n});\nconst vertical_bar_data = ve_bar_dv.rows;\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  loading: true;\n  color: \"red\";\n  css: \"\";\n`;\n\n\n    return (\n\n        <div>\n            <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                <Content style={{ padding: '0 50px' }}>\n                    <div className=\"page-header\">\n                          <Row type=\"flex\" justify=\"space-between\">\n                            <Col>\n                              <h1 className=\"page-heading\"></h1>\n                            </Col>\n                            <Col>\n                              <ul className=\"button-actions\">\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"edit\" />\n                                      Edit\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost>\n                                      <Icon type=\"delete\" />\n                                      Delete\n                                    </Button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div>\n                                    <Button type=\"primary\" ghost  class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal_Stacked\" >\n                                     <Icon type=\"table\" />  Table View\n                                    </Button>\n                                    <div class=\"modal fade\" id=\"myModal_Stacked\" role=\"dialog\">\n                                        <div class=\"modal-dialog\">\n                                          <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                             {/* <button type=\"button\" class=\"close\" data-dismiss=\"modal\" style={{marginLeft:\"1px\"}}>&times;</button> */}\n                                              <h4 class=\"modal-title\">Stacked Chart Table Data</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                             <Table columns={this.state.area_table_columns} dataSource={this.state.area_table_data}\n                                             style={{overflowY:\"scroll\"}}/>\n\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                              <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                                              <CSVLink data={this.state.download_areaChart_table}>\n                                              <button type=\"button\" class=\"btn btn-primary\" > <Icon type='download' /> Download </button>\n                                              </CSVLink>;\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n\n                                  </div>\n                                </li>\n                              </ul>\n                            </Col>\n                          </Row>\n                    </div>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} >\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }} >\n                        <SubMenu key=\"sub1\" title={ <span> <Icon type=\"transaction\" /> Financial </span> } >\n                           <SubMenu key=\"subA\"  defaultOpenKeys={['subA']}  title={ <span> <Icon type=\"filter\" /> Xaxis </span> } >\n                              {this.state.filterHeaders.map((value,index)=>\n                                  <Menu.Item key=\"\">\n                                        <Checkbox onChange={this.onChange_Xaxis}\n                                                value={value}  key={index}>{value}</Checkbox>\n                                  </Menu.Item>\n                              )}\n                           </SubMenu>\n                         {this.state.intHeader.map((value,index)=>\n                           <SubMenu key=\"subB\" title={ <span> <Icon type=\"filter\" /> Yaxis </span> } >\n                              <Menu.Item key=\"\">\n                                    <Checkbox onChange={this.onChange_Yaxis}\n                                          checked={this.state.checked}  value={value}  key={index}>{value}</Checkbox>\n                              </Menu.Item>\n                           </SubMenu>\n                         )}\n                        </SubMenu>\n\n                      <SubMenu key=\"sub2\" title={ <span> <Icon type=\"solution\" /> Operational </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n\n                       <SubMenu key=\"sub3\" title={ <span> <Icon type=\"home\" /> Management </span> } >\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange} >Status</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Type</Checkbox>\n                          </Menu.Item>\n\n                          <Menu.Item key=\"\">\n                                <Checkbox onChange={this.onChange}>Filter</Checkbox>\n                          </Menu.Item>\n                        </SubMenu>\n                      </Menu>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                    <RingLoader\n                      css={override}\n                      size={150} // or 150px\n                      color={\"#123abc\"}\n                      loading={this.state.loading}\n                     />\n                     {this.state.area_display == true?\n                    <ReactApexChart options={this.state.area_chart_options}\n                    series={this.state.area_chart_series} type=\"area\" width=\"500\" height=\"350\" />:null\n                    }\n                    </Content>\n                  </Layout>\n              </Content>\n           </div>\n    </div>\n\n\n    );\n  }\n}\nexport default AreaChart;","import React, { Component } from \"react\";\nimport {Link, Switch, Route } from \"react-router-dom\";\nimport { Row, Col, Card,\n         Button, Layout,Input,\n         Menu, Breadcrumb,\n         Icon, Tree, Checkbox,\n         Modal, Select, Form} from 'antd';\nimport AllCharts from './AllCharts';\nimport LineChart from './LineChart';\nimport BarChart from './BarChart';\nimport VerticalChart from './VerticalChart';\nimport GroupBarChart from './GroupBarChart';\nimport DonutChart from './DonutChart';\nimport PieChart from './PieChart';\nimport MixedChart from './MixedChart';\nimport AreaChart from './AreaChart';\nconst { Option } = Select;\n\n\n\n\nclass ChartDashboard extends React.Component {\n constructor(props) {\n    super(props)\n    this.state = {\n       ModalText: 'Content of the modal',\n       visible: false,\n       confirmLoading: false,\n       loading: false,\n       line:false,\n       DashboardChart:AllCharts\n\n    };\n }\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n\n    this.setState({ loading: true });\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n         loading: false,\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\nonChange = (value) => {\n  console.log(`selected ${value}`);\n}\n\nonBlur = () => {\n    console.log('blur');\n}\n\n\nonFocus = () => {\n  console.log('focus');\n}\n\nonSearch = (val) => {\n     console.log('search:', val);\n}\n\nhandleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const chatName = values[\"chatName\"]\n         if (chatName == 'line') {this.setState({DashboardChart:LineChart})}\n         if (chatName == 'bar') {this.setState({DashboardChart:BarChart})}\n         if (chatName == 'vertical') {this.setState({DashboardChart:VerticalChart})}\n         if (chatName == 'group') {this.setState({DashboardChart:GroupBarChart})}\n         if (chatName == 'donut') {this.setState({DashboardChart:DonutChart})}\n         if (chatName == 'pie') {this.setState({DashboardChart:PieChart})}\n         if (chatName == 'mixed') {this.setState({DashboardChart:MixedChart})}\n         if (chatName == 'area') {this.setState({DashboardChart:AreaChart})}\n         this.setState({visible: false,});\n      }\n      else{\n            console.log(e.target.value,)\n      }\n    });\n  };\n\n\n\n  render() {\n\n      const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n\n     <div>\n              <div className=\"page-header\">\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Col>\n                      <h1 className=\"page-heading\"></h1>\n                    </Col>\n                    <Col>\n                      <ul className=\"button-actions\">\n                        <li>\n                          <div>\n                            <Button type=\"primary\" onClick={this.showModal}>\n                              Create Dashboard\n                            </Button>\n                               <Modal\n                                  title=\"Add New Chart\"\n                                  visible={this.state.visible}\n                                  onOk={this.handleOk}\n                                  confirmLoading={this.state.confirmLoading}\n                                  onCancel={this.handleCancel}\n                                  footer={[\n                                    <Button key=\"back\" onClick={this.handleCancel}>\n                                      Cancel\n                                    </Button>,\n                                    <Button key=\"submit\" type=\"primary\"\n                                       loading={this.state.loading} onClick={this.handleSubmit}>\n                                      Add Chart\n                                    </Button>,\n                                  ]}\n                                  >\n                                     <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                                       <Form.Item label=\"Chart Type\">\n                                        {getFieldDecorator('chatName', {rules:[{required: true,\n                                           message: \"Please Select Chart type !\"}]} )\n                                          (<Select\n                                            showSearch\n                                            style={{ width: 200 }}\n                                            placeholder=\"Select a option\"\n                                            optionFilterProp=\"children\"\n                                            onChange={this.onChange}\n                                            onFocus={this.onFocus}\n                                            onBlur={this.onBlur}\n                                            onSearch={this.onSearch}\n                                            filterOption={(input, option) =>\n                                              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                          >\n                                            <Option value=\"line\"><Icon type=\"line-chart\" /> Line Chart</Option>\n                                            <Option value=\"bar\"><Icon type=\"bar-chart\" /> Bar Chart</Option>\n                                            <Option value=\"vertical\"><Icon type=\"bar-chart\" />VerticalBar Chart</Option>\n                                            <Option value=\"group\"><Icon type=\"bar-chart\" /> GroupBar Chart</Option>\n                                            <Option value=\"donut\"><Icon type=\"pie-chart\" /> Donut Chart</Option>\n                                            <Option value=\"pie\"><Icon type=\"pie-chart\" /> Pie Chart</Option>\n                                            <Option value=\"mixed\"><Icon type=\"bar-chart\" /> Mixed Chart</Option>\n                                            <Option value=\"area\"><Icon type=\"area-chart\" /> Area Chart</Option>\n                                         </Select>)}\n                                     </Form.Item>\n                                    </Form>\n\n                                </Modal>\n                          </div>\n                        </li>\n                        <li>\n                          <a href=\"\">\n                            <Button type=\"primary\" ghost>\n                              Save Dashboard\n                            </Button>\n                          </a>\n                        </li>\n                      </ul>\n                    </Col>\n                  </Row>\n                </div>\n          <Layout>\n\n               <this.state.DashboardChart/>\n\n          </Layout>,\n\n    </div>\n\n\n    );\n  }\n}\nconst WrappedChartDashboard = Form.create()(ChartDashboard);\nexport default WrappedChartDashboard;\n\n\n","import { Home } from \"../Personal/Home\";\nimport { BidRequest } from \"../Personal/BidRequest\";\nimport { RequestProposal } from \"../Personal/RequestProposal\";\nimport { BankPersonal } from \"../Personal/BankPersonal\";\nimport { AnalyticalTest } from \"../Personal/AnalyticalTest\";\nimport { Reactjs } from \"../Personal/TestRect\";\nimport { Test } from \"../Personal/Test\";\n\nimport { Operations } from \"../Personal/Operations\";\nimport { Finance } from \"../Personal/Finance\";\nimport { AccountSetting } from \"../Personal/AccountSetting\";\nimport { CalendarPage } from \"../Personal/Calendar\";\n\n\nimport { ManagementHome } from \"../Management/Home\";\nimport { ManagementCharts } from \"../Management/ManagementCharts\";\nimport { OperationalCharts } from \"../Management/OperationalCharts\";\nimport { FinancialCharts } from \"../Management/FinancialCharts\";\nimport { AddUser } from \"../Management/AddUser\";\nimport { ChartDashboard } from \"../Management/ChartDashboard\";\n\n\n\n\nconst routes = [\n  {\n    path: \"/personal-home\",\n    exact: true,\n    component: Home\n  },\n  {\n    path: \"/bid-requests\",\n    exact: true,\n    component: BidRequest\n  },\n  {\n    path: \"/request-for-proposal\",\n    exact: true,\n    component: RequestProposal\n  },\n  {\n    path: \"/bank-parsonal\",\n    exact: true,\n    component: BankPersonal\n  },\n{\n    path: \"/analyticalTest\",\n    exact: true,\n    component: AnalyticalTest\n  },\n\n\n  {\n    path: \"/testreact\",\n    exact: true,\n    component: Reactjs\n  },\n\n\n {\n    path: \"/test-react\",\n    exact: true,\n    component: Test\n  },\n\n  {\n    path: \"/calendar\",\n    exact: true,\n    component: CalendarPage\n  },\n  {\n    path: \"/personal-operations\",\n    exact: true,\n    component: Operations\n  },\n  {\n    path: \"/personal-finance\",\n    exact: true,\n    component: Finance\n  },\n  {\n    path: \"/persoanl-account\",\n    exact: true,\n    component: AccountSetting\n  },\n  {\n    path: \"/management-home\",\n    exact: true,\n    component: ManagementHome\n  },\n{\n    path: \"/add-user\",\n    exact: true,\n    component: AddUser\n  },\n  {\n    path: \"/management-charts\",\n    exact: true,\n    component: ManagementCharts\n  },\n{\n    path: \"/operational-charts\",\n    exact: true,\n    component: OperationalCharts\n  },\n\n  {\n    path: \"/financial-charts\",\n    exact: true,\n    component: FinancialCharts\n  },\n  {\n    path: \"/dashboard\",\n    exact: true,\n    component: ChartDashboard\n  },\n\n];\nexport default routes;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from './routes';\n\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nclass AppRouter extends Component {\n    render() {\n      return (\n        <div>\n          <Switch>\n            {routes.map((route, i) => (\n              <RouteWithSubRoutes key={i} {...route} />\n            ))}\n          </Switch>\n        </div>\n      );\n    }\n}\n\nexport default AppRouter;","import React, {Component} from \"react\";\nimport { Tabs, List, Avatar } from \"antd\";\n\n\nconst { TabPane } = Tabs;\nconst data = [\n    {\n      title: 'Ant Design Title 1',\n    },\n    {\n      title: 'Ant Design Title 2',\n    },\n    {\n      title: 'Ant Design Title 3',\n    },\n    {\n      title: 'Ant Design Title 4',\n    },\n];\n\nclass NotificationTab extends Component {\n    constructor(props) {\n        super(props);\n      }\n      render() {\n        return (\n            <div style={{width: \"340px\", background: \"#fff\", boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.15)\"}}>\n                <div>\n                    <div className=\"notification-dropdown-tab-heading\" style={{}}>\n                        <h5>Notifications</h5>\n                    </div>\n                    <Tabs defaultActiveKey=\"1\" className=\"notification-dropdown-tab\">\n                        <TabPane tab=\"Alerts (05)\" key=\"1\">\n                            <div className=\"tab-content-block\" style={{padding: \"0 0 12px\"}}>\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={data}\n                                renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                                    title={<a href=\"https://ant.design\">{item.title}</a>}\n                                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                                    />\n                                </List.Item>\n                                )}\n                            />\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Events (03)\" key=\"2\">\n                            <div className=\"tab-content-block\">\n                                Content of Tab Pane 2\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Logs (06)\" key=\"3\">\n                            <div className=\"tab-content-block\">\n                                Content of Tab Pane 2\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n        );\n      }\n}\nexport default NotificationTab;","import firebase from 'firebase';\n\n\nconst Config = {\n  apiKey: \"AIzaSyB5fOOl4b5DpbBhaeXAL-61qkpJoENQeTY\",\n  authDomain: \"sqd-project.firebaseapp.com\",\n  databaseURL: \"https://sqd-project.firebaseio.com\",\n  projectId: \"sqd-project\",\n  storageBucket: \"sqd-project.appspot.com\",\n  messagingSenderId: \"727802836038\",\n  appId: \"1:727802836038:web:44732927a6e01d5abdc647\",\n  measurementId: \"G-YVGMP4HC63\"\n};\n\nexport default Config\n\nfirebase.initializeApp(Config);\n\n","import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport * as styles  from \"./chat.scss\"\nimport axios from \"axios\";\nimport { Host } from  \"../../Host\";\nimport firebase from 'firebase';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\nimport { FirebaseConfig } from  \"../../FirebaseConfig\";\n\n\nconst stylesIcons = {\n\n  largeIcon: {\n    width: 500,\n    height: 60,\n  },\n\n};\n\n\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        online:false,\n        massage_box:false,\n        select_username:'',\n        user_list:[],\n        userName:'Vamsi',\n        user_id:'',\n        sel_u_id:'',\n        send_msg_list:[],\n        received_list:[],\n        send_id:'',\n        received_id:'',\n        text:'sqd_massages',\n        user_text:'users',\n        user_status:[],\n        msg:'',\n        message:'',\n        user_Name:'',\n        user_Email:'',\n        massage_List:'',\n        msg_list:[{'massage':'hi'}],\n        x:1,\n        u:[],\n    }\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n\n    this.allUserStatus();\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({user_Name:profile_data['username']});\n    this.setState({user_Email:profile_data['email']});\n    this.loadAllUserList()\n    this.massageCount()\n    this.allMassageList(1);\n    this.setState({user_id:profile_data['user_id']});\n}\n\n\nasync massageCount(){\n       this.msg = firebase.database().ref().child('messages/' + this.state.text)\n       .orderByChild(\"is_read\").equalTo(false).on('value', message => {\n       if ( message.val() != null){\n//            console.log('vei',Object.values(message.val()))\n            var count = {};\n            var rid = [];\n//            console.log('values',Object.values(this.state.user_list))\n            for(var x=0; x<Object.keys(this.state.user_list).length; x++){\n                rid.push(this.state.user_list[x]['id'])\n            }\n//                console.log(rid)\n            var rsm_list = Object.values(message.val());\n            if(rsm_list!=null){\n                for(var y in rid){\n                    var cnt = 0;\n\n              for (var i = 0; i < Object.keys(rsm_list).length; i++) {\n                if(rsm_list[i]['received_Id'] == this.state.user_id && rsm_list[i]['send_Id'] == rid[y]){\n                      cnt+=1\n                } }\n                var index = this.state.user_list.map(function (i) { return i.id; }).indexOf(rid[y]);\n                this.state.user_list[index]['count']=cnt\n//                this.setState({msg_count:count});\n     //         console.log(this.state.user_list)\n              }\n\n             console.log(this.state.user_list)\n              this.setState({u:this.state.user_list})\n//             this.setState({msg_list:this.state.user_list})\n              }\n            else{\n                this.setState({ msg_count:[]});\n            }\n       } else{\n           var i;\n           var u_l =  this.state.user_list;\n           for (var i = 0; i < Object.keys(u_l).length; i++){\n             u_l[i]['count']= 0;\n           this.setState({u:u_l})\n          }\n        }\n\n       });\n\n\n}\n\nasync loadAllUserList()\n  {\n    this.setState({user_list:[]});\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL +\"/chat_user_api\", {username:profile_data['username'],\n                                                                       user_id:profile_data['user_id'],\n                                                                       email:profile_data['email']});\n    const status = promise.status;\n    if(status===200)\n    {\n      const users_list= promise.data.users;\n      this.setState({user_list:users_list});\n    }\n  }\n\n\nselectUser = (username, id) => {\n    this.setState({msg_list:[]});\n    this.setState({massage_box:true});\n    this.setState({select_username:username});\n    this.setState({received_id:id});\n    this.setState({sel_u_id:id});\n    this.allMassageList(id);\n    this.readMessage(id)\n\n\n  };\n\n\n  handleSendMassage = (e) => {\n     this.setState({msg_list:[]});\n     this.setState({massage:this.refs.msg.value})\n      var today = new Date();\n      var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      if(this.state.message != ''){\n        var newItem = {\n        user_Id:this.state.user_id,\n        sender_name:this.state.user_Name,\n        receive_name:this.state.select_username,\n        send_Id:this.state.user_id,\n        received_Id:this.state.received_id,\n        message:this.state.message,\n        time:time,\n        msg_Status:false,\n        is_read:false,\n        count:0,\n        timestamp : firebase.database.ServerValue.TIMESTAMP\n      }\n      this.messageSend.push(newItem);\n      this.setState({ message: '' });\n\n      }\n\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\nasync readMessage(id) {\n  firebase.database().ref().child('messages/' + 'sqd_massages').orderByChild(\"received_Id\").equalTo(this.state.user_id)\n      .on(\"value\", function(snapshot) {\n          if (snapshot.val() != null){\n              if(Object.values(snapshot.val()).length >= 1){\n                snapshot.forEach(function(data) {\n                var record = data.val();\n                if( id == record['send_Id']){\n                    var key = data.key;\n                    console.log(key)\n                     firebase.database().ref().child('messages/' + 'sqd_massages/'+ key).update({ is_read: \"true\"});\n                      }\n\n                });\n              }\n          }\n         else{\n\n         }\n    });\n}\n\n\n\n\n\nasync allMassageList(id){\n       const s_id = id;\n       this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n            if ( message.val() != null){\n              var i;\n              var m_list = []\n              var rsm_list = Object.values(message.val());\n              for (i = 0; i < Object.keys(rsm_list).length; i++) {\n                if((this.state.user_id == rsm_list[i]['received_Id']) || (this.state.user_id == rsm_list[i]['send_Id'])){\n                      var re_data = rsm_list[i]\n                      m_list.push(re_data)\n                }\n               this.setState({msg_list:m_list});\n\n              }\n            }\n            else{\n                this.setState({ msg_list:[]});\n            }\n\n       });\n\n}\n\n\nasync allUserStatus(){\n\n       this.msg = this.userStatus = firebase.database().ref().child('messages/' + this.state.user_text)\n       .on('value', message => {\n            if ( message.val() != null){\n              var u_list = Object.values(message.val());\n              this.setState({user_status:u_list})\n\n              var i;\n              var ulist = this.state.user_list;\n                for (i = 0; i < Object.keys(ulist).length; i++) {\n                 var j;\n                 for (j = 0; j< Object.keys(u_list).length; j++) {\n                     if(ulist[i]['id'] == u_list[j]['user_Id']){\n                        if(u_list[i]['user_status'] == 'online'){\n                           ulist[i]['user_status'] = 'online';\n                        }\n                        else{\n                          ulist[i]['user_status'] = 'offline';\n                        }\n\n                     }\n                     else{\n                     }\n                 }\n              }\n           this.setState({u:ulist})\n\n\n            }\n            else{\n                this.setState({ user_status:[]});\n            }\n       });\n}\n\n\n myFunction = (e) =>{\n    var input, filter, ul, p, a, i, txtValue, li, li1;\n    input = document.getElementById(\"Input\");\n    filter = input.value.toUpperCase();\n    ul = document.getElementById(\"my_search\");\n    li = ul.getElementsByTagName(\"div\");\n    for (i = 0; i < li.length; i++) {\n        a = li[i].getElementsByTagName(\"h5\")[0];\n        txtValue = a.textContent || a.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n            li[i].style.display = \"\";\n        } else {\n            li[i].style.display = \"none\";\n        }\n    }\n}\n\n\n\n\n  render() {\n\n\n    return (\n    <div className=\"messaging\">\n      <div className=\"inbox_msg\">\n        <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                    <div className=\"recent_heading\">\n                      <h4><Icon type=\"group\" />Users</h4>\n                    </div>\n                    <div className=\"srch_bar\">\n                      <div className=\"stylish-input-group\">\n                        <input type=\"text\" className=\"search-bar\"  placeholder=\"Search\" id = \"Input\"\n                         onChange={this.myFunction}/ >\n                        </div>\n                    </div>\n              </div>\n\n\n          <div id=\"my_search\"  className=\"inbox_chat scroll\">\n              {this.state.u.map((value, index) =>\n\n                <div  className=\"chat_list active_chat\" id=\"myUL\"  key={index} onClick={()=>this.selectUser(value.username, value.id)}>\n                  <div className=\"chat_people\" value={this.state.select_username}>\n                        <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"chat_img\" />\n\n                         <div>\n                             {value.user_status == 'online'?\n                                 <div className=\"chat_ib\">\n                                  {value.count!=0 ?<span className=\"notifications\" style={{float:'right',backgroundColor:'#1890ff'}}>\n                                    {value.count}</span>:null}\n                                  <h5 value={value.id} >{value.username} {value.id}\n                                   <span className=\"online\" style={{float:'left', marginLeft: '-19px'}}></span>\n                                   </h5>\n                                  <p>new user for sq dashboard</p>\n                                </div>:\n\n                                <div className=\"chat_ib\">\n                                   {value.count!=0 ?<span className=\"notifications\" style={{float:'right',backgroundColor:'#1890ff'}}>\n                                    {value.count}</span>:null}\n                                  <h5 value={value.id}>{value.username} {value.id}\n                                   <span className=\"offline\" style={{float:'left', marginLeft:'-19px',backgroundColor:'#faad14'}}></span>\n                                   </h5>\n\n                                  <p>new user for sq dashboard</p>\n                                </div>\n                             }\n                       </div>\n\n                  </div>\n\n                </div>\n                )}\n            </div>\n\t  </div>\n\n\n\n        <div className=\"mesgs\">\n        <div className=\"alert alert-success  select_user\">\n          <strong style={{marginLeft:\"19px\"}}>{this.state.select_username}</strong >\n         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"hear_user\" />\n          </div>\n\n        {this.state.massage_box == true?\n          <div className=\"msg_history\">\n                  <div className=\"incoming_msg\">\n                         { this.state.msg_list.map((value, index) =>\n                              <div className=\"received_msg\">\n                              {this.state.sel_u_id == value.send_Id?\n                                <div className=\"received_withd_msg\">\n                                    <p key={index}>{value.message} </p>\n                                  <span className=\"time_date\">{value.sender_name} {value.time}</span>\n                                  </div>:null\n                                  }\n                                  {this.state.sel_u_id == value.received_Id?\n                                  <div className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                        <p key={index}>{value.message} </p>\n                                        <span className=\"time_date\">{value.sender_name}   {value.time}</span>\n                                        </div>\n                                  </div>:null\n                               }\n                              </div>\n                          )}\n                        </div>\n\n            </div>: <div style={{marginTop:'132px', color:'#bfd0d6'}}>\n                       <ChatIcon style={{fontSize:'100px', marginLeft:'144px',color:'#bfd0d6'}}/>\n                       <h2 className=\"msg_history\" style={{color:'#bfd0d6', textAlign:'center'}}> Welcome to chat </h2>\n                     </div>\n          }\n\n          <div className=\"type_msg\">\n            <div className=\"input_msg_write\">\n              <input type=\"text\"  ref='msg' className=\"write_msg\" placeholder=\"Type a message\"\n                                              value={this.state.message}\n                                              onKeyPress={this.handleKeyPress.bind(this)}\n                                              onChange={this.handleChange.bind(this)}/>\n                  <button className=\"msg_send_btn\" type=\"button\" onClick={this.handleSendMassage}>\n                   <SendOutlinedIcon />\n                   </button>\n            </div>\n          </div>\n\n        </div>\n  </div>\n</div>\n\n    );\n  }\n}\n\nexport default ChartRoom;\n","import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport firebase from 'firebase';\nimport ChartRoom from \"./chart_room.js\"\n\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\nconst forMobileStyle={\n  marginLeft:0,\n  position:'absolute'\n\n}\nconst forTabStyle={\n  marginLeft:80,\n\n\n}\nconst forDesktopStyle={\n  marginLeft:220,\n\n\n}\n\n\n\n\nconst messageMenu = (\n  <Menu>\n    <Menu.Item>Message</Menu.Item>\n  </Menu>\n);\n\nclass PageLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      windowWidth:window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth,\n      windowHeight:  window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeigh,\n     User_Name:'',\n     User_Email:'',\n     user_id:'',\n\n     sendMsg:'Ravi'\n    }\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n sendMassage = (e) => {\n    this.setState({\n      sendMsg: 'test',\n    });\n\n  };\n  updateDimensions() {\n    var w = window,\n      d = document,\n      documentElement = d.documentElement,\n      body = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || documentElement.clientWidth || body.clientWidth,\n      height = w.innerHeight || documentElement.clientHeight || body.clientHeight;\n      console.log(\"Width : \"+width);\n    this.setState({ windowWidth: width, windowHeight: height });\n    width <= 991 ? this.setState({ collapsed: true }) : this.setState({ collapsed: false })\n\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    if(profile_data != null){\n        this.setState({User_Name:profile_data['first_name'] + \"  \" + profile_data['last_name']});\n        this.setState({User_Email:profile_data['email']});\n        this.setState({user_id:profile_data['user_id']});\n    }\n\n}\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\nhandleSubmitLogout = (e) => {\n    this.userLogout();\n};\n\n  async userLogout() {\n\n  firebase.database().ref().child('messages/' + 'users').orderByChild(\"user_Id\").equalTo(this.state.user_id)\n      .on(\"value\", function(snapshot) {\n          if (snapshot.val() != null){\n              if(Object.values(snapshot.val()).length >= 1){\n                snapshot.forEach(function(data) {\n                var record = data.val();\n                var key = data.key;\n                var today = new Date();\n                var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                firebase.database().ref().child('messages/' + 'users/'+ key).update({ user_status: \"offline\", time:time });\n                });\n              }\n          }\n         else{\n\n         }\n    });\n}\n\n\n\n  render() {\n  const userMenu = (\n  <Menu style={{ minWidth: \"260px\" }} className=\"dropdown-menuuser\">\n    <Menu.Item style={{ padding: \"0\" }}>\n      <div className=\"usermenu-header\">\n        <div>\n          <div>\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n          </div>\n        </div>\n        <div>\n          <h6>{this.state.User_Name}</h6>\n          <span>{this.state.User_Email}</span>\n        </div>\n      </div>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to='/persoanl-account'> My Account</Link>\n    </Menu.Item>\n    <Menu.Item>\n         <Link to='/add-user'>Add User</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"\">Company Settings</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"\">\n        <Button type=\"primary\" block  onClick={this.handleSubmitLogout}>\n          Logout\n        </Button>\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          width={220}\n          className=\"mi-sidebar\"\n          /* style={{\n            overflow: 'auto',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }} */\n        >\n          <div className=\"navbar-logo\">\n            <Link to=\"/personal-home\">\n              <img src=\"/assets/images/logo-white.png\" alt=\"Logo\" />\n            </Link>\n          </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              <Link to=\"/personal-home\">\n                <Icon type=\"dashboard\" />\n                <span>Dashboard</span>\n              </Link>\n            </Menu.Item>\n           {/* <SubMenu\n              key=\"sub5\"\n              title={\n                <span>\n                  <Icon type=\"bank\" />\n                  <span>Bank</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"15\">\n                <Link to='/bank-parsonal'>Personal</Link>\n              </Menu.Item>\n              <Menu.Item key=\"18\">\n                <Link to='/bank-corporate'>Corporate</Link>\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"15\">\n                <Link to='/analytical'>Analytical</Link>\n              </Menu.Item>\n                   */}\n\n               <Menu.Item key=\"15\">\n                <Link to='/analyticalTest'>Analytical</Link>\n              </Menu.Item>\n\n\n            <Menu.Item key=\"2\">\n              <Link to=\"/news\">\n                <Icon type=\"pic-left\" />\n                <span>News</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"16\">\n              <Link to=\"/weather\">\n                <Icon type=\"cloud\" />\n                <span>Weather</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"17\">\n              <Link to=\"/calendar\">\n                <Icon type=\"calendar\" />\n                <span>Calendar</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n              <Link to=\"/personal-wallet\">\n                <Icon type=\"wallet\" />\n                <span>Wallet</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"8\">\n              <Link to=\"/personal-source\">\n                <Icon type=\"project\" />\n                <span>Source</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"9\">\n              <Link to=\"/personal-documents\">\n                <Icon type=\"file\" />\n                <span>Documents</span>\n              </Link>\n            </Menu.Item>\n\n\n\n\n\n            <Menu.Item key=\"91\">\n              <Link to=\"/testreact\">\n                <Icon type=\"file\" />\n                <span>Test</span>\n              </Link>\n            </Menu.Item>\n\n\n            <Menu.Item key=\"92\">\n              <Link to=\"/test-react\">\n                <Icon type=\"file\" />\n                <span>Test-RR</span>\n              </Link>\n            </Menu.Item>\n\n            <SubMenu\n              key=\"sub4\"\n              title={\n                <span>\n                  <Icon type=\"setting\" />\n                  <span>Settings</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"10\">\n                <Link to='/persoanl-account'>My Account</Link>\n              </Menu.Item>\n              <Menu.Item key=\"11\">Company Settings</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout /* style={{ marginLeft: 220 }} */>\n          <Header className=\"mi-header\" style={{ /* position: 'fixed', zIndex: 1, width: '100%', */ padding: 0\n                                                     }}>\n            <div className=\"header-block\">\n              <span className=\"header-trigger\">\n                <Icon\n                  className=\"trigger\"\n                  type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                  onClick={this.toggle}\n                />\n              </span>\n              <ul className=\"nav-actions\">\n                <li>\n                  <Dropdown\n                    overlay={<NotificationTab />}\n                    placement=\"bottomRight\"\n                    trigger={[\"click\"]}\n                    className=\"dropdown-notification\"\n                  >\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\">\n                      <Icon type=\"bell\" />\n                    </a>\n                  </Dropdown>\n                </li>\n                <li>\n                  <Dropdown\n                    overlay={userMenu}\n                    placement=\"bottomRight\"\n                    trigger={[\"click\"]}\n                  >\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\" >\n                      <Icon type=\"user\" />\n                    </a>\n                  </Dropdown>\n                </li>\n                <li>\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\" onClick={this.showDrawer}>\n                      <Icon type=\"message\" />\n                    </a>\n                  <Drawer\n                    title=\"\"\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    width=\"800px\"\n                    className=\"drawer-chat\"\n                  >\n                      <ChartRoom />\n\n\n\n\n                    {/* <div className=\"chat-lists\">\n                      <div className=\"chat-item chat-left\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              Hi, Received Msg\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"chat-item chat-right\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              Hello, Send Msg\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"chat-item chat-right\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              {this.state.sendMsg}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                    </div>\n                    <div className=\"chat-input-wrap\">\n                      <div className=\"chat-input-group\">\n                        <Input size=\"large\" placeholder=\"Type your message here...\" />\n                        <span className=\"chat-input-appended\">\n                          <Button type=\"primary\" className=\"btn-chat-send\" onClick={this.sendMassage}>\n                            <img src=\"assets/images/paper-plane.png\" alt=\"\"/>\n                          </Button>\n                        </span>\n                      </div>\n                    </div>  */}\n\n\n                  </Drawer>\n                </li>\n              </ul>\n            </div>\n          </Header>\n          <Content\n            style={{\n              padding: 40,\n              minHeight: 280\n            }}\n          >\n            <AppRouter />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default PageLayout;\n","import React, {Component} from \"react\";\nimport { Tabs, List, Avatar } from \"antd\";\n\n\nconst { TabPane } = Tabs;\nconst data = [\n    {\n      title: 'Ant Design Title 1',\n    },\n    {\n      title: 'Ant Design Title 2',\n    },\n    {\n      title: 'Ant Design Title 3',\n    },\n    {\n      title: 'Ant Design Title 4',\n    },\n];\n\nclass NotificationTab extends Component {\n    constructor(props) {\n        super(props);\n      }\n      render() {\n        return (\n            <div style={{width: \"340px\", background: \"#fff\", boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.15)\"}}>\n                <div>\n                    <div className=\"notification-dropdown-tab-heading\" style={{}}>\n                        <h5>Notifications</h5>\n                    </div>\n                    <Tabs defaultActiveKey=\"1\" className=\"notification-dropdown-tab\">\n                        <TabPane tab=\"Alerts (05)\" key=\"1\">\n                            <div className=\"tab-content-block\" style={{padding: \"0 0 12px\"}}>\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={data}\n                                renderItem={item => (\n                                <List.Item>\n                                    <List.Item.Meta\n                                    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                                    title={<a href=\"https://ant.design\">{item.title}</a>}\n                                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                                    />\n                                </List.Item>\n                                )}\n                            />\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Events (03)\" key=\"2\">\n                            <div className=\"tab-content-block\">\n                                Content of Tab Pane 2\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Logs (06)\" key=\"3\">\n                            <div className=\"tab-content-block\">\n                                Content of Tab Pane 2\n                            </div>\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n        );\n      }\n}\nexport default NotificationTab;","import React, { Component, useState, useEffect }  from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer, Input } from \"antd\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport ReactApexChart from 'react-apexcharts'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { isAbsolute } from \"path\";\nimport * as styles  from \"./chat.scss\"\nimport axios from \"axios\";\nimport { Host } from  \"../../Host\";\nimport firebase from 'firebase';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\nimport { FirebaseConfig } from  \"../../FirebaseConfig\";\n\n\nconst stylesIcons = {\n\n  largeIcon: {\n    width: 500,\n    height: 60,\n  },\n\n};\n\n\n\nclass ChartRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        online:false,\n        massage_box:false,\n        select_username:'',\n        user_list:[],\n        userName:'Vamsi',\n        user_id:'',\n        sel_u_id:'',\n        send_msg_list:[],\n        received_list:[],\n        send_id:'',\n        received_id:'',\n        text:'sqd_massages',\n        user_text:'users',\n        user_status:[],\n        msg:'',\n        message:'',\n        user_Name:'',\n        user_Email:'',\n        massage_List:'',\n        msg_list:[{'massage':'hi'}],\n        x:1,\n        u:[],\n    }\n    this.messageSend = firebase.database().ref().child('messages/' + this.state.text);\n    this.allMassageList();\n\n    this.allUserStatus();\n  }\n\ncomponentWillMount() {\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    this.setState({user_Name:profile_data['username']});\n    this.setState({user_Email:profile_data['email']});\n    this.loadAllUserList()\n    this.massageCount()\n    this.allMassageList(1);\n    this.setState({user_id:profile_data['user_id']});\n}\n\n\nasync massageCount(){\n       this.msg = firebase.database().ref().child('messages/' + this.state.text)\n       .orderByChild(\"is_read\").equalTo(false).on('value', message => {\n       if ( message.val() != null){\n//            console.log('vei',Object.values(message.val()))\n            var count = {};\n            var rid = [];\n//            console.log('values',Object.values(this.state.user_list))\n            for(var x=0; x<Object.keys(this.state.user_list).length; x++){\n                rid.push(this.state.user_list[x]['id'])\n            }\n//                console.log(rid)\n            var rsm_list = Object.values(message.val());\n            if(rsm_list!=null){\n                for(var y in rid){\n                    var cnt = 0;\n\n              for (var i = 0; i < Object.keys(rsm_list).length; i++) {\n                if(rsm_list[i]['received_Id'] == this.state.user_id && rsm_list[i]['send_Id'] == rid[y]){\n                      cnt+=1\n                } }\n                var index = this.state.user_list.map(function (i) { return i.id; }).indexOf(rid[y]);\n                this.state.user_list[index]['count']=cnt\n//                this.setState({msg_count:count});\n     //         console.log(this.state.user_list)\n              }\n\n             console.log(this.state.user_list)\n              this.setState({u:this.state.user_list})\n//             this.setState({msg_list:this.state.user_list})\n              }\n            else{\n                this.setState({ msg_count:[]});\n            }\n       } else{\n           var i;\n           var u_l =  this.state.user_list;\n           for (var i = 0; i < Object.keys(u_l).length; i++){\n             u_l[i]['count']= 0;\n           this.setState({u:u_l})\n          }\n        }\n\n       });\n\n\n}\n\nasync loadAllUserList()\n  {\n    this.setState({user_list:[]});\n    var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    const promise = await axios.post(Host.loginURL +\"/chat_user_api\", {username:profile_data['username'],\n                                                                      user_id:profile_data['user_id'],\n                                                                      email:profile_data['email']});\n    const status = promise.status;\n    if(status===200)\n    {\n      const users_list= promise.data.users;\n      this.setState({user_list:users_list});\n    }\n  }\n\n\nselectUser = (username, id) => {\n    this.setState({msg_list:[]});\n    this.setState({massage_box:true});\n    this.setState({select_username:username});\n    this.setState({received_id:id});\n    this.setState({sel_u_id:id});\n    this.allMassageList(id);\n    this.readMessage(id)\n\n\n  };\n\n\n  handleSendMassage = (e) => {\n     this.setState({msg_list:[]});\n     this.setState({massage:this.refs.msg.value})\n      var today = new Date();\n      var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      if(this.state.message != ''){\n        var newItem = {\n        user_Id:this.state.user_id,\n        sender_name:this.state.user_Name,\n        receive_name:this.state.select_username,\n        send_Id:this.state.user_id,\n        received_Id:this.state.received_id,\n        message:this.state.message,\n        time:time,\n        msg_Status:false,\n        is_read:false,\n        count:0,\n        timestamp : firebase.database.ServerValue.TIMESTAMP\n      }\n      this.messageSend.push(newItem);\n      this.setState({ message: '' });\n\n      }\n\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSendMassage();\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\nasync readMessage(id) {\n  firebase.database().ref().child('messages/' + 'sqd_massages').orderByChild(\"received_Id\").equalTo(this.state.user_id)\n      .on(\"value\", function(snapshot) {\n          if (snapshot.val() != null){\n              if(Object.values(snapshot.val()).length >= 1){\n                snapshot.forEach(function(data) {\n                var record = data.val();\n                if( id == record['send_Id']){\n                    var key = data.key;\n                    console.log(key)\n                     firebase.database().ref().child('messages/' + 'sqd_massages/'+ key).update({ is_read: \"true\"});\n                      }\n\n                });\n              }\n          }\n         else{\n\n         }\n    });\n}\n\n\n\n\n\nasync allMassageList(id){\n       const s_id = id;\n       this.msg = firebase.database().ref().child('messages/' + this.state.text).on('value', message => {\n            if ( message.val() != null){\n              var i;\n              var m_list = []\n              var rsm_list = Object.values(message.val());\n              for (i = 0; i < Object.keys(rsm_list).length; i++) {\n                if((this.state.user_id == rsm_list[i]['received_Id']) || (this.state.user_id == rsm_list[i]['send_Id'])){\n                      var re_data = rsm_list[i]\n                      m_list.push(re_data)\n                }\n               this.setState({msg_list:m_list});\n\n              }\n            }\n            else{\n                this.setState({ msg_list:[]});\n            }\n\n       });\n\n}\n\n\nasync allUserStatus(){\n\n       this.msg = this.userStatus = firebase.database().ref().child('messages/' + this.state.user_text)\n       .on('value', message => {\n            if ( message.val() != null){\n              var u_list = Object.values(message.val());\n              this.setState({user_status:u_list})\n\n              var i;\n              var ulist = this.state.user_list;\n                for (i = 0; i < Object.keys(ulist).length; i++) {\n                 var j;\n                 for (j = 0; j< Object.keys(u_list).length; j++) {\n                     if(ulist[i]['id'] == u_list[j]['user_Id']){\n                        if(u_list[i]['user_status'] == 'online'){\n                           ulist[i]['user_status'] = 'online';\n                        }\n                        else{\n                          ulist[i]['user_status'] = 'offline';\n                        }\n\n                     }\n                     else{\n                     }\n                 }\n              }\n           this.setState({u:ulist})\n\n\n            }\n            else{\n                this.setState({ user_status:[]});\n            }\n       });\n}\n\n\n myFunction = (e) =>{\n    var input, filter, ul, p, a, i, txtValue, li, li1;\n    input = document.getElementById(\"Input\");\n    filter = input.value.toUpperCase();\n    ul = document.getElementById(\"my_search\");\n    li = ul.getElementsByTagName(\"div\");\n    for (i = 0; i < li.length; i++) {\n        a = li[i].getElementsByTagName(\"h5\")[0];\n        txtValue = a.textContent || a.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n            li[i].style.display = \"\";\n        } else {\n            li[i].style.display = \"none\";\n        }\n    }\n}\n\n\n\n\n  render() {\n\n\n    return (\n    <div className=\"messaging\">\n      <div className=\"inbox_msg\">\n        <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                    <div className=\"recent_heading\">\n                      <h4><Icon type=\"group\" />Users</h4>\n                    </div>\n                    <div className=\"srch_bar\">\n                      <div className=\"stylish-input-group\">\n                        <input type=\"text\" className=\"search-bar\"  placeholder=\"Search\" id = \"Input\"\n                         onChange={this.myFunction}/ >\n                        </div>\n                    </div>\n              </div>\n\n\n          <div id=\"my_search\"  className=\"inbox_chat scroll\">\n              {this.state.u.map((value, index) =>\n\n                <div  className=\"chat_list active_chat\" id=\"myUL\"  key={index} onClick={()=>this.selectUser(value.username, value.id)}>\n                  <div className=\"chat_people\" value={this.state.select_username}>\n                        <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"chat_img\" />\n\n                         <div>\n                             {value.user_status == 'online'?\n                                 <div className=\"chat_ib\">\n                                  {value.count!=0 ?<span className=\"notifications\" style={{float:'right',backgroundColor:'#1890ff'}}>\n                                    {value.count}</span>:null}\n                                  <h5 value={value.id} >{value.username} {value.id}\n                                   <span className=\"online\" style={{float:'left', marginLeft: '-19px'}}></span>\n                                   </h5>\n                                  <p>new user for sq dashboard</p>\n                                </div>:\n\n                                <div className=\"chat_ib\">\n                                   {value.count!=0 ?<span className=\"notifications\" style={{float:'right',backgroundColor:'#1890ff'}}>\n                                    {value.count}</span>:null}\n                                  <h5 value={value.id}>{value.username} {value.id}\n                                   <span className=\"offline\" style={{float:'left', marginLeft:'-19px',backgroundColor:'#faad14'}}></span>\n                                   </h5>\n\n                                  <p>new user for sq dashboard</p>\n                                </div>\n                             }\n                       </div>\n\n                  </div>\n\n                </div>\n                )}\n            </div>\n\t  </div>\n\n\n\n        <div className=\"mesgs\">\n        <div className=\"alert alert-success  select_user\">\n          <strong style={{marginLeft:\"19px\"}}>{this.state.select_username}</strong >\n         <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" className=\"hear_user\" />\n          </div>\n\n        {this.state.massage_box == true?\n          <div className=\"msg_history\">\n                  <div className=\"incoming_msg\">\n                         { this.state.msg_list.map((value, index) =>\n                              <div className=\"received_msg\">\n                              {this.state.sel_u_id == value.send_Id?\n                                <div className=\"received_withd_msg\">\n                                    <p key={index}>{value.message} </p>\n                                  <span className=\"time_date\">{value.sender_name} {value.time}</span>\n                                  </div>:null\n                                  }\n                                  {this.state.sel_u_id == value.received_Id?\n                                  <div className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                        <p key={index}>{value.message} </p>\n                                        <span className=\"time_date\">{value.sender_name}   {value.time}</span>\n                                        </div>\n                                  </div>:null\n                               }\n                              </div>\n                          )}\n                        </div>\n\n            </div>: <div style={{marginTop:'132px', color:'#bfd0d6'}}>\n                       <ChatIcon style={{fontSize:'100px', marginLeft:'144px',color:'#bfd0d6'}}/>\n                       <h2 className=\"msg_history\" style={{color:'#bfd0d6', textAlign:'center'}}> Welcome to chat </h2>\n                     </div>\n          }\n\n          <div className=\"type_msg\">\n            <div className=\"input_msg_write\">\n              <input type=\"text\"  ref='msg' className=\"write_msg\" placeholder=\"Type a message\"\n                                              value={this.state.message}\n                                              onKeyPress={this.handleKeyPress.bind(this)}\n                                              onChange={this.handleChange.bind(this)}/>\n                  <button className=\"msg_send_btn\" type=\"button\" onClick={this.handleSendMassage}>\n                   <SendOutlinedIcon />\n                   </button>\n            </div>\n          </div>\n\n        </div>\n  </div>\n</div>\n\n    );\n  }\n}\n\nexport default ChartRoom;\n","import React, { Component } from \"react\";\nimport { Layout, Menu, Dropdown, Icon, Button, Avatar, Drawer} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport AppRouter from \"../../router\";\nimport { NotificationTab } from \"../components/Header\";\nimport \"./PageLayout.scss\";\nimport { Host } from  \"../../Host\";\nimport axios from \"axios\";\nimport firebase from 'firebase';\nimport ChartRoom from \"./chart_room.js\"\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n\n\nconst messageMenu = (\n  <Menu>\n    <Menu.Item>Message</Menu.Item>\n  </Menu>\n);\n\nclass PageLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      windowWidth: '',\n      windowHeight: '',\n      values: [{ name: \"John Doe\", date: \"2017-09-15\" }],\n      User_Name:'',\n     User_Email:'',\n     userRights:[]\n    }\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\ncomponentWillMount() {\n     var profile_data = JSON.parse(sessionStorage.getItem(\"session_data\"));\n    if(profile_data != null){\n        this.setState({User_Name:profile_data['first_name'] + \"  \" + profile_data['last_name']});\n        this.setState({User_Email:profile_data['email']});\n        this.setState({user_id:profile_data['user_id']});\n        if(profile_data['user_rights'] !=''){\n          var i;\n          var userRights = []\n          var index = 7\n          for (var i=0; i <profile_data['user_rights'].length; i++){\n                index +=1\n                var u_rights = profile_data['user_rights'][i]\n                if(u_rights == 'Financial'){var type = 'transaction'}\n                if(u_rights == 'Operational'){var type = 'solution'}\n                if(u_rights == 'Management'){var type = 'home'}\n                var menuList= {'type':type,'menuName':u_rights, 'linkName':u_rights.toLowerCase() + '-charts' ,\n                             'index':index}\n                userRights.push(menuList)\n            }\n            this.setState({userRights:userRights})\n          }\n\n    }\n  }\n\n\nstatic getSelectedPictures = () => {\n      return this.state.profile_data;\n  }\n\n\n  updateDimensions() {\n    var w = window,\n      d = document,\n      documentElement = d.documentElement,\n      body = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || documentElement.clientWidth || body.clientWidth,\n      height = w.innerHeight || documentElement.clientHeight || body.clientHeight;\n    this.setState({ windowWidth: width, windowHeight: height });\n    width <= 991 ? this.setState({ collapsed: true }) : this.setState({ collapsed: false })\n\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\nhandleSubmitLogout = (e) => {\n    this.userLogout();\n};\n\n  async userLogout() {\n\n  firebase.database().ref().child('messages/' + 'users').orderByChild(\"user_Id\").equalTo(this.state.user_id)\n      .on(\"value\", function(snapshot) {\n          if (snapshot.val() != null){\n              if(Object.values(snapshot.val()).length >= 1){\n                snapshot.forEach(function(data) {\n                var record = data.val();\n                var key = data.key;\n                var today = new Date();\n                var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n                var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n                firebase.database().ref().child('messages/' + 'users/'+ key).update({ user_status: \"offline\", time:time });\n                });\n              }\n          }\n         else{\n\n         }\n    });\n}\n\n\n\n  render() {\n\n  const userMenu = (\n  <Menu style={{ minWidth: \"260px\" }} className=\"dropdown-menuuser\">\n    <Menu.Item style={{ padding: \"0\" }}>\n      <div className=\"usermenu-header\">\n        <div>\n          <div>\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n          </div>\n        </div>\n        <div>\n          <h6>{this.state.User_Name}</h6>\n          <span>{this.state.User_Email}</span>\n        </div>\n      </div>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to={{ pathname: '/persoanl-account', data:this.state.profile_data}}> My Account</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to={{ pathname: '/add-user', data:this.state.profile_data}}>Add User</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"\">Company Settings</Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to=\"\">\n        <Button type=\"primary\" block onClick={this.handleSubmitLogout}>\n          Logout\n        </Button>\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          width={220}\n          className=\"mi-sidebar\" style={{ background: '#fff' }}\n          /* style={{\n            overflow: 'auto',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }} */\n        >\n          <div className=\"navbar-logo\" style={{ backgroundColor: \"white\"}}>\n            <Link to=\"/personal-home\">\n              <img src=\"http://sq-dashboards.s3-website-ap-southeast-1.amazonaws.com/assets/images/logo.png\" />\n            </Link>\n          </div>\n          <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              <Link to=\"/personal-home\">\n                <Icon type=\"dashboard\" />\n                <span>Dashboard</span>\n              </Link>\n            </Menu.Item>\n\n            {/*\n            <Menu.Item key=\"4\">\n              <Link to=\"/personal-operations\">\n                <Icon type=\"solution\" />\n                <span>Operations</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Link to=\"/personal-finance\">\n                <Icon type=\"transaction\" />\n                <span>Finance</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              <Link to=\"/personal-hr\">\n                <Icon type=\"audit\" />\n                <span>HR</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n              <Link to=\"/personal-marketing\">\n                <Icon type=\"notification\" />\n                <span>Marketing</span>\n              </Link>\n            </Menu.Item> */}\n\n\n          { this.state.userRights.map((value, index) =>\n            <Menu.Item key={value.index}>\n              <Link to={value.linkName}>\n                <Icon type={value.type} />\n                <span>{value.menuName}</span>\n              </Link>\n            </Menu.Item>\n            )}\n\n            {/*\n             <Menu.Item key=\"14\">\n              <Link to=\"/dashboard\">\n                <Icon type=\"dashboard\" />\n                <span>Chart Dashboard</span>\n              </Link>\n            </Menu.Item>\n           */}\n\n            <Menu.Item key=\"11\">\n              <Link to=\"/personal-source\">\n                <Icon type=\"project\" />\n                <span>Source</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"12\">\n              <Link to=\"/personal-documents\">\n                <Icon type=\"file\" />\n                <span>Documents</span>\n              </Link>\n            </Menu.Item>\n            <SubMenu\n              key=\"sub4\"\n              title={\n                <span>\n                  <Icon type=\"setting\" />\n                  <span>Settings</span>\n                </span>\n              }\n            >\n              <Menu.Item key=\"10\">\n                <Link to='/persoanl-account'>My Account</Link>\n              </Menu.Item>\n              <Menu.Item key=\"11\">Company Settings</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout /* style={{ marginLeft: 220 }} */>\n          <Header className=\"mi-header\" style={{ /* position: 'fixed', zIndex: 1, width: '100%', */\n                                                       backgroundColor: \"white\", color:\"black\", padding: 0 }}>\n            <div className=\"header-block\">\n              <span className=\"header-trigger\">\n                <Icon\n                  style={{ color: \"black\"}}\n                  className=\"trigger\"\n                  type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                  onClick={this.toggle}\n                />\n              </span>\n              <ul className=\"nav-actions\">\n                <li>\n                  <Dropdown\n                    overlay={<NotificationTab />}\n                    placement=\"bottomRight\"\n                    trigger={[\"click\"]}\n                    className=\"dropdown-notification\"\n                  >\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\">\n                      <Icon type=\"bell\"  style={{ color: \"black\"}} />\n                    </a>\n                  </Dropdown>\n                </li>\n                <li>\n                  <Dropdown\n                    overlay={userMenu}\n                    placement=\"bottomRight\"\n                    trigger={[\"click\"]}\n                  >\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\">\n                      <Icon type=\"user\"  style={{ color: \"black\"}} />\n                    </a>\n                  </Dropdown>\n                </li>\n               <li>\n                    <a className=\"ant-dropdown-link d-dropdown-link\" href=\"#\" onClick={this.showDrawer}>\n                      <Icon type=\"message\"  style={{ color: \"black\"}} />\n                    </a>\n                  <Drawer\n                    title=\"\"\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    width=\"800px\"\n                    className=\"drawer-chat\"\n                  >\n                      <ChartRoom />\n\n\n\n\n                    {/* <div className=\"chat-lists\">\n                      <div className=\"chat-item chat-left\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              Hi, Received Msg\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"chat-item chat-right\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              Hello, Send Msg\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"chat-item chat-right\">\n                        <div className=\"chat-media\">\n                          <div className=\"chat-media-icon\">\n                            <Icon type=\"user\" />\n                          </div>\n                        </div>\n                        <div className=\"chat-denote\">\n                          <div className=\"chat-message\">\n                            <div className=\"chat-text\">\n                              {this.state.sendMsg}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                    </div>\n                    <div className=\"chat-input-wrap\">\n                      <div className=\"chat-input-group\">\n                        <Input size=\"large\" placeholder=\"Type your message here...\" />\n                        <span className=\"chat-input-appended\">\n                          <Button type=\"primary\" className=\"btn-chat-send\" onClick={this.sendMassage}>\n                            <img src=\"assets/images/paper-plane.png\" alt=\"\"/>\n                          </Button>\n                        </span>\n                      </div>\n                    </div>  */}\n\n\n                  </Drawer>\n                </li>\n              </ul>\n            </div>\n          </Header>\n          <Content\n            style={{\n              padding: 40,\n              minHeight: 280\n            }}\n          >\n            <AppRouter />\n\n\n\n          </Content>\n        </Layout>\n      </Layout>\n\n    );\n  }\n}\n\nexport default PageLayout;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Login } from \"./Auth\";\nimport { Workspace } from \"./Workspace\";\nimport { Signup }  from  \"./Signup\";\n\n\n\n\nimport PersonalPageLayout from \"./Personal/Layout/PageLayout\";\nimport ManagementPageLayout from \"./Management/Layout/PageLayout\";\n\nfunction App() {\n  const panel = localStorage.panel;\n  console.log(\"panel\", panel);\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Login} />\n      <Route path=\"/workspace\" exact component={Workspace} />\n      <Route path=\"/signup-page\" exact component={Signup} />\n      {panel === \"personal\" && <PersonalPageLayout />}\n      {panel === \"management\" && <ManagementPageLayout />}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './assets/scss/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}